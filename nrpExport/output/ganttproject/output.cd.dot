digraph hierarchy {
	size="5,5"
	node[shape=record,style=filled,fillcolor="#ffffcc",color="#990033"]
	edge[dir=back, arrowtail=empty, color="#990033"]

	GanttProject[label = "{GanttProject|+ version : java.lang.String\l- listOfCalendar : java.util.ArrayList\l+ byCommandLine : boolean\l- language : net.sourceforge.ganttproject.language.GanttLanguage\l- tree : net.sourceforge.ganttproject.GanttTree\l- area : net.sourceforge.ganttproject.GanttGraphicArea\l- resp : net.sourceforge.ganttproject.GanttResourcePanel\l+ mProject : javax.swing.JMenu\l+ mMRU : javax.swing.JMenu\l+ mEdit : javax.swing.JMenu\l+ mTask : javax.swing.JMenu\l+ mHuman : javax.swing.JMenu\l+ mHelp : javax.swing.JMenu\l+ mServer : javax.swing.JMenu\l+ mCalendar : javax.swing.JMenu\l+ miNew : javax.swing.JMenuItem\l+ miOpen : javax.swing.JMenuItem\l+ miOpenURL : javax.swing.JMenuItem\l+ miSave : javax.swing.JMenuItem\l+ miSaveAs : javax.swing.JMenuItem\l+ miSaveAsURL : javax.swing.JMenuItem\l+ miExport : javax.swing.JMenuItem\l+ miImport : javax.swing.JMenuItem\l+ miPrint : javax.swing.JMenuItem\l+ miPreview : javax.swing.JMenuItem\l+ miQuit : javax.swing.JMenuItem\l+ miCut : javax.swing.JMenuItem\l+ miCopy : javax.swing.JMenuItem\l+ miPaste : javax.swing.JMenuItem\l+ miOptions : javax.swing.JMenuItem\l+ miDeleteTask : javax.swing.JMenuItem\l+ miPropertiesTask : javax.swing.JMenuItem\l+ miUp : javax.swing.JMenuItem\l+ miDown : javax.swing.JMenuItem\l+ miDelHuman : javax.swing.JMenuItem\l+ miPropHuman : javax.swing.JMenuItem\l+ miSendMailHuman : javax.swing.JMenuItem\l+ miEditCalendar : javax.swing.JMenuItem\l+ miPrjCal : javax.swing.JMenuItem\l+ miWebPage : javax.swing.JMenuItem\l+ miTips : javax.swing.JMenuItem\l+ miAbout : javax.swing.JMenuItem\l+ miManual : javax.swing.JMenuItem\l- maxSizeMRU : int\l- documentsMRU : net.sourceforge.ganttproject.document.DocumentsMRU\l+ bNew : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bOpen : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bSave : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bSaveAs : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bExport : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bImport : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bPrint : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bNewTask : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bDelete : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bProperties : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bUnlink : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bLink : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bInd : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bUnind : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bUp : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bDown : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bPrev : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bNext : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bZoomIn : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bZoomOut : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ bZoomFit : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l+ projectDocument : net.sourceforge.ganttproject.document.Document\l+ tabpane : javax.swing.JTabbedPane\l+ prjInfos : net.sourceforge.ganttproject.PrjInfos\l+ askForSave : boolean\l+ lookAndFeel : net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo\l- managerHash : java.util.Hashtable\l- myResourceActions : net.sourceforge.ganttproject.action.ResourceActionSet\l- isApplet : boolean\l- helpFrame : javax.swing.JFrame\l- myTaskManager : net.sourceforge.ganttproject.task.TaskManager\l- myFacadeInvalidator : net.sourceforge.ganttproject.GanttProjectFacadeInvalidator\l- myUIConfiguration : net.sourceforge.ganttproject.gui.UIConfiguration\l- options : net.sourceforge.ganttproject.GanttOptions\l- toolBar : javax.swing.JToolBar\l- statusBar : net.sourceforge.ganttproject.gui.GanttStatusBar\l- myNewTaskAction : net.sourceforge.ganttproject.action.NewTaskAction\l- myNewHumanAction : net.sourceforge.ganttproject.action.NewHumanAction\l- myNewArtefactAction : net.sourceforge.ganttproject.action.NewArtefactAction\l- HUMAN_RESOURCE_MANAGER_ID : java.lang.String\l|+ <clinit>() : void\l+ Constructor() : void\l+ Constructor() : void\l- updateMenuMRU() : void\l+ getXslDir() : java.lang.String\l+ getOptions() : net.sourceforge.ganttproject.GanttOptions\l+ restoreOptions() : void\l+ getStatusBar() : net.sourceforge.ganttproject.gui.GanttStatusBar\l+ getXslFo() : java.lang.String\l+ setMemonic() : void\l+ createNewItemText() : javax.swing.JMenuItem\l+ createNewItem() : javax.swing.JMenuItem\l+ createNewItem() : javax.swing.JMenuItem\l+ changeLanguage() : void\l+ changeLookAndFeel() : void\l+ correctLabel() : java.lang.String\l+ changeMenuLabel() : javax.swing.JMenu\l+ changeMenuLabel() : javax.swing.JMenuItem\l- changeLanguageOfMenu() : void\l+ getToolTip() : java.lang.String\l+ setButtonText() : void\l+ applyButtonOptions() : void\l+ addButtons() : void\l- getDisplayName() : java.lang.String\l- upDatas() : void\l- downDatas() : void\l- exitForm() : void\l- checkCurrentProject() : boolean\l+ actionPerformed() : void\l+ launchOptionsDialog() : void\l+ newTask() : net.sourceforge.ganttproject.task.Task\l+ deleteTasks() : void\l+ propertiesTask() : void\l+ propertiesTask() : void\l+ unlinkRelationships() : void\l+ linkRelationships() : void\l+ export() : void\l- getExceptionReport() : java.lang.String\l- doExport() : void\l+ refreshProjectInfos() : void\l- selectExportFile() : net.sourceforge.ganttproject.GanttProjectExportFileInfo\l+ importcbk() : void\l+ printProject() : void\l+ previewPrint() : void\l+ newProject() : void\l- showNewProjectWizard() : void\l- closeProject() : void\l+ setResourcePanelToGraphicArea() : void\l+ openFile() : void\l+ openURL() : void\l+ openURL() : void\l- openDocument() : void\l+ openStartupDocument() : void\l+ openStartupDocument() : void\l+ openXMLStream() : void\l+ saveAsProject() : boolean\l+ saveAsURLProject() : boolean\l+ saveAsURLProject() : boolean\l+ saveProject() : void\l+ saveProject() : void\l+ changeWorkingDirectory() : void\l+ getUIConfiguration() : net.sourceforge.ganttproject.gui.UIConfiguration\l+ quitApplication() : void\l+ openWebPage() : void\l+ setAskForSave() : void\l- usage() : void\l+ getResourcePanel() : net.sourceforge.ganttproject.GanttResourcePanel\l- getLanguage() : net.sourceforge.ganttproject.language.GanttLanguage\l+ getArea() : net.sourceforge.ganttproject.GanttGraphicArea\l- getTree() : net.sourceforge.ganttproject.GanttTree\l- getResourceActions() : net.sourceforge.ganttproject.action.ResourceActionSet\l+ main() : void\l+ checkProjectFile() : boolean\l- exportProject() : void\l- exportPDF() : void\l- exportPNG() : void\l- exportXFIG() : void\l- exportCSV() : void\l- exportJPG() : void\l+ getProjectName() : java.lang.String\l+ setProjectName() : void\l+ getDescription() : java.lang.String\l+ setDescription() : void\l+ getOrganization() : java.lang.String\l+ setOrganization() : void\l+ getWebLink() : java.lang.String\l+ setWebLink() : void\l+ getHumanResourceManager() : net.sourceforge.ganttproject.resource.ResourceManager\l+ getTaskManager() : net.sourceforge.ganttproject.task.TaskManager\l+ getRoleManager() : net.sourceforge.ganttproject.roles.RoleManager\l+ getI18n() : net.sourceforge.ganttproject.language.GanttLanguage\l+ resourceAdded() : void\l+ resourcesRemoved() : void\l+ access() : net.sourceforge.ganttproject.gui.UIConfiguration\l+ access() : net.sourceforge.ganttproject.GanttProjectFacadeInvalidator\l+ access() : net.sourceforge.ganttproject.GanttTree\l+ access() : net.sourceforge.ganttproject.language.GanttLanguage\l+ access() : net.sourceforge.ganttproject.GanttOptions\l+ access() : void\l+ access() : net.sourceforge.ganttproject.action.NewTaskAction\l+ access() : net.sourceforge.ganttproject.action.NewHumanAction\l+ access() : net.sourceforge.ganttproject.language.GanttLanguage\l+ access() : java.lang.String\l+ access() : void\l+ access() : void\l+ access() : net.sourceforge.ganttproject.GanttGraphicArea\l}"]
	IGanttProject[label = "{\<\<interface\>\>\nIGanttProject|...|+ getProjectName() : java.lang.String\l+ setProjectName() : void\l+ getDescription() : java.lang.String\l+ setDescription() : void\l+ getOrganization() : java.lang.String\l+ setOrganization() : void\l+ getWebLink() : java.lang.String\l+ setWebLink() : void\l+ newTask() : net.sourceforge.ganttproject.task.Task\l+ getI18n() : net.sourceforge.ganttproject.language.GanttLanguage\l+ getUIConfiguration() : net.sourceforge.ganttproject.gui.UIConfiguration\l+ getHumanResourceManager() : net.sourceforge.ganttproject.resource.ResourceManager\l+ getRoleManager() : net.sourceforge.ganttproject.roles.RoleManager\l+ getTaskManager() : net.sourceforge.ganttproject.task.TaskManager\l}"]
	ResourceView[label = "{\<\<interface\>\>\nResourceView|...|+ resourceAdded() : void\l+ resourcesRemoved() : void\l}"]
	GanttLanguage[label = "{GanttLanguage|- ganttLanguage : net.sourceforge.ganttproject.language.GanttLanguage\l- myListeners : java.util.ArrayList\l+ currentLocale : java.util.Locale\l+ i18n : java.util.ResourceBundle\l+ currentDateFormat : java.text.DateFormat\l+ currentTimeFormat : java.text.DateFormat\l|+ <clinit>() : void\l+ getInstance() : net.sourceforge.ganttproject.language.GanttLanguage\l- Constructor() : void\l+ setLocale() : void\l+ formatDate() : java.lang.String\l+ formatTime() : java.lang.String\l+ parseDate() : net.sourceforge.ganttproject.GanttCalendar\l+ getMonth() : java.lang.String\l+ getDay() : java.lang.String\l+ getText() : java.lang.String\l+ getComponentOrientation() : java.awt.ComponentOrientation\l+ addListener() : void\l+ removeListener() : void\l- fireLanguageChanged() : void\l}"]
	GanttTree[label = "{GanttTree|- rootNode : javax.swing.tree.DefaultMutableTreeNode\l- treeModel : javax.swing.tree.DefaultTreeModel\l- tree : javax.swing.JTree\l- area : net.sourceforge.ganttproject.GanttGraphicArea\l- appli : net.sourceforge.ganttproject.GanttProject\l- AUTOSCROLL_MARGIN : int\l+ vbar : javax.swing.JScrollBar\l+ language : net.sourceforge.ganttproject.language.GanttLanguage\l+ nbTasks : int\l- dragPath : javax.swing.tree.TreePath\l- ghostImage : java.awt.image.BufferedImage\l- offsetPoint : java.awt.Point\l- myTaskManager : net.sourceforge.ganttproject.task.TaskManager\l- cpNode : javax.swing.tree.DefaultMutableTreeNode\l|+ Constructor() : void\l- initRootNode() : void\l+ createPopupMenu() : void\l+ setGraphicArea() : void\l+ addObjectWithExpand() : javax.swing.tree.DefaultMutableTreeNode\l+ addObject() : javax.swing.tree.DefaultMutableTreeNode\l+ getSelectedTask() : net.sourceforge.ganttproject.GanttTask\l+ getSelectedNode() : javax.swing.tree.DefaultMutableTreeNode\l+ getSelectedNodes() : javax.swing.tree.DefaultMutableTreeNode[]\l+ getTask() : net.sourceforge.ganttproject.task.Task\l+ getNode() : javax.swing.tree.DefaultMutableTreeNode\l+ hasTasks() : boolean\l+ getAllTasks() : java.util.ArrayList\l+ getAllChildTask() : java.util.ArrayList\l+ getAllChildTask() : java.util.ArrayList\l+ computePercentComplete() : void\l+ getLastNode() : javax.swing.tree.DefaultMutableTreeNode\l+ getAllTaskArray() : java.lang.Object[]\l+ getAllTaskString() : java.lang.String[]\l+ getArryListTaskString() : java.util.ArrayList\l+ removeCurrentNode() : void\l+ clearTree() : void\l+ selectTreeRow() : void\l+ getFatherNode() : javax.swing.tree.DefaultMutableTreeNode\l+ getFatherNode() : javax.swing.tree.DefaultMutableTreeNode\l+ getJTree() : javax.swing.JTree\l+ getRoot() : javax.swing.tree.DefaultMutableTreeNode\l+ checkDepend() : boolean\l+ upCurrentNodes() : void\l+ downCurrentNodes() : void\l+ indentCurrentNodes() : void\l+ dedentCurrentNodes() : void\l+ expandRefresh() : void\l+ refreshAllChild() : void\l+ refreshAllFather() : void\l+ cutSelectedNode() : void\l+ copySelectedNode() : void\l+ pasteNode() : void\l- insertClonedNode() : void\l+ forwardScheduling() : void\l+ getAllGanttTasks() : java.util.ArrayList\l- setAllTasksUnchecked() : void\l- getTaskManager() : net.sourceforge.ganttproject.task.TaskManager\l+ dragEnter() : void\l+ dragOver() : void\l+ dropActionChanged() : void\l+ dragDropEnd() : void\l+ dragExit() : void\l+ dragGestureRecognized() : void\l+ access() : net.sourceforge.ganttproject.GanttGraphicArea\l+ access() : net.sourceforge.ganttproject.GanttProject\l+ access() : javax.swing.JTree\l+ access() : java.awt.image.BufferedImage\l+ access() : void\l+ access() : java.awt.Point\l+ access() : javax.swing.tree.DefaultTreeModel\l+ access() : javax.swing.tree.TreePath\l}"]
	GanttGraphicArea[label = "{GanttGraphicArea|+ date : net.sourceforge.ganttproject.GanttCalendar\l+ olddate : net.sourceforge.ganttproject.GanttCalendar\l+ tree : net.sourceforge.ganttproject.GanttTree\l+ ONE_WEEK : int\l+ TWO_WEEK : int\l+ ONE_MONTH : int\l+ TWO_MONTH : int\l+ THREE_MONTH : int\l+ FOUR_MONTH : int\l+ SIX_MONTH : int\l+ ONE_YEAR : int\l+ TWO_YEAR : int\l+ THREE_YEAR : int\l+ taskDefaultColor : java.awt.Color\l- zoomValue : int\l- listOfParam : java.util.ArrayList\l- margY : int\l- upperLeft : java.awt.Point\l- printRendering : boolean\l- drawdepend : boolean\l- drawPercent : boolean\l- drawName : boolean\l- draw3dBorders : boolean\l- drawVersion : boolean\l- language : net.sourceforge.ganttproject.language.GanttLanguage\l- appli : net.sourceforge.ganttproject.GanttProject\l- oldX : int\l- oldY : int\l- moveView : boolean\l- moveTask : int\l+ curs : boolean\l+ drag : int\l+ typeSeletion : int\l- storeTaskLength : int\l- addTaskLength : float\l- storeTaskStart : net.sourceforge.ganttproject.GanttCalendar\l- storeX : int[]\l- arrow : net.sourceforge.ganttproject.GanttGraphicAreaArrow\l- notes : net.sourceforge.ganttproject.GanttGraphicAreaNotes\l- taskToMove : net.sourceforge.ganttproject.GanttTask\l- arrayColor : java.awt.Color[]\l- listOfTask : java.util.ArrayList\l+ beg : net.sourceforge.ganttproject.GanttCalendar\l+ end : net.sourceforge.ganttproject.GanttCalendar\l+ mouseButton : int\l- myUIConfiguration : net.sourceforge.ganttproject.gui.UIConfiguration\l- myProjectLevelTaskColor : java.awt.Color\l- myTaskManager : net.sourceforge.ganttproject.task.TaskManager\l- rowCount : int\l|+ <clinit>() : void\l- getTaskManager() : net.sourceforge.ganttproject.task.TaskManager\l+ Constructor() : void\l+ getTaskColor() : java.awt.Color\l+ setProjectLevelTaskColor() : void\l+ detectPosition() : int\l+ setTaskToMove() : void\l+ getPreferredSize() : java.awt.Dimension\l+ changeDate() : void\l+ changeDate2() : void\l+ zoomToBegin() : void\l+ paintComponent() : void\l+ drawGPVersion() : void\l+ isVisible() : boolean\l+ indexOf() : int\l+ setScrollBar() : void\l+ getScrollBar() : int\l+ setZoom() : void\l+ zoomMore() : void\l+ zoomLess() : void\l+ getZoom() : int\l+ setDate() : void\l+ getDate() : net.sourceforge.ganttproject.GanttCalendar\l+ getGranit() : int\l+ getFoot() : int\l+ calcProjectBegAndEnd() : void\l+ paintCalendar1() : void\l+ paintCalendar2New() : void\l+ paintCalendar2() : void\l+ paintCalendar2Old() : void\l+ paintTasks() : void\l+ paintATaskFather() : void\l+ paintATaskChild() : void\l+ paintATaskBilan() : void\l+ paintResources() : void\l+ paintDepend() : void\l+ paintAdvancement() : int\l+ drawVerticalLinedash() : void\l+ getChart() : java.awt.image.BufferedImage\l- printTasks() : void\l- printTask() : int\l+ printProject() : void\l+ export() : void\l- getTree() : net.sourceforge.ganttproject.GanttTree\l+ fitWholeProject() : void\l+ access() : java.awt.Color[]\l+ access() : net.sourceforge.ganttproject.task.TaskManager\l+ access() : net.sourceforge.ganttproject.GanttProject\l+ access() : int\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : int\l+ access() : java.util.ArrayList\l+ access() : void\l+ access() : net.sourceforge.ganttproject.GanttTask\l+ access() : void\l+ access() : void\l+ access() : int[]\l+ access() : int\l+ access() : boolean\l+ access() : int\l+ access() : net.sourceforge.ganttproject.GanttGraphicAreaArrow\l+ access() : net.sourceforge.ganttproject.GanttGraphicAreaNotes\l+ access() : net.sourceforge.ganttproject.task.TaskManager\l+ access() : float\l+ access() : net.sourceforge.ganttproject.GanttCalendar\l+ access() : int\l}"]
	GanttResourcePanel[label = "{GanttResourcePanel|+ nbobj : int\l+ table : javax.swing.JTable\l+ tree : net.sourceforge.ganttproject.GanttTree\l+ model : net.sourceforge.ganttproject.GanttResourcePanelGanttTableModel\l+ lang : net.sourceforge.ganttproject.language.GanttLanguage\l+ appli : net.sourceforge.ganttproject.GanttProject\l+ cx : int\l+ cy : int\l+ vbar : javax.swing.JScrollBar\l- myResourceActionSet : net.sourceforge.ganttproject.action.ResourceActionSet\l+ area : net.sourceforge.ganttproject.ResourceLoadGraphicArea\l+ scrollpane : javax.swing.JScrollPane\l+ left : javax.swing.JPanel\l- EMPTY_CONTEXT : net.sourceforge.ganttproject.resource.ProjectResource[]\l- myContext : net.sourceforge.ganttproject.resource.ResourceContext\l|+ Constructor() : void\l+ createPopupMenu() : void\l+ refresh() : void\l+ getNameByNumber() : java.lang.String\l+ getUserByNumber() : net.sourceforge.ganttproject.resource.HumanResource\l+ newHuman() : void\l+ addHumans() : void\l+ deleteHuman() : void\l+ propertiesHuman() : void\l+ sendMail() : void\l+ upResource() : void\l+ downResource() : void\l+ getPeople() : java.util.ArrayList\l+ nbPeople() : int\l+ setPeople() : void\l+ reset() : void\l+ setResourceActions() : void\l+ setTree() : void\l+ resourceAdded() : void\l+ resourcesRemoved() : void\l+ getResources() : net.sourceforge.ganttproject.resource.ProjectResource[]\l+ getContext() : net.sourceforge.ganttproject.resource.ResourceContext\l}"]
	DocumentsMRU[label = "{DocumentsMRU|- maxSize : int\l- documents : java.util.List\l|+ Constructor() : void\l+ add() : boolean\l+ append() : boolean\l+ clear() : void\l+ iterator() : java.util.Iterator\l}"]
	TestGanttRolloverButton[label = "{TestGanttRolloverButton|# _iconOn : javax.swing.Icon\l# _iconOff : javax.swing.Icon\l- c : java.awt.AlphaComposite\l|+ <clinit>() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ setIcon() : void\l+ setDefaultIcon() : void\l+ isOpaque() : boolean\l+ setEnabled() : void\l+ paint() : void\l}"]
	Document[label = "{\<\<interface\>\>\nDocument|...|+ getDescription() : java.lang.String\l+ canRead() : boolean\l+ canWrite() : boolean\l+ isValidForMRU() : boolean\l+ acquireLock() : boolean\l+ releaseLock() : void\l+ getInputStream() : java.io.InputStream\l+ getOutputStream() : java.io.OutputStream\l+ getPath() : java.lang.String\l+ getFilePath() : java.lang.String\l+ getURLPath() : java.lang.String\l+ getUsername() : java.lang.String\l+ getPassword() : java.lang.String\l+ setUserInfo() : void\l+ getLastError() : java.lang.String\l}"]
	PrjInfos[label = "{PrjInfos|+ _sProjectName : java.lang.String\l+ _sDescription : java.lang.String\l+ _sOrganization : java.lang.String\l+ _sWebLink : java.lang.String\l|+ Constructor() : void\l+ Constructor() : void\l+ getName() : java.lang.String\l+ getDescription() : java.lang.String\l+ getOrganization() : java.lang.String\l+ getWebLink() : java.lang.String\l}"]
	GanttLookAndFeelInfo[label = "{GanttLookAndFeelInfo|# toString : java.lang.String\l|+ Constructor() : void\l+ Constructor() : void\l+ toString() : java.lang.String\l}"]
	ResourceActionSet[label = "{ResourceActionSet|- myRoleManager : net.sourceforge.ganttproject.roles.RoleManager\l- myManager : net.sourceforge.ganttproject.resource.ResourceManager\l- myContext : net.sourceforge.ganttproject.resource.ResourceContext\l- myProjectFrame : net.sourceforge.ganttproject.GanttProject\l- myActions : javax.swing.AbstractAction[]\l|+ Constructor() : void\l+ getActions() : javax.swing.AbstractAction[]\l}"]
	TaskManager[label = "{\<\<interface\>\>\nTaskManager|...|+ getRootTask() : net.sourceforge.ganttproject.task.Task\l+ clear() : void\l+ getTask() : net.sourceforge.ganttproject.GanttTask\l+ registerTask() : void\l+ createTask() : net.sourceforge.ganttproject.GanttTask\l+ createTask() : net.sourceforge.ganttproject.GanttTask\l+ getTimeUnitManager() : net.sourceforge.ganttproject.time.TimeUnitManager\l+ createLength() : net.sourceforge.ganttproject.task.TaskLength\l+ getDependencyCollection() : net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection\l+ getAlgorithmCollection() : net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection\l+ createConstraint() : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint\l+ addTaskListener() : void\l}"]
	GanttProjectFacadeInvalidator[label = "{GanttProjectFacadeInvalidator|- isValid : boolean\l|+ Constructor() : void\l+ isValid() : boolean\l+ reset() : void\l+ treeNodesChanged() : void\l+ treeNodesInserted() : void\l+ treeNodesRemoved() : void\l+ treeStructureChanged() : void\l}"]
	UIConfiguration[label = "{UIConfiguration|- myMenuFont : java.awt.Font\l- myChartMainFont : java.awt.Font\l- myTaskColor : java.awt.Color\l- myResColor : java.awt.Color\l- myResOverColor : java.awt.Color\l- isRedlineOn : boolean\l|+ Constructor() : void\l+ getMenuFont() : java.awt.Font\l+ getChartMainFont() : java.awt.Font\l+ getTaskColor() : java.awt.Color\l+ setTaskColor() : void\l+ getResourceColor() : java.awt.Color\l+ setResourceColor() : void\l+ getResourceOverloadColor() : java.awt.Color\l+ setResourceOverloadColor() : void\l+ isRedlineOn() : boolean\l+ setRedlineOn() : void\l}"]
	GanttOptions[label = "{GanttOptions|- language : net.sourceforge.ganttproject.language.GanttLanguage\l- x : int\l- y : int\l- width : int\l- height : int\l- styleClass : java.lang.String\l- styleName : java.lang.String\l- lookAndFeel : net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo\l- isloaded : boolean\l- automatic : boolean\l- dragTime : boolean\l- openTips : boolean\l- redline : boolean\l- lockDAVMinutes : int\l- xslDir : java.lang.String\l- xslFo : java.lang.String\l- workingDir : java.lang.String\l- myRoleManager : net.sourceforge.ganttproject.roles.RoleManager\l- documentsMRU : net.sourceforge.ganttproject.document.DocumentsMRU\l- myUIConfig : net.sourceforge.ganttproject.gui.UIConfiguration\l- myChartMainFont : java.awt.Font\l- sTaskNamePrefix : java.lang.String\l- toolBarPosition : int\l- bShowStatusBar : boolean\l- iconSize : java.lang.String\l+ ICONS : int\l+ ICONS_TEXT : int\l+ TEXT : int\l- buttonsshow : int\l- bExportName : boolean\l- bExportComplete : boolean\l- bExportRelations : boolean\l- bExport3DBorders : boolean\l- csvOptions : net.sourceforge.ganttproject.io.CSVOptions\l- myMenuFont : java.awt.Font\l|+ Constructor() : void\l+ initByDefault() : void\l- startElement() : void\l- endElement() : void\l- addAttribute() : void\l- emptyElement() : void\l+ save() : void\l- getFontSpec() : java.lang.String\l- getFontStyle() : java.lang.String\l+ correct() : java.lang.String\l+ load() : boolean\l- loadRoleSets() : void\l- saveRoleSets() : void\l- saveRoles() : void\l+ getUIConfiguration() : net.sourceforge.ganttproject.gui.UIConfiguration\l- getRoleManager() : net.sourceforge.ganttproject.roles.RoleManager\l+ getLanguage() : net.sourceforge.ganttproject.language.GanttLanguage\l+ getDefaultColor() : java.awt.Color\l+ getResourceColor() : java.awt.Color\l+ getResourceOverloadColor() : java.awt.Color\l+ getLockDAVMinutes() : int\l+ getWorkingDir() : java.lang.String\l+ getXslDir() : java.lang.String\l+ getXslFo() : java.lang.String\l+ getOpenTips() : boolean\l+ getDragTime() : boolean\l+ getAutomatic() : boolean\l+ getLnfInfos() : net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo\l+ isLoaded() : boolean\l+ getShowStatusBar() : boolean\l+ setShowStatusBar() : void\l+ getX() : int\l+ getY() : int\l+ getWidth() : int\l+ getHeight() : int\l+ getCSVOptions() : net.sourceforge.ganttproject.io.CSVOptions\l+ getTaskNamePrefix() : java.lang.String\l+ getTrueTaskNamePrefix() : java.lang.String\l+ getToolBarPosition() : int\l+ getIconSize() : java.lang.String\l+ getExportName() : boolean\l+ getExportComplete() : boolean\l+ getExportRelations() : boolean\l+ getExport3dBorders() : boolean\l+ getExportSettings() : net.sourceforge.ganttproject.GanttExportSettings\l+ setExportName() : void\l+ setExportComplete() : void\l+ setExportRelations() : void\l+ setExport3dBorders() : void\l+ getButtonShow() : int\l+ setButtonShow() : void\l+ setIconSize() : void\l+ setToolBarPosition() : void\l+ setWindowPosition() : void\l+ setWindowSize() : void\l+ setWorkingDirectory() : void\l+ setLockDAVMinutes() : void\l+ setDefaultTaskColor() : void\l+ setResourceColor() : void\l+ setResourceOverloadColor() : void\l+ setXslDir() : void\l+ setXslFo() : void\l+ setDocumentsMRU() : void\l+ setUIConfiguration() : void\l+ setOpenTips() : void\l+ setAutomatic() : void\l+ setDragTime() : void\l+ setLookAndFeel() : void\l+ setTaskNamePrefix() : void\l+ access() : net.sourceforge.ganttproject.language.GanttLanguage\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : net.sourceforge.ganttproject.document.DocumentsMRU\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : net.sourceforge.ganttproject.io.CSVOptions\l+ access() : void\l+ access() : void\l}"]
	GanttStatusBar[label = "{GanttStatusBar|# pbp : net.sourceforge.ganttproject.gui.GanttStatusBarProgressBarPanel\l# message0 : net.sourceforge.ganttproject.gui.GanttStatusBarMessagePanel\l# message1 : net.sourceforge.ganttproject.gui.GanttStatusBarMessagePanel\l# message2 : net.sourceforge.ganttproject.gui.GanttStatusBarMessagePanel\l- NO_MESSAGE : int\l- MESSAGE_1 : int\l- MESSAGE_2 : int\l- PROGRESS_FINISH : int\l+ mode : int\l+ bRunning : boolean\l|+ Constructor() : void\l+ setProgressValue() : void\l+ setFirstText() : void\l+ setSecondText() : void\l+ setFirstText() : void\l+ setSecondText() : void\l+ getPreferredSize() : java.awt.Dimension\l+ run() : void\l}"]
	NewTaskAction[label = "{NewTaskAction|- myProject : net.sourceforge.ganttproject.IGanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l+ languageChanged() : void\l- setText() : void\l}"]
	NewHumanAction[label = "{NewHumanAction|- myRoleManager : net.sourceforge.ganttproject.roles.RoleManager\l- MENU_MASK : int\l- myProjectFrame : javax.swing.JFrame\l|+ Constructor() : void\l+ actionPerformed() : void\l+ languageChanged() : void\l- getProjectFrame() : javax.swing.JFrame\l}"]
	NewArtefactAction[label = "{NewArtefactAction|- myProvider : net.sourceforge.ganttproject.action.NewArtefactActionActiveActionProvider\l- myIconOnMouseOver : javax.swing.Icon\l|+ Constructor() : void\l+ actionPerformed() : void\l+ getIconOnMouseOver() : javax.swing.Icon\l}"]
	ProjectResource[label = "{ProjectResource|# id : int\l# name : java.lang.String\l- costsPerUnit : double\l- maximumUnitsPerDay : int\l- unitMeasure : java.lang.String\l- description : java.lang.String\l|+ Constructor() : void\l+ setName() : void\l+ getName() : java.lang.String\l+ setDescription() : void\l+ getDescription() : java.lang.String\l+ setUnitMeasure() : void\l+ getUnitMeasure() : java.lang.String\l+ setCostsPerUnit() : void\l+ getCostsPerUnit() : double\l+ setMaximumUnitsPerDay() : void\l+ getMaximumUnitsPerDay() : int\l+ setId() : void\l+ getId() : int\l+ toString() : java.lang.String\l}"]
	Task[label = "{\<\<interface\>\>\nTask|+ DEFAULT_COLOR : java.awt.Color\l|+ <clinit>() : void\l+ createMutator() : net.sourceforge.ganttproject.task.TaskMutator\l+ getTaskID() : int\l+ getName() : java.lang.String\l+ isMilestone() : boolean\l+ getPriority() : int\l+ getStart() : net.sourceforge.ganttproject.GanttCalendar\l+ getEnd() : net.sourceforge.ganttproject.GanttCalendar\l+ getDuration() : net.sourceforge.ganttproject.task.TaskLength\l+ getCompletionPercentage() : int\l+ isStartFixed() : boolean\l+ getShape() : net.sourceforge.ganttproject.shape.ShapePaint\l+ getColor() : java.awt.Color\l+ getNotes() : java.lang.String\l+ getExpand() : boolean\l+ getPredecessors() : net.sourceforge.ganttproject.GanttTaskRelationship[]\l+ getSuccessors() : net.sourceforge.ganttproject.GanttTaskRelationship[]\l+ getAssignments() : net.sourceforge.ganttproject.task.ResourceAssignment[]\l+ getDependencies() : net.sourceforge.ganttproject.task.dependency.TaskDependencySlice\l+ getDependenciesAsDependant() : net.sourceforge.ganttproject.task.dependency.TaskDependencySlice\l+ getDependenciesAsDependee() : net.sourceforge.ganttproject.task.dependency.TaskDependencySlice\l+ getAssignmentCollection() : net.sourceforge.ganttproject.task.ResourceAssignmentCollection\l+ getSupertask() : net.sourceforge.ganttproject.task.Task\l+ getNestedTasks() : net.sourceforge.ganttproject.task.Task[]\l+ move() : void\l+ getManager() : net.sourceforge.ganttproject.task.TaskManager\l}"]
	GanttProjectExportFileInfo[label = "{GanttProjectExportFileInfo|+ myFile : java.io.File\l+ myFormat : int\l+ myStorageOptions : net.sourceforge.ganttproject.GanttExportSettings\l+ FORMAT_HTML : int\l+ FORMAT_PNG : int\l+ FORMAT_JPG : int\l+ FORMAT_PDF : int\l+ FORMAT_XFIG : int\l+ FORMAT_CSV : int\l+ EMPTY : net.sourceforge.ganttproject.GanttProjectExportFileInfo\l|+ <clinit>() : void\l+ Constructor() : void\l}"]
	ResourceManager[label = "{\<\<interface\>\>\nResourceManager|...|+ create() : net.sourceforge.ganttproject.resource.ProjectResource\l+ add() : void\l+ getById() : net.sourceforge.ganttproject.resource.ProjectResource\l+ remove() : void\l+ removeById() : void\l+ getResources() : java.util.ArrayList\l+ save() : void\l+ clear() : void\l+ addView() : void\l}"]
	RoleManager[label = "{\<\<interface\>\>\nRoleManager|+ DEFAULT_ROLES_NUMBER : int\l|+ createRoleSet() : net.sourceforge.ganttproject.roles.RoleSet\l+ getRoleSets() : net.sourceforge.ganttproject.roles.RoleSet[]\l+ clear() : void\l+ getProjectLevelRoles() : net.sourceforge.ganttproject.roles.Role[]\l+ add() : void\l+ getProjectRoleSet() : net.sourceforge.ganttproject.roles.RoleSet\l+ getRoleSet() : net.sourceforge.ganttproject.roles.RoleSet\l+ getEnabledRoles() : net.sourceforge.ganttproject.roles.Role[]\l+ getDefaultRole() : net.sourceforge.ganttproject.roles.Role\l}"]
	ResourceEvent[label = "{ResourceEvent|- myResources : net.sourceforge.ganttproject.resource.ProjectResource[]\l- myManager : net.sourceforge.ganttproject.resource.ResourceManager\l- myResource : net.sourceforge.ganttproject.resource.ProjectResource\l|+ Constructor() : void\l+ Constructor() : void\l+ getManager() : net.sourceforge.ganttproject.resource.ResourceManager\l+ getResource() : net.sourceforge.ganttproject.resource.ProjectResource\l+ getResources() : net.sourceforge.ganttproject.resource.ProjectResource[]\l}"]
	GanttXMLOpen[label = "{GanttXMLOpen|+ treePanel : net.sourceforge.ganttproject.GanttTree\l+ prj : net.sourceforge.ganttproject.GanttProject\l+ peop : net.sourceforge.ganttproject.GanttResourcePanel\l+ typeChar : int\l+ area : net.sourceforge.ganttproject.GanttGraphicArea\l+ lot : java.util.ArrayList\l+ lod : java.util.ArrayList\l+ indent : java.lang.String\l+ marge : java.lang.String\l+ language : net.sourceforge.ganttproject.language.GanttLanguage\l+ bImport : boolean\l+ maxID : int\l- myTagHandlers : java.util.ArrayList\l- myListeners : java.util.ArrayList\l- myContext : net.sourceforge.ganttproject.parser.ParsingContext\l- myTaskManager : net.sourceforge.ganttproject.task.TaskManager\l|+ Constructor() : void\l+ Constructor() : void\l+ load() : boolean\l+ load() : boolean\l+ load() : boolean\l+ addTagHandler() : void\l+ addParsingListener() : void\l+ getContext() : net.sourceforge.ganttproject.parser.ParsingContext\l+ getDefaultTagHandler() : net.sourceforge.ganttproject.parser.TagHandler\l+ access() : net.sourceforge.ganttproject.task.TaskManager\l+ access() : net.sourceforge.ganttproject.parser.ParsingContext\l+ access() : java.util.ArrayList\l+ access() : java.util.ArrayList\l}"]
	RoleTagHandler[label = "{RoleTagHandler|- myRoleSet : net.sourceforge.ganttproject.roles.RoleSet\l- myRoleManager : net.sourceforge.ganttproject.roles.RoleManager\l|+ Constructor() : void\l+ endElement() : void\l- clearRoleSet() : void\l+ startElement() : void\l- findRoleSet() : void\l- loadRoles() : void\l- getRoleManager() : net.sourceforge.ganttproject.roles.RoleManager\l}"]
	GanttPreviewPrint[label = "{GanttPreviewPrint|+ zoomX : int[]\l+ zoomY : int[]\l+ index : int\l- language : net.sourceforge.ganttproject.language.GanttLanguage\l+ panel : net.sourceforge.ganttproject.gui.GanttPreviewPrintPreviewPanel\l+ bPrint : javax.swing.JButton\l+ bPortrait : javax.swing.JButton\l+ bLandscape : javax.swing.JButton\l+ bClose : javax.swing.JButton\l+ bZoomP : javax.swing.JButton\l+ bZoomM : javax.swing.JButton\l+ factorSpinner : javax.swing.JSpinner\l+ spinnerModel : javax.swing.SpinnerNumberModel\l|+ Constructor() : void\l+ actionPerformed() : void\l+ stateChanged() : void\l}"]
	CSVOptions[label = "{CSVOptions|+ bExportTaskID : boolean\l+ bExportTaskName : boolean\l+ bExportTaskStartDate : boolean\l+ bExportTaskEndDate : boolean\l+ bExportTaskPercent : boolean\l+ bExportTaskDuration : boolean\l+ bExportTaskWebLink : boolean\l+ bExportTaskResources : boolean\l+ bExportTaskNotes : boolean\l+ bExportResourceID : boolean\l+ bExportResourceName : boolean\l+ bExportResourceMail : boolean\l+ bExportResourcePhone : boolean\l+ bExportResourceRole : boolean\l+ bFixedSize : boolean\l+ sSeparatedChar : java.lang.String\l+ sSeparatedTextChar : java.lang.String\l|+ Constructor() : void\l+ getXml() : java.lang.String\l+ correct() : java.lang.String\l+ getSeparatedTextChars() : java.lang.String[]\l}"]
	NewArtefactActionActiveActionProvider[label = "{\<\<interface\>\>\nNewArtefactActionActiveActionProvider|...|+ getActiveAction() : javax.swing.AbstractAction\l}"]
	AbstractURLDocument[label = "{AbstractURLDocument|...|+ Constructor() : void\l+ getURLPath() : java.lang.String\l}"]
	TaskManagerConfig[label = "{\<\<interface\>\>\nTaskManagerConfig|...|+ getDefaultColor() : java.awt.Color\l}"]
	ShapePaint[label = "{ShapePaint|# width : int\l# height : int\l# array : int[]\l# foreground : java.awt.Color\l# background : java.awt.Color\l|+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l- createTexture() : java.awt.image.BufferedImage\l+ equals() : boolean\l+ toString2() : java.lang.String\l+ toString() : java.lang.String\l+ getArray() : java.lang.String\l+ getarray() : int[]\l}"]
	TaskContainmentHierarchyFacadeFactory[label = "{\<\<interface\>\>\nTaskContainmentHierarchyFacadeFactory|...|+ createFacede() : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l}"]
	GanttHTMLFileFilter[label = "{GanttHTMLFileFilter|...|+ Constructor() : void\l+ accept() : boolean\l+ getDescription() : java.lang.String\l}"]
	GanttExportSettings[label = "{GanttExportSettings|+ name : boolean\l+ percent : boolean\l+ depend : boolean\l+ border3d : boolean\l+ ok : boolean\l|+ Constructor() : void\l+ Constructor() : void\l}"]
	DocumentCreator[label = "{DocumentCreator|...|+ Constructor() : void\l+ createDocument() : net.sourceforge.ganttproject.document.Document\l+ createDocument() : net.sourceforge.ganttproject.document.Document\l}"]
	DependencyTagHandler[label = "{DependencyTagHandler|- myTaskManager : net.sourceforge.ganttproject.task.TaskManager\l- myDependencies : java.util.List\l- myDependenciesSectionStarted : boolean\l- myContext : net.sourceforge.ganttproject.parser.ParsingContext\l|+ Constructor() : void\l+ endElement() : void\l+ startElement() : void\l+ parsingStarted() : void\l+ parsingFinished() : void\l# loadDependency() : void\l# getDependencyAddressee() : int\l# getDependencyAddresser() : int\l- getDependencies() : java.util.List\l- getContext() : net.sourceforge.ganttproject.parser.ParsingContext\l}"]
	TaskManagerAccess[label = "{TaskManagerAccess|- ourInstance : net.sourceforge.ganttproject.task.TaskManager\l|+ <clinit>() : void\l+ Constructor() : void\l+ getInstance() : net.sourceforge.ganttproject.task.TaskManager\l+ newInstance() : net.sourceforge.ganttproject.task.TaskManager\l+ newInstance() : net.sourceforge.ganttproject.task.TaskManager\l}"]
	BrowserControl[label = "{BrowserControl|- URLTOKEN : java.lang.String\l- WIN_ID : int\l- WIN_PREFIX : java.lang.String\l- WIN_CMDLINE : java.lang.String[]\l- MAC_ID : int\l- MAC_PREFIX : java.lang.String\l- MAC_CMDLINE : java.lang.String[]\l- OTHER_ID : int\l- OTHER_CMDLINES : java.lang.String[][]\l- OTHER_FALLBACKS : java.lang.String[][]\l|+ <clinit>() : void\l+ Constructor() : void\l+ displayURL() : boolean\l- getPlatform() : int\l- connectStringArray() : java.lang.String\l- replaceToken() : java.lang.String[]\l- runCmdLine() : boolean\l- runCmdLine() : boolean\l}"]
	NewProjectWizard[label = "{NewProjectWizard|- myMainFrame : javax.swing.JFrame\l|+ Constructor() : void\l+ createNewProject() : net.sourceforge.ganttproject.PrjInfos\l}"]
	SettingsDialog[label = "{SettingsDialog|+ reinit : boolean\l+ restoreButton : javax.swing.JButton\l|+ Constructor() : void\l+ constructSections() : void\l+ valueChanged() : void\l+ actionPerformed() : void\l}"]
	HttpDocument[label = "{HttpDocument|- url : java.lang.String\l- lastError : java.lang.String\l- httpURL : org.apache.commons.httpclient.HttpURL\l- webdavResource : org.apache.webdav.lib.WebdavResource\l- locked : boolean\l- malformedURL : boolean\l- lockDAVMinutes : int\l|+ <clinit>() : void\l+ Constructor() : void\l- getWebdavResource() : org.apache.webdav.lib.WebdavResource\l+ getDescription() : java.lang.String\l+ canRead() : boolean\l+ canWrite() : boolean\l+ isValidForMRU() : boolean\l+ acquireLock() : boolean\l+ releaseLock() : void\l+ getInputStream() : java.io.InputStream\l+ getOutputStream() : java.io.OutputStream\l+ getPath() : java.lang.String\l+ getURLPath() : java.lang.String\l+ getUsername() : java.lang.String\l+ getPassword() : java.lang.String\l+ setUserInfo() : void\l+ getLastError() : java.lang.String\l+ setLockDAVMinutes() : void\l}"]
	ParsingListener[label = "{\<\<interface\>\>\nParsingListener|...|+ parsingStarted() : void\l+ parsingFinished() : void\l}"]
	AboutDialog[label = "{AboutDialog|...|+ Constructor() : void\l+ valueChanged() : void\l+ constructSections() : void\l}"]
	Role[label = "{\<\<interface\>\>\nRole|...|+ getID() : int\l+ getName() : java.lang.String\l+ getPersistentID() : java.lang.String\l}"]
	GanttProjectTaskContainmentHierarchyFacadeImpl[label = "{GanttProjectTaskContainmentHierarchyFacadeImpl|- myTask2treeNode : java.util.Map\l- myRootTask : net.sourceforge.ganttproject.task.Task\l|+ Constructor() : void\l+ getNestedTasks() : net.sourceforge.ganttproject.task.Task[]\l+ getRoot() : net.sourceforge.ganttproject.task.Task\l+ getContainer() : net.sourceforge.ganttproject.task.Task\l}"]
	HumanResourceManager[label = "{HumanResourceManager|- myViews : java.util.List\l- resources : java.util.ArrayList\l- nextFreeId : int\l- myDefaultRole : net.sourceforge.ganttproject.roles.Role\l|+ Constructor() : void\l+ newHumanResource() : net.sourceforge.ganttproject.resource.HumanResource\l+ create() : net.sourceforge.ganttproject.resource.ProjectResource\l+ add() : void\l+ getById() : net.sourceforge.ganttproject.resource.ProjectResource\l+ getResources() : java.util.ArrayList\l+ remove() : void\l+ removeById() : void\l+ save() : void\l+ clear() : void\l+ addView() : void\l- fireResourceAdded() : void\l- fireResourcesRemoved() : void\l- fireCleanup() : void\l+ up() : void\l+ down() : void\l}"]
	GanttPNGFileFilter[label = "{GanttPNGFileFilter|...|+ Constructor() : void\l+ accept() : boolean\l+ getDescription() : java.lang.String\l}"]
	ResourceContext[label = "{\<\<interface\>\>\nResourceContext|...|+ getResources() : net.sourceforge.ganttproject.resource.ProjectResource[]\l}"]
	AlgorithmCollection[label = "{AlgorithmCollection|- myFindPossibleDependeesAlgorithm : net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm\l- myRecalculateTaskScheduleAlgorithm : net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm\l- myAdjustTaskBoundsAlgorithm : net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm\l- myCompletionPercentageAlgorithm : net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm\l|+ Constructor() : void\l+ getFindPossibleDependeesAlgorithm() : net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm\l+ getRecalculateTaskScheduleAlgorithm() : net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm\l+ getAdjustTaskBoundsAlgorithm() : net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm\l+ getRecalculateTaskCompletionPercentageAlgorithm() : net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm\l}"]
	ParsingContext[label = "{ParsingContext|- myTaskID : int\l|+ Constructor() : void\l+ getTaskID() : int\l+ setTaskID() : void\l}"]
	ResourceLoadGraphicArea[label = "{ResourceLoadGraphicArea|+ date : net.sourceforge.ganttproject.GanttCalendar\l+ olddate : net.sourceforge.ganttproject.GanttCalendar\l+ table : javax.swing.JTable\l+ ONE_WEEK : int\l+ TWO_WEEK : int\l+ ONE_MONTH : int\l+ TWO_MONTH : int\l+ THREE_MONTH : int\l+ FOUR_MONTH : int\l+ SIX_MONTH : int\l+ ONE_YEAR : int\l+ TWO_YEAR : int\l+ THREE_YEAR : int\l+ taskDefaultColor : java.awt.Color\l- zoomValue : int\l- listOfParam : java.util.ArrayList\l- margY : int\l- upperLeft : java.awt.Point\l- printRendering : boolean\l- drawdepend : boolean\l- drawPercent : boolean\l- drawName : boolean\l- drawVersion : boolean\l- draw3dBorders : boolean\l- language : net.sourceforge.ganttproject.language.GanttLanguage\l- appli : net.sourceforge.ganttproject.GanttProject\l- oldX : int\l- oldY : int\l- moveView : boolean\l- moveTask : int\l+ curs : boolean\l+ typeSeletion : int\l- storeTaskLength : int\l- addTaskLength : float\l- storeTaskStart : net.sourceforge.ganttproject.GanttCalendar\l- storeX : int[]\l- arrayColor : java.awt.Color[]\l- listOfTask : java.util.ArrayList\l+ beg : net.sourceforge.ganttproject.GanttCalendar\l+ end : net.sourceforge.ganttproject.GanttCalendar\l- loads : java.util.ArrayList\l+ tree : net.sourceforge.ganttproject.GanttTree\l+ mouseButton : int\l- rowCount : int\l|+ <clinit>() : void\l+ Constructor() : void\l+ getPreferredSize() : java.awt.Dimension\l+ changeDate() : void\l+ changeDate2() : void\l+ zoomToBegin() : void\l+ paintComponent() : void\l+ drawGPVersion() : void\l+ indexOf() : int\l+ setScrollBar() : void\l+ getScrollBar() : int\l+ setZoom() : void\l+ zoomMore() : void\l+ zoomLess() : void\l+ getZoom() : int\l+ setDate() : void\l+ getDate() : net.sourceforge.ganttproject.GanttCalendar\l+ setLanguage() : void\l+ getGranit() : int\l+ getFoot() : int\l+ paintCalendar1() : void\l+ drawVerticalLinedash() : void\l+ paintCalendar2() : void\l+ paintLoads() : void\l+ paintEndBorder() : void\l+ paintAResourceLoad() : void\l- calculateLoad() : void\l+ getChart() : java.awt.image.BufferedImage\l- printResources() : void\l+ export() : void\l+ printProject() : void\l+ access() : net.sourceforge.ganttproject.GanttProject\l+ access() : int\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : int\l}"]
	ProjectExportProcessor[label = "{ProjectExportProcessor|- myTransformerFactory : javax.xml.transform.sax.SAXTransformerFactory\l- myLogger : java.util.logging.Logger\l- LOGGER_NAME : java.lang.String\l- myAttrs : org.xml.sax.helpers.AttributesImpl\l|+ <clinit>() : void\l+ Constructor() : void\l+ doExport() : void\l# getTransformerFactory() : javax.xml.transform.sax.SAXTransformerFactory\l# isInfoable() : boolean\l# info() : void\l# getLogger() : java.util.logging.Logger\l# getCleanAttrs() : org.xml.sax.helpers.AttributesImpl\l}"]
	AdjustTaskBoundsAlgorithm[label = "{AdjustTaskBoundsAlgorithm|- myModifiedTasks : java.util.Set\l|+ Constructor() : void\l+ run() : void\l+ run() : void\l- recalculateSupertaskScheduleBottomUp() : void\l- recalculateSupertaskSchedule() : void\l- modifyTaskStart() : void\l- modifyTaskEnd() : void\l# createContainmentFacade() : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l}"]
	TaskDependencyCollection[label = "{\<\<interface\>\>\nTaskDependencyCollection|...|+ getDependencies() : net.sourceforge.ganttproject.task.dependency.TaskDependency[]\l+ getDependenciesAsDependant() : net.sourceforge.ganttproject.task.dependency.TaskDependency[]\l+ getDependenciesAsDependee() : net.sourceforge.ganttproject.task.dependency.TaskDependency[]\l+ createMutator() : net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionMutator\l}"]
	GanttSplash[label = "{GanttSplash|...|+ Constructor() : void\l+ close() : void\l}"]
	GanttProject5[label = "{GanttProject5|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ getActiveAction() : javax.swing.AbstractAction\l}"]
	GanttProject6[label = "{GanttProject6|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttProject7[label = "{GanttProject7|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttProject8[label = "{GanttProject8|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttProject1[label = "{GanttProject1|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ getDefaultColor() : java.awt.Color\l}"]
	GanttProject2[label = "{GanttProject2|- myCachedFacade : net.sourceforge.ganttproject.GanttProjectTaskContainmentHierarchyFacadeImpl\l+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ createFacede() : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l}"]
	GanttProject3[label = "{GanttProject3|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ stateChanged() : void\l}"]
	GanttProject4[label = "{GanttProject4|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ windowClosing() : void\l}"]
	GanttProject9[label = "{GanttProject9|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	TaskDependencyException[label = "{TaskDependencyException|...|+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l}"]
	TipsDialog[label = "{TipsDialog|+ pnPanel0 : javax.swing.JPanel\l+ taArea0 : javax.swing.JTextPane\l+ btBut0 : javax.swing.JButton\l+ btBut1 : javax.swing.JButton\l+ btBut2 : javax.swing.JButton\l+ cbBox0 : javax.swing.JCheckBox\l+ lbImg : javax.swing.JLabel\l+ appli : net.sourceforge.ganttproject.GanttProject\l+ tipsText : java.lang.String[]\l+ index : int\l|+ Constructor() : void\l+ changeText() : void\l}"]
	GanttCSVExport[label = "{GanttCSVExport|- tree : net.sourceforge.ganttproject.GanttTree\l- peop : net.sourceforge.ganttproject.GanttResourcePanel\l- prjInfos : net.sourceforge.ganttproject.PrjInfos\l- csvOptions : net.sourceforge.ganttproject.io.CSVOptions\l+ lot : java.util.ArrayList\l+ resources : java.util.ArrayList\l+ iMaxSize : int\l+ bFixedSize : boolean\l|+ Constructor() : void\l+ save() : void\l+ beginToSave() : void\l- writeProjectInfos() : void\l- writeTasks() : void\l- writeResources() : void\l+ getMaxSize() : void\l- getName() : java.lang.String\l- getWebLink() : java.lang.String\l- getAssignments() : java.lang.String\l- correctField() : java.lang.String\l}"]
	GanttURLChooser[label = "{GanttURLChooser|- urlField : javax.swing.JTextField\l- userNameField : javax.swing.JTextField\l- passwordField : javax.swing.JPasswordField\l+ language : net.sourceforge.ganttproject.language.GanttLanguage\l+ fileurl : java.lang.String\l+ userName : java.lang.String\l+ password : java.lang.String\l+ change : boolean\l|+ Constructor() : void\l+ access() : javax.swing.JTextField\l+ access() : javax.swing.JTextField\l+ access() : javax.swing.JPasswordField\l}"]
	GanttTXTOpen[label = "{GanttTXTOpen|+ treePanel : net.sourceforge.ganttproject.GanttTree\l+ prj : net.sourceforge.ganttproject.GanttProject\l+ area : net.sourceforge.ganttproject.GanttGraphicArea\l- myTaskManager : net.sourceforge.ganttproject.task.TaskManager\l|+ Constructor() : void\l+ Constructor() : void\l+ load() : boolean\l}"]
	GanttHTMLExport[label = "{GanttHTMLExport|- language : net.sourceforge.ganttproject.language.GanttLanguage\l|+ <clinit>() : void\l+ Constructor() : void\l- writeTasks() : java.lang.String\l- writeResources() : java.lang.String\l+ save() : void\l+ correct() : java.lang.String\l+ getFileName() : java.lang.String\l+ getExtention() : java.lang.String\l}"]
	GanttXFIGSaver[label = "{GanttXFIGSaver|- tree : net.sourceforge.ganttproject.GanttTree\l- peop : net.sourceforge.ganttproject.GanttResourcePanel\l- area : net.sourceforge.ganttproject.GanttGraphicArea\l- prjInfos : net.sourceforge.ganttproject.PrjInfos\l+ lot : java.util.ArrayList\l+ lots : java.util.ArrayList\l+ loc : java.util.ArrayList\l+ atl : java.util.ArrayList\l+ abl : java.util.ArrayList\l+ dateShift : net.sourceforge.ganttproject.GanttCalendar\l+ scale : float\l+ chwidth : float\l+ fTtextwidth : float\l+ debug : boolean\l|+ Constructor() : void\l+ save() : void\l+ beginToSave() : void\l+ getProjectTextWidth() : float\l+ getTaskTextWidth() : float\l+ xfigheader() : void\l+ searchUserColor() : void\l+ setProjectPlotTimes() : void\l+ task2text() : net.sourceforge.ganttproject.io.GanttXFIGSaverTextObject\l+ task2box() : net.sourceforge.ganttproject.io.GanttXFIGSaverBoxObject\l+ drawTasks() : void\l+ drawtext() : void\l+ drawbox() : void\l+ labelAxes() : void\l- getHexaColor() : java.lang.String\l}"]
	DeprecatedProjectExportData[label = "{DeprecatedProjectExportData|+ myFilename : java.lang.String\l+ myProject : net.sourceforge.ganttproject.GanttProject\l+ myTree : net.sourceforge.ganttproject.GanttTree\l+ myGanttChart : net.sourceforge.ganttproject.GanttGraphicArea\l+ myResourceChart : net.sourceforge.ganttproject.ResourceLoadGraphicArea\l+ myExportOptions : net.sourceforge.ganttproject.GanttExportSettings\l+ myXslFoScript : java.lang.String\l|+ Constructor() : void\l}"]
	PDFExportProcessor[label = "{PDFExportProcessor|- myStylesheetPath : java.lang.String\l|+ Constructor() : void\l+ doExport() : void\l+ run() : void\l# exportProject() : void\l- createDriver() : org.apache.fop.apps.Driver\l# exportGanttChart() : java.io.File\l# exportResourceChart() : java.io.File\l- createOptions() : org.apache.fop.apps.Options\l- createConfiguration() : void\l- writeTriplets() : void\l}"]
	RecalculateTaskCompletionPercentageAlgorithm[label = "{RecalculateTaskCompletionPercentageAlgorithm|...|+ Constructor() : void\l+ run() : void\l- recalculateSupertaskCompletionPercentageBottomUp() : void\l- recalculateSupertaskCompletionPercentage() : void\l# createContainmentFacade() : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l}"]
	TaskDependency[label = "{\<\<interface\>\>\nTaskDependency|...|+ getDependant() : net.sourceforge.ganttproject.task.Task\l+ getDependee() : net.sourceforge.ganttproject.task.Task\l+ setConstraint() : void\l+ getConstraint() : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint\l+ delete() : void\l}"]
	GanttCSVFilter[label = "{GanttCSVFilter|...|+ Constructor() : void\l+ accept() : boolean\l+ getDescription() : java.lang.String\l+ getExtension() : java.lang.String\l}"]
	RoleManagerAccess[label = "{RoleManagerAccess|- ourInstance : net.sourceforge.ganttproject.roles.RoleManager\l|+ <clinit>() : void\l+ Constructor() : void\l+ getInstance() : net.sourceforge.ganttproject.roles.RoleManager\l}"]
	ImportResources[label = "{ImportResources|- myTaskManager : net.sourceforge.ganttproject.task.TaskManager\l- myResourceManager : net.sourceforge.ganttproject.resource.ResourceManager\l- myproject : net.sourceforge.ganttproject.GanttProject\l- myRoleManager : net.sourceforge.ganttproject.roles.RoleManager\l|+ Constructor() : void\l+ actionPerformed() : void\l- getResourcesFile() : java.io.File\l}"]
	AllocationTagHandler[label = "{AllocationTagHandler|- myResourceManager : net.sourceforge.ganttproject.resource.ResourceManager\l- myTaskManager : net.sourceforge.ganttproject.task.TaskManager\l|+ Constructor() : void\l+ startElement() : void\l+ endElement() : void\l- loadAllocation() : void\l- getResourceManager() : net.sourceforge.ganttproject.resource.ResourceManager\l- getTaskManager() : net.sourceforge.ganttproject.task.TaskManager\l}"]
	GanttProject16[label = "{GanttProject16|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttProject17[label = "{GanttProject17|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttProject14[label = "{GanttProject14|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	TagHandler[label = "{\<\<interface\>\>\nTagHandler|...|+ startElement() : void\l+ endElement() : void\l}"]
	GanttProject15[label = "{GanttProject15|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttProject12[label = "{GanttProject12|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttProject13[label = "{GanttProject13|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttProject10[label = "{GanttProject10|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttProject11[label = "{GanttProject11|+ this0 : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttTXTFileFilter[label = "{GanttTXTFileFilter|...|+ Constructor() : void\l+ accept() : boolean\l+ getDescription() : java.lang.String\l+ getExtension() : java.lang.String\l}"]
	GanttJPGFileFilter[label = "{GanttJPGFileFilter|...|+ Constructor() : void\l+ accept() : boolean\l+ getDescription() : java.lang.String\l}"]
	GanttTask[label = "{GanttTask|+ LOW : int\l+ NORMAL : int\l+ HIGHT : int\l- checked : boolean\l|+ <clinit>() : void\l+ Constructor() : void\l- Constructor() : void\l+ Clone() : net.sourceforge.ganttproject.GanttTask\l+ toString() : java.lang.String\l+ getLength() : int\l+ setLength() : void\l+ getPredecessorsOld() : java.util.Vector\l+ getSuccessorsOld() : java.util.Vector\l+ unlink() : void\l+ isChecked() : boolean\l+ setChecked() : void\l+ setTaskID() : void\l}"]
	DeleteHumanAction[label = "{DeleteHumanAction|- myContext : net.sourceforge.ganttproject.resource.ResourceContext\l- ICON_URL : java.lang.String\l- MENU_MASK : int\l- myProjectFrame : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ actionPerformed() : void\l- getProjectFrame() : net.sourceforge.ganttproject.GanttProject\l- deleteResources() : void\l- getDisplayName() : java.lang.String\l- getContext() : net.sourceforge.ganttproject.resource.ResourceContext\l}"]
	TaskContainmentHierarchyFacade[label = "{\<\<interface\>\>\nTaskContainmentHierarchyFacade|...|+ getNestedTasks() : net.sourceforge.ganttproject.task.Task[]\l+ getRoot() : net.sourceforge.ganttproject.task.Task\l+ getContainer() : net.sourceforge.ganttproject.task.Task\l}"]
	GanttImagePanel[label = "{GanttImagePanel|+ x : int\l+ y : int\l+ image : javax.swing.ImageIcon\l+ image2 : javax.swing.ImageIcon\l|+ Constructor() : void\l+ paintComponent() : void\l+ getPreferredSize() : java.awt.Dimension\l}"]
	OpenDocumentAction[label = "{OpenDocumentAction|- document : net.sourceforge.ganttproject.document.Document\l- listener : java.awt.event.ActionListener\l- MENU_MASK : int\l- SHORTCUT_KEYS : int[]\l- MNEMONIC_KEYS : int[]\l|+ <clinit>() : void\l+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttDialogInfo[label = "{GanttDialogInfo|+ ERROR : int\l+ WARNING : int\l+ INFO : int\l+ QUESTION : int\l+ YES : int\l+ NO : int\l+ CANCEL : int\l+ res : int\l+ YES_OPTION : int\l+ YES_NO_OPTION : int\l+ YES_NO_CANCEL_OPTION : int\l|+ <clinit>() : void\l+ Constructor() : void\l}"]
	GanttDialogProperties[label = "{GanttDialogProperties|- jtfname : javax.swing.JTextField\l- jcbfather : javax.swing.JComboBox\l- jtfbegin : javax.swing.JTextField\l- jtflength : javax.swing.JTextField\l- spercent : javax.swing.JSlider\l- advancementLabel : javax.swing.JLabel\l- jcbbilan : javax.swing.JCheckBox\l+ haschild : boolean\l- ttree : net.sourceforge.ganttproject.GanttTree\l- ttask : net.sourceforge.ganttproject.task.Task\l- aarea : net.sourceforge.ganttproject.GanttGraphicArea\l- button : javax.swing.JButton\l+ percentValue : int\l- lang : net.sourceforge.ganttproject.language.GanttLanguage\l+ prj : javax.swing.JFrame\l+ saveDuration : int\l+ saveColor : java.awt.Color\l+ change : boolean\l# colorChooser : javax.swing.JColorChooser\l- taskPropertiesBean : net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean\l- task : net.sourceforge.ganttproject.task.Task\l- tree : net.sourceforge.ganttproject.GanttTree\l- area : net.sourceforge.ganttproject.GanttGraphicArea\l- parent : javax.swing.JFrame\l|+ <clinit>() : void\l+ Constructor() : void\l- findTheIndex() : int\l+ actionPerformed() : void\l- getTaskManager() : net.sourceforge.ganttproject.task.TaskManager\l}"]
	GanttCalendar[label = "{GanttCalendar|- language : net.sourceforge.ganttproject.language.GanttLanguage\l- isFixed : boolean\l|+ isFixed() : boolean\l+ setFixed() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ parseXMLDate() : net.sourceforge.ganttproject.GanttCalendar\l+ Clone() : net.sourceforge.ganttproject.GanttCalendar\l+ toString() : java.lang.String\l+ toXMLString() : java.lang.String\l+ getYear() : int\l+ getMonth() : int\l+ getDate() : int\l+ getDay() : int\l+ getDayWeek() : int\l+ getWeek() : int\l+ getDayMonthLanguage() : java.lang.String[]\l+ getDayWeekLanguage() : java.lang.String[]\l+ setYear() : void\l+ setMonth() : void\l+ setDay() : void\l+ add() : void\l+ newAdd() : net.sourceforge.ganttproject.GanttCalendar\l+ diff() : int\l+ getdayMonth() : java.lang.String\l+ getdayWeek() : java.lang.String\l+ getNumberOfDay() : int\l- module() : int\l+ compareTo() : int\l+ equals() : boolean\l+ goNextMonth() : void\l+ goPrevMonth() : void\l+ go() : void\l+ getDateAndTime() : java.lang.String\l}"]
	GanttPDFFileFilter[label = "{GanttPDFFileFilter|...|+ Constructor() : void\l+ accept() : boolean\l+ getDescription() : java.lang.String\l}"]
	GanttDialogCalendar[label = "{GanttDialogCalendar|- language : net.sourceforge.ganttproject.language.GanttLanguage\l- listCalendar : javax.swing.JList\l- panelDate : net.sourceforge.ganttproject.gui.GanttPanelDate\l- bNew : javax.swing.JButton\l- bDelete : javax.swing.JButton\l- bImport : javax.swing.JButton\l- bSelectDays : javax.swing.JButton\l- bWork : javax.swing.JRadioButton\l- bNonWork : javax.swing.JRadioButton\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttLookAndFeels[label = "{GanttLookAndFeels|# infoByClass : java.util.Map\l# infoByName : java.util.Map\l# singleton : net.sourceforge.ganttproject.gui.GanttLookAndFeels\l|+ <clinit>() : void\l# Constructor() : void\l# addLookAndFeel() : void\l+ getInfoByClass() : net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo\l+ getInfoByName() : net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo\l+ getDefaultInfo() : net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo\l+ getInstalledLookAndFeels() : net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo[]\l+ getGanttLookAndFeels() : net.sourceforge.ganttproject.gui.GanttLookAndFeels\l}"]
	FileDocument[label = "{FileDocument|- file : java.io.File\l|+ Constructor() : void\l+ getDescription() : java.lang.String\l+ canRead() : boolean\l+ canWrite() : boolean\l+ isValidForMRU() : boolean\l+ getInputStream() : java.io.InputStream\l+ getOutputStream() : java.io.OutputStream\l+ getPath() : java.lang.String\l+ getFilePath() : java.lang.String\l}"]
	GanttXMLFileFilter[label = "{GanttXMLFileFilter|...|+ Constructor() : void\l+ accept() : boolean\l+ getDescription() : java.lang.String\l+ getExtension() : java.lang.String\l}"]
	GanttXMLSaver[label = "{GanttXMLSaver|- myProject : net.sourceforge.ganttproject.IGanttProject\l- tree : net.sourceforge.ganttproject.GanttTree\l- peop : net.sourceforge.ganttproject.GanttResourcePanel\l- area : net.sourceforge.ganttproject.GanttGraphicArea\l- usersId : java.util.HashMap\l+ number : java.util.ArrayList\l+ lot : java.util.ArrayList\l+ lots : java.util.ArrayList\l+ cpt : int\l+ s : java.lang.String\l|+ Constructor() : void\l+ replaceAll() : java.lang.String\l+ writeTask() : void\l+ writeResources() : void\l+ writeAllocations() : void\l+ writeRoles() : void\l+ correct() : java.lang.String\l+ save() : void\l- startElement() : void\l- endElement() : void\l- addAttribute() : void\l- emptyElement() : void\l- emptyComment() : void\l+ save() : void\l- saveRoles() : void\l+ _save() : void\l+ getProject() : net.sourceforge.ganttproject.IGanttProject\l}"]
	GanttXFIGFileFilter[label = "{GanttXFIGFileFilter|...|+ Constructor() : void\l+ accept() : boolean\l+ getDescription() : java.lang.String\l}"]
	ResourceTagHandler[label = "{ResourceTagHandler|- myLateResource2roleBinding : java.util.HashMap\l- myResourceManager : net.sourceforge.ganttproject.resource.ResourceManager\l- myRoleManager : net.sourceforge.ganttproject.roles.RoleManager\l|+ Constructor() : void\l+ endElement() : void\l+ startElement() : void\l- loadResource() : void\l- getResourceManager() : net.sourceforge.ganttproject.resource.ResourceManager\l- findRole() : net.sourceforge.ganttproject.roles.Role\l+ parsingStarted() : void\l+ parsingFinished() : void\l}"]
	GanttXMLOpenGanttXMLParser[label = "{GanttXMLOpenGanttXMLParser|+ textBuffer : java.lang.StringBuffer\l+ this0 : net.sourceforge.ganttproject.io.GanttXMLOpen\l|+ Constructor() : void\l+ endDocument() : void\l+ startElement() : void\l+ endElement() : void\l+ getCorrectString() : java.lang.String\l+ characters() : void\l}"]
	TaskManagerImpl[label = "{TaskManagerImpl|- myTimeUnitManager : net.sourceforge.ganttproject.time.TimeUnitManager\l- myHierarchyManager : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl\l- myDependencyCollection : net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl\l- myAlgorithmCollection : net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection\l- myListeners : java.util.List\l- myMaxID : int\l- myId2task : java.util.Map\l- myRoot : net.sourceforge.ganttproject.task.Task\l- myConfig : net.sourceforge.ganttproject.task.TaskManagerConfig\l|+ Constructor() : void\l+ Constructor() : void\l+ getTask() : net.sourceforge.ganttproject.GanttTask\l+ getRootTask() : net.sourceforge.ganttproject.task.Task\l+ clear() : void\l+ createTask() : net.sourceforge.ganttproject.GanttTask\l+ createTask() : net.sourceforge.ganttproject.GanttTask\l+ registerTask() : void\l+ setTask() : void\l+ getTimeUnitManager() : net.sourceforge.ganttproject.time.TimeUnitManager\l+ createLength() : net.sourceforge.ganttproject.task.TaskLength\l+ getDependencyCollection() : net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection\l+ getAlgorithmCollection() : net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection\l+ getHierarchyManager() : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl\l+ createConstraint() : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint\l+ getMaxID() : int\l- setMaxID() : void\l+ increaseMaxID() : void\l+ addTaskListener() : void\l+ fireTaskScheduleChanged() : void\l- fireDependencyAdded() : void\l- fireDependencyRemoved() : void\l- fireTaskAdded() : void\l- fireTaskRemoved() : void\l+ getConfig() : net.sourceforge.ganttproject.task.TaskManagerConfig\l+ access() : net.sourceforge.ganttproject.task.Task\l+ access() : void\l+ access() : void\l}"]
	GanttXMLOpenDefaultTagHandler[label = "{GanttXMLOpenDefaultTagHandler|+ this0 : net.sourceforge.ganttproject.io.GanttXMLOpen\l|- Constructor() : void\l+ startElement() : void\l+ endElement() : void\l- determineColor() : java.awt.Color\l+ Constructor() : void\l}"]
	RecalculateTaskScheduleAlgorithm[label = "{RecalculateTaskScheduleAlgorithm|- myMarkedTasks : java.util.Set\l- myDistance2dependencyList : java.util.SortedMap\l- myModifiedTasks : java.util.Set\l- myAdjuster : net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm\l- myEntranceCounter : int\l- isRunning : boolean\l|+ Constructor() : void\l+ run() : void\l+ run() : void\l+ isRunning() : boolean\l- traverse() : void\l- fulfilDependencies() : void\l- fulfilConstraints() : void\l- modifyTaskStart() : void\l- modifyTaskEnd() : void\l- buildDistanceGraph() : void\l- buildDistanceGraph() : void\l- markTask() : void\l- isMarked() : boolean\l# createContainmentFacade() : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l}"]
	RoleSet[label = "{\<\<interface\>\>\nRoleSet|+ SOFTWARE_DEVELOPMENT : java.lang.String\l+ DEFAULT : java.lang.String\l|+ getName() : java.lang.String\l+ getRoles() : net.sourceforge.ganttproject.roles.Role[]\l+ createRole() : net.sourceforge.ganttproject.roles.Role\l+ deleteRole() : void\l+ findRole() : net.sourceforge.ganttproject.roles.Role\l+ isEnabled() : boolean\l+ setEnabled() : void\l+ isEmpty() : boolean\l+ clear() : void\l}"]
	RolePersistentID[label = "{RolePersistentID|- ROLESET_DELIMITER : java.lang.String\l- myRoleSetID : java.lang.String\l- myRoleID : int\l|+ Constructor() : void\l+ getRoleSetID() : java.lang.String\l+ getRoleID() : int\l+ asString() : java.lang.String\l}"]
	GanttPreviewPrintPreviewPanel[label = "{GanttPreviewPrintPreviewPanel|+ save : java.awt.image.BufferedImage\l+ image : java.awt.image.BufferedImage\l+ rendering : java.awt.image.BufferedImage\l+ pageWidth : int\l+ pageHeight : int\l+ nbx : int\l+ nby : int\l+ _x : int\l+ _y : int\l+ sizex : int\l+ sizey : int\l+ orientation : int\l+ haveto : boolean\l+ this0 : net.sourceforge.ganttproject.gui.GanttPreviewPrint\l|+ Constructor() : void\l+ scale() : void\l+ changeState() : void\l+ paint() : void\l}"]
	GanttPrintable[label = "{GanttPrintable|- image : java.awt.image.BufferedImage\l- x : int\l- y : int\l|+ Constructor() : void\l+ print() : int\l}"]
	DialogAligner[label = "{DialogAligner|...|+ Constructor() : void\l+ center() : void\l}"]
	MutableTask[label = "{\<\<interface\>\>\nMutableTask|...|+ setName() : void\l+ setMilestone() : void\l+ setPriority() : void\l+ setStart() : void\l+ setEnd() : void\l+ setDuration() : void\l+ setCompletionPercentage() : void\l+ setStartFixed() : void\l+ setShape() : void\l+ setColor() : void\l+ setNotes() : void\l+ addNotes() : void\l+ setExpand() : void\l}"]
	TaskMutator[label = "{\<\<interface\>\>\nTaskMutator|...|+ commit() : void\l}"]
	TaskLength[label = "{\<\<interface\>\>\nTaskLength|...|+ getLength() : long\l+ getLength() : long\l+ getTimeUnit() : net.sourceforge.ganttproject.time.TimeUnit\l}"]
	GanttTaskRelationship[label = "{GanttTaskRelationship|+ SS : int\l+ FS : int\l+ FF : int\l+ SF : int\l- predecessorTaskID : int\l- successorTaskID : int\l- relationshipType : int\l- myTaskManager : net.sourceforge.ganttproject.task.TaskManager\l|+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ getPredecessorTask() : net.sourceforge.ganttproject.GanttTask\l+ getPredecessorTaskID() : int\l+ setPredecessorTask() : void\l+ setPredecessorTask() : void\l+ getSuccessorTask() : net.sourceforge.ganttproject.task.Task\l+ getSuccessorTaskID() : int\l+ setSuccessorTask() : void\l+ setSuccessorTask() : void\l+ getRelationshipType() : int\l+ setRelationshipType() : void\l+ equals() : boolean\l+ clone() : java.lang.Object\l+ toString() : java.lang.String\l- getManager() : net.sourceforge.ganttproject.task.TaskManager\l}"]
	ResourceAssignment[label = "{\<\<interface\>\>\nResourceAssignment|...|+ getTask() : net.sourceforge.ganttproject.task.Task\l+ getResource() : net.sourceforge.ganttproject.resource.ProjectResource\l+ getLoad() : float\l+ setLoad() : void\l+ delete() : void\l}"]
	TaskDependencySlice[label = "{\<\<interface\>\>\nTaskDependencySlice|...|+ toArray() : net.sourceforge.ganttproject.task.dependency.TaskDependency[]\l+ clear() : void\l}"]
	ResourceAssignmentCollection[label = "{\<\<interface\>\>\nResourceAssignmentCollection|...|+ getAssignments() : net.sourceforge.ganttproject.task.ResourceAssignment[]\l+ getAssignment() : net.sourceforge.ganttproject.task.ResourceAssignment\l+ createMutator() : net.sourceforge.ganttproject.task.ResourceAssignmentMutator\l}"]
	AbstractDocument[label = "{AbstractDocument|...|+ Constructor() : void\l+ equals() : boolean\l+ acquireLock() : boolean\l+ releaseLock() : void\l+ getFilePath() : java.lang.String\l+ getURLPath() : java.lang.String\l+ getUsername() : java.lang.String\l+ getPassword() : java.lang.String\l+ setUserInfo() : void\l+ getLastError() : java.lang.String\l}"]
	GanttLanguageListener[label = "{\<\<interface\>\>\nGanttLanguageListener|...|+ languageChanged() : void\l}"]
	GanttLanguageEvent[label = "{GanttLanguageEvent|+ this0 : net.sourceforge.ganttproject.language.GanttLanguage\l|+ Constructor() : void\l+ getLanguage() : net.sourceforge.ganttproject.language.GanttLanguage\l}"]
	TimeUnitManager[label = "{\<\<interface\>\>\nTimeUnitManager|...|+ getTimeUnit() : net.sourceforge.ganttproject.time.TimeUnit\l}"]
	TimeUnit[label = "{\<\<interface\>\>\nTimeUnit|+ DAY : int\l|+ getName() : java.lang.String\l+ isConstructedFrom() : boolean\l+ getAtomCount() : int\l+ getDirectAtomUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ setTextFormatter() : void\l+ format() : java.lang.String\l}"]
	TaskDependencyConstraint[label = "{\<\<interface\>\>\nTaskDependencyConstraint|...|+ setTaskDependency() : void\l+ getCollision() : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraintCollision\l+ getName() : java.lang.String\l+ getID() : int\l}"]
	TaskListener[label = "{\<\<interface\>\>\nTaskListener|...|+ taskScheduleChanged() : void\l+ dependencyAdded() : void\l+ dependencyRemoved() : void\l+ taskAdded() : void\l+ taskRemoved() : void\l+ taskMoved() : void\l}"]
	DependencyTagHandlerGanttDependStructure[label = "{DependencyTagHandlerGanttDependStructure|+ taskID : int\l+ successorTaskID : int\l+ dependType : int\l+ this0 : net.sourceforge.ganttproject.parser.DependencyTagHandler\l|+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ setTaskID() : void\l+ setDependTaskID() : void\l+ setDependType() : void\l}"]
	NewProjectWizardWindow[label = "{NewProjectWizardWindow|- myI18n : net.sourceforge.ganttproject.gui.projectwizard.I18N\l|+ Constructor() : void\l+ addRoleSetPage() : void\l+ addProjectNamePage() : void\l+ nextPage() : void\l+ show() : void\l+ backPage() : void\l}"]
	I18N[label = "{I18N|...|+ Constructor() : void\l+ getNewProjectWizardWindowTitle() : java.lang.String\l+ getProjectDomainPageTitle() : java.lang.String\l+ getRolesetTooltipHeader() : java.lang.String\l+ getRolesetTooltipFooter() : java.lang.String\l+ formatRoleForTooltip() : java.lang.String\l}"]
	GeneralDialog[label = "{GeneralDialog|# language : net.sourceforge.ganttproject.language.GanttLanguage\l# appli : net.sourceforge.ganttproject.GanttProject\l# treeSections : javax.swing.JTree\l# rootNode : javax.swing.tree.DefaultMutableTreeNode\l# treeModel : javax.swing.tree.DefaultTreeModel\l# okButton : javax.swing.JButton\l# cancelButton : javax.swing.JButton\l# applyButton : javax.swing.JButton\l# settingPanel : net.sourceforge.ganttproject.gui.options.GeneralOptionPanel\l# mainPanel2 : javax.swing.JPanel\l# southPanel : javax.swing.JPanel\l|+ Constructor() : void\l+ constructSections() : void\l+ addObject() : javax.swing.tree.DefaultMutableTreeNode\l+ actionPerformed() : void\l# getProject() : net.sourceforge.ganttproject.IGanttProject\l}"]
	GeneralOptionPanel[label = "{GeneralOptionPanel|# language : net.sourceforge.ganttproject.language.GanttLanguage\l# vb : javax.swing.Box\l# bHasChange : boolean\l- appli : java.awt.Frame\l- myTitle : java.lang.String\l- myComment : java.lang.String\l|+ Constructor() : void\l+ getComponent() : java.awt.Component\l+ applyChanges() : boolean\l+ initialize() : void\l+ askForApplyChanges() : boolean\l+ getTitle() : java.lang.String\l+ getComment() : java.lang.String\l}"]
	HTMLSettingsPanel[label = "{HTMLSettingsPanel|+ buttonXsl : javax.swing.JButton\l+ tfXsl : javax.swing.JTextField\l+ cbDefault : javax.swing.JCheckBox\l- appli : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l+ getXslDirectory() : java.lang.String\l+ actionPerformed() : void\l+ access() : net.sourceforge.ganttproject.GanttProject\l}"]
	ExportSettingsPanel[label = "{ExportSettingsPanel|+ cbName : javax.swing.JCheckBox\l+ cbComplete : javax.swing.JCheckBox\l+ cbRelations : javax.swing.JCheckBox\l+ cb3dBorder : javax.swing.JCheckBox\l- appli : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l+ getExportName() : boolean\l+ getExportComplete() : boolean\l+ getExportRelations() : boolean\l+ getExport3DBorder() : boolean\l}"]
	TopPanel[label = "{TopPanel|...|+ Constructor() : void\l}"]
	WelcomeSettingsPanel[label = "{WelcomeSettingsPanel|...|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l}"]
	CSVSettingsPanel[label = "{CSVSettingsPanel|+ bFixedSize : javax.swing.JRadioButton\l+ bSeparatedText : javax.swing.JRadioButton\l+ bDoubleDot : javax.swing.JRadioButton\l+ bDotComa : javax.swing.JRadioButton\l+ bComa : javax.swing.JRadioButton\l+ bSpace : javax.swing.JRadioButton\l+ bOther : javax.swing.JRadioButton\l+ cbTextSeparator : javax.swing.JComboBox\l+ tfOther : javax.swing.JTextField\l+ cbTaskID : javax.swing.JCheckBox\l+ cbTaskName : javax.swing.JCheckBox\l+ cbStartDate : javax.swing.JCheckBox\l+ cbEndDate : javax.swing.JCheckBox\l+ cbTaskPercent : javax.swing.JCheckBox\l+ cbTaskDuration : javax.swing.JCheckBox\l+ cbTaskWebLink : javax.swing.JCheckBox\l+ cbTaskResources : javax.swing.JCheckBox\l+ cbTaskNotes : javax.swing.JCheckBox\l+ cbResID : javax.swing.JCheckBox\l+ cbResName : javax.swing.JCheckBox\l+ cbResMail : javax.swing.JCheckBox\l+ cbResPhone : javax.swing.JCheckBox\l+ cbResRole : javax.swing.JCheckBox\l- appli : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l- addUsingGBL() : void\l+ applyChanges() : boolean\l+ initialize() : void\l+ actionPerformed() : void\l+ unselectOther() : void\l+ enableSeparatedButton() : void\l+ getFixed() : boolean\l+ getTaskID() : boolean\l+ getTaskName() : boolean\l+ getTaskSD() : boolean\l+ getTaskED() : boolean\l+ getTaskPercent() : boolean\l+ getTaskDuration() : boolean\l+ getTaskWebLink() : boolean\l+ getTaskResources() : boolean\l+ getTaskNotes() : boolean\l+ getResourceID() : boolean\l+ getResourceName() : boolean\l+ getResourcePhone() : boolean\l+ getResourceMail() : boolean\l+ getResourceRole() : boolean\l+ separatCharHasChange() : boolean\l+ getTextSeparat() : java.lang.String\l+ getSeparat() : java.lang.String\l}"]
	ColorSettingsPanel[label = "{ColorSettingsPanel|+ bTaskColor : javax.swing.JButton\l+ bResourceColor : javax.swing.JButton\l+ bResourceOverloadColor : javax.swing.JButton\l- appli : net.sourceforge.ganttproject.GanttProject\l# colorChooser : javax.swing.JColorChooser\l+ vb1 : javax.swing.Box\l+ vb2 : javax.swing.Box\l|+ <clinit>() : void\l+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l}"]
	ParametersSettingsPanel[label = "{ParametersSettingsPanel|+ cbAutomatic : javax.swing.JCheckBox\l+ cbDrag : javax.swing.JCheckBox\l+ cbRedLine : javax.swing.JCheckBox\l+ spLockDAV : javax.swing.JSpinner\l+ tfTaskPrefix : javax.swing.JTextField\l- appli : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l+ getAutomatic() : boolean\l+ getDragTime() : boolean\l+ getRedLine() : boolean\l+ getLockDAVMinutes() : int\l+ getTaskNamePrefix() : java.lang.String\l}"]
	LanguageSettingsPanel[label = "{LanguageSettingsPanel|- cbLanguage : javax.swing.JComboBox\l- appli : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l+ itemStateChanged() : void\l+ changeLanguage() : void\l}"]
	ProjectSettingsPanel[label = "{ProjectSettingsPanel|+ tfName : javax.swing.JTextField\l+ tfOrganization : javax.swing.JTextField\l+ tfWebLink : javax.swing.JTextField\l+ taDescr : javax.swing.JTextArea\l- myProject : net.sourceforge.ganttproject.IGanttProject\l|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l+ getProjectName() : java.lang.String\l+ getProjectOrganization() : java.lang.String\l+ getWebLink() : java.lang.String\l+ getProjectDescription() : java.lang.String\l}"]
	PDFSettingsPanel[label = "{PDFSettingsPanel|+ buttonXslFo : javax.swing.JButton\l+ tfXslFo : javax.swing.JTextField\l+ cbDefault : javax.swing.JCheckBox\l- appli : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l+ getXslFoFile() : java.lang.String\l+ actionPerformed() : void\l+ access() : net.sourceforge.ganttproject.GanttProject\l}"]
	RolesSettingsPanel[label = "{RolesSettingsPanel|+ myRolesModel : net.sourceforge.ganttproject.gui.RolesTableModel\l+ rolesTable : javax.swing.JTable\l- appli : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l}"]
	LnFSettingsPanel[label = "{LnFSettingsPanel|- cbLnf : javax.swing.JComboBox\l- cbSmallIcon : javax.swing.JCheckBox\l- cbButtonType : javax.swing.JComboBox\l- cbShowStatus : javax.swing.JCheckBox\l- appli : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ applyChanges() : boolean\l+ itemStateChanged() : void\l+ getLookAndFeel() : net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo\l+ getShowStatusBar() : boolean\l+ initialize() : void\l}"]
	HttpDocumentOutputStream[label = "{HttpDocumentOutputStream|- webdavResource : org.apache.webdav.lib.WebdavResource\l|+ Constructor() : void\l+ close() : void\l}"]
	AboutLibraryPanel[label = "{AboutLibraryPanel|...|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l}"]
	AboutPanel[label = "{AboutPanel|...|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l}"]
	AboutJavaInfosPanel[label = "{AboutJavaInfosPanel|...|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l}"]
	AboutLicensePanel[label = "{AboutLicensePanel|...|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l}"]
	AboutAuthorPanel[label = "{AboutAuthorPanel|...|+ Constructor() : void\l+ applyChanges() : boolean\l+ initialize() : void\l}"]
	GanttResourcePanelGanttTableModel[label = "{GanttResourcePanelGanttTableModel|+ data : java.util.ArrayList\l+ colums : java.util.ArrayList\l+ this0 : net.sourceforge.ganttproject.GanttResourcePanel\l|+ Constructor() : void\l+ getRowCount() : int\l+ getColumnCount() : int\l+ getValueAt() : java.lang.Object\l+ getColumnName() : java.lang.String\l+ changeLanguage() : void\l+ addRow() : void\l+ updateRow() : void\l+ deleteRow() : void\l+ moveUp() : boolean\l+ moveDown() : boolean\l+ deleteRows() : void\l+ changePeople() : void\l+ isCellEditable() : boolean\l+ reset() : void\l}"]
	HumanResource[label = "{HumanResource|- phone : java.lang.String\l- email : java.lang.String\l- function : int\l- myRole : net.sourceforge.ganttproject.roles.Role\l|+ Constructor() : void\l+ Constructor() : void\l+ setMail() : void\l+ getMail() : java.lang.String\l+ setPhone() : void\l+ getPhone() : java.lang.String\l+ setRole() : void\l+ getRole() : net.sourceforge.ganttproject.roles.Role\l}"]
	GanttResourcePanel1[label = "{GanttResourcePanel1|+ this0 : net.sourceforge.ganttproject.GanttResourcePanel\l|+ Constructor() : void\l+ mousePressed() : void\l}"]
	GanttResourcePanelGanttAdjustmentListener[label = "{GanttResourcePanelGanttAdjustmentListener|+ this0 : net.sourceforge.ganttproject.GanttResourcePanel\l|+ Constructor() : void\l+ adjustmentValueChanged() : void\l}"]
	GanttDialogPerson[label = "{GanttDialogPerson|- change : boolean\l- person : net.sourceforge.ganttproject.resource.HumanResource\l- language : net.sourceforge.ganttproject.language.GanttLanguage\l- cancelButton : javax.swing.JButton\l- efficency : javax.swing.JLabel\l- email : javax.swing.JLabel\l- emailField : javax.swing.JTextField\l- emailInput1 : javax.swing.JTextField\l- function : javax.swing.JLabel\l- functionList : javax.swing.JComboBox\l- jPanel1 : javax.swing.JPanel\l- jPanel2 : javax.swing.JPanel\l- jPanel3 : javax.swing.JPanel\l- jPanel4 : javax.swing.JPanel\l- name : javax.swing.JLabel\l- nameField : javax.swing.JTextField\l- okButton : javax.swing.JButton\l- persTitle : javax.swing.JLabel\l- phone : javax.swing.JLabel\l- phoneField : javax.swing.JTextField\l- phoneField1 : javax.swing.JTextField\l- resourceData : javax.swing.JLabel\l- unitsPerDay : javax.swing.JLabel\l|+ Constructor() : void\l+ result() : boolean\l- initComponents() : void\l- okButtonActionPerformed() : void\l- cancelButtonActionPerformed() : void\l- nameFieldActionPerformed() : void\l- emailFieldActionPerformed() : void\l- closeDialog() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l+ access() : void\l}"]
	GanttTreeGanttTreeCellEditor[label = "{GanttTreeGanttTreeCellEditor|- tree : javax.swing.JTree\l- textField : javax.swing.JTextField\l- myFocusListener : java.awt.event.FocusListener\l+ this0 : net.sourceforge.ganttproject.GanttTree\l|+ Constructor() : void\l+ getCellEditorValue() : java.lang.Object\l+ access() : javax.swing.JTextField\l}"]
	GanttTreeGanttAdjustmentListener[label = "{GanttTreeGanttAdjustmentListener|+ this0 : net.sourceforge.ganttproject.GanttTree\l|+ Constructor() : void\l+ adjustmentValueChanged() : void\l}"]
	GanttTreeGanttTreeCellRenderer[label = "{GanttTreeGanttTreeCellRenderer|+ this0 : net.sourceforge.ganttproject.GanttTree\l|+ Constructor() : void\l+ getTreeCellRendererComponent() : java.awt.Component\l+ getToolTip() : java.lang.String\l}"]
	GanttTreeGanttTreeExpansionListener[label = "{GanttTreeGanttTreeExpansionListener|+ this0 : net.sourceforge.ganttproject.GanttTree\l|+ Constructor() : void\l+ treeExpanded() : void\l+ treeCollapsed() : void\l}"]
	GanttTreeGanttTreeDropListener[label = "{GanttTreeGanttTreeDropListener|- lastPath : javax.swing.tree.TreePath\l- cueLineRect : java.awt.geom.Rectangle2D\l- ghostImageRect : java.awt.geom.Rectangle2D\l- cueLineColor : java.awt.Color\l- lastEventPoint : java.awt.Point\l- hoverTimer : javax.swing.Timer\l+ this0 : net.sourceforge.ganttproject.GanttTree\l|+ Constructor() : void\l+ dragEnter() : void\l+ dragOver() : void\l+ dropActionChanged() : void\l+ drop() : void\l+ dragExit() : void\l+ isDragAcceptable() : boolean\l+ isDropAcceptable() : boolean\l+ access() : javax.swing.tree.TreePath\l+ access() : net.sourceforge.ganttproject.GanttTree\l}"]
	GanttTreeGanttTreeModelListener[label = "{GanttTreeGanttTreeModelListener|+ this0 : net.sourceforge.ganttproject.GanttTree\l|+ Constructor() : void\l+ treeNodesChanged() : void\l+ treeNodesInserted() : void\l+ treeNodesRemoved() : void\l+ treeStructureChanged() : void\l}"]
	GanttTreeAutoscrollingTree[label = "{GanttTreeAutoscrollingTree|+ this0 : net.sourceforge.ganttproject.GanttTree\l|+ Constructor() : void\l+ getAutoscrollInsets() : java.awt.Insets\l+ autoscroll() : void\l}"]
	GanttTree1[label = "{GanttTree1|+ this0 : net.sourceforge.ganttproject.GanttTree\l|+ Constructor() : void\l+ mouseClicked() : void\l}"]
	GanttTreeGanttTransferableTreePath[label = "{GanttTreeGanttTransferableTreePath|+ TREEPATH_FLAVOR : java.awt.datatransfer.DataFlavor\l- _path : javax.swing.tree.TreePath\l- _flavors : java.awt.datatransfer.DataFlavor[]\l|+ <clinit>() : void\l+ Constructor() : void\l+ getTransferDataFlavors() : java.awt.datatransfer.DataFlavor[]\l+ isDataFlavorSupported() : boolean\l+ getTransferData() : java.lang.Object\l}"]
	RolloverAction[label = "{\<\<interface\>\>\nRolloverAction|...|+ getIconOnMouseOver() : javax.swing.Icon\l}"]
	FindPossibleDependeesAlgorithm[label = "{\<\<interface\>\>\nFindPossibleDependeesAlgorithm|...|+ run() : net.sourceforge.ganttproject.task.Task[]\l}"]
	ResourceLoadGraphicArea1[label = "{ResourceLoadGraphicArea1|+ this0 : net.sourceforge.ganttproject.ResourceLoadGraphicArea\l|+ Constructor() : void\l+ mouseWheelMoved() : void\l}"]
	ResourceLoadGraphicArea2[label = "{ResourceLoadGraphicArea2|+ this0 : net.sourceforge.ganttproject.ResourceLoadGraphicArea\l|+ Constructor() : void\l+ mouseClicked() : void\l+ mouseEntered() : void\l+ mouseExited() : void\l+ mousePressed() : void\l+ mouseReleased() : void\l}"]
	ExportException[label = "{ExportException|...|+ Constructor() : void\l+ Constructor() : void\l}"]
	AlgorithmBase[label = "{AlgorithmBase|# isEnabled : boolean\l|+ Constructor() : void\l+ setEnabled() : void\l# isEnabled() : boolean\l}"]
	MutableTaskDependencyCollection[label = "{\<\<interface\>\>\nMutableTaskDependencyCollection|...|+ clear() : void\l+ createDependency() : net.sourceforge.ganttproject.task.dependency.TaskDependency\l+ deleteDependency() : void\l}"]
	TaskDependencyCollectionMutator[label = "{\<\<interface\>\>\nTaskDependencyCollectionMutator|...|+ commit() : void\l}"]
	ColorConvertion[label = "{ColorConvertion|...|+ Constructor() : void\l+ getColor() : java.lang.String\l+ determineColor() : java.awt.Color\l}"]
	GanttOptionsGanttXMLOptionsParser[label = "{GanttOptionsGanttXMLOptionsParser|+ this0 : net.sourceforge.ganttproject.GanttOptions\l|+ Constructor() : void\l+ startElement() : void\l}"]
	GanttSplash1[label = "{GanttSplash1|+ this0 : net.sourceforge.ganttproject.GanttSplash\l|+ Constructor() : void\l+ paint() : void\l}"]
	TipsDialog1[label = "{TipsDialog1|+ this0 : net.sourceforge.ganttproject.gui.TipsDialog\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	TipsDialog2[label = "{TipsDialog2|+ this0 : net.sourceforge.ganttproject.gui.TipsDialog\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	TipsDialog3[label = "{TipsDialog3|+ this0 : net.sourceforge.ganttproject.gui.TipsDialog\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttURLChooser2[label = "{GanttURLChooser2|+ this0 : net.sourceforge.ganttproject.gui.GanttURLChooser\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttURLChooser1[label = "{GanttURLChooser1|+ this0 : net.sourceforge.ganttproject.gui.GanttURLChooser\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttXFIGSaverTextObject[label = "{GanttXFIGSaverTextObject|+ sub_type : int\l+ color : int\l+ depth : int\l+ pen_style : int\l+ font : int\l+ font_size : float\l+ angle : float\l+ font_flags : int\l+ height : float\l+ length : float\l+ x : int\l+ y : int\l+ str : java.lang.String\l+ this0 : net.sourceforge.ganttproject.io.GanttXFIGSaver\l|- Constructor() : void\l+ Constructor() : void\l}"]
	GanttXFIGSaverBoxObject[label = "{GanttXFIGSaverBoxObject|+ code : int\l+ npoints : int\l+ sub_type : int\l+ fill_color : int\l+ line_style : int\l+ thickness : int\l+ pen_color : int\l+ depth : int\l+ pen_style : int\l+ area_fill : int\l+ style_val : int\l+ join_style : int\l+ cap_style : int\l+ radius : int\l+ forward_arrow : int\l+ backward_arrow : int\l+ points : float[]\l+ this0 : net.sourceforge.ganttproject.io.GanttXFIGSaver\l|- Constructor() : void\l+ Constructor() : void\l}"]
	PDFExportData[label = "{PDFExportData|+ myStylesheet : java.lang.String\l|+ Constructor() : void\l}"]
	ProjectExportData[label = "{ProjectExportData|+ myExportSettings : net.sourceforge.ganttproject.GanttExportSettings\l+ myOutputFile : java.io.File\l+ myProjectName : java.lang.String\l+ myProjectDescription : java.lang.String\l+ myOrganization : java.lang.String\l+ myResourceManager : net.sourceforge.ganttproject.resource.HumanResourceManager\l+ myTaskHierarchyFacade : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l+ myGanttChartExportProcessor : net.sourceforge.ganttproject.export.GanttChartExportProcessor\l+ myResourceChartExportProcessor : net.sourceforge.ganttproject.export.ResourceChartExportProcessor\l+ myGanttTree : net.sourceforge.ganttproject.GanttTree\l|+ Constructor() : void\l}"]
	FontRecord[label = "{FontRecord|- myLocation : java.net.URI\l- myMetricsLocation : java.net.URI\l- myTriplets : java.util.ArrayList\l- myTTFFile : net.sourceforge.ganttproject.export.TTFFileExt\l|+ Constructor() : void\l+ Constructor() : void\l+ addTriplet() : void\l+ getFontLocation() : java.net.URI\l+ getMetricsLocation() : java.net.URI\l+ getFontTriplets() : net.sourceforge.ganttproject.export.FontTriplet[]\l+ getTTFFile() : net.sourceforge.ganttproject.export.TTFFileExt\l+ toString() : java.lang.String\l}"]
	FontTriplet[label = "{FontTriplet|- myName : java.lang.String\l- isItalic : boolean\l- isBold : boolean\l|+ Constructor() : void\l+ getName() : java.lang.String\l+ isItalic() : boolean\l+ isBold() : boolean\l}"]
	GanttChartExportData[label = "{GanttChartExportData|+ myOutputFile : java.io.File\l+ myExportSettings : net.sourceforge.ganttproject.GanttExportSettings\l+ myImageFormat : java.lang.String\l|+ Constructor() : void\l}"]
	ResourceChartExportProcessor[label = "{ResourceChartExportProcessor|...|+ Constructor() : void\l+ run() : void\l}"]
	GanttChartExportProcessor[label = "{GanttChartExportProcessor|...|+ Constructor() : void\l+ run() : void\l}"]
	GanttPDFExport[label = "{GanttPDFExport|- language : net.sourceforge.ganttproject.language.GanttLanguage\l- ourTransformerFactory : javax.xml.transform.sax.SAXTransformerFactory\l|+ <clinit>() : void\l+ Constructor() : void\l- getHexaColor() : java.lang.String\l- writeTasks() : java.lang.String\l- writeResources() : java.lang.String\l+ save() : void\l+ correct() : java.lang.String\l+ convert2PDF() : void\l- createOptions() : org.apache.fop.apps.Options\l- createConfiguration() : void\l- writeTriplets() : void\l- getTransformerFactory() : javax.xml.transform.sax.SAXTransformerFactory\l}"]
	ResourceChartExportData[label = "{ResourceChartExportData|+ myOutputFile : java.io.File\l+ myImageFormat : java.lang.String\l|+ Constructor() : void\l}"]
	RoleManagerImpl[label = "{RoleManagerImpl|+ defaultRoles : java.lang.String[]\l- myProjectRoleSet : net.sourceforge.ganttproject.roles.RoleSetImpl\l- myRoleSets : java.util.ArrayList\l+ SOFTWARE_DEVELOPMENT_ROLE_SET : net.sourceforge.ganttproject.roles.RoleSetImpl\l+ DEFAULT_ROLE_SET : net.sourceforge.ganttproject.roles.RoleSetImpl\l|+ <clinit>() : void\l+ Constructor() : void\l+ clear() : void\l+ getProjectLevelRoles() : net.sourceforge.ganttproject.roles.Role[]\l+ add() : void\l+ getRoleSets() : net.sourceforge.ganttproject.roles.RoleSet[]\l+ createRoleSet() : net.sourceforge.ganttproject.roles.RoleSet\l+ getProjectRoleSet() : net.sourceforge.ganttproject.roles.RoleSet\l+ getRoleSet() : net.sourceforge.ganttproject.roles.RoleSet\l+ getEnabledRoles() : net.sourceforge.ganttproject.roles.Role[]\l+ getDefaultRole() : net.sourceforge.ganttproject.roles.Role\l}"]
	OpenFileDialog[label = "{OpenFileDialog|- myStartDirectory : java.io.File\l- myproject : net.sourceforge.ganttproject.GanttProject\l|+ Constructor() : void\l+ Constructor() : void\l+ show() : java.io.File\l}"]
	FileFormatException[label = "{FileFormatException|...|+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l}"]
	ResourceAction[label = "{ResourceAction|- myManager : net.sourceforge.ganttproject.resource.ResourceManager\l|+ Constructor() : void\l# getManager() : net.sourceforge.ganttproject.resource.ResourceManager\l# getLanguage() : net.sourceforge.ganttproject.language.GanttLanguage\l}"]
	TestGanttRolloverButtonMouseOverHandler[label = "{TestGanttRolloverButtonMouseOverHandler|+ this0 : net.sourceforge.ganttproject.gui.TestGanttRolloverButton\l|+ Constructor() : void\l+ mouseEntered() : void\l+ mouseExited() : void\l}"]
	TaskImpl[label = "{TaskImpl|- myID : int\l- myManager : net.sourceforge.ganttproject.task.TaskManagerImpl\l- myName : java.lang.String\l- myWebLink : java.lang.String\l- isMilestone : boolean\l- myPriority : int\l- myStart : net.sourceforge.ganttproject.GanttCalendar\l- myEnd : net.sourceforge.ganttproject.GanttCalendar\l- myCompletionPercentage : int\l- myLength : net.sourceforge.ganttproject.task.TaskLength\l- isStartFixed : boolean\l- bExpand : boolean\l- myTimeUnitManager : net.sourceforge.ganttproject.time.TimeUnitManager\l- myAssignments : net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl\l- myDependencySlice : net.sourceforge.ganttproject.task.dependency.TaskDependencySlice\l- myDependencySliceAsDependant : net.sourceforge.ganttproject.task.dependency.TaskDependencySlice\l- myDependencySliceAsDependee : net.sourceforge.ganttproject.task.dependency.TaskDependencySlice\l- myEventsEnabled : boolean\l- myTaskHierarchyItem : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem\l- myShape : net.sourceforge.ganttproject.shape.ShapePaint\l- myColor : java.awt.Color\l- myNotes : java.lang.String\l|# Constructor() : void\l# Constructor() : void\l+ createMutator() : net.sourceforge.ganttproject.task.TaskMutator\l+ getTaskID() : int\l+ getName() : java.lang.String\l+ getWebLink() : java.lang.String\l+ isMilestone() : boolean\l+ getPriority() : int\l+ getStart() : net.sourceforge.ganttproject.GanttCalendar\l+ getEnd() : net.sourceforge.ganttproject.GanttCalendar\l+ getDuration() : net.sourceforge.ganttproject.task.TaskLength\l+ getCompletionPercentage() : int\l+ isStartFixed() : boolean\l+ getExpand() : boolean\l+ getShape() : net.sourceforge.ganttproject.shape.ShapePaint\l+ getColor() : java.awt.Color\l+ getNotes() : java.lang.String\l+ getPredecessors() : net.sourceforge.ganttproject.GanttTaskRelationship[]\l+ getSuccessors() : net.sourceforge.ganttproject.GanttTaskRelationship[]\l+ getAssignments() : net.sourceforge.ganttproject.task.ResourceAssignment[]\l+ getAssignmentCollection() : net.sourceforge.ganttproject.task.ResourceAssignmentCollection\l+ getSupertask() : net.sourceforge.ganttproject.task.Task\l+ getNestedTasks() : net.sourceforge.ganttproject.task.Task[]\l+ move() : void\l+ getDependencies() : net.sourceforge.ganttproject.task.dependency.TaskDependencySlice\l+ getDependenciesAsDependant() : net.sourceforge.ganttproject.task.dependency.TaskDependencySlice\l+ getDependenciesAsDependee() : net.sourceforge.ganttproject.task.dependency.TaskDependencySlice\l+ getManager() : net.sourceforge.ganttproject.task.TaskManager\l# setTaskIDHack() : void\l# getTimeUnitManager() : net.sourceforge.ganttproject.time.TimeUnitManager\l+ setName() : void\l+ setWebLink() : void\l+ setMilestone() : void\l+ setPriority() : void\l+ setStart() : void\l+ setEnd() : void\l+ setDuration() : void\l+ setCompletionPercentage() : void\l+ setStartFixed() : void\l+ setShape() : void\l+ setColor() : void\l+ setNotes() : void\l+ setExpand() : void\l+ addNotes() : void\l# enableEvents() : void\l# areEventsEnabled() : boolean\l+ shapeDefined() : boolean\l+ colorDefined() : boolean\l}"]
	GanttStatusBarProgressBarPanel[label = "{GanttStatusBarProgressBarPanel|- progressBar : javax.swing.JProgressBar\l- progressLabel : javax.swing.JLabel\l+ this0 : net.sourceforge.ganttproject.gui.GanttStatusBar\l|+ Constructor() : void\l+ setValue() : void\l+ reset() : void\l}"]
	GanttStatusBarMessagePanel[label = "{GanttStatusBarMessagePanel|+ message : javax.swing.JLabel\l+ textColor : java.awt.Color\l+ timer : int\l+ this0 : net.sourceforge.ganttproject.gui.GanttStatusBar\l|+ Constructor() : void\l+ setText() : void\l+ setText() : void\l+ clear() : void\l+ hideText() : void\l+ getTimer() : int\l}"]
	GanttDialogInfo3[label = "{GanttDialogInfo3|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogInfo\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttDialogInfo2[label = "{GanttDialogInfo2|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogInfo\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttDialogInfo1[label = "{GanttDialogInfo1|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogInfo\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttTaskPropertiesBean[label = "{GanttTaskPropertiesBean|# selectedTask : net.sourceforge.ganttproject.GanttTask\l# savePredecessors : java.util.Vector\l- tree : net.sourceforge.ganttproject.GanttTree\l- language : net.sourceforge.ganttproject.language.GanttLanguage\l- parent : javax.swing.JDialog\l- length : int\l- percentComplete : int\l- priority : int\l- start : net.sourceforge.ganttproject.GanttCalendar\l- end : net.sourceforge.ganttproject.GanttCalendar\l- bilan : boolean\l- notes : java.lang.String\l+ gbc : java.awt.GridBagConstraints\l+ flowL : java.awt.FlowLayout\l+ tabbedPane : javax.swing.JTabbedPane\l+ generalPanel : javax.swing.JPanel\l+ predecessorsPanel : javax.swing.JPanel\l+ resourcesPanel : javax.swing.JPanel\l+ notesPanel : javax.swing.JPanel\l+ firstRowPanel1 : javax.swing.JPanel\l+ nameField1 : javax.swing.JTextField\l+ durationField1 : javax.swing.JTextField\l+ nameLabel1 : javax.swing.JLabel\l+ durationLabel1 : javax.swing.JLabel\l+ lblWebLink : javax.swing.JLabel\l+ tfWebLink : javax.swing.JTextField\l+ bWebLink : javax.swing.JButton\l+ secondRowPanel1 : javax.swing.JPanel\l+ percentCompleteSlider : javax.swing.JSpinner\l+ percentCompleteLabel1 : javax.swing.JLabel\l+ priorityLabel1 : javax.swing.JLabel\l+ priorityComboBox : javax.swing.JComboBox\l+ thirdRowPanel1 : javax.swing.JPanel\l+ startDateField1 : javax.swing.JTextField\l+ finishDateField1 : javax.swing.JTextField\l+ startDateLabel1 : javax.swing.JLabel\l+ finishDateLabel1 : javax.swing.JLabel\l+ startDateButton1 : javax.swing.JButton\l+ finishDateButton1 : javax.swing.JButton\l+ lastRowPanel1 : javax.swing.JPanel\l+ webLinkPanel : javax.swing.JPanel\l+ mileStoneLabel1 : javax.swing.JLabel\l+ mileStoneCheckBox1 : javax.swing.JCheckBox\l+ colorButton : javax.swing.JButton\l+ colorSpace : javax.swing.JButton\l+ colorPanel : javax.swing.JPanel\l+ shapeComboBox : net.sourceforge.ganttproject.shape.JPaintCombo\l+ nameLabel2 : javax.swing.JLabel\l+ durationLabel2 : javax.swing.JLabel\l+ nameField2 : javax.swing.JTextField\l+ firstRowPanel2 : javax.swing.JPanel\l+ predecessorsScrollPane : javax.swing.JScrollPane\l+ nameLabelNotes : javax.swing.JLabel\l+ durationLabelNotes : javax.swing.JLabel\l+ nameFieldNotes : javax.swing.JTextField\l+ durationFieldNotes : javax.swing.JTextField\l+ scrollPaneNotes : javax.swing.JScrollPane\l+ noteAreaNotes : javax.swing.JTextArea\l+ firstRowPanelNotes : javax.swing.JPanel\l+ secondRowPanelNotes : javax.swing.JPanel\l+ okButton : javax.swing.JButton\l+ cancelButton : javax.swing.JButton\l+ southPanel : javax.swing.JPanel\l- myDependenciesPanel : net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel\l- myAllocationsPanel : net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel\l- isStartFixed : boolean\l- myHumanResourceManager : net.sourceforge.ganttproject.resource.HumanResourceManager\l|- addUsingGBL() : void\l- setFirstRow() : void\l- constructGeneralPanel() : void\l+ addActionListener() : void\l+ changeNameOfTask() : void\l- constructPredecessorsPanel() : void\l- constructResourcesPanel() : void\l- constructNotesPanel() : void\l- constructSouthPanel() : void\l+ Constructor() : void\l+ init() : void\l+ getReturnTask() : net.sourceforge.ganttproject.task.Task\l+ setSelectedTask() : void\l+ setTree() : void\l+ isBilan() : boolean\l+ getEnd() : net.sourceforge.ganttproject.GanttCalendar\l+ getLength() : int\l+ fireDurationChanged() : void\l+ changeLength() : void\l+ getNotes() : java.lang.String\l+ getTaskName() : java.lang.String\l+ getWebLink() : java.lang.String\l+ getPercentComplete() : int\l+ getPriority() : int\l+ setStartFixed() : void\l+ getStart() : net.sourceforge.ganttproject.GanttCalendar\l+ setStart() : void\l+ setEnd() : void\l+ access() : javax.swing.JDialog\l+ access() : net.sourceforge.ganttproject.language.GanttLanguage\l}"]
	GanttDialogDate[label = "{GanttDialogDate|- language : net.sourceforge.ganttproject.language.GanttLanguage\l- panel : net.sourceforge.ganttproject.gui.GanttPanelDate\l- jbPrevMonth : javax.swing.JButton\l- jbNextMonth : javax.swing.JButton\l- jtDate : javax.swing.JFormattedTextField\l- jbPrevYear : javax.swing.JButton\l- jbNextYear : javax.swing.JButton\l- myFixedDate : boolean\l|+ Constructor() : void\l+ Constructor() : void\l+ getDate() : net.sourceforge.ganttproject.GanttCalendar\l+ access() : net.sourceforge.ganttproject.gui.GanttPanelDate\l+ access() : void\l}"]
	GregorianCalendar[label = "{GregorianCalendar|...|+ add() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l+ Constructor() : void\l}"]
	GanttPanelDate[label = "{GanttPanelDate|- language : net.sourceforge.ganttproject.language.GanttLanguage\l- ddd : net.sourceforge.ganttproject.gui.GanttPanelDateGanttDialogDateDay\l- save : net.sourceforge.ganttproject.GanttCalendar\l- jbPrevMonth : javax.swing.JButton\l- jbNextMonth : javax.swing.JButton\l- jtDate : javax.swing.JFormattedTextField\l- jbPrevYear : javax.swing.JButton\l- jbNextYear : javax.swing.JButton\l|+ Constructor() : void\l+ cancel() : void\l- changeDate() : void\l- rollDate() : void\l+ getDate() : net.sourceforge.ganttproject.GanttCalendar\l+ access() : void\l+ access() : void\l+ access() : javax.swing.JFormattedTextField\l}"]
	GanttDialogCalendar2[label = "{GanttDialogCalendar2|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogCalendar\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttDialogCalendar1[label = "{GanttDialogCalendar1|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogCalendar\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	ShapeConstants[label = "{ShapeConstants|+ TRANSPARENT : net.sourceforge.ganttproject.shape.ShapePaint\l+ DEFAULT : net.sourceforge.ganttproject.shape.ShapePaint\l+ CROSS : net.sourceforge.ganttproject.shape.ShapePaint\l+ VERT : net.sourceforge.ganttproject.shape.ShapePaint\l+ HORZ : net.sourceforge.ganttproject.shape.ShapePaint\l+ GRID : net.sourceforge.ganttproject.shape.ShapePaint\l+ ROUND : net.sourceforge.ganttproject.shape.ShapePaint\l+ NW_TRIANGLE : net.sourceforge.ganttproject.shape.ShapePaint\l+ NE_TRIANGLE : net.sourceforge.ganttproject.shape.ShapePaint\l+ SW_TRIANGLE : net.sourceforge.ganttproject.shape.ShapePaint\l+ SE_TRIANGLE : net.sourceforge.ganttproject.shape.ShapePaint\l+ DIAMOND : net.sourceforge.ganttproject.shape.ShapePaint\l+ DOTS : net.sourceforge.ganttproject.shape.ShapePaint\l+ DOT : net.sourceforge.ganttproject.shape.ShapePaint\l+ SLASH : net.sourceforge.ganttproject.shape.ShapePaint\l+ BACKSLASH : net.sourceforge.ganttproject.shape.ShapePaint\l+ THICK_VERT : net.sourceforge.ganttproject.shape.ShapePaint\l+ THICK_HORZ : net.sourceforge.ganttproject.shape.ShapePaint\l+ THICK_GRID : net.sourceforge.ganttproject.shape.ShapePaint\l+ THICK_SLASH : net.sourceforge.ganttproject.shape.ShapePaint\l+ THICK_BACKSLASH : net.sourceforge.ganttproject.shape.ShapePaint\l+ PATTERN_LIST : net.sourceforge.ganttproject.shape.ShapePaint[]\l|+ <clinit>() : void\l+ Constructor() : void\l}"]
	GanttGraphicAreaArrow[label = "{GanttGraphicAreaArrow|- x1 : int\l- x2 : int\l- y1 : int\l- y2 : int\l- draw : boolean\l+ this0 : net.sourceforge.ganttproject.GanttGraphicArea\l|+ Constructor() : void\l+ Constructor() : void\l+ setDraw() : void\l+ getDraw() : boolean\l+ changePoint2() : void\l+ paint() : void\l}"]
	GanttGraphicAreaNotes[label = "{GanttGraphicAreaNotes|+ n : java.lang.String\l+ x : int\l+ y : int\l+ draw : boolean\l+ this0 : net.sourceforge.ganttproject.GanttGraphicArea\l|+ Constructor() : void\l+ Constructor() : void\l+ setDraw() : void\l+ getDraw() : boolean\l+ setX() : void\l+ setString() : void\l+ paint() : void\l}"]
	ChartHeader[label = "{\<\<interface\>\>\nChartHeader|...|+ paint() : void\l}"]
	GanttGraphicArea4[label = "{GanttGraphicArea4|+ this0 : net.sourceforge.ganttproject.GanttGraphicArea\l|+ Constructor() : void\l+ mouseDragged() : void\l+ mouseMoved() : void\l}"]
	GanttGraphicArea3[label = "{GanttGraphicArea3|+ this0 : net.sourceforge.ganttproject.GanttGraphicArea\l|+ Constructor() : void\l+ mouseClicked() : void\l+ mouseEntered() : void\l+ mouseExited() : void\l+ mousePressed() : void\l+ mouseReleased() : void\l}"]
	GanttGraphicArea2[label = "{GanttGraphicArea2|+ this0 : net.sourceforge.ganttproject.GanttGraphicArea\l|+ Constructor() : void\l+ mouseWheelMoved() : void\l}"]
	GanttGraphicArea1[label = "{GanttGraphicArea1|+ this0 : net.sourceforge.ganttproject.GanttGraphicArea\l|+ Constructor() : void\l+ taskScheduleChanged() : void\l+ dependencyAdded() : void\l- adjustDependencies() : void\l}"]
	TimeUnitFunctionOfDate[label = "{\<\<interface\>\>\nTimeUnitFunctionOfDate|...|+ createTimeUnit() : net.sourceforge.ganttproject.time.TimeUnit\l}"]
	GanttGraphicAreaGanttPaintParam[label = "{GanttGraphicAreaGanttPaintParam|+ x1 : int\l+ x2 : int\l+ x3 : int\l+ name : java.lang.String\l+ taskID : int\l+ y : int\l+ type : int\l+ this0 : net.sourceforge.ganttproject.GanttGraphicArea\l|+ Constructor() : void\l+ toString() : java.lang.String\l}"]
	ChartModelImpl[label = "{ChartModelImpl|- myChartHeader : net.sourceforge.ganttproject.chart.ChartHeader\l- myChartUIConfiguration : net.sourceforge.ganttproject.chart.ChartUIConfiguration\l- myBounds : java.awt.Dimension\l- myStartDate : java.util.Date\l- myAtomUnitPixels : int\l- myTimeFrames : net.sourceforge.ganttproject.time.TimeFrame[]\l- myTimeUnitStack : net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack\l- myTopUnit : net.sourceforge.ganttproject.time.TimeUnit\l- myBottomUnit : net.sourceforge.ganttproject.time.TimeUnit\l|+ Constructor() : void\l+ getChartHeader() : net.sourceforge.ganttproject.chart.ChartHeader\l+ getChartUIConfiguration() : net.sourceforge.ganttproject.chart.ChartUIConfiguration\l+ setBounds() : void\l+ setStartDate() : void\l+ setBottomUnitWidth() : void\l+ setTopTimeUnit() : void\l+ setBottomTimeUnit() : void\l+ getBounds() : java.awt.Dimension\l+ getTimeFrames() : net.sourceforge.ganttproject.time.TimeFrame[]\l+ getBottomUnitWidth() : int\l- calculateTimeFrames() : net.sourceforge.ganttproject.time.TimeFrame[]\l}"]
	GregorianTimeUnitStack[label = "{GregorianTimeUnitStack|- ourGraph : net.sourceforge.ganttproject.time.TimeUnitGraph\l- DAY_FRAMER : net.sourceforge.ganttproject.time.DateFrameable\l- MONTH_FRAMER : net.sourceforge.ganttproject.time.DateFrameable\l- HOUR_FRAMER : net.sourceforge.ganttproject.time.DateFrameable\l- MINUTE_FRAMER : net.sourceforge.ganttproject.time.DateFrameable\l- SECOND_FRAMER : net.sourceforge.ganttproject.time.DateFrameable\l+ SECOND : net.sourceforge.ganttproject.time.TimeUnit\l+ MINUTE : net.sourceforge.ganttproject.time.TimeUnit\l+ HOUR : net.sourceforge.ganttproject.time.TimeUnit\l+ DAY : net.sourceforge.ganttproject.time.TimeUnit\l+ MONTH : net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate\l- ATOM_UNIT : net.sourceforge.ganttproject.time.TimeUnit\l- ourUnit2field : java.util.HashMap\l|+ <clinit>() : void\l+ Constructor() : void\l+ createTimeFrame() : net.sourceforge.ganttproject.time.TimeFrame\l}"]
	ChartModel[label = "{\<\<interface\>\>\nChartModel|...|+ getChartHeader() : net.sourceforge.ganttproject.chart.ChartHeader\l+ setBounds() : void\l+ setStartDate() : void\l+ setBottomUnitWidth() : void\l+ setTopTimeUnit() : void\l+ setBottomTimeUnit() : void\l}"]
	TaskHierarchyManagerImpl[label = "{TaskHierarchyManagerImpl|- myRootItem : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem\l|+ Constructor() : void\l+ getRootItem() : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem\l+ createItem() : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem\l}"]
	TaskDependencyCollectionImpl[label = "{TaskDependencyCollectionImpl|- myDependencies : java.util.Set\l- mySearchKey2dependency : java.util.SortedMap\l- myEventDispatcher : net.sourceforge.ganttproject.task.dependency.EventDispatcher\l|+ Constructor() : void\l+ getDependencies() : net.sourceforge.ganttproject.task.dependency.TaskDependency[]\l+ getDependencies() : net.sourceforge.ganttproject.task.dependency.TaskDependency[]\l+ getDependenciesAsDependant() : net.sourceforge.ganttproject.task.dependency.TaskDependency[]\l+ getDependenciesAsDependee() : net.sourceforge.ganttproject.task.dependency.TaskDependency[]\l+ createDependency() : net.sourceforge.ganttproject.task.dependency.TaskDependency\l+ deleteDependency() : void\l+ clear() : void\l+ createMutator() : net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionMutator\l- auxCreateDependency() : net.sourceforge.ganttproject.task.dependency.TaskDependency\l+ addDependency() : void\l+ delete() : void\l+ doClear() : void\l+ access() : net.sourceforge.ganttproject.task.dependency.TaskDependency\l}"]
	FinishFinishConstraintImpl[label = "{FinishFinishConstraintImpl|...|+ Constructor() : void\l+ getCollision() : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraintCollision\l}"]
	TaskLengthImpl[label = "{TaskLengthImpl|- myUnit : net.sourceforge.ganttproject.time.TimeUnit\l- myCount : long\l|+ Constructor() : void\l+ getLength() : long\l+ getTimeUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ setLength() : void\l+ getLength() : long\l+ toString() : java.lang.String\l}"]
	TaskDependencyEvent[label = "{TaskDependencyEvent|- myDependency : net.sourceforge.ganttproject.task.dependency.TaskDependency\l|+ Constructor() : void\l+ getDependency() : net.sourceforge.ganttproject.task.dependency.TaskDependency\l}"]
	TimeUnitManagerImpl[label = "{TimeUnitManagerImpl|- myUnits : net.sourceforge.ganttproject.time.TimeUnit[]\l- myTimeGraph : net.sourceforge.ganttproject.time.TimeUnitGraph\l|+ Constructor() : void\l+ getTimeUnit() : net.sourceforge.ganttproject.time.TimeUnit\l}"]
	StartStartConstraintImpl[label = "{StartStartConstraintImpl|...|+ Constructor() : void\l+ getCollision() : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraintCollision\l}"]
	TaskManagerImplFacadeFactoryImpl[label = "{TaskManagerImplFacadeFactoryImpl|+ this0 : net.sourceforge.ganttproject.task.TaskManagerImpl\l|- Constructor() : void\l+ createFacede() : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l+ Constructor() : void\l}"]
	TaskScheduleEvent[label = "{TaskScheduleEvent|- myOldStartDate : net.sourceforge.ganttproject.GanttCalendar\l- myOldFinishDate : net.sourceforge.ganttproject.GanttCalendar\l- myNewStartDate : net.sourceforge.ganttproject.GanttCalendar\l- myNewFinishDate : net.sourceforge.ganttproject.GanttCalendar\l|+ Constructor() : void\l+ getOldStartDate() : net.sourceforge.ganttproject.GanttCalendar\l+ getOldFinishDate() : net.sourceforge.ganttproject.GanttCalendar\l+ getNewStartDate() : net.sourceforge.ganttproject.GanttCalendar\l+ getNewFinishDate() : net.sourceforge.ganttproject.GanttCalendar\l}"]
	TaskManagerImplFacadeImpl[label = "{TaskManagerImplFacadeImpl|- myRoot : net.sourceforge.ganttproject.task.Task\l+ this0 : net.sourceforge.ganttproject.task.TaskManagerImpl\l|+ Constructor() : void\l+ getNestedTasks() : net.sourceforge.ganttproject.task.Task[]\l+ getRoot() : net.sourceforge.ganttproject.task.Task\l+ getContainer() : net.sourceforge.ganttproject.task.Task\l}"]
	TaskHierarchyEvent[label = "{TaskHierarchyEvent|- myNewContainer : net.sourceforge.ganttproject.task.Task\l- myTask : net.sourceforge.ganttproject.task.Task\l- myOldContainer : net.sourceforge.ganttproject.task.Task\l|+ Constructor() : void\l+ getTask() : net.sourceforge.ganttproject.task.Task\l+ getOldContainer() : net.sourceforge.ganttproject.task.Task\l+ getNewContainer() : net.sourceforge.ganttproject.task.Task\l}"]
	FinishStartConstraintImpl[label = "{FinishStartConstraintImpl|...|+ Constructor() : void\l+ getCollision() : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraintCollision\l}"]
	StartFinishConstraintImpl[label = "{StartFinishConstraintImpl|...|+ Constructor() : void\l+ getCollision() : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraintCollision\l}"]
	TaskManagerImpl2[label = "{TaskManagerImpl2|+ this0 : net.sourceforge.ganttproject.task.TaskManagerImpl\l- valfactory : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacadeFactory\l|+ Constructor() : void\l# createContainmentFacade() : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l}"]
	TaskManagerImpl1[label = "{TaskManagerImpl1|+ this0 : net.sourceforge.ganttproject.task.TaskManagerImpl\l|+ Constructor() : void\l+ fireDependencyAdded() : void\l+ fireDependencyRemoved() : void\l}"]
	TaskManagerImpl6[label = "{TaskManagerImpl6|...|+ Constructor() : void\l+ getDefaultColor() : java.awt.Color\l}"]
	TaskManagerImpl5[label = "{TaskManagerImpl5|+ this0 : net.sourceforge.ganttproject.task.TaskManagerImpl\l- valfactory : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacadeFactory\l|+ Constructor() : void\l# createContainmentFacade() : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l}"]
	TaskManagerImpl4[label = "{TaskManagerImpl4|+ this0 : net.sourceforge.ganttproject.task.TaskManagerImpl\l- valfactory : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacadeFactory\l|+ Constructor() : void\l# createContainmentFacade() : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l}"]
	TaskManagerImpl3[label = "{TaskManagerImpl3|+ this0 : net.sourceforge.ganttproject.task.TaskManagerImpl\l- valfactory : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacadeFactory\l|+ Constructor() : void\l# createContainmentFacade() : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l}"]
	EventDispatcher[label = "{\<\<interface\>\>\nEventDispatcher|...|+ fireDependencyAdded() : void\l+ fireDependencyRemoved() : void\l}"]
	TaskDependencyConstraintCollision[label = "{\<\<interface\>\>\nTaskDependencyConstraintCollision|+ NO_VARIATION : int\l+ START_EARLIER_VARIATION : int\l+ START_LATER_VARIATION : int\l|+ getAcceptableStart() : net.sourceforge.ganttproject.GanttCalendar\l+ getVariation() : int\l+ isActive() : boolean\l}"]
	MutableResourceAssignmentCollection[label = "{\<\<interface\>\>\nMutableResourceAssignmentCollection|...|+ addAssignment() : net.sourceforge.ganttproject.task.ResourceAssignment\l+ deleteAssignment() : void\l}"]
	ResourceAssignmentMutator[label = "{\<\<interface\>\>\nResourceAssignmentMutator|...|+ commit() : void\l}"]
	TaskDependencyConstraintDefaultCollision[label = "{TaskDependencyConstraintDefaultCollision|- myAcceptableStart : net.sourceforge.ganttproject.GanttCalendar\l- myVariation : int\l- isActive : boolean\l|+ Constructor() : void\l+ getAcceptableStart() : net.sourceforge.ganttproject.GanttCalendar\l+ getVariation() : int\l+ isActive() : boolean\l}"]
	TextFormatter[label = "{\<\<interface\>\>\nTextFormatter|...|+ format() : java.lang.String\l}"]
	WizardImpl[label = "{WizardImpl|- myPages : java.util.ArrayList\l- myCurrentPage : int\l- myPagesContainer : javax.swing.JPanel\l- myCardLayout : java.awt.CardLayout\l- myNextAction : net.sourceforge.ganttproject.gui.projectwizard.WizardImplNextAction\l- myBackAction : net.sourceforge.ganttproject.gui.projectwizard.WizardImplBackAction\l|+ Constructor() : void\l+ nextPage() : void\l+ backPage() : void\l+ show() : void\l- adjustButtonState() : void\l- createNextButton() : javax.swing.JButton\l- createBackButton() : javax.swing.JButton\l- createOkButton() : javax.swing.JButton\l# addPage() : void\l- getCurrentPage() : net.sourceforge.ganttproject.gui.projectwizard.WizardPage\l+ access() : net.sourceforge.ganttproject.gui.projectwizard.WizardPage\l}"]
	RoleSetPage[label = "{RoleSetPage|- myI18N : net.sourceforge.ganttproject.gui.projectwizard.I18N\l- myListModel : net.sourceforge.ganttproject.gui.projectwizard.RoleSetPageRoleSetListModel\l|+ Constructor() : void\l+ getTitle() : java.lang.String\l+ getComponent() : java.awt.Component\l+ setActive() : void\l+ access() : net.sourceforge.ganttproject.gui.projectwizard.RoleSetPageRoleSetListModel\l}"]
	ProjectNamePage[label = "{ProjectNamePage|- myI18N : net.sourceforge.ganttproject.gui.projectwizard.I18N\l- myProjectSettingsPanel : net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel\l|+ Constructor() : void\l+ getTitle() : java.lang.String\l+ getComponent() : java.awt.Component\l+ setActive() : void\l}"]
	WizardPage[label = "{\<\<interface\>\>\nWizardPage|...|+ getTitle() : java.lang.String\l+ getComponent() : java.awt.Component\l+ setActive() : void\l}"]
	GeneralDialogSettinsDefaultTreeCellRenderer[label = "{GeneralDialogSettinsDefaultTreeCellRenderer|+ this0 : net.sourceforge.ganttproject.gui.GeneralDialog\l|+ Constructor() : void\l+ getTreeCellRendererComponent() : java.awt.Component\l}"]
	HTMLSettingsPanel1[label = "{HTMLSettingsPanel1|+ this0 : net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	TopPanel1[label = "{TopPanel1|+ this0 : net.sourceforge.ganttproject.gui.options.TopPanel\l|+ Constructor() : void\l+ paint() : void\l}"]
	TopPanelmyIconPanel[label = "{TopPanelmyIconPanel|+ icon : javax.swing.Icon\l+ this0 : net.sourceforge.ganttproject.gui.options.TopPanel\l|+ Constructor() : void\l+ paintComponent() : void\l+ getPreferredSize() : java.awt.Dimension\l}"]
	ColorSettingsPanel3[label = "{ColorSettingsPanel3|+ this0 : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel\l- valcolorChooserTitle : java.lang.String\l|+ Constructor() : void\l+ actionPerformed() : void\l+ access() : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel\l}"]
	ColorSettingsPanel2[label = "{ColorSettingsPanel2|+ this0 : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel\l- valcolorChooserTitle : java.lang.String\l|+ Constructor() : void\l+ actionPerformed() : void\l+ access() : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel\l}"]
	ColorSettingsPanel1[label = "{ColorSettingsPanel1|+ this0 : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel\l- valcolorChooserTitle : java.lang.String\l|+ Constructor() : void\l+ actionPerformed() : void\l+ access() : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel\l}"]
	ProjectSettingsPanel1[label = "{ProjectSettingsPanel1|+ this0 : net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	PDFSettingsPanel1[label = "{PDFSettingsPanel1|+ this0 : net.sourceforge.ganttproject.gui.options.PDFSettingsPanel\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	RolesTableModel[label = "{RolesTableModel|+ columnNames : java.lang.String[]\l+ data : java.lang.Object[][]\l- myRoleManager : net.sourceforge.ganttproject.roles.RoleManager\l|+ Constructor() : void\l+ getColumnCount() : int\l+ getRowCount() : int\l+ getColumnName() : java.lang.String\l+ getValueAt() : java.lang.Object\l+ isCellEditable() : boolean\l+ setValueAt() : void\l+ getRoleManager() : net.sourceforge.ganttproject.roles.RoleManager\l+ hasChanges() : boolean\l+ applyChanges() : void\l}"]
	AboutLibraryPanelLibraryFieldTableModel[label = "{AboutLibraryPanelLibraryFieldTableModel|- language : net.sourceforge.ganttproject.language.GanttLanguage\l+ columnNames : java.lang.String[]\l+ columnClasses : java.lang.Class[]\l+ data : java.util.Vector\l+ this0 : net.sourceforge.ganttproject.gui.about.AboutLibraryPanel\l|+ Constructor() : void\l+ addField() : void\l+ getColumnCount() : int\l+ getRowCount() : int\l+ getColumnName() : java.lang.String\l+ getColumnClass() : java.lang.Class\l+ getValueAt() : java.lang.Object\l+ isCellEditable() : boolean\l}"]
	AboutLibraryPanelLibraryInfo[label = "{AboutLibraryPanelLibraryInfo|- libName : java.lang.String\l- libWeb : java.lang.String\l- libComment : java.lang.String\l+ this0 : net.sourceforge.ganttproject.gui.about.AboutLibraryPanel\l|+ Constructor() : void\l+ getName() : java.lang.String\l+ getWeb() : java.lang.String\l+ getComment() : java.lang.String\l}"]
	AboutPanel2[label = "{AboutPanel2|+ this0 : net.sourceforge.ganttproject.gui.about.AboutPanel\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	AboutPanel1[label = "{AboutPanel1|+ this0 : net.sourceforge.ganttproject.gui.about.AboutPanel\l|+ Constructor() : void\l+ paint() : void\l}"]
	AboutJavaInfosPanelSystemInfo[label = "{AboutJavaInfosPanelSystemInfo|- name : java.lang.String\l- value : java.lang.String\l+ this0 : net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel\l|+ Constructor() : void\l+ getName() : java.lang.String\l+ getValue() : java.lang.String\l}"]
	AboutJavaInfosPanelAboutFieldTableModel[label = "{AboutJavaInfosPanelAboutFieldTableModel|- language : net.sourceforge.ganttproject.language.GanttLanguage\l+ columnNames : java.lang.String[]\l+ columnClasses : java.lang.Class[]\l+ data : java.util.Vector\l+ this0 : net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel\l|+ Constructor() : void\l+ addField() : void\l+ getColumnCount() : int\l+ getRowCount() : int\l+ getColumnName() : java.lang.String\l+ getColumnClass() : java.lang.Class\l+ getValueAt() : java.lang.Object\l+ isCellEditable() : boolean\l}"]
	AboutAuthorPanelAuthorsFieldTableModel[label = "{AboutAuthorPanelAuthorsFieldTableModel|- language : net.sourceforge.ganttproject.language.GanttLanguage\l+ columnNames : java.lang.String[]\l+ columnClasses : java.lang.Class[]\l+ data : java.util.Vector\l+ this0 : net.sourceforge.ganttproject.gui.about.AboutAuthorPanel\l|+ Constructor() : void\l+ addField() : void\l+ getColumnCount() : int\l+ getRowCount() : int\l+ getColumnName() : java.lang.String\l+ getColumnClass() : java.lang.Class\l+ getValueAt() : java.lang.Object\l+ isCellEditable() : boolean\l}"]
	AboutAuthorPanelAuthorsInfo[label = "{AboutAuthorPanelAuthorsInfo|- name : java.lang.String\l- mail : java.lang.String\l+ this0 : net.sourceforge.ganttproject.gui.about.AboutAuthorPanel\l|+ Constructor() : void\l+ getName() : java.lang.String\l+ getMail() : java.lang.String\l}"]
	GanttCellListRenderer[label = "{GanttCellListRenderer|...|+ Constructor() : void\l+ getListCellRendererComponent() : java.awt.Component\l}"]
	GanttDialogPerson5[label = "{GanttDialogPerson5|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogPerson\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttDialogPerson4[label = "{GanttDialogPerson4|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogPerson\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttDialogPerson1[label = "{GanttDialogPerson1|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogPerson\l|+ Constructor() : void\l+ windowClosing() : void\l}"]
	GanttDialogPerson3[label = "{GanttDialogPerson3|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogPerson\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttDialogPerson2[label = "{GanttDialogPerson2|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogPerson\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttTreeGanttTreeCellEditor1[label = "{GanttTreeGanttTreeCellEditor1|+ this1 : net.sourceforge.ganttproject.GanttTreeGanttTreeCellEditor\l|+ Constructor() : void\l+ focusGained() : void\l}"]
	GanttTreeGanttTreeDropListener1[label = "{GanttTreeGanttTreeDropListener1|+ this1 : net.sourceforge.ganttproject.GanttTreeGanttTreeDropListener\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	JDKFontLocator[label = "{JDKFontLocator|- myFontMetricsStorage : net.sourceforge.ganttproject.export.FontMetricsStorage\l|+ Constructor() : void\l+ getFontRecords() : net.sourceforge.ganttproject.export.FontRecord[]\l- populateWithTriplets() : void\l}"]
	TTFFileExt[label = "{TTFFileExt|- myFile : java.io.File\l- myAwtFont : java.awt.Font\l|+ Constructor() : void\l+ isItalic() : boolean\l+ isBold() : boolean\l+ getFile() : java.io.File\l- getAwtFont() : java.awt.Font\l}"]
	FontMetricsStorage[label = "{FontMetricsStorage|...|+ Constructor() : void\l+ getFontMetricsURI() : java.net.URI\l}"]
	RoleSetImpl[label = "{RoleSetImpl|- myName : java.lang.String\l- myRoles : java.util.ArrayList\l- isEnabled : boolean\l|+ Constructor() : void\l+ Constructor() : void\l+ getName() : java.lang.String\l+ getRoles() : net.sourceforge.ganttproject.roles.Role[]\l+ createRole() : net.sourceforge.ganttproject.roles.Role\l+ deleteRole() : void\l+ findRole() : net.sourceforge.ganttproject.roles.Role\l+ isEnabled() : boolean\l+ toString() : java.lang.String\l+ setEnabled() : void\l+ isEmpty() : boolean\l+ clear() : void\l}"]
	ResourceAssignmentCollectionImpl[label = "{ResourceAssignmentCollectionImpl|- myAssignments : java.util.Map\l- myTask : net.sourceforge.ganttproject.task.TaskImpl\l|+ Constructor() : void\l- Constructor() : void\l+ getAssignments() : net.sourceforge.ganttproject.task.ResourceAssignment[]\l+ getAssignment() : net.sourceforge.ganttproject.task.ResourceAssignment\l+ createMutator() : net.sourceforge.ganttproject.task.ResourceAssignmentMutator\l+ copy() : net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl\l+ addAssignment() : net.sourceforge.ganttproject.task.ResourceAssignment\l+ deleteAssignment() : void\l- auxAddAssignment() : net.sourceforge.ganttproject.task.ResourceAssignment\l- addAssignment() : void\l- getTask() : net.sourceforge.ganttproject.task.Task\l+ access() : net.sourceforge.ganttproject.task.Task\l+ access() : java.util.Map\l+ access() : net.sourceforge.ganttproject.task.ResourceAssignment\l}"]
	TaskHierarchyItem[label = "{TaskHierarchyItem|- myTask : net.sourceforge.ganttproject.task.Task\l- myContainerItem : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem\l- myFirstNestedItem : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem\l- myNextSiblingItem : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem\l- EMPTY_ARRAY : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem[]\l|+ <clinit>() : void\l+ Constructor() : void\l+ getTask() : net.sourceforge.ganttproject.task.Task\l+ getContainerItem() : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem\l+ getNestedItems() : net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem[]\l+ addNestedItem() : void\l+ delete() : void\l}"]
	TaskDependencySliceAsDependant[label = "{TaskDependencySliceAsDependant|...|+ toArray() : net.sourceforge.ganttproject.task.dependency.TaskDependency[]\l+ Constructor() : void\l}"]
	TaskDependencySliceImpl[label = "{TaskDependencySliceImpl|- myTask : net.sourceforge.ganttproject.task.Task\l- myDependencyCollection : net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection\l|+ Constructor() : void\l+ toArray() : net.sourceforge.ganttproject.task.dependency.TaskDependency[]\l+ clear() : void\l# getTask() : net.sourceforge.ganttproject.task.Task\l# getDependencyCollection() : net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection\l}"]
	TaskImplMutatorImpl[label = "{TaskImplMutatorImpl|- myCommands : java.util.List\l+ this0 : net.sourceforge.ganttproject.task.TaskImpl\l|- Constructor() : void\l+ commit() : void\l+ setName() : void\l+ setMilestone() : void\l+ setPriority() : void\l+ setStart() : void\l+ setEnd() : void\l+ setDuration() : void\l+ setExpand() : void\l+ setCompletionPercentage() : void\l+ setStartFixed() : void\l+ setShape() : void\l+ setColor() : void\l+ setNotes() : void\l+ addNotes() : void\l+ Constructor() : void\l+ access() : net.sourceforge.ganttproject.task.TaskImpl\l}"]
	TaskDependencySliceAsDependee[label = "{TaskDependencySliceAsDependee|...|+ toArray() : net.sourceforge.ganttproject.task.dependency.TaskDependency[]\l+ Constructor() : void\l}"]
	GanttStatusBarMessagePanel1[label = "{GanttStatusBarMessagePanel1|+ this1 : net.sourceforge.ganttproject.gui.GanttStatusBarMessagePanel\l|+ Constructor() : void\l+ paint() : void\l}"]
	JPaintCombo[label = "{JPaintCombo|- myList : java.awt.Paint[]\l|+ Constructor() : void\l+ getSelectedPaint() : java.awt.Paint\l}"]
	TaskDependenciesPanel[label = "{TaskDependenciesPanel|# language : net.sourceforge.ganttproject.language.GanttLanguage\l- gbc : java.awt.GridBagConstraints\l- predecessorsPanel : javax.swing.JPanel\l- predecessorsScrollPane : javax.swing.JScrollPane\l- predecessorsTable : javax.swing.JTable\l- myTaskManager : net.sourceforge.ganttproject.task.TaskManager\l- myTableModel : net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel\l- CONSTRAINTS : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint[]\l|+ <clinit>() : void\l+ Constructor() : void\l+ getComponent() : javax.swing.JPanel\l+ getTableModel() : net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel\l# constructPredecessorsPanel() : void\l# setUpPredecessorComboColumn() : void\l# setUpTypeComboColumn() : void\l+ getTable() : javax.swing.JTable\l+ durationChanged() : void\l+ nameChanged() : void\l+ access() : javax.swing.JTable\l+ access() : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint[]\l}"]
	TaskAllocationsPanel[label = "{TaskAllocationsPanel|- resourcesPanel : javax.swing.JPanel\l- myResourcesTableModel : net.sourceforge.ganttproject.gui.ResourcesTableModel\l- resourcesTable : javax.swing.JTable\l- myHRManager : net.sourceforge.ganttproject.resource.HumanResourceManager\l- resourcesScrollPane : javax.swing.JScrollPane\l|+ Constructor() : void\l+ getComponent() : javax.swing.JPanel\l- constructResourcesPanel() : void\l+ getTableModel() : net.sourceforge.ganttproject.gui.ResourcesTableModel\l- setUpResourcesComboColumn() : void\l+ durationChanged() : void\l+ nameChanged() : void\l+ access() : javax.swing.JTable\l}"]
	GanttTaskPropertiesBean5[label = "{GanttTaskPropertiesBean5|+ this0 : net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean\l|+ Constructor() : void\l+ stateChanged() : void\l}"]
	GanttTaskPropertiesBean3[label = "{GanttTaskPropertiesBean3|+ this0 : net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttTaskPropertiesBean4[label = "{GanttTaskPropertiesBean4|+ this0 : net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttTaskPropertiesBean1[label = "{GanttTaskPropertiesBean1|+ this0 : net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean\l- valcolorChooserTitle : java.lang.String\l|+ Constructor() : void\l+ actionPerformed() : void\l+ access() : net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean\l}"]
	GanttTaskPropertiesBean2[label = "{GanttTaskPropertiesBean2|+ this0 : net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	ResourcesTableModel[label = "{ResourcesTableModel|+ columnNames : java.lang.String[]\l- myAssignmentCollection : net.sourceforge.ganttproject.task.ResourceAssignmentCollection\l- myAssignments : java.util.List\l- MAX_ROW_COUNT : int\l- myMutator : net.sourceforge.ganttproject.task.ResourceAssignmentMutator\l|+ Constructor() : void\l+ getColumnCount() : int\l+ getRowCount() : int\l+ getColumnName() : java.lang.String\l+ getValueAt() : java.lang.Object\l+ getColumnClass() : java.lang.Class\l+ isCellEditable() : boolean\l+ setValueAt() : void\l- updateAssignment() : void\l- createAssignment() : void\l+ commit() : void\l}"]
	DependencyTableModel[label = "{DependencyTableModel|+ columnNames : java.lang.String[]\l- myDependencies : java.util.List\l- myMutator : net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionMutator\l- myTask : net.sourceforge.ganttproject.task.Task\l|+ Constructor() : void\l+ commit() : void\l+ getColumnCount() : int\l+ getRowCount() : int\l+ getColumnName() : java.lang.String\l+ getValueAt() : java.lang.Object\l+ isCellEditable() : boolean\l+ setValueAt() : void\l- updateDependency() : void\l- createDependency() : void\l}"]
	GanttDialogDate1[label = "{GanttDialogDate1|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogDate\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttDialogDate2[label = "{GanttDialogDate2|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogDate\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttDialogDate3[label = "{GanttDialogDate3|+ this0 : net.sourceforge.ganttproject.gui.GanttDialogDate\l- valfixedDate : javax.swing.JCheckBox\l|+ Constructor() : void\l+ stateChanged() : void\l}"]
	GanttPanelDateGanttDialogDateDay[label = "{GanttPanelDateGanttDialogDateDay|+ date : net.sourceforge.ganttproject.GanttCalendar\l+ language : net.sourceforge.ganttproject.language.GanttLanguage\l+ this0 : net.sourceforge.ganttproject.gui.GanttPanelDate\l|+ Constructor() : void\l+ getPreferredSize() : java.awt.Dimension\l+ clickFunction() : void\l+ paintComponent() : void\l}"]
	GanttPanelDate5[label = "{GanttPanelDate5|+ this0 : net.sourceforge.ganttproject.gui.GanttPanelDate\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttPanelDate3[label = "{GanttPanelDate3|+ this0 : net.sourceforge.ganttproject.gui.GanttPanelDate\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttPanelDate4[label = "{GanttPanelDate4|+ this0 : net.sourceforge.ganttproject.gui.GanttPanelDate\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttPanelDate1[label = "{GanttPanelDate1|+ this0 : net.sourceforge.ganttproject.gui.GanttPanelDate\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttPanelDate2[label = "{GanttPanelDate2|+ this0 : net.sourceforge.ganttproject.gui.GanttPanelDate\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	TaskListenerAdapter[label = "{TaskListenerAdapter|...|+ Constructor() : void\l+ taskScheduleChanged() : void\l+ dependencyAdded() : void\l+ dependencyRemoved() : void\l+ taskAdded() : void\l+ taskRemoved() : void\l+ taskMoved() : void\l}"]
	ChartUIConfiguration[label = "{ChartUIConfiguration|- mySpanningRowTextFont : java.awt.Font\l- mySpanningHeaderBackgroundColor : java.awt.Color\l- myHeaderBorderColor : java.awt.Color\l- myHorizontalGutterColor1 : java.awt.Color\l- myHorizontalGutterColor2 : java.awt.Color\l- myBottomUnitGridColor : java.awt.Color\l- myBottomUnitFont : java.awt.Font\l|+ Constructor() : void\l+ getSpanningHeaderFont() : java.awt.Font\l+ getBottomUnitFont() : java.awt.Font\l+ getSpanningHeaderHeight() : int\l+ getSpanningHeaderBackgroundColor() : java.awt.Color\l+ getHeaderBorderColor() : java.awt.Color\l+ getHorizontalGutterColor1() : java.awt.Color\l+ getHorizontalGutterColor2() : java.awt.Color\l+ getBottomUnitGridColor() : java.awt.Color\l}"]
	TimeFrame[label = "{\<\<interface\>\>\nTimeFrame|...|+ getStartDate() : java.util.Date\l+ getFinishDate() : java.util.Date\l+ getTopUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ getBottomUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ getUnitCount() : int\l+ getUnitText() : java.lang.String\l+ getUnitStart() : java.util.Date\l}"]
	ChartHeaderImpl[label = "{ChartHeaderImpl|- myChartModel : net.sourceforge.ganttproject.chart.ChartModelImpl\l- myPrimitiveContainer : net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer\l|+ Constructor() : void\l+ paint() : void\l- preparePrimitives() : void\l- createGreyRectangleWithNiceBorders() : void\l- createFrames() : void\l- getHeight() : int\l- getWidth() : int\l+ access() : net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer\l}"]
	TimeUnitGraph[label = "{TimeUnitGraph|- myUnit2compositions : java.util.Map\l|+ Constructor() : void\l+ createAtomTimeUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ createTimeUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ createDateFrameableTimeUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ createTimeUnitFunctionOfDate() : net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate\l- registerTimeUnit() : void\l+ getComposition() : net.sourceforge.ganttproject.time.TimeUnitGraphComposition\l}"]
	DateFrameable[label = "{\<\<interface\>\>\nDateFrameable|...|+ adjustRight() : java.util.Date\l+ adjustLeft() : java.util.Date\l+ jumpLeft() : java.util.Date\l}"]
	FramerImpl[label = "{FramerImpl|- myCalendarField : int\l|+ Constructor() : void\l+ adjustRight() : java.util.Date\l- clearFields() : void\l+ adjustLeft() : java.util.Date\l+ jumpLeft() : java.util.Date\l}"]
	DayTextFormatter[label = "{DayTextFormatter|...|+ Constructor() : void\l+ format() : java.lang.String\l}"]
	GregorianTimeUnitStackTimeFrameImpl[label = "{GregorianTimeUnitStackTimeFrameImpl|- myBaseDate : java.util.Date\l- myTopUnit : net.sourceforge.ganttproject.time.TimeUnit\l- myBottomUnit : net.sourceforge.ganttproject.time.TimeUnit\l- myNextFrameStartDate : java.util.Date\l- myCalendar : net.sourceforge.ganttproject.time.gregorian.GregorianCalendar\l- myLowestFrameable : net.sourceforge.ganttproject.time.DateFrameable\l- myStartDate : java.util.Date\l- myHighestFrameable : net.sourceforge.ganttproject.time.DateFrameable\l- myEndDate : java.util.Date\l- myLineHeader : net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStackTimeFrameImplLineHeader\l|+ Constructor() : void\l- calculateLowestFrameableUnit() : net.sourceforge.ganttproject.time.DateFrameable\l- calculateHighestFrameableUnit() : net.sourceforge.ganttproject.time.DateFrameable\l- calculateEndDate() : java.util.Date\l- calculateLines() : net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStackTimeFrameImplLineHeader\l- fillLine() : void\l- getUnitCount() : int\l- createLineItem() : net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStackTimeFrameImplLineItem\l- createHeader() : net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStackTimeFrameImplLineHeader\l+ getFinishDate() : java.util.Date\l+ getUnitCount() : int\l- getLineHeader() : net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStackTimeFrameImplLineHeader\l+ getStartDate() : java.util.Date\l+ getTopUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ getBottomUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ getUnitText() : java.lang.String\l- getUnitText() : java.lang.String\l+ getUnitStart() : java.util.Date\l}"]
	MonthTextFormatter[label = "{MonthTextFormatter|- myFormat : java.text.SimpleDateFormat\l|+ Constructor() : void\l+ format() : java.lang.String\l}"]
	ConstraintImpl[label = "{ConstraintImpl|- myID : int\l- myName : java.lang.String\l- myDependency : net.sourceforge.ganttproject.task.dependency.TaskDependency\l|+ Constructor() : void\l# getDependency() : net.sourceforge.ganttproject.task.dependency.TaskDependency\l+ setTaskDependency() : void\l+ getName() : java.lang.String\l+ getID() : int\l+ toString() : java.lang.String\l}"]
	FindPossibleDependeesAlgorithmImpl[label = "{FindPossibleDependeesAlgorithmImpl|- myContainmentFacade : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l|+ Constructor() : void\l+ run() : net.sourceforge.ganttproject.task.Task[]\l# createContainmentFacade() : net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade\l- processTask() : void\l}"]
	SearchKey[label = "{SearchKey|+ DEPENDANT : int\l+ DEPENDEE : int\l+ myFirstTaskID : int\l+ myType : int\l+ mySecondTaskID : int\l|+ Constructor() : void\l# Constructor() : void\l+ compareTo() : int\l+ equals() : boolean\l+ hashCode() : int\l}"]
	TaskDependencyCollectionImplMutatorImpl[label = "{TaskDependencyCollectionImplMutatorImpl|- myQueue : java.util.Map\l- myCleanupMutation : net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImplMutationInfo\l+ this0 : net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl\l|- Constructor() : void\l+ commit() : void\l+ clear() : void\l+ createDependency() : net.sourceforge.ganttproject.task.dependency.TaskDependency\l+ deleteDependency() : void\l+ Constructor() : void\l}"]
	TaskDependencyImpl[label = "{TaskDependencyImpl|- myConstraint : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint\l- myDependant : net.sourceforge.ganttproject.task.Task\l- myDependee : net.sourceforge.ganttproject.task.Task\l- myCollection : net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl\l|+ Constructor() : void\l+ getDependant() : net.sourceforge.ganttproject.task.Task\l+ getDependee() : net.sourceforge.ganttproject.task.Task\l+ setConstraint() : void\l+ getConstraint() : net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint\l+ delete() : void\l+ equals() : boolean\l+ hashCode() : int\l}"]
	RangeSearchToKey[label = "{RangeSearchToKey|...|+ Constructor() : void\l}"]
	RangeSearchFromKey[label = "{RangeSearchFromKey|...|+ Constructor() : void\l}"]
	TaskDependencyCollectionImplMutationInfo[label = "{TaskDependencyCollectionImplMutationInfo|+ ADD : int\l+ DELETE : int\l+ CLEAR : int\l+ myDependency : net.sourceforge.ganttproject.task.dependency.TaskDependency\l+ myOperation : int\l+ myOrder : int\l+ ourOrder : int\l|+ Constructor() : void\l+ compareTo() : int\l}"]
	WizardImplNextAction[label = "{WizardImplNextAction|+ this0 : net.sourceforge.ganttproject.gui.projectwizard.WizardImpl\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	WizardImplBackAction[label = "{WizardImplBackAction|+ this0 : net.sourceforge.ganttproject.gui.projectwizard.WizardImpl\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	WizardImplOkAction[label = "{WizardImplOkAction|+ this0 : net.sourceforge.ganttproject.gui.projectwizard.WizardImpl\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	RoleSetPageRoleSetListModel[label = "{RoleSetPageRoleSetListModel|- myRoleSets : net.sourceforge.ganttproject.roles.RoleSet[]\l- myI18n : net.sourceforge.ganttproject.gui.projectwizard.I18N\l|+ Constructor() : void\l+ toggle() : void\l+ getSize() : int\l+ getElementAt() : java.lang.Object\l+ getCellRenderer() : javax.swing.ListCellRenderer\l+ getListCellRendererComponent() : java.awt.Component\l- isTheOnlyEnabled() : boolean\l- createTooltipText() : java.lang.String\l}"]
	RoleSetPage1[label = "{RoleSetPage1|+ this0 : net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage\l- valroleSetsList : javax.swing.JList\l|+ Constructor() : void\l+ mouseClicked() : void\l}"]
	ColorSettingsPanel31[label = "{ColorSettingsPanel31|+ this1 : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel3\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	ColorSettingsPanel32[label = "{ColorSettingsPanel32|+ this1 : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel3\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	ColorSettingsPanel22[label = "{ColorSettingsPanel22|+ this1 : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel2\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	ColorSettingsPanel21[label = "{ColorSettingsPanel21|+ this1 : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel2\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	ColorSettingsPanel12[label = "{ColorSettingsPanel12|+ this1 : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel1\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	ColorSettingsPanel11[label = "{ColorSettingsPanel11|+ this1 : net.sourceforge.ganttproject.gui.options.ColorSettingsPanel1\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttXSLFileFilter[label = "{GanttXSLFileFilter|...|+ Constructor() : void\l+ accept() : boolean\l+ getDescription() : java.lang.String\l}"]
	JDKFontLocator1[label = "{JDKFontLocator1|+ this0 : net.sourceforge.ganttproject.export.JDKFontLocator\l|+ Constructor() : void\l+ accept() : boolean\l}"]
	RoleImpl[label = "{RoleImpl|- myName : java.lang.String\l- myID : int\l- myRoleSet : net.sourceforge.ganttproject.roles.RoleSet\l|+ Constructor() : void\l+ getID() : int\l+ getName() : java.lang.String\l+ getPersistentID() : java.lang.String\l+ toString() : java.lang.String\l}"]
	TaskImplMutatorImpl11[label = "{TaskImplMutatorImpl11|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valcolor : java.awt.Color\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl12[label = "{TaskImplMutatorImpl12|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valnotes : java.lang.String\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl10[label = "{TaskImplMutatorImpl10|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valshape : net.sourceforge.ganttproject.shape.ShapePaint\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl13[label = "{TaskImplMutatorImpl13|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valnotes : java.lang.String\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl7[label = "{TaskImplMutatorImpl7|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valexpand : boolean\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl6[label = "{TaskImplMutatorImpl6|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- vallength : net.sourceforge.ganttproject.task.TaskLength\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl9[label = "{TaskImplMutatorImpl9|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valisFixed : boolean\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl8[label = "{TaskImplMutatorImpl8|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valpercentage : int\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl3[label = "{TaskImplMutatorImpl3|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valpriority : int\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl2[label = "{TaskImplMutatorImpl2|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valmilestone : boolean\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl5[label = "{TaskImplMutatorImpl5|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valend : net.sourceforge.ganttproject.GanttCalendar\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl4[label = "{TaskImplMutatorImpl4|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valstart : net.sourceforge.ganttproject.GanttCalendar\l|+ Constructor() : void\l+ run() : void\l}"]
	TaskImplMutatorImpl1[label = "{TaskImplMutatorImpl1|+ this1 : net.sourceforge.ganttproject.task.TaskImplMutatorImpl\l- valname : java.lang.String\l|+ Constructor() : void\l+ run() : void\l}"]
	ResourceAssignmentCollectionImplResourceAssignmentMutatorImpl[label = "{ResourceAssignmentCollectionImplResourceAssignmentMutatorImpl|- myQueue : java.util.Map\l+ this0 : net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl\l|- Constructor() : void\l+ addAssignment() : net.sourceforge.ganttproject.task.ResourceAssignment\l+ deleteAssignment() : void\l+ commit() : void\l+ Constructor() : void\l}"]
	ResourceAssignmentCollectionImplResourceAssignmentImpl[label = "{ResourceAssignmentCollectionImplResourceAssignmentImpl|- myResource : net.sourceforge.ganttproject.resource.ProjectResource\l- myLoad : float\l+ this0 : net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl\l|+ Constructor() : void\l+ getTask() : net.sourceforge.ganttproject.task.Task\l+ getResource() : net.sourceforge.ganttproject.resource.ProjectResource\l+ getLoad() : float\l+ setLoad() : void\l+ delete() : void\l}"]
	ResourceAssignmentCollectionImplMutationInfo[label = "{ResourceAssignmentCollectionImplMutationInfo|+ ADD : int\l+ DELETE : int\l- myAssignment : net.sourceforge.ganttproject.task.ResourceAssignment\l- myOrder : int\l- ourOrder : int\l- myOperation : int\l- myResource : net.sourceforge.ganttproject.resource.ProjectResource\l|+ Constructor() : void\l+ Constructor() : void\l+ equals() : boolean\l+ compareTo() : int\l+ access() : int\l+ access() : net.sourceforge.ganttproject.resource.ProjectResource\l+ access() : net.sourceforge.ganttproject.task.ResourceAssignment\l}"]
	GanttTaskPropertiesBean11[label = "{GanttTaskPropertiesBean11|+ this1 : net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean1\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttTaskPropertiesBean12[label = "{GanttTaskPropertiesBean12|+ this1 : net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean1\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	PaintCellRenderer[label = "{PaintCellRenderer|# normalBorder : javax.swing.border.Border\l# selectBorder : javax.swing.border.Border\l# focusBorder : javax.swing.border.Border\l# paint : java.awt.Paint\l|+ Constructor() : void\l+ paintComponent() : void\l+ getListCellRendererComponent() : java.awt.Component\l}"]
	CommonPanel[label = "{CommonPanel|- language : net.sourceforge.ganttproject.language.GanttLanguage\l- nameLabel3 : javax.swing.JLabel\l- durationLabel3 : javax.swing.JLabel\l- nameField3 : javax.swing.JTextField\l- durationField3 : javax.swing.JTextField\l- firstRowPanel3 : javax.swing.JPanel\l- flowL : java.awt.FlowLayout\l- gbc : java.awt.GridBagConstraints\l- myTask : net.sourceforge.ganttproject.task.Task\l|+ Constructor() : void\l# addUsingGBL() : void\l# setFirstRow() : void\l+ nameChanged() : void\l+ durationChanged() : void\l# setupCommonFields() : javax.swing.JPanel\l# getLanguage() : net.sourceforge.ganttproject.language.GanttLanguage\l# getTask() : net.sourceforge.ganttproject.task.Task\l}"]
	DependencyTableModelTaskComboItem[label = "{DependencyTableModelTaskComboItem|+ myText : java.lang.String\l+ myTask : net.sourceforge.ganttproject.task.Task\l|+ Constructor() : void\l+ toString() : java.lang.String\l}"]
	TaskDependenciesPanel2[label = "{TaskDependenciesPanel2|+ this0 : net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel\l- valpredecessorTable : javax.swing.JTable\l- valcomboBox : javax.swing.JComboBox\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	TaskDependenciesPanel1[label = "{TaskDependenciesPanel1|+ this0 : net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	TaskAllocationsPanel1[label = "{TaskAllocationsPanel1|+ this0 : net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel\l|+ Constructor() : void\l+ actionPerformed() : void\l}"]
	GanttPanelDateGanttDialogDateDay1[label = "{GanttPanelDateGanttDialogDateDay1|+ this1 : net.sourceforge.ganttproject.gui.GanttPanelDateGanttDialogDateDay\l|+ Constructor() : void\l+ mousePressed() : void\l}"]
	GraphicPrimitiveContainer[label = "{GraphicPrimitiveContainer|- myRectangles : java.util.ArrayList\l- myLines : java.util.ArrayList\l- myTexts : java.util.ArrayList\l|+ Constructor() : void\l+ createRectangle() : net.sourceforge.ganttproject.chart.GraphicPrimitiveContainerRectangle\l+ createLine() : net.sourceforge.ganttproject.chart.GraphicPrimitiveContainerLine\l+ createText() : net.sourceforge.ganttproject.chart.GraphicPrimitiveContainerText\l+ paint() : void\l}"]
	GraphicPrimitiveContainerRectangle[label = "{GraphicPrimitiveContainerRectangle|- myLeftX : int\l- myTopY : int\l- myWidth : int\l- myHeight : int\l|- Constructor() : void\l+ Constructor() : void\l+ access() : int\l+ access() : int\l+ access() : int\l+ access() : int\l}"]
	ChartHeaderImpl1BottomUnitGridBuilder[label = "{ChartHeaderImpl1BottomUnitGridBuilder|+ myWidth : int\l+ this0 : net.sourceforge.ganttproject.chart.ChartHeaderImpl\l- valtotalWidth : int\l- valtopUnitHeight : int\l- valbottomY : int\l- valconfig : net.sourceforge.ganttproject.chart.ChartUIConfiguration\l- valbottomUnitWidth : int\l|+ Constructor() : void\l+ createBottomUnitGrid() : void\l+ getWidth() : int\l}"]
	ChartHeaderImpl1TopUnitTextBuilder[label = "{ChartHeaderImpl1TopUnitTextBuilder|+ this0 : net.sourceforge.ganttproject.chart.ChartHeaderImpl\l- valtopUnitHeight : int\l- valconfig : net.sourceforge.ganttproject.chart.ChartUIConfiguration\l|+ Constructor() : void\l+ createTopUnitText() : void\l}"]
	GraphicPrimitiveContainerLine[label = "{GraphicPrimitiveContainerLine|- myStartX : int\l- myStartY : int\l- myFinishX : int\l- myFinishY : int\l|- Constructor() : void\l+ Constructor() : void\l+ access() : int\l+ access() : int\l+ access() : int\l+ access() : int\l}"]
	GregorianTimeUnitStackTimeFrameImplLineHeader[label = "{GregorianTimeUnitStackTimeFrameImplLineHeader|+ myUnit : net.sourceforge.ganttproject.time.TimeUnit\l+ myFirstItem : net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStackTimeFrameImplLineItem\l- myNextHeader : net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStackTimeFrameImplLineHeader\l- myItemCount : int\l|+ Constructor() : void\l+ fullDump() : java.lang.String\l+ toString() : java.lang.String\l+ append() : void\l+ next() : net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStackTimeFrameImplLineHeader\l+ getItemCount() : int\l+ getLineItem() : net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStackTimeFrameImplLineItem\l}"]
	GregorianTimeUnitStackTimeFrameImplLineItem[label = "{GregorianTimeUnitStackTimeFrameImplLineItem|+ myNextItem : net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStackTimeFrameImplLineItem\l+ myStartDate : java.util.Date\l+ myEndDate : java.util.Date\l|+ Constructor() : void\l+ toString() : java.lang.String\l}"]
	GregorianTimeUnitStackTimeFrameImplUnitInfo[label = "{GregorianTimeUnitStackTimeFrameImplUnitInfo|+ myTruncatedCount : int\l+ myRoundedCount : int\l- lastDate : java.util.Date\l|+ Constructor() : void\l}"]
	TimeUnitGraphComposition[label = "{TimeUnitGraphComposition|+ myAtom : net.sourceforge.ganttproject.time.TimeUnit\l+ myAtomCount : int\l+ this0 : net.sourceforge.ganttproject.time.TimeUnitGraph\l|+ Constructor() : void\l+ Constructor() : void\l+ getAtomCount() : int\l}"]
	TimeUnitImpl[label = "{TimeUnitImpl|- myName : java.lang.String\l- myGraph : net.sourceforge.ganttproject.time.TimeUnitGraph\l- myDirectAtomUnit : net.sourceforge.ganttproject.time.TimeUnit\l- myTextFormatter : net.sourceforge.ganttproject.time.TextFormatter\l|+ Constructor() : void\l+ getName() : java.lang.String\l+ isConstructedFrom() : boolean\l+ getAtomCount() : int\l+ getDirectAtomUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ toString() : java.lang.String\l+ setTextFormatter() : void\l+ format() : java.lang.String\l# getTextFormatter() : net.sourceforge.ganttproject.time.TextFormatter\l}"]
	TimeUnitFunctionOfDateImpl[label = "{TimeUnitFunctionOfDateImpl|- myDirectFrameable : net.sourceforge.ganttproject.time.DateFrameable\l|+ Constructor() : void\l+ createTimeUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ getAtomCount() : int\l+ access() : net.sourceforge.ganttproject.time.DateFrameable\l}"]
	TimeUnitDateFrameableImpl[label = "{TimeUnitDateFrameableImpl|- myFramer : net.sourceforge.ganttproject.time.DateFrameable\l|+ Constructor() : void\l+ adjustRight() : java.util.Date\l+ adjustLeft() : java.util.Date\l+ jumpLeft() : java.util.Date\l}"]
	InternalStateListener[label = "{\<\<interface\>\>\nInternalStateListener|...|+ nameChanged() : void\l+ durationChanged() : void\l}"]
	GraphicPrimitiveContainerGraphicPrimitive[label = "{GraphicPrimitiveContainerGraphicPrimitive|- myBackgroundColor : java.awt.Color\l- myForegroundColor : java.awt.Color\l|+ Constructor() : void\l+ getBackgroundColor() : java.awt.Color\l+ setBackgroundColor() : void\l+ getForegroundColor() : java.awt.Color\l+ setForegroundColor() : void\l}"]
	GraphicPrimitiveContainerText[label = "{GraphicPrimitiveContainerText|- myLeftX : int\l- myBottomY : int\l- myText : java.lang.String\l- myFont : java.awt.Font\l|+ Constructor() : void\l+ setFont() : void\l+ access() : java.awt.Font\l+ access() : java.lang.String\l+ access() : int\l+ access() : int\l}"]
	TimeUnitFunctionOfDateImplParameterizedTimeUnitImpl[label = "{TimeUnitFunctionOfDateImplParameterizedTimeUnitImpl|- myBaseDate : java.util.Date\l- myRightDate : java.util.Date\l- myLeftDate : java.util.Date\l- myAtomCount : int\l- myTextFormatter : net.sourceforge.ganttproject.time.TextFormatter\l+ this0 : net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl\l|+ Constructor() : void\l+ getName() : java.lang.String\l+ isConstructedFrom() : boolean\l+ getAtomCount() : int\l- getDirectAtomCount() : int\l+ getDirectAtomUnit() : net.sourceforge.ganttproject.time.TimeUnit\l+ adjustRight() : java.util.Date\l+ adjustLeft() : java.util.Date\l+ jumpLeft() : java.util.Date\l+ setTextFormatter() : void\l+ format() : java.lang.String\l}"]

IGanttProject -> GanttProject[arrowtail=onormal, style=dashed]
ResourceView -> GanttProject[arrowtail=onormal, style=dashed]
GanttProject -> GanttLanguage[arrowtail=diamond]
GanttProject -> GanttTree[arrowtail=diamond]
GanttProject -> GanttGraphicArea[arrowtail=diamond]
GanttProject -> GanttResourcePanel[arrowtail=diamond]
GanttProject -> DocumentsMRU[arrowtail=diamond]
GanttProject -> Document[arrowtail=diamond]
GanttProject -> TestGanttRolloverButton[arrowtail=diamond]
GanttProject -> PrjInfos[arrowtail=diamond]
GanttProject -> GanttLookAndFeelInfo[arrowtail=diamond]
GanttProject -> ResourceActionSet[arrowtail=diamond]
GanttProject -> ResourceAction[arrowtail=diamond]
GanttProject -> TaskManager[arrowtail=diamond]
GanttProject -> Task[arrowtail=diamond]
GanttProject -> GanttProject[arrowtail=diamond]
GanttProject -> GanttProjectFacadeInvalidator[arrowtail=diamond]
GanttProject -> UIConfiguration[arrowtail=diamond]
GanttProject -> GanttOptions[arrowtail=diamond]
GanttProject -> GanttStatusBar[arrowtail=diamond]
GanttProject -> NewTaskAction[arrowtail=diamond]
GanttProject -> NewHumanAction[arrowtail=diamond]
GanttProject -> NewArtefactAction[arrowtail=diamond]



GanttLanguage -> GanttLanguage[arrowtail=diamond]

GanttTree -> GanttGraphicArea[arrowtail=diamond]
GanttTree -> GanttProject[arrowtail=diamond]
GanttTree -> GanttLanguage[arrowtail=diamond]
GanttTree -> TaskManager[arrowtail=diamond]
GanttTree -> Task[arrowtail=diamond]

GanttGraphicArea -> GanttCalendar[arrowtail=diamond]
GanttGraphicArea -> GanttTree[arrowtail=diamond]
GanttGraphicArea -> GanttLanguage[arrowtail=diamond]
GanttGraphicArea -> GanttProject[arrowtail=diamond]
GanttGraphicArea -> GanttGraphicArea[arrowtail=diamond]
GanttGraphicArea -> GanttGraphicAreaArrow[arrowtail=diamond]
GanttGraphicArea -> GanttGraphicAreaNotes[arrowtail=diamond]
GanttGraphicArea -> GanttTask[arrowtail=diamond]
GanttGraphicArea -> UIConfiguration[arrowtail=diamond]
GanttGraphicArea -> TaskManager[arrowtail=diamond]
GanttGraphicArea -> Task[arrowtail=diamond]

ResourceView -> GanttResourcePanel[arrowtail=onormal, style=dashed]
ResourceContext -> GanttResourcePanel[arrowtail=onormal, style=dashed]
GanttResourcePanel -> GanttTree[arrowtail=diamond]
GanttResourcePanel -> GanttResourcePanel[arrowtail=diamond]
GanttResourcePanel -> GanttResourcePanelGanttTableModel[arrowtail=diamond]
GanttResourcePanel -> GanttLanguage[arrowtail=diamond]
GanttResourcePanel -> GanttProject[arrowtail=diamond]
GanttResourcePanel -> ResourceActionSet[arrowtail=diamond]
GanttResourcePanel -> ResourceAction[arrowtail=diamond]
GanttResourcePanel -> ResourceLoadGraphicArea[arrowtail=diamond]
GanttResourcePanel -> ProjectResource[arrowtail=diamond]
GanttResourcePanel -> ResourceContext[arrowtail=diamond]






ResourceActionSet -> RoleManager[arrowtail=diamond]
ResourceActionSet -> Role[arrowtail=diamond]
ResourceActionSet -> ResourceManager[arrowtail=diamond]
ResourceActionSet -> ResourceContext[arrowtail=diamond]
ResourceActionSet -> GanttProject[arrowtail=diamond]




GanttOptions -> GanttLanguage[arrowtail=diamond]
GanttOptions -> GanttLookAndFeelInfo[arrowtail=diamond]
GanttOptions -> RoleManager[arrowtail=diamond]
GanttOptions -> Role[arrowtail=diamond]
GanttOptions -> DocumentsMRU[arrowtail=diamond]
GanttOptions -> Document[arrowtail=diamond]
GanttOptions -> UIConfiguration[arrowtail=diamond]
GanttOptions -> CSVOptions[arrowtail=diamond]

GanttStatusBar -> GanttStatusBar[arrowtail=diamond]
GanttStatusBar -> GanttStatusBarProgressBarPanel[arrowtail=diamond]
GanttStatusBar -> GanttStatusBarMessagePanel[arrowtail=diamond]

GanttLanguageListener -> NewTaskAction[arrowtail=onormal, style=dashed]
NewTaskAction -> IGanttProject[arrowtail=diamond]

ResourceAction -> NewHumanActionNewHumanAction -> RoleManager[arrowtail=diamond]
NewHumanAction -> Role[arrowtail=diamond]

RolloverAction -> NewArtefactAction[arrowtail=onormal, style=dashed]
NewArtefactAction -> NewArtefactAction[arrowtail=diamond]
NewArtefactAction -> NewArtefactActionActiveActionProvider[arrowtail=diamond]


MutableTask -> Task[arrowtail=onormal, style=dashed]

GanttProjectExportFileInfo -> GanttExportSettings[arrowtail=diamond]
GanttProjectExportFileInfo -> GanttProject[arrowtail=diamond]
GanttProjectExportFileInfo -> GanttProjectExportFileInfo[arrowtail=diamond]



ResourceEvent -> ProjectResource[arrowtail=diamond]
ResourceEvent -> ResourceManager[arrowtail=diamond]

GanttXMLOpen -> GanttTree[arrowtail=diamond]
GanttXMLOpen -> GanttProject[arrowtail=diamond]
GanttXMLOpen -> GanttResourcePanel[arrowtail=diamond]
GanttXMLOpen -> GanttGraphicArea[arrowtail=diamond]
GanttXMLOpen -> GanttLanguage[arrowtail=diamond]
GanttXMLOpen -> ParsingContext[arrowtail=diamond]
GanttXMLOpen -> TaskManager[arrowtail=diamond]
GanttXMLOpen -> Task[arrowtail=diamond]

TagHandler -> RoleTagHandler[arrowtail=onormal, style=dashed]
RoleTagHandler -> Role[arrowtail=diamond]
RoleTagHandler -> RoleSet[arrowtail=diamond]
RoleTagHandler -> RoleManager[arrowtail=diamond]

GanttPreviewPrint -> GanttLanguage[arrowtail=diamond]
GanttPreviewPrint -> GanttPreviewPrint[arrowtail=diamond]
GanttPreviewPrint -> GanttPreviewPrintPreviewPanel[arrowtail=diamond]



AbstractDocument -> AbstractURLDocument






TagHandler -> DependencyTagHandler[arrowtail=onormal, style=dashed]
ParsingListener -> DependencyTagHandler[arrowtail=onormal, style=dashed]
DependencyTagHandler -> TaskManager[arrowtail=diamond]
DependencyTagHandler -> Task[arrowtail=diamond]
DependencyTagHandler -> ParsingContext[arrowtail=diamond]

TaskManagerAccess -> TaskManager[arrowtail=diamond]
TaskManagerAccess -> Task[arrowtail=diamond]



GeneralDialog -> SettingsDialog
AbstractURLDocument -> HttpDocument

GeneralDialog -> AboutDialog

TaskContainmentHierarchyFacade -> GanttProjectTaskContainmentHierarchyFacadeImpl[arrowtail=onormal, style=dashed]
GanttProjectTaskContainmentHierarchyFacadeImpl -> Task[arrowtail=diamond]

ResourceManager -> HumanResourceManager[arrowtail=onormal, style=dashed]
HumanResourceManager -> Role[arrowtail=diamond]



AlgorithmCollection -> FindPossibleDependeesAlgorithm[arrowtail=diamond]
AlgorithmCollection -> RecalculateTaskScheduleAlgorithm[arrowtail=diamond]
AlgorithmCollection -> AdjustTaskBoundsAlgorithm[arrowtail=diamond]
AlgorithmCollection -> RecalculateTaskCompletionPercentageAlgorithm[arrowtail=diamond]


ResourceLoadGraphicArea -> GanttCalendar[arrowtail=diamond]
ResourceLoadGraphicArea -> GanttLanguage[arrowtail=diamond]
ResourceLoadGraphicArea -> GanttProject[arrowtail=diamond]
ResourceLoadGraphicArea -> GanttTree[arrowtail=diamond]


AlgorithmBase -> AdjustTaskBoundsAlgorithm
MutableTaskDependencyCollection -> TaskDependencyCollection[arrowtail=onormal, style=dashed]


NewArtefactActionActiveActionProvider -> GanttProject5[arrowtail=onormal, style=dashed]
GanttProject5 -> GanttProject[arrowtail=diamond]

GanttProject6 -> GanttProject[arrowtail=diamond]

GanttProject7 -> GanttProject[arrowtail=diamond]

GanttProject8 -> GanttProject[arrowtail=diamond]

TaskManagerConfig -> GanttProject1[arrowtail=onormal, style=dashed]
GanttProject1 -> GanttProject[arrowtail=diamond]

TaskContainmentHierarchyFacadeFactory -> GanttProject2[arrowtail=onormal, style=dashed]
GanttProject2 -> GanttProject[arrowtail=diamond]
GanttProject2 -> GanttProjectTaskContainmentHierarchyFacadeImpl[arrowtail=diamond]

GanttProject3 -> GanttProject[arrowtail=diamond]

GanttProject4 -> GanttProject[arrowtail=diamond]

GanttProject9 -> GanttProject[arrowtail=diamond]


TipsDialog -> GanttProject[arrowtail=diamond]

GanttCSVExport -> GanttTree[arrowtail=diamond]
GanttCSVExport -> GanttResourcePanel[arrowtail=diamond]
GanttCSVExport -> PrjInfos[arrowtail=diamond]
GanttCSVExport -> CSVOptions[arrowtail=diamond]

GanttURLChooser -> GanttLanguage[arrowtail=diamond]

GanttTXTOpen -> GanttTree[arrowtail=diamond]
GanttTXTOpen -> GanttProject[arrowtail=diamond]
GanttTXTOpen -> GanttGraphicArea[arrowtail=diamond]
GanttTXTOpen -> TaskManager[arrowtail=diamond]
GanttTXTOpen -> Task[arrowtail=diamond]

GanttHTMLExport -> GanttLanguage[arrowtail=diamond]

GanttXFIGSaver -> GanttTree[arrowtail=diamond]
GanttXFIGSaver -> GanttResourcePanel[arrowtail=diamond]
GanttXFIGSaver -> GanttGraphicArea[arrowtail=diamond]
GanttXFIGSaver -> PrjInfos[arrowtail=diamond]
GanttXFIGSaver -> GanttCalendar[arrowtail=diamond]

DeprecatedProjectExportData -> GanttProject[arrowtail=diamond]
DeprecatedProjectExportData -> GanttTree[arrowtail=diamond]
DeprecatedProjectExportData -> GanttGraphicArea[arrowtail=diamond]
DeprecatedProjectExportData -> ResourceLoadGraphicArea[arrowtail=diamond]
DeprecatedProjectExportData -> GanttExportSettings[arrowtail=diamond]

ProjectExportProcessor -> PDFExportProcessor



RoleManagerAccess -> RoleManager[arrowtail=diamond]
RoleManagerAccess -> Role[arrowtail=diamond]

ImportResources -> TaskManager[arrowtail=diamond]
ImportResources -> Task[arrowtail=diamond]
ImportResources -> ResourceManager[arrowtail=diamond]
ImportResources -> GanttProject[arrowtail=diamond]
ImportResources -> RoleManager[arrowtail=diamond]
ImportResources -> Role[arrowtail=diamond]

TagHandler -> AllocationTagHandler[arrowtail=onormal, style=dashed]
AllocationTagHandler -> ResourceManager[arrowtail=diamond]
AllocationTagHandler -> TaskManager[arrowtail=diamond]
AllocationTagHandler -> Task[arrowtail=diamond]

GanttProject16 -> GanttProject[arrowtail=diamond]

GanttProject17 -> GanttProject[arrowtail=diamond]

GanttProject14 -> GanttProject[arrowtail=diamond]


GanttProject15 -> GanttProject[arrowtail=diamond]

GanttProject12 -> GanttProject[arrowtail=diamond]

GanttProject13 -> GanttProject[arrowtail=diamond]

GanttProject10 -> GanttProject[arrowtail=diamond]

GanttProject11 -> GanttProject[arrowtail=diamond]



TaskImpl -> GanttTask
ResourceAction -> DeleteHumanActionDeleteHumanAction -> ResourceContext[arrowtail=diamond]
DeleteHumanAction -> GanttProject[arrowtail=diamond]



OpenDocumentAction -> Document[arrowtail=diamond]


GanttDialogProperties -> GanttTree[arrowtail=diamond]
GanttDialogProperties -> Task[arrowtail=diamond]
GanttDialogProperties -> GanttGraphicArea[arrowtail=diamond]
GanttDialogProperties -> GanttLanguage[arrowtail=diamond]
GanttDialogProperties -> GanttTaskPropertiesBean[arrowtail=diamond]

GregorianCalendar -> GanttCalendarGanttCalendar -> GanttLanguage[arrowtail=diamond]


GanttDialogCalendar -> GanttLanguage[arrowtail=diamond]
GanttDialogCalendar -> GanttPanelDate[arrowtail=diamond]

GanttLookAndFeels -> GanttLookAndFeels[arrowtail=diamond]

AbstractDocument -> FileDocument

GanttXMLSaver -> IGanttProject[arrowtail=diamond]
GanttXMLSaver -> GanttTree[arrowtail=diamond]
GanttXMLSaver -> GanttResourcePanel[arrowtail=diamond]
GanttXMLSaver -> GanttGraphicArea[arrowtail=diamond]


TagHandler -> ResourceTagHandler[arrowtail=onormal, style=dashed]
ParsingListener -> ResourceTagHandler[arrowtail=onormal, style=dashed]
ResourceTagHandler -> ResourceManager[arrowtail=diamond]
ResourceTagHandler -> RoleManager[arrowtail=diamond]
ResourceTagHandler -> Role[arrowtail=diamond]

GanttXMLOpenGanttXMLParser -> GanttXMLOpen[arrowtail=diamond]

TaskManager -> TaskManagerImpl[arrowtail=onormal, style=dashed]
TaskManagerImpl -> TimeUnitManager[arrowtail=diamond]
TaskManagerImpl -> TimeUnit[arrowtail=diamond]
TaskManagerImpl -> TaskHierarchyManagerImpl[arrowtail=diamond]
TaskManagerImpl -> TaskDependencyCollection[arrowtail=diamond]
TaskManagerImpl -> TaskDependency[arrowtail=diamond]
TaskManagerImpl -> TaskDependencyCollectionImpl[arrowtail=diamond]
TaskManagerImpl -> AlgorithmCollection[arrowtail=diamond]
TaskManagerImpl -> Task[arrowtail=diamond]
TaskManagerImpl -> TaskManager[arrowtail=diamond]
TaskManagerImpl -> TaskManagerConfig[arrowtail=diamond]

TagHandler -> GanttXMLOpenDefaultTagHandler[arrowtail=onormal, style=dashed]
GanttXMLOpenDefaultTagHandler -> GanttXMLOpen[arrowtail=diamond]

AlgorithmBase -> RecalculateTaskScheduleAlgorithmRecalculateTaskScheduleAlgorithm -> AdjustTaskBoundsAlgorithm[arrowtail=diamond]



GanttPreviewPrintPreviewPanel -> GanttPreviewPrint[arrowtail=diamond]




MutableTask -> TaskMutator[arrowtail=onormal, style=dashed]


GanttTaskRelationship -> TaskManager[arrowtail=diamond]
GanttTaskRelationship -> Task[arrowtail=diamond]



MutableResourceAssignmentCollection -> ResourceAssignmentCollection[arrowtail=onormal, style=dashed]

Document -> AbstractDocument[arrowtail=onormal, style=dashed]


GanttLanguageEvent -> GanttLanguage[arrowtail=diamond]





DependencyTagHandlerGanttDependStructure -> DependencyTagHandler[arrowtail=diamond]

WizardImpl -> NewProjectWizardWindowNewProjectWizardWindow -> I18N[arrowtail=diamond]


GeneralDialog -> GanttLanguage[arrowtail=diamond]
GeneralDialog -> GanttProject[arrowtail=diamond]
GeneralDialog -> GeneralOptionPanel[arrowtail=diamond]

GeneralOptionPanel -> GanttLanguage[arrowtail=diamond]

GeneralOptionPanel -> HTMLSettingsPanelHTMLSettingsPanel -> GanttProject[arrowtail=diamond]

GeneralOptionPanel -> ExportSettingsPanelExportSettingsPanel -> GanttProject[arrowtail=diamond]


GeneralOptionPanel -> WelcomeSettingsPanel
GeneralOptionPanel -> CSVSettingsPanelCSVSettingsPanel -> GanttProject[arrowtail=diamond]

GeneralOptionPanel -> ColorSettingsPanelColorSettingsPanel -> GanttProject[arrowtail=diamond]

GeneralOptionPanel -> ParametersSettingsPanelParametersSettingsPanel -> GanttProject[arrowtail=diamond]

GeneralOptionPanel -> LanguageSettingsPanelLanguageSettingsPanel -> GanttProject[arrowtail=diamond]

GeneralOptionPanel -> ProjectSettingsPanelProjectSettingsPanel -> IGanttProject[arrowtail=diamond]

GeneralOptionPanel -> PDFSettingsPanelPDFSettingsPanel -> GanttProject[arrowtail=diamond]

GeneralOptionPanel -> RolesSettingsPanelRolesSettingsPanel -> RolesTableModel[arrowtail=diamond]
RolesSettingsPanel -> GanttProject[arrowtail=diamond]

GeneralOptionPanel -> LnFSettingsPanelLnFSettingsPanel -> GanttProject[arrowtail=diamond]


GeneralOptionPanel -> AboutLibraryPanel
GeneralOptionPanel -> AboutPanel
GeneralOptionPanel -> AboutJavaInfosPanel
GeneralOptionPanel -> AboutLicensePanel
GeneralOptionPanel -> AboutAuthorPanel
GanttResourcePanelGanttTableModel -> GanttResourcePanel[arrowtail=diamond]

ProjectResource -> HumanResourceHumanResource -> Role[arrowtail=diamond]

GanttResourcePanel1 -> GanttResourcePanel[arrowtail=diamond]

GanttResourcePanelGanttAdjustmentListener -> GanttResourcePanel[arrowtail=diamond]

GanttDialogPerson -> HumanResource[arrowtail=diamond]
GanttDialogPerson -> GanttLanguage[arrowtail=diamond]

GanttTreeGanttTreeCellEditor -> GanttTree[arrowtail=diamond]

GanttTreeGanttAdjustmentListener -> GanttTree[arrowtail=diamond]

GanttTreeGanttTreeCellRenderer -> GanttTree[arrowtail=diamond]

GanttTreeGanttTreeExpansionListener -> GanttTree[arrowtail=diamond]

GanttTreeGanttTreeDropListener -> GanttTree[arrowtail=diamond]

GanttTreeGanttTreeModelListener -> GanttTree[arrowtail=diamond]

GanttTreeAutoscrollingTree -> GanttTree[arrowtail=diamond]

GanttTree1 -> GanttTree[arrowtail=diamond]




ResourceLoadGraphicArea1 -> ResourceLoadGraphicArea[arrowtail=diamond]

ResourceLoadGraphicArea2 -> ResourceLoadGraphicArea[arrowtail=diamond]




MutableTaskDependencyCollection -> TaskDependencyCollectionMutator[arrowtail=onormal, style=dashed]


GanttOptionsGanttXMLOptionsParser -> GanttOptions[arrowtail=diamond]

GanttSplash1 -> GanttSplash[arrowtail=diamond]

TipsDialog1 -> TipsDialog[arrowtail=diamond]

TipsDialog2 -> TipsDialog[arrowtail=diamond]

TipsDialog3 -> TipsDialog[arrowtail=diamond]

GanttURLChooser2 -> GanttURLChooser[arrowtail=diamond]

GanttURLChooser1 -> GanttURLChooser[arrowtail=diamond]

GanttXFIGSaverTextObject -> GanttXFIGSaver[arrowtail=diamond]

GanttXFIGSaverBoxObject -> GanttXFIGSaver[arrowtail=diamond]

ProjectExportData -> PDFExportData
ProjectExportData -> GanttExportSettings[arrowtail=diamond]
ProjectExportData -> HumanResourceManager[arrowtail=diamond]
ProjectExportData -> HumanResource[arrowtail=diamond]
ProjectExportData -> Task[arrowtail=diamond]
ProjectExportData -> TaskContainmentHierarchyFacade[arrowtail=diamond]
ProjectExportData -> GanttChartExportProcessor[arrowtail=diamond]
ProjectExportData -> ResourceChartExportProcessor[arrowtail=diamond]
ProjectExportData -> GanttTree[arrowtail=diamond]

FontRecord -> TTFFileExt[arrowtail=diamond]


GanttChartExportData -> GanttExportSettings[arrowtail=diamond]



GanttPDFExport -> GanttLanguage[arrowtail=diamond]


RoleManager -> RoleManagerImpl[arrowtail=onormal, style=dashed]
RoleManagerImpl -> Role[arrowtail=diamond]
RoleManagerImpl -> RoleSet[arrowtail=diamond]
RoleManagerImpl -> RoleSetImpl[arrowtail=diamond]

OpenFileDialog -> GanttProject[arrowtail=diamond]


ResourceAction -> ResourceManager[arrowtail=diamond]

TestGanttRolloverButtonMouseOverHandler -> TestGanttRolloverButton[arrowtail=diamond]

Task -> TaskImpl[arrowtail=onormal, style=dashed]
TaskImpl -> TaskManager[arrowtail=diamond]
TaskImpl -> Task[arrowtail=diamond]
TaskImpl -> TaskManagerImpl[arrowtail=diamond]
TaskImpl -> GanttCalendar[arrowtail=diamond]
TaskImpl -> TaskLength[arrowtail=diamond]
TaskImpl -> TimeUnitManager[arrowtail=diamond]
TaskImpl -> TimeUnit[arrowtail=diamond]
TaskImpl -> ResourceAssignment[arrowtail=diamond]
TaskImpl -> ResourceAssignmentCollection[arrowtail=diamond]
TaskImpl -> ResourceAssignmentCollectionImpl[arrowtail=diamond]
TaskImpl -> TaskDependency[arrowtail=diamond]
TaskImpl -> TaskDependencySlice[arrowtail=diamond]
TaskImpl -> TaskHierarchyItem[arrowtail=diamond]
TaskImpl -> ShapePaint[arrowtail=diamond]

GanttStatusBarProgressBarPanel -> GanttStatusBar[arrowtail=diamond]

GanttStatusBarMessagePanel -> GanttStatusBar[arrowtail=diamond]

GanttDialogInfo3 -> GanttDialogInfo[arrowtail=diamond]

GanttDialogInfo2 -> GanttDialogInfo[arrowtail=diamond]

GanttDialogInfo1 -> GanttDialogInfo[arrowtail=diamond]

GanttTaskPropertiesBean -> GanttTask[arrowtail=diamond]
GanttTaskPropertiesBean -> GanttTree[arrowtail=diamond]
GanttTaskPropertiesBean -> GanttLanguage[arrowtail=diamond]
GanttTaskPropertiesBean -> GanttCalendar[arrowtail=diamond]
GanttTaskPropertiesBean -> JPaintCombo[arrowtail=diamond]
GanttTaskPropertiesBean -> TaskDependenciesPanel[arrowtail=diamond]
GanttTaskPropertiesBean -> TaskAllocationsPanel[arrowtail=diamond]
GanttTaskPropertiesBean -> HumanResourceManager[arrowtail=diamond]
GanttTaskPropertiesBean -> HumanResource[arrowtail=diamond]

GanttDialogDate -> GanttLanguage[arrowtail=diamond]
GanttDialogDate -> GanttPanelDate[arrowtail=diamond]


GanttPanelDate -> GanttLanguage[arrowtail=diamond]
GanttPanelDate -> GanttPanelDate[arrowtail=diamond]
GanttPanelDate -> GanttPanelDateGanttDialogDateDay[arrowtail=diamond]
GanttPanelDate -> GanttCalendar[arrowtail=diamond]

GanttDialogCalendar2 -> GanttDialogCalendar[arrowtail=diamond]

GanttDialogCalendar1 -> GanttDialogCalendar[arrowtail=diamond]

ShapeConstants -> ShapePaint[arrowtail=diamond]

GanttGraphicAreaArrow -> GanttGraphicArea[arrowtail=diamond]

GanttGraphicAreaNotes -> GanttGraphicArea[arrowtail=diamond]


GanttGraphicArea4 -> GanttGraphicArea[arrowtail=diamond]

GanttGraphicArea3 -> GanttGraphicArea[arrowtail=diamond]

GanttGraphicArea2 -> GanttGraphicArea[arrowtail=diamond]

TaskListenerAdapter -> GanttGraphicArea1GanttGraphicArea1 -> GanttGraphicArea[arrowtail=diamond]

TimeUnit -> TimeUnitFunctionOfDate[arrowtail=onormal, style=dashed]

GanttGraphicAreaGanttPaintParam -> GanttGraphicArea[arrowtail=diamond]

ChartModel -> ChartModelImpl[arrowtail=onormal, style=dashed]
ChartModelImpl -> ChartHeader[arrowtail=diamond]
ChartModelImpl -> ChartUIConfiguration[arrowtail=diamond]
ChartModelImpl -> TimeFrame[arrowtail=diamond]
ChartModelImpl -> GregorianTimeUnitStack[arrowtail=diamond]
ChartModelImpl -> TimeUnit[arrowtail=diamond]

GregorianTimeUnitStack -> TimeUnit[arrowtail=diamond]
GregorianTimeUnitStack -> TimeUnitGraph[arrowtail=diamond]
GregorianTimeUnitStack -> DateFrameable[arrowtail=diamond]
GregorianTimeUnitStack -> TimeUnitFunctionOfDate[arrowtail=diamond]


TaskHierarchyManagerImpl -> TaskHierarchyItem[arrowtail=diamond]

TaskDependencyCollection -> TaskDependencyCollectionImpl[arrowtail=onormal, style=dashed]
TaskDependencyCollectionImpl -> EventDispatcher[arrowtail=diamond]

ConstraintImpl -> FinishFinishConstraintImplTaskDependencyConstraint -> FinishFinishConstraintImpl[arrowtail=onormal, style=dashed]

TaskLength -> TaskLengthImpl[arrowtail=onormal, style=dashed]
TaskLengthImpl -> TimeUnit[arrowtail=diamond]

TaskDependencyEvent -> TaskDependency[arrowtail=diamond]

TimeUnitManager -> TimeUnitManagerImpl[arrowtail=onormal, style=dashed]
TimeUnitManagerImpl -> TimeUnit[arrowtail=diamond]
TimeUnitManagerImpl -> TimeUnitGraph[arrowtail=diamond]

ConstraintImpl -> StartStartConstraintImplTaskDependencyConstraint -> StartStartConstraintImpl[arrowtail=onormal, style=dashed]

TaskContainmentHierarchyFacadeFactory -> TaskManagerImplFacadeFactoryImpl[arrowtail=onormal, style=dashed]
TaskManagerImplFacadeFactoryImpl -> TaskManager[arrowtail=diamond]
TaskManagerImplFacadeFactoryImpl -> Task[arrowtail=diamond]
TaskManagerImplFacadeFactoryImpl -> TaskManagerImpl[arrowtail=diamond]

TaskScheduleEvent -> GanttCalendar[arrowtail=diamond]

TaskContainmentHierarchyFacade -> TaskManagerImplFacadeImpl[arrowtail=onormal, style=dashed]
TaskManagerImplFacadeImpl -> Task[arrowtail=diamond]
TaskManagerImplFacadeImpl -> TaskManager[arrowtail=diamond]
TaskManagerImplFacadeImpl -> TaskManagerImpl[arrowtail=diamond]

TaskHierarchyEvent -> Task[arrowtail=diamond]

ConstraintImpl -> FinishStartConstraintImplTaskDependencyConstraint -> FinishStartConstraintImpl[arrowtail=onormal, style=dashed]

ConstraintImpl -> StartFinishConstraintImplTaskDependencyConstraint -> StartFinishConstraintImpl[arrowtail=onormal, style=dashed]

FindPossibleDependeesAlgorithmImpl -> TaskManagerImpl2TaskManagerImpl2 -> TaskManager[arrowtail=diamond]
TaskManagerImpl2 -> Task[arrowtail=diamond]
TaskManagerImpl2 -> TaskManagerImpl[arrowtail=diamond]
TaskManagerImpl2 -> TaskContainmentHierarchyFacadeFactory[arrowtail=diamond]
TaskManagerImpl2 -> TaskContainmentHierarchyFacade[arrowtail=diamond]

EventDispatcher -> TaskManagerImpl1[arrowtail=onormal, style=dashed]
TaskManagerImpl1 -> TaskManager[arrowtail=diamond]
TaskManagerImpl1 -> Task[arrowtail=diamond]
TaskManagerImpl1 -> TaskManagerImpl[arrowtail=diamond]

TaskManagerConfig -> TaskManagerImpl6[arrowtail=onormal, style=dashed]

RecalculateTaskCompletionPercentageAlgorithm -> TaskManagerImpl5TaskManagerImpl5 -> TaskManager[arrowtail=diamond]
TaskManagerImpl5 -> Task[arrowtail=diamond]
TaskManagerImpl5 -> TaskManagerImpl[arrowtail=diamond]
TaskManagerImpl5 -> TaskContainmentHierarchyFacadeFactory[arrowtail=diamond]
TaskManagerImpl5 -> TaskContainmentHierarchyFacade[arrowtail=diamond]

RecalculateTaskScheduleAlgorithm -> TaskManagerImpl4TaskManagerImpl4 -> TaskManager[arrowtail=diamond]
TaskManagerImpl4 -> Task[arrowtail=diamond]
TaskManagerImpl4 -> TaskManagerImpl[arrowtail=diamond]
TaskManagerImpl4 -> TaskContainmentHierarchyFacadeFactory[arrowtail=diamond]
TaskManagerImpl4 -> TaskContainmentHierarchyFacade[arrowtail=diamond]

AdjustTaskBoundsAlgorithm -> TaskManagerImpl3TaskManagerImpl3 -> TaskManager[arrowtail=diamond]
TaskManagerImpl3 -> Task[arrowtail=diamond]
TaskManagerImpl3 -> TaskManagerImpl[arrowtail=diamond]
TaskManagerImpl3 -> TaskContainmentHierarchyFacadeFactory[arrowtail=diamond]
TaskManagerImpl3 -> TaskContainmentHierarchyFacade[arrowtail=diamond]




MutableResourceAssignmentCollection -> ResourceAssignmentMutator[arrowtail=onormal, style=dashed]

TaskDependencyConstraintCollision -> TaskDependencyConstraintDefaultCollision[arrowtail=onormal, style=dashed]
TaskDependencyConstraintDefaultCollision -> GanttCalendar[arrowtail=diamond]


WizardImpl -> WizardImpl[arrowtail=diamond]
WizardImpl -> WizardImplNextAction[arrowtail=diamond]
WizardImpl -> WizardImplBackAction[arrowtail=diamond]

WizardPage -> RoleSetPage[arrowtail=onormal, style=dashed]
RoleSetPage -> I18N[arrowtail=diamond]
RoleSetPage -> RoleSetPage[arrowtail=diamond]
RoleSetPage -> RoleSetPageRoleSetListModel[arrowtail=diamond]

WizardPage -> ProjectNamePage[arrowtail=onormal, style=dashed]
ProjectNamePage -> I18N[arrowtail=diamond]
ProjectNamePage -> ProjectSettingsPanel[arrowtail=diamond]


GeneralDialogSettinsDefaultTreeCellRenderer -> GeneralDialog[arrowtail=diamond]

HTMLSettingsPanel1 -> HTMLSettingsPanel[arrowtail=diamond]

TopPanel1 -> TopPanel[arrowtail=diamond]

TopPanelmyIconPanel -> TopPanel[arrowtail=diamond]

ColorSettingsPanel3 -> ColorSettingsPanel[arrowtail=diamond]

ColorSettingsPanel2 -> ColorSettingsPanel[arrowtail=diamond]

ColorSettingsPanel1 -> ColorSettingsPanel[arrowtail=diamond]

ProjectSettingsPanel1 -> ProjectSettingsPanel[arrowtail=diamond]

PDFSettingsPanel1 -> PDFSettingsPanel[arrowtail=diamond]

RolesTableModel -> RoleManager[arrowtail=diamond]
RolesTableModel -> Role[arrowtail=diamond]

AboutLibraryPanelLibraryFieldTableModel -> GanttLanguage[arrowtail=diamond]
AboutLibraryPanelLibraryFieldTableModel -> AboutLibraryPanel[arrowtail=diamond]

AboutLibraryPanelLibraryInfo -> AboutLibraryPanel[arrowtail=diamond]

AboutPanel2 -> AboutPanel[arrowtail=diamond]

AboutPanel1 -> AboutPanel[arrowtail=diamond]

AboutJavaInfosPanelSystemInfo -> AboutJavaInfosPanel[arrowtail=diamond]

AboutJavaInfosPanelAboutFieldTableModel -> GanttLanguage[arrowtail=diamond]
AboutJavaInfosPanelAboutFieldTableModel -> AboutJavaInfosPanel[arrowtail=diamond]

AboutAuthorPanelAuthorsFieldTableModel -> GanttLanguage[arrowtail=diamond]
AboutAuthorPanelAuthorsFieldTableModel -> AboutAuthorPanel[arrowtail=diamond]

AboutAuthorPanelAuthorsInfo -> AboutAuthorPanel[arrowtail=diamond]


GanttDialogPerson5 -> GanttDialogPerson[arrowtail=diamond]

GanttDialogPerson4 -> GanttDialogPerson[arrowtail=diamond]

GanttDialogPerson1 -> GanttDialogPerson[arrowtail=diamond]

GanttDialogPerson3 -> GanttDialogPerson[arrowtail=diamond]

GanttDialogPerson2 -> GanttDialogPerson[arrowtail=diamond]

GanttTreeGanttTreeCellEditor1 -> GanttTree[arrowtail=diamond]
GanttTreeGanttTreeCellEditor1 -> GanttTreeGanttTreeCellEditor[arrowtail=diamond]

GanttTreeGanttTreeDropListener1 -> GanttTree[arrowtail=diamond]
GanttTreeGanttTreeDropListener1 -> GanttTreeGanttTreeDropListener[arrowtail=diamond]

JDKFontLocator -> FontMetricsStorage[arrowtail=diamond]



RoleSet -> RoleSetImpl[arrowtail=onormal, style=dashed]

ResourceAssignmentCollection -> ResourceAssignmentCollectionImpl[arrowtail=onormal, style=dashed]
ResourceAssignmentCollectionImpl -> Task[arrowtail=diamond]
ResourceAssignmentCollectionImpl -> TaskImpl[arrowtail=diamond]

TaskHierarchyItem -> Task[arrowtail=diamond]
TaskHierarchyItem -> TaskHierarchyItem[arrowtail=diamond]

TaskDependencySliceImpl -> TaskDependencySliceAsDependant
TaskDependencySlice -> TaskDependencySliceImpl[arrowtail=onormal, style=dashed]
TaskDependencySliceImpl -> Task[arrowtail=diamond]
TaskDependencySliceImpl -> TaskDependencyCollection[arrowtail=diamond]
TaskDependencySliceImpl -> TaskDependency[arrowtail=diamond]

TaskMutator -> TaskImplMutatorImpl[arrowtail=onormal, style=dashed]
TaskImplMutatorImpl -> Task[arrowtail=diamond]
TaskImplMutatorImpl -> TaskImpl[arrowtail=diamond]

TaskDependencySliceImpl -> TaskDependencySliceAsDependee
GanttStatusBarMessagePanel1 -> GanttStatusBar[arrowtail=diamond]
GanttStatusBarMessagePanel1 -> GanttStatusBarMessagePanel[arrowtail=diamond]


CommonPanel -> TaskDependenciesPanelTaskDependenciesPanel -> GanttLanguage[arrowtail=diamond]
TaskDependenciesPanel -> TaskManager[arrowtail=diamond]
TaskDependenciesPanel -> Task[arrowtail=diamond]
TaskDependenciesPanel -> DependencyTableModel[arrowtail=diamond]
TaskDependenciesPanel -> TaskDependency[arrowtail=diamond]
TaskDependenciesPanel -> TaskDependencyConstraint[arrowtail=diamond]

CommonPanel -> TaskAllocationsPanelTaskAllocationsPanel -> ResourcesTableModel[arrowtail=diamond]
TaskAllocationsPanel -> HumanResourceManager[arrowtail=diamond]
TaskAllocationsPanel -> HumanResource[arrowtail=diamond]

GanttTaskPropertiesBean5 -> GanttTaskPropertiesBean[arrowtail=diamond]

GanttTaskPropertiesBean3 -> GanttTaskPropertiesBean[arrowtail=diamond]

GanttTaskPropertiesBean4 -> GanttTaskPropertiesBean[arrowtail=diamond]

GanttTaskPropertiesBean1 -> GanttTaskPropertiesBean[arrowtail=diamond]

GanttTaskPropertiesBean2 -> GanttTaskPropertiesBean[arrowtail=diamond]

ResourcesTableModel -> ResourceAssignment[arrowtail=diamond]
ResourcesTableModel -> ResourceAssignmentCollection[arrowtail=diamond]
ResourcesTableModel -> ResourceAssignmentMutator[arrowtail=diamond]

DependencyTableModel -> TaskDependencyCollection[arrowtail=diamond]
DependencyTableModel -> TaskDependency[arrowtail=diamond]
DependencyTableModel -> TaskDependencyCollectionMutator[arrowtail=diamond]
DependencyTableModel -> Task[arrowtail=diamond]

GanttDialogDate1 -> GanttDialogDate[arrowtail=diamond]

GanttDialogDate2 -> GanttDialogDate[arrowtail=diamond]

GanttDialogDate3 -> GanttDialogDate[arrowtail=diamond]

GanttPanelDateGanttDialogDateDay -> GanttCalendar[arrowtail=diamond]
GanttPanelDateGanttDialogDateDay -> GanttLanguage[arrowtail=diamond]
GanttPanelDateGanttDialogDateDay -> GanttPanelDate[arrowtail=diamond]

GanttPanelDate5 -> GanttPanelDate[arrowtail=diamond]

GanttPanelDate3 -> GanttPanelDate[arrowtail=diamond]

GanttPanelDate4 -> GanttPanelDate[arrowtail=diamond]

GanttPanelDate1 -> GanttPanelDate[arrowtail=diamond]

GanttPanelDate2 -> GanttPanelDate[arrowtail=diamond]

TaskListener -> TaskListenerAdapter[arrowtail=onormal, style=dashed]



ChartHeader -> ChartHeaderImpl[arrowtail=onormal, style=dashed]
ChartHeaderImpl -> ChartModelImpl[arrowtail=diamond]
ChartHeaderImpl -> ChartModel[arrowtail=diamond]
ChartHeaderImpl -> GraphicPrimitiveContainer[arrowtail=diamond]



DateFrameable -> FramerImpl[arrowtail=onormal, style=dashed]

TextFormatter -> DayTextFormatter[arrowtail=onormal, style=dashed]

TimeFrame -> GregorianTimeUnitStackTimeFrameImpl[arrowtail=onormal, style=dashed]
GregorianTimeUnitStackTimeFrameImpl -> TimeUnit[arrowtail=diamond]
GregorianTimeUnitStackTimeFrameImpl -> GregorianCalendar[arrowtail=diamond]
GregorianTimeUnitStackTimeFrameImpl -> DateFrameable[arrowtail=diamond]
GregorianTimeUnitStackTimeFrameImpl -> GregorianTimeUnitStack[arrowtail=diamond]
GregorianTimeUnitStackTimeFrameImpl -> GregorianTimeUnitStackTimeFrameImpl[arrowtail=diamond]
GregorianTimeUnitStackTimeFrameImpl -> GregorianTimeUnitStackTimeFrameImplLineHeader[arrowtail=diamond]

TextFormatter -> MonthTextFormatter[arrowtail=onormal, style=dashed]

ConstraintImpl -> TaskDependency[arrowtail=diamond]

FindPossibleDependeesAlgorithm -> FindPossibleDependeesAlgorithmImpl[arrowtail=onormal, style=dashed]
FindPossibleDependeesAlgorithmImpl -> Task[arrowtail=diamond]
FindPossibleDependeesAlgorithmImpl -> TaskContainmentHierarchyFacade[arrowtail=diamond]


TaskDependencyCollectionMutator -> TaskDependencyCollectionImplMutatorImpl[arrowtail=onormal, style=dashed]
TaskDependencyCollectionImplMutatorImpl -> TaskDependencyCollection[arrowtail=diamond]
TaskDependencyCollectionImplMutatorImpl -> TaskDependency[arrowtail=diamond]
TaskDependencyCollectionImplMutatorImpl -> TaskDependencyCollectionImpl[arrowtail=diamond]
TaskDependencyCollectionImplMutatorImpl -> TaskDependencyCollectionImplMutationInfo[arrowtail=diamond]

TaskDependency -> TaskDependencyImpl[arrowtail=onormal, style=dashed]
TaskDependencyImpl -> TaskDependency[arrowtail=diamond]
TaskDependencyImpl -> TaskDependencyConstraint[arrowtail=diamond]
TaskDependencyImpl -> Task[arrowtail=diamond]
TaskDependencyImpl -> TaskDependencyCollection[arrowtail=diamond]
TaskDependencyImpl -> TaskDependencyCollectionImpl[arrowtail=diamond]

SearchKey -> RangeSearchToKey
SearchKey -> RangeSearchFromKey
TaskDependencyCollectionImplMutationInfo -> TaskDependency[arrowtail=diamond]

WizardImplNextAction -> WizardImpl[arrowtail=diamond]

WizardImplBackAction -> WizardImpl[arrowtail=diamond]

WizardImplOkAction -> WizardImpl[arrowtail=diamond]

RoleSetPageRoleSetListModel -> Role[arrowtail=diamond]
RoleSetPageRoleSetListModel -> RoleSet[arrowtail=diamond]
RoleSetPageRoleSetListModel -> I18N[arrowtail=diamond]

RoleSetPage1 -> RoleSetPage[arrowtail=diamond]

ColorSettingsPanel31 -> ColorSettingsPanel[arrowtail=diamond]
ColorSettingsPanel31 -> ColorSettingsPanel3[arrowtail=diamond]

ColorSettingsPanel32 -> ColorSettingsPanel[arrowtail=diamond]
ColorSettingsPanel32 -> ColorSettingsPanel3[arrowtail=diamond]

ColorSettingsPanel22 -> ColorSettingsPanel[arrowtail=diamond]
ColorSettingsPanel22 -> ColorSettingsPanel2[arrowtail=diamond]

ColorSettingsPanel21 -> ColorSettingsPanel[arrowtail=diamond]
ColorSettingsPanel21 -> ColorSettingsPanel2[arrowtail=diamond]

ColorSettingsPanel12 -> ColorSettingsPanel[arrowtail=diamond]
ColorSettingsPanel12 -> ColorSettingsPanel1[arrowtail=diamond]

ColorSettingsPanel11 -> ColorSettingsPanel[arrowtail=diamond]
ColorSettingsPanel11 -> ColorSettingsPanel1[arrowtail=diamond]


JDKFontLocator1 -> JDKFontLocator[arrowtail=diamond]

Role -> RoleImpl[arrowtail=onormal, style=dashed]
RoleImpl -> Role[arrowtail=diamond]
RoleImpl -> RoleSet[arrowtail=diamond]

TaskImplMutatorImpl11 -> Task[arrowtail=diamond]
TaskImplMutatorImpl11 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl11 -> TaskImplMutatorImpl[arrowtail=diamond]

TaskImplMutatorImpl12 -> Task[arrowtail=diamond]
TaskImplMutatorImpl12 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl12 -> TaskImplMutatorImpl[arrowtail=diamond]

TaskImplMutatorImpl10 -> Task[arrowtail=diamond]
TaskImplMutatorImpl10 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl10 -> TaskImplMutatorImpl[arrowtail=diamond]
TaskImplMutatorImpl10 -> ShapePaint[arrowtail=diamond]

TaskImplMutatorImpl13 -> Task[arrowtail=diamond]
TaskImplMutatorImpl13 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl13 -> TaskImplMutatorImpl[arrowtail=diamond]

TaskImplMutatorImpl7 -> Task[arrowtail=diamond]
TaskImplMutatorImpl7 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl7 -> TaskImplMutatorImpl[arrowtail=diamond]

TaskImplMutatorImpl6 -> Task[arrowtail=diamond]
TaskImplMutatorImpl6 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl6 -> TaskImplMutatorImpl[arrowtail=diamond]
TaskImplMutatorImpl6 -> TaskLength[arrowtail=diamond]

TaskImplMutatorImpl9 -> Task[arrowtail=diamond]
TaskImplMutatorImpl9 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl9 -> TaskImplMutatorImpl[arrowtail=diamond]

TaskImplMutatorImpl8 -> Task[arrowtail=diamond]
TaskImplMutatorImpl8 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl8 -> TaskImplMutatorImpl[arrowtail=diamond]

TaskImplMutatorImpl3 -> Task[arrowtail=diamond]
TaskImplMutatorImpl3 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl3 -> TaskImplMutatorImpl[arrowtail=diamond]

TaskImplMutatorImpl2 -> Task[arrowtail=diamond]
TaskImplMutatorImpl2 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl2 -> TaskImplMutatorImpl[arrowtail=diamond]

TaskImplMutatorImpl5 -> Task[arrowtail=diamond]
TaskImplMutatorImpl5 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl5 -> TaskImplMutatorImpl[arrowtail=diamond]
TaskImplMutatorImpl5 -> GanttCalendar[arrowtail=diamond]

TaskImplMutatorImpl4 -> Task[arrowtail=diamond]
TaskImplMutatorImpl4 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl4 -> TaskImplMutatorImpl[arrowtail=diamond]
TaskImplMutatorImpl4 -> GanttCalendar[arrowtail=diamond]

TaskImplMutatorImpl1 -> Task[arrowtail=diamond]
TaskImplMutatorImpl1 -> TaskImpl[arrowtail=diamond]
TaskImplMutatorImpl1 -> TaskImplMutatorImpl[arrowtail=diamond]

ResourceAssignmentMutator -> ResourceAssignmentCollectionImplResourceAssignmentMutatorImpl[arrowtail=onormal, style=dashed]
ResourceAssignmentCollectionImplResourceAssignmentMutatorImpl -> ResourceAssignment[arrowtail=diamond]
ResourceAssignmentCollectionImplResourceAssignmentMutatorImpl -> ResourceAssignmentCollection[arrowtail=diamond]
ResourceAssignmentCollectionImplResourceAssignmentMutatorImpl -> ResourceAssignmentCollectionImpl[arrowtail=diamond]

ResourceAssignment -> ResourceAssignmentCollectionImplResourceAssignmentImpl[arrowtail=onormal, style=dashed]
ResourceAssignmentCollectionImplResourceAssignmentImpl -> ProjectResource[arrowtail=diamond]
ResourceAssignmentCollectionImplResourceAssignmentImpl -> ResourceAssignment[arrowtail=diamond]
ResourceAssignmentCollectionImplResourceAssignmentImpl -> ResourceAssignmentCollection[arrowtail=diamond]
ResourceAssignmentCollectionImplResourceAssignmentImpl -> ResourceAssignmentCollectionImpl[arrowtail=diamond]

ResourceAssignmentCollectionImplMutationInfo -> ResourceAssignment[arrowtail=diamond]
ResourceAssignmentCollectionImplMutationInfo -> ProjectResource[arrowtail=diamond]

GanttTaskPropertiesBean11 -> GanttTaskPropertiesBean[arrowtail=diamond]
GanttTaskPropertiesBean11 -> GanttTaskPropertiesBean1[arrowtail=diamond]

GanttTaskPropertiesBean12 -> GanttTaskPropertiesBean[arrowtail=diamond]
GanttTaskPropertiesBean12 -> GanttTaskPropertiesBean1[arrowtail=diamond]


InternalStateListener -> CommonPanel[arrowtail=onormal, style=dashed]
CommonPanel -> GanttLanguage[arrowtail=diamond]
CommonPanel -> Task[arrowtail=diamond]

DependencyTableModelTaskComboItem -> Task[arrowtail=diamond]

TaskDependenciesPanel2 -> TaskDependenciesPanel[arrowtail=diamond]

TaskDependenciesPanel1 -> TaskDependenciesPanel[arrowtail=diamond]

TaskAllocationsPanel1 -> TaskAllocationsPanel[arrowtail=diamond]

GanttPanelDateGanttDialogDateDay1 -> GanttPanelDate[arrowtail=diamond]
GanttPanelDateGanttDialogDateDay1 -> GanttPanelDateGanttDialogDateDay[arrowtail=diamond]


GraphicPrimitiveContainerGraphicPrimitive -> GraphicPrimitiveContainerRectangle
ChartHeaderImpl1BottomUnitGridBuilder -> ChartHeader[arrowtail=diamond]
ChartHeaderImpl1BottomUnitGridBuilder -> ChartHeaderImpl[arrowtail=diamond]
ChartHeaderImpl1BottomUnitGridBuilder -> ChartUIConfiguration[arrowtail=diamond]

ChartHeaderImpl1TopUnitTextBuilder -> ChartHeader[arrowtail=diamond]
ChartHeaderImpl1TopUnitTextBuilder -> ChartHeaderImpl[arrowtail=diamond]
ChartHeaderImpl1TopUnitTextBuilder -> ChartUIConfiguration[arrowtail=diamond]

GraphicPrimitiveContainerGraphicPrimitive -> GraphicPrimitiveContainerLine
GregorianTimeUnitStackTimeFrameImplLineHeader -> TimeUnit[arrowtail=diamond]
GregorianTimeUnitStackTimeFrameImplLineHeader -> GregorianTimeUnitStack[arrowtail=diamond]
GregorianTimeUnitStackTimeFrameImplLineHeader -> GregorianTimeUnitStackTimeFrameImpl[arrowtail=diamond]
GregorianTimeUnitStackTimeFrameImplLineHeader -> GregorianTimeUnitStackTimeFrameImplLineItem[arrowtail=diamond]
GregorianTimeUnitStackTimeFrameImplLineHeader -> GregorianTimeUnitStackTimeFrameImplLineHeader[arrowtail=diamond]

GregorianTimeUnitStackTimeFrameImplLineItem -> GregorianTimeUnitStack[arrowtail=diamond]
GregorianTimeUnitStackTimeFrameImplLineItem -> GregorianTimeUnitStackTimeFrameImpl[arrowtail=diamond]
GregorianTimeUnitStackTimeFrameImplLineItem -> GregorianTimeUnitStackTimeFrameImplLineItem[arrowtail=diamond]


TimeUnitGraphComposition -> TimeUnit[arrowtail=diamond]
TimeUnitGraphComposition -> TimeUnitGraph[arrowtail=diamond]

TimeUnit -> TimeUnitImpl[arrowtail=onormal, style=dashed]
TimeUnitImpl -> TimeUnit[arrowtail=diamond]
TimeUnitImpl -> TimeUnitGraph[arrowtail=diamond]
TimeUnitImpl -> TextFormatter[arrowtail=diamond]

TimeUnitDateFrameableImpl -> TimeUnitFunctionOfDateImplTimeUnitFunctionOfDate -> TimeUnitFunctionOfDateImpl[arrowtail=onormal, style=dashed]
TimeUnitFunctionOfDateImpl -> DateFrameable[arrowtail=diamond]

TimeUnitImpl -> TimeUnitDateFrameableImplTimeUnit -> TimeUnitDateFrameableImpl[arrowtail=onormal, style=dashed]
DateFrameable -> TimeUnitDateFrameableImpl[arrowtail=onormal, style=dashed]
TimeUnitDateFrameableImpl -> DateFrameable[arrowtail=diamond]



GraphicPrimitiveContainerGraphicPrimitive -> GraphicPrimitiveContainerText
TimeUnit -> TimeUnitFunctionOfDateImplParameterizedTimeUnitImpl[arrowtail=onormal, style=dashed]
DateFrameable -> TimeUnitFunctionOfDateImplParameterizedTimeUnitImpl[arrowtail=onormal, style=dashed]
TimeUnitFunctionOfDateImplParameterizedTimeUnitImpl -> TextFormatter[arrowtail=diamond]
TimeUnitFunctionOfDateImplParameterizedTimeUnitImpl -> TimeUnit[arrowtail=diamond]
TimeUnitFunctionOfDateImplParameterizedTimeUnitImpl -> TimeUnitFunctionOfDate[arrowtail=diamond]
TimeUnitFunctionOfDateImplParameterizedTimeUnitImpl -> TimeUnitFunctionOfDateImpl[arrowtail=diamond]

}