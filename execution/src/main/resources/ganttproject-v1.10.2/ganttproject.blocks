StartClass 1
Class(net.sourceforge.ganttproject.GanttProject,N,N,Public);
Attribute(version,java.lang.String,Public,Y,Y,);
Attribute(listOfCalendar,java.util.ArrayList,Private,N,N,);
Attribute(byCommandLine,boolean,Public,Y,N,);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(tree,net.sourceforge.ganttproject.GanttTree,Private,N,N,);
Attribute(area,net.sourceforge.ganttproject.GanttGraphicArea,Private,N,N,);
Attribute(resp,net.sourceforge.ganttproject.GanttResourcePanel,Private,N,N,);
Attribute(mProject,javax.swing.JMenu,Public,N,N,);
Attribute(mMRU,javax.swing.JMenu,Public,N,N,);
Attribute(mEdit,javax.swing.JMenu,Public,N,N,);
Attribute(mTask,javax.swing.JMenu,Public,N,N,);
Attribute(mHuman,javax.swing.JMenu,Public,N,N,);
Attribute(mHelp,javax.swing.JMenu,Public,N,N,);
Attribute(mServer,javax.swing.JMenu,Public,N,N,);
Attribute(mCalendar,javax.swing.JMenu,Public,N,N,);
Attribute(miNew,javax.swing.JMenuItem,Public,N,N,);
Attribute(miOpen,javax.swing.JMenuItem,Public,N,N,);
Attribute(miOpenURL,javax.swing.JMenuItem,Public,N,N,);
Attribute(miSave,javax.swing.JMenuItem,Public,N,N,);
Attribute(miSaveAs,javax.swing.JMenuItem,Public,N,N,);
Attribute(miSaveAsURL,javax.swing.JMenuItem,Public,N,N,);
Attribute(miExport,javax.swing.JMenuItem,Public,N,N,);
Attribute(miImport,javax.swing.JMenuItem,Public,N,N,);
Attribute(miPrint,javax.swing.JMenuItem,Public,N,N,);
Attribute(miPreview,javax.swing.JMenuItem,Public,N,N,);
Attribute(miQuit,javax.swing.JMenuItem,Public,N,N,);
Attribute(miCut,javax.swing.JMenuItem,Public,N,N,);
Attribute(miCopy,javax.swing.JMenuItem,Public,N,N,);
Attribute(miPaste,javax.swing.JMenuItem,Public,N,N,);
Attribute(miOptions,javax.swing.JMenuItem,Public,N,N,);
Attribute(miDeleteTask,javax.swing.JMenuItem,Public,N,N,);
Attribute(miPropertiesTask,javax.swing.JMenuItem,Public,N,N,);
Attribute(miUp,javax.swing.JMenuItem,Public,N,N,);
Attribute(miDown,javax.swing.JMenuItem,Public,N,N,);
Attribute(miDelHuman,javax.swing.JMenuItem,Public,N,N,);
Attribute(miPropHuman,javax.swing.JMenuItem,Public,N,N,);
Attribute(miSendMailHuman,javax.swing.JMenuItem,Public,N,N,);
Attribute(miEditCalendar,javax.swing.JMenuItem,Public,N,N,);
Attribute(miPrjCal,javax.swing.JMenuItem,Public,N,N,);
Attribute(miWebPage,javax.swing.JMenuItem,Public,N,N,);
Attribute(miTips,javax.swing.JMenuItem,Public,N,N,);
Attribute(miAbout,javax.swing.JMenuItem,Public,N,N,);
Attribute(miManual,javax.swing.JMenuItem,Public,N,N,);
Attribute(maxSizeMRU,int,Private,Y,Y,);
Attribute(documentsMRU,net.sourceforge.ganttproject.document.DocumentsMRU,Private,N,N,);
Attribute(bNew,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bOpen,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bSave,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bSaveAs,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bExport,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bImport,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bPrint,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bNewTask,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bDelete,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bProperties,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bUnlink,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bLink,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bInd,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bUnind,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bUp,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bDown,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bPrev,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bNext,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bZoomIn,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bZoomOut,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(bZoomFit,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,N,);
Attribute(projectDocument,net.sourceforge.ganttproject.document.Document,Public,N,N,);
Attribute(tabpane,javax.swing.JTabbedPane,Public,N,N,);
Attribute(prjInfos,net.sourceforge.ganttproject.PrjInfos,Public,N,N,);
Attribute(askForSave,boolean,Public,N,N,);
Attribute(lookAndFeel,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,Public,N,N,);
Attribute(managerHash,java.util.Hashtable,Private,N,N,);
Attribute(myResourceActions,net.sourceforge.ganttproject.action.ResourceActionSet,Private,N,N,);
Attribute(isApplet,boolean,Private,N,N,);
Attribute(helpFrame,javax.swing.JFrame,Private,N,N,);
Attribute(myTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,Y,);
Attribute(myFacadeInvalidator,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,Private,N,N,);
Attribute(myUIConfiguration,net.sourceforge.ganttproject.gui.UIConfiguration,Private,N,N,);
Attribute(options,net.sourceforge.ganttproject.GanttOptions,Private,N,Y,);
Attribute(toolBar,javax.swing.JToolBar,Private,N,N,);
Attribute(statusBar,net.sourceforge.ganttproject.gui.GanttStatusBar,Private,N,N,);
Attribute(myNewTaskAction,net.sourceforge.ganttproject.action.NewTaskAction,Private,N,N,);
Attribute(myNewHumanAction,net.sourceforge.ganttproject.action.NewHumanAction,Private,N,N,);
Attribute(myNewArtefactAction,net.sourceforge.ganttproject.action.NewArtefactAction,Private,N,N,);
Attribute(HUMAN_RESOURCE_MANAGER_ID,java.lang.String,Private,Y,Y,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(updateMenuMRU,void,Private,N,N);
Method(getXslDir,java.lang.String,Public,N,N);
Method(getOptions,net.sourceforge.ganttproject.GanttOptions,Public,N,N);
Method(restoreOptions,void,Public,N,N);
Method(getStatusBar,net.sourceforge.ganttproject.gui.GanttStatusBar,Public,N,N);
Method(getXslFo,java.lang.String,Public,N,N);
Method(setMemonic,void,Public,N,N);
Method(createNewItemText,javax.swing.JMenuItem,Public,N,N);
Method(createNewItem,javax.swing.JMenuItem,Public,N,N);
Method(createNewItem$2,javax.swing.JMenuItem,Public,N,N);
Method(changeLanguage,void,Public,N,N);
Method(changeLookAndFeel,void,Public,N,N);
Method(correctLabel,java.lang.String,Public,Y,N);
Method(changeMenuLabel,javax.swing.JMenu,Public,N,N);
Method(changeMenuLabel$2,javax.swing.JMenuItem,Public,N,N);
Method(changeLanguageOfMenu,void,Private,N,N);
Method(getToolTip,java.lang.String,Public,Y,N);
Method(setButtonText,void,Public,N,N);
Method(applyButtonOptions,void,Public,N,N);
Method(addButtons,void,Public,N,N);
Method(getDisplayName,java.lang.String,Private,N,N);
Method(upDatas,void,Private,N,N);
Method(downDatas,void,Private,N,N);
Method(exitForm,void,Private,N,N);
Method(checkCurrentProject,boolean,Private,N,N);
Method(actionPerformed,void,Public,N,N);
Method(launchOptionsDialog,void,Public,N,N);
Method(newTask,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(deleteTasks,void,Public,N,N);
Method(propertiesTask,void,Public,N,N);
Method(propertiesTask$2,void,Public,N,N);
Method(unlinkRelationships,void,Public,N,N);
Method(linkRelationships,void,Public,N,N);
Method(export,void,Public,N,N);
Method(getExceptionReport,java.lang.String,Private,Y,N);
Method(doExport,void,Private,N,N);
Method(refreshProjectInfos,void,Public,N,N);
Method(selectExportFile,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,Private,N,N);
Method(importcbk,void,Public,N,N);
Method(printProject,void,Public,N,N);
Method(previewPrint,void,Public,N,N);
Method(newProject,void,Public,N,N);
Method(showNewProjectWizard,void,Private,N,N);
Method(closeProject,void,Private,N,N);
Method(setResourcePanelToGraphicArea,void,Public,N,N);
Method(openFile,void,Public,N,N);
Method(openURL,void,Public,N,N);
Method(openURL$2,void,Public,N,N);
Method(openDocument,void,Private,N,N);
Method(openStartupDocument,void,Public,N,N);
Method(openStartupDocument$2,void,Public,N,N);
Method(openXMLStream,void,Public,N,N);
Method(saveAsProject,boolean,Public,N,N);
Method(saveAsURLProject,boolean,Public,N,N);
Method(saveAsURLProject$2,boolean,Public,N,N);
Method(saveProject,void,Public,N,N);
Method(saveProject$2,void,Public,N,N);
Method(changeWorkingDirectory,void,Public,N,N);
Method(getUIConfiguration,net.sourceforge.ganttproject.gui.UIConfiguration,Public,N,N);
Method(quitApplication,void,Public,N,N);
Method(openWebPage,void,Public,N,N);
Method(setAskForSave,void,Public,N,N);
Method(usage,void,Private,Y,N);
Method(getResourcePanel,net.sourceforge.ganttproject.GanttResourcePanel,Public,N,N);
Method(getLanguage,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N);
Method(getArea,net.sourceforge.ganttproject.GanttGraphicArea,Public,N,N);
Method(getTree,net.sourceforge.ganttproject.GanttTree,Private,N,N);
Method(getResourceActions,net.sourceforge.ganttproject.action.ResourceActionSet,Private,N,N);
Method(main,void,Public,Y,N);
Method(checkProjectFile,boolean,Public,Y,N);
Method(exportProject,void,Private,Y,N);
Method(exportPDF,void,Private,Y,N);
Method(exportPNG,void,Private,Y,N);
Method(exportXFIG,void,Private,Y,N);
Method(exportCSV,void,Private,Y,N);
Method(exportJPG,void,Private,Y,N);
Method(getProjectName,java.lang.String,Public,N,N);
Method(setProjectName,void,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Method(setDescription,void,Public,N,N);
Method(getOrganization,java.lang.String,Public,N,N);
Method(setOrganization,void,Public,N,N);
Method(getWebLink,java.lang.String,Public,N,N);
Method(setWebLink,void,Public,N,N);
Method(getHumanResourceManager,net.sourceforge.ganttproject.resource.ResourceManager,Public,N,N);
Method(getTaskManager,net.sourceforge.ganttproject.task.TaskManager,Public,N,N);
Method(getRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Public,N,N);
Method(getI18n,net.sourceforge.ganttproject.language.GanttLanguage,Public,N,N);
Method(resourceAdded,void,Public,N,N);
Method(resourcesRemoved,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.gui.UIConfiguration,Public,Y,N);
Method(access$1,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,Public,Y,N);
Method(access$2,net.sourceforge.ganttproject.GanttTree,Public,Y,N);
Method(access$3,net.sourceforge.ganttproject.language.GanttLanguage,Public,Y,N);
Method(access$4,net.sourceforge.ganttproject.GanttOptions,Public,Y,N);
Method(access$5,void,Public,Y,N);
Method(access$6,net.sourceforge.ganttproject.action.NewTaskAction,Public,Y,N);
Method(access$7,net.sourceforge.ganttproject.action.NewHumanAction,Public,Y,N);
Method(access$8,net.sourceforge.ganttproject.language.GanttLanguage,Public,Y,N);
Method(access$9,java.lang.String,Public,Y,N);
Method(access$10,void,Public,Y,N);
Method(access$11,void,Public,Y,N);
Method(access$12,net.sourceforge.ganttproject.GanttGraphicArea,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,boolean,);
Parameter(<init>$2,java.lang.String,);
Parameter(createNewItemText,java.lang.String,);
Parameter(createNewItem,java.lang.String,);
Parameter(createNewItem$2,java.lang.String,);
Parameter(createNewItem$2,java.lang.String,);
Parameter(changeLookAndFeel,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,);
Parameter(correctLabel,java.lang.String,);
Parameter(changeMenuLabel,javax.swing.JMenu,);
Parameter(changeMenuLabel,java.lang.String,);
Parameter(changeMenuLabel$2,javax.swing.JMenuItem,);
Parameter(changeMenuLabel$2,java.lang.String,);
Parameter(getToolTip,java.lang.String,);
Parameter(addButtons,javax.swing.JToolBar,);
Parameter(getDisplayName,net.sourceforge.ganttproject.resource.ProjectResource[],);
Parameter(exitForm,java.awt.event.WindowEvent,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Parameter(propertiesTask$2,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(getExceptionReport,java.lang.Exception,);
Parameter(doExport,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,);
Parameter(selectExportFile,javax.swing.filechooser.FileFilter,);
Parameter(openURL$2,net.sourceforge.ganttproject.document.Document,);
Parameter(openDocument,net.sourceforge.ganttproject.document.Document,);
Parameter(openStartupDocument,java.lang.String,);
Parameter(openStartupDocument$2,net.sourceforge.ganttproject.document.Document,);
Parameter(openXMLStream,java.io.InputStream,);
Parameter(openXMLStream,java.lang.String,);
Parameter(saveAsURLProject$2,net.sourceforge.ganttproject.document.Document,);
Parameter(saveProject$2,net.sourceforge.ganttproject.document.Document,);
Parameter(changeWorkingDirectory,java.lang.String,);
Parameter(setAskForSave,boolean,);
Parameter(main,java.lang.String[],);
Parameter(checkProjectFile,java.lang.String[],);
Parameter(exportProject,java.lang.String[],);
Parameter(exportPDF,java.lang.String[],);
Parameter(exportPNG,java.lang.String[],);
Parameter(exportXFIG,java.lang.String[],);
Parameter(exportCSV,java.lang.String[],);
Parameter(exportJPG,java.lang.String[],);
Parameter(setProjectName,java.lang.String,);
Parameter(setDescription,java.lang.String,);
Parameter(setOrganization,java.lang.String,);
Parameter(setWebLink,java.lang.String,);
Parameter(resourceAdded,net.sourceforge.ganttproject.resource.ResourceEvent,);
Parameter(resourcesRemoved,net.sourceforge.ganttproject.resource.ResourceEvent,);
Parameter(access$0,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$1,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$2,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$3,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$4,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$5,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$5,java.awt.event.WindowEvent,);
Parameter(access$6,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$7,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$8,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$9,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$9,net.sourceforge.ganttproject.resource.ProjectResource[],);
Parameter(access$10,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$11,net.sourceforge.ganttproject.GanttProject,);
Parameter(access$12,net.sourceforge.ganttproject.GanttProject,);
Realization(net.sourceforge.ganttproject.IGanttProject);
Realization(net.sourceforge.ganttproject.resource.ResourceView);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.GanttTree);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Composition(net.sourceforge.ganttproject.GanttResourcePanel);
Composition(net.sourceforge.ganttproject.document.DocumentsMRU);
Composition(net.sourceforge.ganttproject.gui.TestGanttRolloverButton);
Composition(net.sourceforge.ganttproject.document.Document);
Composition(net.sourceforge.ganttproject.PrjInfos);
Composition(net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo);
Composition(net.sourceforge.ganttproject.action.ResourceActionSet);
Composition(net.sourceforge.ganttproject.task.TaskManager);
Composition(net.sourceforge.ganttproject.GanttProject$FacadeInvalidator);
Composition(net.sourceforge.ganttproject.gui.UIConfiguration);
Composition(net.sourceforge.ganttproject.GanttOptions);
Composition(net.sourceforge.ganttproject.gui.GanttStatusBar);
Composition(net.sourceforge.ganttproject.action.NewTaskAction);
Composition(net.sourceforge.ganttproject.action.NewHumanAction);
Composition(net.sourceforge.ganttproject.action.NewArtefactAction);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getRoleManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getTaskManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> createNewItem,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> updateMenuMRU,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> setMemonic,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> addButtons,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> openDocument,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> changeLanguage,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> changeLookAndFeel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init>$2 --> <init>,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLanguage --> changeLanguageOfMenu,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLanguage --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> changeMenuLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> changeMenuLabel$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> getToolTip,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> setButtonText,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setButtonText --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> setButtonText,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> applyButtonOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,upDatas --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,upDatas --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,downDatas --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,downDatas --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exitForm --> quitApplication,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,checkCurrentProject --> saveProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> newProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> checkCurrentProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> openFile,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> openURL,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> saveProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> saveAsProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> saveAsURLProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> export,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> importcbk,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> printProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> previewPrint,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> quitApplication,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> deleteTasks,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> propertiesTask,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> upDatas,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> downDatas,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> unlinkRelationships,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> linkRelationships,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> openWebPage,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> launchOptionsDialog,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> openStartupDocument$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getTaskManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> propertiesTask$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> getTaskManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> refreshProjectInfos,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,propertiesTask --> propertiesTask$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,propertiesTask$2 --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,unlinkRelationships --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,linkRelationships --> getTaskManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,linkRelationships --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,export --> selectExportFile,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,export --> doExport,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> getXslFo,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> getExceptionReport,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,refreshProjectInfos --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> selectExportFile,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> changeWorkingDirectory,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> getTaskManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> getLanguage,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> checkCurrentProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> closeProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> changeWorkingDirectory,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> getRoleManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,printProject --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,previewPrint --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newProject --> checkCurrentProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newProject --> closeProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newProject --> refreshProjectInfos,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newProject --> showNewProjectWizard,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> getTaskManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setResourcePanelToGraphicArea --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openFile --> openDocument,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openFile --> changeWorkingDirectory,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openURL --> openURL$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openURL$2 --> openDocument,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openURL$2 --> openURL$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> closeProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> getTaskManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> getRoleManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> updateMenuMRU,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> setResourcePanelToGraphicArea,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openStartupDocument --> openStartupDocument$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openStartupDocument$2 --> openDocument,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openStartupDocument$2 --> openURL$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> getTaskManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> getRoleManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsProject --> saveAsProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsProject --> saveProject$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsURLProject --> saveAsURLProject$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsURLProject$2 --> saveProject$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject --> saveProject$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> saveAsProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> saveAsURLProject$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> updateMenuMRU,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> changeWorkingDirectory,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,quitApplication --> checkCurrentProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,quitApplication --> closeProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getResourcePanel --> getTree,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getResourcePanel --> getResourceActions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getResourceActions --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> usage,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> checkProjectFile,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> exportProject,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> exportPDF,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> exportPNG,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> exportJPG,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> exportXFIG,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> exportCSV,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> <init>$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> openStartupDocument,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportProject --> <init>$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportProject --> getProjectName,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportProject --> doExport,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportPDF --> <init>$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportPDF --> doExport,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportPNG --> <init>$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportPNG --> doExport,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportXFIG --> <init>$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportXFIG --> doExport,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportCSV --> <init>$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportCSV --> doExport,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportJPG --> <init>$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportJPG --> doExport,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setProjectName --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setDescription --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setOrganization --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setWebLink --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getHumanResourceManager --> getRoleManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getHumanResourceManager --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getI18n --> getLanguage,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,resourceAdded --> getStatusBar,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,resourceAdded --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,resourceAdded --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,resourceAdded --> refreshProjectInfos,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,access$5 --> exitForm,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,access$8 --> getLanguage,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,access$9 --> getDisplayName,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,access$10 --> upDatas,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,access$11 --> downDatas,net.sourceforge.ganttproject.GanttProject,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<clinit> --> byCommandLine,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> myUIConfiguration,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> documentsMRU,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> lookAndFeel,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> myTaskManager,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mMRU,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mServer,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mProject,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miNew,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miOpen,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miSaveAs,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miImport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miExport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miOpenURL,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miSaveAsURL,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPrint,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPreview,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miQuit,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mEdit,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miCut,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miCopy,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPaste,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miOptions,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> myNewTaskAction,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miDeleteTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPropertiesTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mHuman,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> myNewHumanAction,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miDelHuman,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPropHuman,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miSendMailHuman,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mCalendar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miEditCalendar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPrjCal,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mHelp,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miWebPage,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miManual,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miTips,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miAbout,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> toolBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> byCommandLine,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> listOfCalendar,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> language,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> documentsMRU,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> projectDocument,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> prjInfos,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> askForSave,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> managerHash,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> helpFrame,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> lookAndFeel,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> options,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> myUIConfiguration,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> myTaskManager,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> isApplet,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> tree,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> myFacadeInvalidator,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> area,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mProject,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mMRU,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mEdit,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mTask,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mHuman,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mHelp,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mCalendar,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> mServer,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miNew,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miOpen,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miSave,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miSaveAs,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miImport,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miExport,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miOpenURL,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miSaveAsURL,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPrint,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPreview,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miQuit,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miCut,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miCopy,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPaste,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miOptions,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> myNewTaskAction,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miDeleteTask,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPropertiesTask,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> myNewHumanAction,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miDelHuman,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPropHuman,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miSendMailHuman,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miEditCalendar,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miPrjCal,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miWebPage,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miManual,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miTips,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> miAbout,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> tabpane,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> toolBar,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> statusBar,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,updateMenuMRU --> mMRU,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,updateMenuMRU --> documentsMRU,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getXslDir --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getOptions --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,restoreOptions --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,restoreOptions --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,restoreOptions --> myUIConfiguration,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getStatusBar --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getXslFo --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setMemonic --> miNew,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setMemonic --> miOpen,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setMemonic --> miSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setMemonic --> miExport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setMemonic --> miImport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setMemonic --> miPrint,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setMemonic --> miQuit,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setMemonic --> miOptions,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setMemonic --> miPropertiesTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setMemonic --> miDeleteTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setMemonic --> miPropHuman,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguage --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguage --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLookAndFeel --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLookAndFeel --> lookAndFeel,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mProject,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mEdit,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mHuman,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mHelp,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mCalendar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miNew,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miOpen,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mMRU,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miSaveAs,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mServer,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miOpenURL,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miSaveAsURL,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miExport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miImport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPrint,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPreview,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miQuit,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miCut,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miCopy,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPaste,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miOptions,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miDeleteTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPropertiesTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miDelHuman,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPropHuman,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miSendMailHuman,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miEditCalendar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPrjCal,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miWebPage,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miAbout,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miTips,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miManual,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bNew,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bOpen,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bSaveAs,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bPrint,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bExport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bImport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bNewTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bDelete,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bProperties,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bUnlink,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bLink,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bInd,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bUnind,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bUp,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bDown,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bPrev,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bNext,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bZoomIn,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> bZoomOut,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mProject,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mEdit,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mTask,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mHuman,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mHelp,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mCalendar,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miNew,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miOpen,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mMRU,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miSave,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miSaveAs,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> mServer,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miOpenURL,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miSaveAsURL,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miExport,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miImport,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPrint,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPreview,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miQuit,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miCut,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miCopy,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPaste,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miOptions,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miDeleteTask,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPropertiesTask,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miDelHuman,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPropHuman,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miSendMailHuman,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miEditCalendar,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miPrjCal,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miWebPage,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miAbout,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miTips,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> miManual,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bNew,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bOpen,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bSaveAs,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bNewTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bImport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bExport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bPrint,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bDelete,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bProperties,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bUnlink,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bLink,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bInd,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bUnind,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bUp,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bDown,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bPrev,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bNext,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bZoomOut,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> bZoomIn,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setButtonText --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bNew,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bOpen,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bSaveAs,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bImport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bExport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bPrint,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bNewTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bDelete,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bProperties,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bUnlink,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bLink,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bInd,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bUnind,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bUp,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bDown,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bPrev,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bNext,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bZoomOut,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> bZoomIn,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bNew,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bOpen,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bSaveAs,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bImport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bExport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bPrint,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> myNewArtefactAction,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bNewTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bDelete,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bProperties,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bUnlink,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bLink,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bInd,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bUnind,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bUp,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bDown,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bPrev,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bNext,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bZoomOut,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bZoomIn,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bNew,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bOpen,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bSave,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bSaveAs,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bImport,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bExport,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bPrint,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> myNewArtefactAction,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bNewTask,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bDelete,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bProperties,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bUnlink,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bLink,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bInd,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bUnind,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bUp,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bDown,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bPrev,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bNext,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bZoomOut,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,addButtons --> bZoomIn,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,upDatas --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,upDatas --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,downDatas --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,downDatas --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,checkCurrentProject --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,checkCurrentProject --> askForSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> helpFrame,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> bNew,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> bOpen,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> bSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> bSaveAs,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> bImport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> bExport,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> bPrint,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> helpFrame,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,launchOptionsDialog --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,launchOptionsDialog --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,launchOptionsDialog --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,newTask --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,newTask --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,newTask --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,newTask --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,newTask --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,newTask --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,deleteTasks --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,deleteTasks --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,deleteTasks --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,deleteTasks --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,deleteTasks --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,propertiesTask --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,propertiesTask --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,propertiesTask$2 --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,propertiesTask$2 --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,propertiesTask$2 --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,propertiesTask$2 --> managerHash,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,propertiesTask$2 --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,unlinkRelationships --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,unlinkRelationships --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,unlinkRelationships --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,unlinkRelationships --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,unlinkRelationships --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,linkRelationships --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,linkRelationships --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,linkRelationships --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,linkRelationships --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,linkRelationships --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> prjInfos,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,refreshProjectInfos --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,refreshProjectInfos --> resp,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,refreshProjectInfos --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,refreshProjectInfos --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,selectExportFile --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,selectExportFile --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,selectExportFile --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> projectDocument,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> askForSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,printProject --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,printProject --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,printProject --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,previewPrint --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,previewPrint --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,newProject --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,newProject --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,newProject --> prjInfos,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,closeProject --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,closeProject --> projectDocument,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,closeProject --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,closeProject --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,closeProject --> prjInfos,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,closeProject --> projectDocument,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setResourcePanelToGraphicArea --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openFile --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openURL --> projectDocument,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openURL$2 --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> documentsMRU,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> bZoomIn,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> bZoomOut,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> projectDocument,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openStartupDocument$2 --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openXMLStream --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openXMLStream --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openXMLStream --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveAsProject --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveAsProject --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveAsURLProject --> projectDocument,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveProject --> projectDocument,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> documentsMRU,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> projectDocument,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> projectDocument,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeWorkingDirectory --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getUIConfiguration --> myUIConfiguration,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,quitApplication --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,quitApplication --> myUIConfiguration,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,quitApplication --> documentsMRU,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,quitApplication --> lookAndFeel,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,quitApplication --> toolBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openWebPage --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openWebPage --> statusBar,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setAskForSave --> bSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setAskForSave --> miSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setAskForSave --> askForSave,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setAskForSave --> askForSave,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getResourcePanel --> resp,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getResourcePanel --> resp,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getLanguage --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getArea --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getTree --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getResourceActions --> myResourceActions,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getResourceActions --> myResourceActions,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,exportProject --> byCommandLine,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,exportPDF --> byCommandLine,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,exportPNG --> byCommandLine,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,exportXFIG --> byCommandLine,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,exportCSV --> byCommandLine,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,exportJPG --> byCommandLine,net.sourceforge.ganttproject.GanttProject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getProjectName --> prjInfos,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setProjectName --> prjInfos,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getDescription --> prjInfos,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setDescription --> prjInfos,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getOrganization --> prjInfos,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setOrganization --> prjInfos,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getWebLink --> prjInfos,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setWebLink --> prjInfos,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getHumanResourceManager --> managerHash,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getTaskManager --> myTaskManager,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,resourceAdded --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,access$0 --> myUIConfiguration,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,access$1 --> myFacadeInvalidator,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,access$2 --> tree,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,access$3 --> language,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,access$4 --> options,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,access$6 --> myNewTaskAction,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,access$7 --> myNewHumanAction,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,access$12 --> area,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,<init> --> taskDefaultColor,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,restoreOptions --> taskDefaultColor,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,changeLanguage --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,upDatas --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,downDatas --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,checkCurrentProject --> WARNING,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,checkCurrentProject --> YES_NO_CANCEL_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,checkCurrentProject --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,checkCurrentProject --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,checkCurrentProject --> CANCEL,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,checkCurrentProject --> YES,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,actionPerformed --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,newTask --> beg,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,deleteTasks --> QUESTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,deleteTasks --> YES_NO_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,deleteTasks --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,deleteTasks --> YES,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,deleteTasks --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,propertiesTask$2 --> change,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,export --> EMPTY,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> myFormat,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> myFile,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> myStorageOptions,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,doExport --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,refreshProjectInfos --> nbTasks,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,selectExportFile --> EMPTY,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,selectExportFile --> WARNING,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,selectExportFile --> YES_NO_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,selectExportFile --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,selectExportFile --> NO,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> QUESTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> YES_NO_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> YES,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,importcbk --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,printProject --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,previewPrint --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,closeProject --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setResourcePanelToGraphicArea --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openURL$2 --> change,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openURL$2 --> fileurl,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openURL$2 --> userName,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openURL$2 --> password,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openURL$2 --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openURL$2 --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> WARNING,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> YES_NO_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> NO,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openDocument --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openStartupDocument$2 --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openStartupDocument$2 --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openXMLStream --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openXMLStream --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveAsProject --> WARNING,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveAsProject --> YES_NO_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveAsProject --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveAsProject --> NO,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveAsURLProject$2 --> change,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveAsURLProject$2 --> fileurl,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveAsURLProject$2 --> userName,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveAsURLProject$2 --> password,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openWebPage --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,openWebPage --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,getProjectName --> _sProjectName,net.sourceforge.ganttproject.PrjInfos,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setProjectName --> _sProjectName,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setDescription --> _sDescription,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setOrganization --> _sOrganization,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject,setWebLink --> _sWebLink,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.document.DocumentsMRU,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.PrjInfos,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getGanttLookAndFeels,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getDefaultInfo,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> setUIConfiguration,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> setDocumentsMRU,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> setLookAndFeel,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> load,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getLanguage,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getDefaultColor,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getLnfInfos,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getLockDAVMinutes,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> setLockDAVMinutes,net.sourceforge.ganttproject.document.HttpDocument,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getUIConfiguration,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.GanttProject$1,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.GanttProject$2,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> newInstance$2,net.sourceforge.ganttproject.task.TaskManager$Access,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getJTree,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.GanttImagePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> setGraphicArea,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.action.NewTaskAction,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.action.NewHumanAction,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.action.DeleteHumanAction,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.action.ImportResources,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.GanttProject$3,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getToolBarPosition,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getShowStatusBar,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> createDocument,net.sourceforge.ganttproject.document.DocumentCreator,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.GanttProject$4,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> isLoaded,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getX,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getY,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getWidth,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getHeight,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> getOpenTips,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,<init> --> <init>,net.sourceforge.ganttproject.gui.TipsDialog,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,updateMenuMRU --> iterator,net.sourceforge.ganttproject.document.DocumentsMRU,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,updateMenuMRU --> <init>,net.sourceforge.ganttproject.document.OpenDocumentAction,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getXslDir --> getXslDir,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,restoreOptions --> initByDefault,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,restoreOptions --> getUIConfiguration,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getXslFo --> getXslFo,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLanguage --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLanguage --> refresh,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLookAndFeel --> getGanttLookAndFeels,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLookAndFeel --> getDefaultInfo,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLookAndFeel --> getJTree,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeLanguageOfMenu --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setButtonText --> getButtonShow,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setButtonText --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> getButtonShow,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> setDefaultIcon,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,applyButtonOptions --> getIconSize,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> getIconSize,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>$3,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> setEnabled,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$5,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.action.NewArtefactAction,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$6,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$7,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$8,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$9,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$10,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$11,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$12,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$13,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$14,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$15,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$16,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,addButtons --> <init>,net.sourceforge.ganttproject.GanttProject$17,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getDisplayName --> toString,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,upDatas --> upCurrentNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,upDatas --> upResource,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,upDatas --> getPeople,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,upDatas --> setPeople,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,downDatas --> downCurrentNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,downDatas --> downResource,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,downDatas --> getPeople,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,downDatas --> setPeople,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,checkCurrentProject --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,checkCurrentProject --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> indentCurrentNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> dedentCurrentNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> propertiesHuman,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.GanttDialogCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> getOpenTips,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.TipsDialog,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.about.AboutDialog,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> sendMail,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> getSelectedTask,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> cutSelectedNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> copySelectedNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,actionPerformed --> pasteNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,launchOptionsDialog --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,launchOptionsDialog --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,launchOptionsDialog --> <init>,net.sourceforge.ganttproject.gui.options.SettingsDialog,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getSelectedTask,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> hasTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> <init>$3,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getTaskNamePrefix,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> setMilestone,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getSelectedNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> toString,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> createTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> setStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> setLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> registerTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getTaskID,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> setName,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getTaskColor,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> setColor,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> colorDefined,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getColor,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> shapeDefined,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getShape,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> setShape,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> addObject,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getAlgorithmCollection,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getAdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> run,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getRecalculateTaskCompletionPercentageAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> run,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> refreshAllChild,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newTask --> getAutomatic,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> getSelectedNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> getFatherNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> removeCurrentNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> getAlgorithmCollection,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> getAdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,deleteTasks --> run,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,propertiesTask --> getSelectedNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,propertiesTask$2 --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,propertiesTask$2 --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,propertiesTask$2 --> <init>,net.sourceforge.ganttproject.gui.GanttDialogProperties,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,unlinkRelationships --> getSelectedNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,unlinkRelationships --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,unlinkRelationships --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,unlinkRelationships --> unlink,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,linkRelationships --> getSelectedNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,linkRelationships --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,linkRelationships --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,linkRelationships --> getDependencyCollection,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,linkRelationships --> createDependency,net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> save,net.sourceforge.ganttproject.io.GanttHTMLExport,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> export,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> export,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> <init>,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> <init>,net.sourceforge.ganttproject.export.PDFExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> doExport,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> <init>,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> save,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> getCSVOptions,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> <init>,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,doExport --> save,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,refreshProjectInfos --> nbPeople,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,refreshProjectInfos --> setSecondText,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,refreshProjectInfos --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> <init>,net.sourceforge.ganttproject.filter.GanttXFIGFileFilter,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> <init>,net.sourceforge.ganttproject.filter.GanttPNGFileFilter,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> <init>,net.sourceforge.ganttproject.filter.GanttJPGFileFilter,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> <init>,net.sourceforge.ganttproject.filter.GanttCSVFilter,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> <init>,net.sourceforge.ganttproject.filter.GanttPDFFileFilter,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> <init>,net.sourceforge.ganttproject.filter.GanttHTMLFileFilter,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> getWorkingDir,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> getExportSettings,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,selectExportFile --> <init>,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> getWorkingDir,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> <init>,net.sourceforge.ganttproject.filter.GanttTXTFileFilter,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> <init>,net.sourceforge.ganttproject.filter.GanttXMLFileFilter,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> <init>,net.sourceforge.ganttproject.io.GanttTXTOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> load,net.sourceforge.ganttproject.io.GanttTXTOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> <init>,net.sourceforge.ganttproject.document.FileDocument,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> <init>,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> <init>,net.sourceforge.ganttproject.parser.ResourceTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> getContext,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> <init>,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> <init>,net.sourceforge.ganttproject.parser.AllocationTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> getDefaultTagHandler,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> addTagHandler,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> getInputStream,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> load$2,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,importcbk --> getDescription,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,printProject --> <init>,net.sourceforge.ganttproject.GanttExportSettings,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,printProject --> getExportSettings,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,printProject --> printProject,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,printProject --> printProject,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,previewPrint --> <init>,net.sourceforge.ganttproject.GanttExportSettings,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,previewPrint --> getChart,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,previewPrint --> <init>,net.sourceforge.ganttproject.gui.GanttPreviewPrint,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,previewPrint --> getChart,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newProject --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newProject --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,newProject --> <init>,net.sourceforge.ganttproject.PrjInfos,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,showNewProjectWizard --> <init>,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,showNewProjectWizard --> createNewProject,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> setProjectLevelTaskColor,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> reset,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> clear,net.sourceforge.ganttproject.resource.ResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> <init>,net.sourceforge.ganttproject.PrjInfos,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> getInstance,net.sourceforge.ganttproject.roles.RoleManager$Access,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> clear,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> releaseLock,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> clear,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,closeProject --> clearTree,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setResourcePanelToGraphicArea --> getZoom,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setResourcePanelToGraphicArea --> setZoom,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setResourcePanelToGraphicArea --> getDate,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setResourcePanelToGraphicArea --> setDate,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openFile --> getWorkingDir,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openFile --> <init>,net.sourceforge.ganttproject.filter.GanttXMLFileFilter,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openFile --> <init>,net.sourceforge.ganttproject.document.FileDocument,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openURL$2 --> getURLPath,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openURL$2 --> getUsername,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openURL$2 --> getPassword,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openURL$2 --> <init>,net.sourceforge.ganttproject.gui.GanttURLChooser,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openURL$2 --> setUserInfo,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openURL$2 --> createDocument$2,net.sourceforge.ganttproject.document.DocumentCreator,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openURL$2 --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openURL$2 --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> getDescription,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> getInputStream,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> acquireLock,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> <init>,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> <init>,net.sourceforge.ganttproject.parser.ResourceTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> getContext,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> <init>,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> <init>,net.sourceforge.ganttproject.parser.AllocationTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> <init>,net.sourceforge.ganttproject.parser.RoleTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> getDefaultTagHandler,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> addTagHandler,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> addParsingListener,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> load$2,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> add,net.sourceforge.ganttproject.document.DocumentsMRU,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> getZoom,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> setEnabled,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> getPath,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openDocument --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openStartupDocument --> createDocument,net.sourceforge.ganttproject.document.DocumentCreator,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openStartupDocument$2 --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openStartupDocument$2 --> getDescription,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openStartupDocument$2 --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> clearTree,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> reset,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> clear,net.sourceforge.ganttproject.resource.ResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> clear,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> getInstance,net.sourceforge.ganttproject.roles.RoleManager$Access,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> clear,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> <init>,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> <init>,net.sourceforge.ganttproject.parser.ResourceTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> getContext,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> <init>,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> <init>,net.sourceforge.ganttproject.parser.AllocationTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> getDefaultTagHandler,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> addTagHandler,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> addParsingListener,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> load$2,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openXMLStream --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsProject --> getWorkingDir,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsProject --> <init>,net.sourceforge.ganttproject.filter.GanttXMLFileFilter,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsProject --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsProject --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsProject --> <init>,net.sourceforge.ganttproject.document.FileDocument,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsURLProject$2 --> getURLPath,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsURLProject$2 --> getUsername,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsURLProject$2 --> getPassword,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsURLProject$2 --> <init>,net.sourceforge.ganttproject.gui.GanttURLChooser,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveAsURLProject$2 --> createDocument$2,net.sourceforge.ganttproject.document.DocumentCreator,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> canWrite,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> acquireLock,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> getDescription,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> <init>,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> getOutputStream,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> save,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> getPath,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> add,net.sourceforge.ganttproject.document.DocumentsMRU,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> releaseLock,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,saveProject$2 --> getFilePath,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,changeWorkingDirectory --> setWorkingDirectory,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,quitApplication --> setWindowPosition,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,quitApplication --> setWindowSize,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,quitApplication --> setUIConfiguration,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,quitApplication --> setDocumentsMRU,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,quitApplication --> setLookAndFeel,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,quitApplication --> setToolBarPosition,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,quitApplication --> save,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openWebPage --> displayURL,net.sourceforge.ganttproject.util.BrowserControl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openWebPage --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openWebPage --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openWebPage --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,openWebPage --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,setAskForSave --> setEnabled,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getResourcePanel --> <init>,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getResourcePanel --> setResourceActions,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getResourceActions --> <init>,net.sourceforge.ganttproject.action.ResourceActionSet,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> <init>,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> setXslDir,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> setXslFo,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> <init>,net.sourceforge.ganttproject.GanttSplash,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,main --> close,net.sourceforge.ganttproject.GanttSplash,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportProject --> <init>,net.sourceforge.ganttproject.GanttExportSettings,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportProject --> <init>,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportPDF --> <init>,net.sourceforge.ganttproject.GanttExportSettings,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportPDF --> <init>,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportPNG --> <init>,net.sourceforge.ganttproject.GanttExportSettings,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportPNG --> <init>,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportXFIG --> <init>,net.sourceforge.ganttproject.GanttExportSettings,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportXFIG --> <init>,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportCSV --> <init>,net.sourceforge.ganttproject.GanttExportSettings,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportCSV --> <init>,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportJPG --> <init>,net.sourceforge.ganttproject.GanttExportSettings,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,exportJPG --> <init>,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getDescription --> getDescription,net.sourceforge.ganttproject.PrjInfos,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getOrganization --> getOrganization,net.sourceforge.ganttproject.PrjInfos,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getWebLink --> getWebLink,net.sourceforge.ganttproject.PrjInfos,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getHumanResourceManager --> getDefaultRole,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getHumanResourceManager --> <init>,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getHumanResourceManager --> addView,net.sourceforge.ganttproject.resource.ResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,getRoleManager --> getInstance,net.sourceforge.ganttproject.roles.RoleManager$Access,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,resourceAdded --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,resourceAdded --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject,resourceAdded --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
EndClass 1
StartClass 2
Class(net.sourceforge.ganttproject.IGanttProject,Y,Y,Public);
Method(getProjectName,java.lang.String,Public,N,Y);
Method(setProjectName,void,Public,N,Y);
Method(getDescription,java.lang.String,Public,N,Y);
Method(setDescription,void,Public,N,Y);
Method(getOrganization,java.lang.String,Public,N,Y);
Method(setOrganization,void,Public,N,Y);
Method(getWebLink,java.lang.String,Public,N,Y);
Method(setWebLink,void,Public,N,Y);
Method(newTask,net.sourceforge.ganttproject.task.Task,Public,N,Y);
Method(getI18n,net.sourceforge.ganttproject.language.GanttLanguage,Public,N,Y);
Method(getUIConfiguration,net.sourceforge.ganttproject.gui.UIConfiguration,Public,N,Y);
Method(getHumanResourceManager,net.sourceforge.ganttproject.resource.ResourceManager,Public,N,Y);
Method(getRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Public,N,Y);
Method(getTaskManager,net.sourceforge.ganttproject.task.TaskManager,Public,N,Y);
Parameter(setProjectName,java.lang.String,);
Parameter(setDescription,java.lang.String,);
Parameter(setOrganization,java.lang.String,);
Parameter(setWebLink,java.lang.String,);
EndClass 2
StartClass 3
Class(net.sourceforge.ganttproject.resource.ResourceView,Y,Y,Public);
Method(resourceAdded,void,Public,N,Y);
Method(resourcesRemoved,void,Public,N,Y);
Parameter(resourceAdded,net.sourceforge.ganttproject.resource.ResourceEvent,);
Parameter(resourcesRemoved,net.sourceforge.ganttproject.resource.ResourceEvent,);
EndClass 3
StartClass 4
Class(net.sourceforge.ganttproject.language.GanttLanguage,N,N,Public);
Attribute(ganttLanguage,net.sourceforge.ganttproject.language.GanttLanguage,Private,Y,N,);
Attribute(myListeners,java.util.ArrayList,Private,N,N,);
Attribute(currentLocale,java.util.Locale,Public,N,N,);
Attribute(i18n,java.util.ResourceBundle,Public,N,N,);
Attribute(currentDateFormat,java.text.DateFormat,Public,N,N,);
Attribute(currentTimeFormat,java.text.DateFormat,Public,N,N,);
Method(<clinit>,void,Public,Y,N);
Method(getInstance,net.sourceforge.ganttproject.language.GanttLanguage,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(setLocale,void,Public,N,N);
Method(formatDate,java.lang.String,Public,N,N);
Method(formatTime,java.lang.String,Public,N,N);
Method(parseDate,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(getMonth,java.lang.String,Public,N,N);
Method(getDay,java.lang.String,Public,N,N);
Method(getText,java.lang.String,Public,N,N);
Method(getComponentOrientation,java.awt.ComponentOrientation,Public,N,N);
Method(addListener,void,Public,N,N);
Method(removeListener,void,Public,N,N);
Method(fireLanguageChanged,void,Private,N,N);
Parameter(setLocale,java.util.Locale,);
Parameter(formatDate,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(formatTime,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(parseDate,java.lang.String,);
Parameter(getMonth,int,);
Parameter(getDay,int,);
Parameter(getText,java.lang.String,);
Parameter(addListener,net.sourceforge.ganttproject.language.GanttLanguage$Listener,);
Parameter(removeListener,net.sourceforge.ganttproject.language.GanttLanguage$Listener,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Call(METHOD,net.sourceforge.ganttproject.language.GanttLanguage,getInstance --> <init>,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.language.GanttLanguage,<init> --> setLocale,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.language.GanttLanguage,setLocale --> fireLanguageChanged,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,<clinit> --> ganttLanguage,net.sourceforge.ganttproject.language.GanttLanguage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,getInstance --> ganttLanguage,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,getInstance --> ganttLanguage,net.sourceforge.ganttproject.language.GanttLanguage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,<init> --> myListeners,net.sourceforge.ganttproject.language.GanttLanguage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,<init> --> currentLocale,net.sourceforge.ganttproject.language.GanttLanguage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,<init> --> i18n,net.sourceforge.ganttproject.language.GanttLanguage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,<init> --> currentDateFormat,net.sourceforge.ganttproject.language.GanttLanguage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,<init> --> currentTimeFormat,net.sourceforge.ganttproject.language.GanttLanguage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,setLocale --> currentLocale,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,setLocale --> currentLocale,net.sourceforge.ganttproject.language.GanttLanguage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,setLocale --> currentDateFormat,net.sourceforge.ganttproject.language.GanttLanguage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,setLocale --> currentTimeFormat,net.sourceforge.ganttproject.language.GanttLanguage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,setLocale --> i18n,net.sourceforge.ganttproject.language.GanttLanguage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,formatDate --> currentDateFormat,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,formatTime --> currentTimeFormat,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,parseDate --> currentLocale,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,parseDate --> currentDateFormat,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,getMonth --> currentLocale,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,getDay --> currentLocale,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,getText --> i18n,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,getComponentOrientation --> currentLocale,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,addListener --> myListeners,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,removeListener --> myListeners,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage,fireLanguageChanged --> myListeners,net.sourceforge.ganttproject.language.GanttLanguage,READ);
Call(METHOD,net.sourceforge.ganttproject.language.GanttLanguage,parseDate --> <init>$2,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.language.GanttLanguage,getMonth --> <init>$2,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.language.GanttLanguage,getDay --> <init>$2,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.language.GanttLanguage,getDay --> add,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.language.GanttLanguage,fireLanguageChanged --> <init>,net.sourceforge.ganttproject.language.GanttLanguage$Event,);
Call(METHOD,net.sourceforge.ganttproject.language.GanttLanguage,fireLanguageChanged --> languageChanged,net.sourceforge.ganttproject.language.GanttLanguage$Listener,);
EndClass 4
StartClass 5
Class(net.sourceforge.ganttproject.GanttTree,N,N,Public);
Attribute(rootNode,javax.swing.tree.DefaultMutableTreeNode,Private,N,N,);
Attribute(treeModel,javax.swing.tree.DefaultTreeModel,Private,N,N,);
Attribute(tree,javax.swing.JTree,Private,N,N,);
Attribute(area,net.sourceforge.ganttproject.GanttGraphicArea,Private,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Attribute(AUTOSCROLL_MARGIN,int,Private,Y,Y,);
Attribute(vbar,javax.swing.JScrollBar,Public,N,N,);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Public,N,N,);
Attribute(nbTasks,int,Public,N,N,);
Attribute(dragPath,javax.swing.tree.TreePath,Private,N,N,);
Attribute(ghostImage,java.awt.image.BufferedImage,Private,N,N,);
Attribute(offsetPoint,java.awt.Point,Private,N,N,);
Attribute(myTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,Y,);
Attribute(cpNode,javax.swing.tree.DefaultMutableTreeNode,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(initRootNode,void,Private,N,N);
Method(createPopupMenu,void,Public,N,N);
Method(setGraphicArea,void,Public,N,N);
Method(addObjectWithExpand,javax.swing.tree.DefaultMutableTreeNode,Public,N,N);
Method(addObject,javax.swing.tree.DefaultMutableTreeNode,Public,N,N);
Method(getSelectedTask,net.sourceforge.ganttproject.GanttTask,Public,N,N);
Method(getSelectedNode,javax.swing.tree.DefaultMutableTreeNode,Public,N,N);
Method(getSelectedNodes,javax.swing.tree.DefaultMutableTreeNode[],Public,N,N);
Method(getTask,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(getNode,javax.swing.tree.DefaultMutableTreeNode,Public,N,N);
Method(hasTasks,boolean,Public,N,N);
Method(getAllTasks,java.util.ArrayList,Public,N,N);
Method(getAllChildTask,java.util.ArrayList,Public,N,N);
Method(getAllChildTask$2,java.util.ArrayList,Public,N,N);
Method(computePercentComplete,void,Public,N,N);
Method(getLastNode,javax.swing.tree.DefaultMutableTreeNode,Public,N,N);
Method(getAllTaskArray,java.lang.Object[],Public,N,N);
Method(getAllTaskString,java.lang.String[],Public,N,N);
Method(getArryListTaskString,java.util.ArrayList,Public,N,N);
Method(removeCurrentNode,void,Public,N,N);
Method(clearTree,void,Public,N,N);
Method(selectTreeRow,void,Public,N,N);
Method(getFatherNode,javax.swing.tree.DefaultMutableTreeNode,Public,N,N);
Method(getFatherNode$2,javax.swing.tree.DefaultMutableTreeNode,Public,N,N);
Method(getJTree,javax.swing.JTree,Public,N,N);
Method(getRoot,javax.swing.tree.DefaultMutableTreeNode,Public,N,N);
Method(checkDepend,boolean,Public,N,N);
Method(upCurrentNodes,void,Public,N,N);
Method(downCurrentNodes,void,Public,N,N);
Method(indentCurrentNodes,void,Public,N,N);
Method(dedentCurrentNodes,void,Public,N,N);
Method(expandRefresh,void,Public,N,N);
Method(refreshAllChild,void,Public,N,N);
Method(refreshAllFather,void,Public,N,N);
Method(cutSelectedNode,void,Public,N,N);
Method(copySelectedNode,void,Public,N,N);
Method(pasteNode,void,Public,N,N);
Method(insertClonedNode,void,Private,N,N);
Method(forwardScheduling,void,Public,N,N);
Method(getAllGanttTasks,java.util.ArrayList,Public,N,N);
Method(setAllTasksUnchecked,void,Private,N,N);
Method(getTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,N);
Method(dragEnter,void,Public,N,N);
Method(dragOver,void,Public,N,N);
Method(dropActionChanged,void,Public,N,N);
Method(dragDropEnd,void,Public,N,N);
Method(dragExit,void,Public,N,N);
Method(dragGestureRecognized,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.GanttGraphicArea,Public,Y,N);
Method(access$1,net.sourceforge.ganttproject.GanttProject,Public,Y,N);
Method(access$2,javax.swing.JTree,Public,Y,N);
Method(access$3,java.awt.image.BufferedImage,Public,Y,N);
Method(access$4,void,Public,Y,N);
Method(access$5,java.awt.Point,Public,Y,N);
Method(access$6,javax.swing.tree.DefaultTreeModel,Public,Y,N);
Method(access$7,javax.swing.tree.TreePath,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(createPopupMenu,int,);
Parameter(createPopupMenu,int,);
Parameter(createPopupMenu,boolean,);
Parameter(setGraphicArea,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(addObjectWithExpand,java.lang.Object,);
Parameter(addObjectWithExpand,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(addObject,java.lang.Object,);
Parameter(addObject,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(getTask,java.lang.String,);
Parameter(getNode,int,);
Parameter(getAllChildTask,net.sourceforge.ganttproject.task.Task,);
Parameter(getAllChildTask$2,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(computePercentComplete,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(getAllTaskString,java.lang.String,);
Parameter(getArryListTaskString,java.lang.String,);
Parameter(selectTreeRow,int,);
Parameter(getFatherNode,net.sourceforge.ganttproject.task.Task,);
Parameter(getFatherNode$2,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(checkDepend,net.sourceforge.ganttproject.task.Task,);
Parameter(checkDepend,net.sourceforge.ganttproject.GanttTask,);
Parameter(expandRefresh,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(refreshAllChild,java.lang.String,);
Parameter(refreshAllFather,java.lang.String,);
Parameter(insertClonedNode,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(insertClonedNode,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(insertClonedNode,int,);
Parameter(insertClonedNode,boolean,);
Parameter(dragEnter,java.awt.dnd.DragSourceDragEvent,);
Parameter(dragOver,java.awt.dnd.DragSourceDragEvent,);
Parameter(dropActionChanged,java.awt.dnd.DragSourceDragEvent,);
Parameter(dragDropEnd,java.awt.dnd.DragSourceDropEvent,);
Parameter(dragExit,java.awt.dnd.DragSourceEvent,);
Parameter(dragGestureRecognized,java.awt.dnd.DragGestureEvent,);
Parameter(access$0,net.sourceforge.ganttproject.GanttTree,);
Parameter(access$1,net.sourceforge.ganttproject.GanttTree,);
Parameter(access$2,net.sourceforge.ganttproject.GanttTree,);
Parameter(access$3,net.sourceforge.ganttproject.GanttTree,);
Parameter(access$4,net.sourceforge.ganttproject.GanttTree,);
Parameter(access$4,java.awt.image.BufferedImage,);
Parameter(access$5,net.sourceforge.ganttproject.GanttTree,);
Parameter(access$6,net.sourceforge.ganttproject.GanttTree,);
Parameter(access$7,net.sourceforge.ganttproject.GanttTree,);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Composition(net.sourceforge.ganttproject.GanttProject);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.task.TaskManager);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,<init> --> initRootNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,initRootNode --> getTaskManager,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,addObjectWithExpand --> forwardScheduling,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,addObject --> forwardScheduling,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,getSelectedTask --> getSelectedNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,getAllChildTask --> getNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,getAllTaskArray --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,getAllTaskString --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,getArryListTaskString --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,removeCurrentNode --> forwardScheduling,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,clearTree --> initRootNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,getFatherNode --> getNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,checkDepend --> getAllChildTask,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,checkDepend --> getTaskManager,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,checkDepend --> checkDepend,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> getSelectedNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> getFatherNode$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> expandRefresh,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> forwardScheduling,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> getSelectedNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> getFatherNode$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> expandRefresh,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> forwardScheduling,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> getSelectedNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> getFatherNode$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> refreshAllFather,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> expandRefresh,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> forwardScheduling,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> getSelectedNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> getFatherNode$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> refreshAllFather,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> expandRefresh,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> forwardScheduling,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,expandRefresh --> expandRefresh,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,refreshAllChild --> forwardScheduling,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,refreshAllFather --> getTaskManager,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,refreshAllFather --> getFatherNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,cutSelectedNode --> getSelectedNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,cutSelectedNode --> getFatherNode$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,cutSelectedNode --> removeCurrentNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,cutSelectedNode --> getTaskManager,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,pasteNode --> insertClonedNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> getTaskManager,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> insertClonedNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,forwardScheduling --> getTaskManager,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,setAllTasksUnchecked --> getAllGanttTasks,net.sourceforge.ganttproject.GanttTree,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> rootNode,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> treeModel,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> vbar,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> area,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> language,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> nbTasks,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> dragPath,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> ghostImage,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> offsetPoint,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> myTaskManager,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> appli,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> treeModel,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> tree,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,<init> --> vbar,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,initRootNode --> rootNode,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,createPopupMenu --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,createPopupMenu --> appli,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,createPopupMenu --> language,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,createPopupMenu --> area,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,setGraphicArea --> area,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObjectWithExpand --> rootNode,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObjectWithExpand --> treeModel,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObjectWithExpand --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObjectWithExpand --> nbTasks,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObjectWithExpand --> appli,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObjectWithExpand --> nbTasks,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObject --> rootNode,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObject --> treeModel,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObject --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObject --> nbTasks,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObject --> appli,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,addObject --> nbTasks,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,getSelectedNode --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,getSelectedNodes --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,getTask --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,getNode --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,hasTasks --> rootNode,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,getAllTasks --> rootNode,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,getLastNode --> rootNode,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,removeCurrentNode --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,removeCurrentNode --> treeModel,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,removeCurrentNode --> nbTasks,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,removeCurrentNode --> appli,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,removeCurrentNode --> nbTasks,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,clearTree --> rootNode,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,clearTree --> treeModel,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,clearTree --> nbTasks,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,selectTreeRow --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,getJTree --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,getRoot --> rootNode,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> appli,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> language,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> treeModel,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> area,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> appli,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> language,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> treeModel,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> area,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> appli,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> language,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> treeModel,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> area,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> appli,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> language,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> treeModel,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> area,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,expandRefresh --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,cutSelectedNode --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,cutSelectedNode --> area,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,cutSelectedNode --> cpNode,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,copySelectedNode --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,copySelectedNode --> cpNode,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,pasteNode --> cpNode,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,pasteNode --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,pasteNode --> rootNode,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> language,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> treeModel,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,getAllGanttTasks --> rootNode,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,getTaskManager --> myTaskManager,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,dragGestureRecognized --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,dragGestureRecognized --> offsetPoint,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,dragGestureRecognized --> ghostImage,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,dragGestureRecognized --> ghostImage,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,dragGestureRecognized --> dragPath,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,access$0 --> area,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,access$1 --> appli,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,access$2 --> tree,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,access$3 --> ghostImage,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,access$4 --> ghostImage,net.sourceforge.ganttproject.GanttTree,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,access$5 --> offsetPoint,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,access$6 --> treeModel,net.sourceforge.ganttproject.GanttTree,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree,access$7 --> dragPath,net.sourceforge.ganttproject.GanttTree,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,<init> --> <init>,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,<init> --> <init>,net.sourceforge.ganttproject.GanttTree$AutoscrollingTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,<init> --> <init>,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,<init> --> <init>,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,<init> --> <init>,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,<init> --> <init>,net.sourceforge.ganttproject.GanttTree$GanttAdjustmentListener,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,<init> --> <init>,net.sourceforge.ganttproject.GanttTree$1,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,<init> --> <init>,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,initRootNode --> getRootTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,createPopupMenu --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,createPopupMenu --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,createPopupMenu --> createNewItem$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,createPopupMenu --> <init>,net.sourceforge.ganttproject.action.NewTaskAction,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,createPopupMenu --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,createPopupMenu --> getScrollBar,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,addObjectWithExpand --> getExpand,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,addObjectWithExpand --> setExpand,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,addObjectWithExpand --> refreshProjectInfos,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,addObject --> refreshProjectInfos,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,getNode --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,getAllChildTask --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,computePercentComplete --> getLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,computePercentComplete --> getCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,computePercentComplete --> setCompletionPercentage,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,removeCurrentNode --> refreshProjectInfos,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,getFatherNode --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,checkDepend --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,checkDepend --> getTaskID,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,checkDepend --> getSuccessorsOld,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,checkDepend --> getSuccessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,checkDepend --> getTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> getStatusBar,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,upCurrentNodes --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> getStatusBar,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,downCurrentNodes --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> getStatusBar,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,indentCurrentNodes --> setMilestone,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> getStatusBar,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,dedentCurrentNodes --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,expandRefresh --> getExpand,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,refreshAllFather --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,refreshAllFather --> <init>,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,cutSelectedNode --> getAlgorithmCollection,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,cutSelectedNode --> getAdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,cutSelectedNode --> run,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> isMilestone,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> setMilestone,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> getLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> setLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> setStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> Clone,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> toString,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> setName,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> getMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> setTaskID,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> registerTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,insertClonedNode --> setExpand,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,forwardScheduling --> getAlgorithmCollection,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,forwardScheduling --> getRecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,forwardScheduling --> run$2,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,setAllTasksUnchecked --> setChecked,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree,dragGestureRecognized --> <init>,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,);
EndClass 5
StartClass 6
Class(net.sourceforge.ganttproject.GanttGraphicArea,N,N,Public);
Attribute(date,net.sourceforge.ganttproject.GanttCalendar,Public,N,N,);
Attribute(olddate,net.sourceforge.ganttproject.GanttCalendar,Public,N,N,);
Attribute(tree,net.sourceforge.ganttproject.GanttTree,Public,N,N,);
Attribute(ONE_WEEK,int,Public,Y,Y,);
Attribute(TWO_WEEK,int,Public,Y,Y,);
Attribute(ONE_MONTH,int,Public,Y,Y,);
Attribute(TWO_MONTH,int,Public,Y,Y,);
Attribute(THREE_MONTH,int,Public,Y,Y,);
Attribute(FOUR_MONTH,int,Public,Y,Y,);
Attribute(SIX_MONTH,int,Public,Y,Y,);
Attribute(ONE_YEAR,int,Public,Y,Y,);
Attribute(TWO_YEAR,int,Public,Y,Y,);
Attribute(THREE_YEAR,int,Public,Y,Y,);
Attribute(taskDefaultColor,java.awt.Color,Public,Y,N,);
Attribute(zoomValue,int,Private,N,N,);
Attribute(listOfParam,java.util.ArrayList,Private,N,N,);
Attribute(margY,int,Private,N,N,);
Attribute(upperLeft,java.awt.Point,Private,N,N,);
Attribute(printRendering,boolean,Private,N,N,);
Attribute(drawdepend,boolean,Private,N,N,);
Attribute(drawPercent,boolean,Private,N,N,);
Attribute(drawName,boolean,Private,N,N,);
Attribute(draw3dBorders,boolean,Private,N,N,);
Attribute(drawVersion,boolean,Private,N,N,);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Attribute(oldX,int,Private,N,N,);
Attribute(oldY,int,Private,N,N,);
Attribute(moveView,boolean,Private,N,N,);
Attribute(moveTask,int,Private,N,N,);
Attribute(curs,boolean,Public,N,N,);
Attribute(drag,int,Public,N,N,);
Attribute(typeSeletion,int,Public,N,N,);
Attribute(storeTaskLength,int,Private,N,N,);
Attribute(addTaskLength,float,Private,N,N,);
Attribute(storeTaskStart,net.sourceforge.ganttproject.GanttCalendar,Private,N,N,);
Attribute(storeX,int[],Private,N,N,);
Attribute(arrow,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,Private,N,N,);
Attribute(notes,net.sourceforge.ganttproject.GanttGraphicArea$Notes,Private,N,N,);
Attribute(taskToMove,net.sourceforge.ganttproject.GanttTask,Private,N,N,);
Attribute(arrayColor,java.awt.Color[],Private,N,N,);
Attribute(listOfTask,java.util.ArrayList,Private,N,N,);
Attribute(beg,net.sourceforge.ganttproject.GanttCalendar,Public,N,N,);
Attribute(end,net.sourceforge.ganttproject.GanttCalendar,Public,N,N,);
Attribute(mouseButton,int,Public,N,N,);
Attribute(myUIConfiguration,net.sourceforge.ganttproject.gui.UIConfiguration,Private,N,Y,);
Attribute(myProjectLevelTaskColor,java.awt.Color,Private,N,N,);
Attribute(myTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,Y,);
Attribute(rowCount,int,Private,N,N,);
Method(<clinit>,void,Public,Y,N);
Method(getTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,N);
Method(<init>,void,Public,N,N);
Method(getTaskColor,java.awt.Color,Public,N,N);
Method(setProjectLevelTaskColor,void,Public,N,N);
Method(detectPosition,int,Public,N,N);
Method(setTaskToMove,void,Public,N,N);
Method(getPreferredSize,java.awt.Dimension,Public,N,N);
Method(changeDate,void,Public,N,N);
Method(changeDate2,void,Public,N,N);
Method(zoomToBegin,void,Public,N,N);
Method(paintComponent,void,Public,N,N);
Method(drawGPVersion,void,Public,N,N);
Method(isVisible,boolean,Public,N,N);
Method(indexOf,int,Public,N,N);
Method(setScrollBar,void,Public,N,N);
Method(getScrollBar,int,Public,N,N);
Method(setZoom,void,Public,N,N);
Method(zoomMore,void,Public,N,N);
Method(zoomLess,void,Public,N,N);
Method(getZoom,int,Public,N,N);
Method(setDate,void,Public,N,N);
Method(getDate,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(getGranit,int,Public,N,N);
Method(getFoot,int,Public,N,N);
Method(calcProjectBegAndEnd,void,Public,N,N);
Method(paintCalendar1,void,Public,N,N);
Method(paintCalendar2New,void,Public,N,N);
Method(paintCalendar2,void,Public,N,N);
Method(paintCalendar2Old,void,Public,N,N);
Method(paintTasks,void,Public,N,N);
Method(paintATaskFather,void,Public,N,N);
Method(paintATaskChild,void,Public,N,N);
Method(paintATaskBilan,void,Public,N,N);
Method(paintResources,void,Public,N,N);
Method(paintDepend,void,Public,N,N);
Method(paintAdvancement,int,Public,N,N);
Method(drawVerticalLinedash,void,Public,N,N);
Method(getChart,java.awt.image.BufferedImage,Public,N,N);
Method(printTasks,void,Private,N,N);
Method(printTask,int,Private,N,N);
Method(printProject,void,Public,N,N);
Method(export,void,Public,N,N);
Method(getTree,net.sourceforge.ganttproject.GanttTree,Private,N,N);
Method(fitWholeProject,void,Public,N,N);
Method(access$0,java.awt.Color[],Public,Y,N);
Method(access$1,net.sourceforge.ganttproject.task.TaskManager,Public,Y,N);
Method(access$2,net.sourceforge.ganttproject.GanttProject,Public,Y,N);
Method(access$3,int,Public,Y,N);
Method(access$4,void,Public,Y,N);
Method(access$5,void,Public,Y,N);
Method(access$6,void,Public,Y,N);
Method(access$7,void,Public,Y,N);
Method(access$8,void,Public,Y,N);
Method(access$9,int,Public,Y,N);
Method(access$10,java.util.ArrayList,Public,Y,N);
Method(access$11,void,Public,Y,N);
Method(access$12,net.sourceforge.ganttproject.GanttTask,Public,Y,N);
Method(access$13,void,Public,Y,N);
Method(access$14,void,Public,Y,N);
Method(access$15,int[],Public,Y,N);
Method(access$16,int,Public,Y,N);
Method(access$17,boolean,Public,Y,N);
Method(access$18,int,Public,Y,N);
Method(access$19,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,Public,Y,N);
Method(access$20,net.sourceforge.ganttproject.GanttGraphicArea$Notes,Public,Y,N);
Method(access$21,net.sourceforge.ganttproject.task.TaskManager,Public,Y,N);
Method(access$22,float,Public,Y,N);
Method(access$23,net.sourceforge.ganttproject.GanttCalendar,Public,Y,N);
Method(access$24,int,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(<init>,net.sourceforge.ganttproject.gui.UIConfiguration,);
Parameter(setProjectLevelTaskColor,java.awt.Color,);
Parameter(detectPosition,int,);
Parameter(detectPosition,int,);
Parameter(detectPosition,boolean,);
Parameter(setTaskToMove,int,);
Parameter(changeDate,boolean,);
Parameter(changeDate2,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(paintComponent,java.awt.Graphics,);
Parameter(drawGPVersion,java.awt.Graphics,);
Parameter(isVisible,net.sourceforge.ganttproject.task.Task,);
Parameter(indexOf,java.util.ArrayList,);
Parameter(indexOf,int,);
Parameter(setScrollBar,int,);
Parameter(setZoom,int,);
Parameter(setDate,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(getGranit,boolean,);
Parameter(paintCalendar1,java.awt.Graphics,);
Parameter(paintCalendar2New,java.awt.Graphics,);
Parameter(paintCalendar2,java.awt.Graphics,);
Parameter(paintCalendar2Old,java.awt.Graphics,);
Parameter(paintTasks,java.awt.Graphics,);
Parameter(paintATaskFather,java.awt.Graphics,);
Parameter(paintATaskFather,int,);
Parameter(paintATaskFather,int,);
Parameter(paintATaskFather,int,);
Parameter(paintATaskFather,net.sourceforge.ganttproject.task.Task,);
Parameter(paintATaskChild,java.awt.Graphics,);
Parameter(paintATaskChild,int,);
Parameter(paintATaskChild,int,);
Parameter(paintATaskChild,int,);
Parameter(paintATaskChild,net.sourceforge.ganttproject.task.Task,);
Parameter(paintATaskBilan,java.awt.Graphics,);
Parameter(paintATaskBilan,int,);
Parameter(paintATaskBilan,int,);
Parameter(paintATaskBilan,net.sourceforge.ganttproject.task.Task,);
Parameter(paintResources,int,);
Parameter(paintResources,int,);
Parameter(paintResources,net.sourceforge.ganttproject.task.Task,);
Parameter(paintResources,java.awt.Graphics,);
Parameter(paintDepend,java.awt.Graphics,);
Parameter(paintAdvancement,java.awt.Graphics,);
Parameter(paintAdvancement,int,);
Parameter(paintAdvancement,int,);
Parameter(paintAdvancement,int,);
Parameter(paintAdvancement,int,);
Parameter(paintAdvancement,net.sourceforge.ganttproject.shape.ShapePaint,);
Parameter(paintAdvancement,java.awt.Color,);
Parameter(paintAdvancement,boolean,);
Parameter(drawVerticalLinedash,java.awt.Graphics,);
Parameter(drawVerticalLinedash,int,);
Parameter(drawVerticalLinedash,int,);
Parameter(drawVerticalLinedash,int,);
Parameter(drawVerticalLinedash,int,);
Parameter(getChart,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(printTasks,java.awt.Graphics,);
Parameter(printTask,java.awt.Graphics,);
Parameter(printTask,int,);
Parameter(printTask,int,);
Parameter(printTask,java.util.ArrayList,);
Parameter(printProject,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(export,java.io.File,);
Parameter(export,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(export,java.lang.String,);
Parameter(fitWholeProject,boolean,);
Parameter(access$0,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$1,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$2,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$3,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$4,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$4,int,);
Parameter(access$5,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$5,int,);
Parameter(access$6,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$6,int,);
Parameter(access$7,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$7,boolean,);
Parameter(access$8,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$8,int,);
Parameter(access$9,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$10,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$11,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$11,float,);
Parameter(access$12,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$13,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$13,int,);
Parameter(access$14,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$14,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(access$15,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$16,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$17,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$18,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$19,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$20,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$21,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$22,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$23,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(access$24,net.sourceforge.ganttproject.GanttGraphicArea,);
Composition(net.sourceforge.ganttproject.GanttCalendar);
Composition(net.sourceforge.ganttproject.GanttTree);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.GanttProject);
Composition(net.sourceforge.ganttproject.GanttGraphicArea$Arrow);
Composition(net.sourceforge.ganttproject.GanttGraphicArea$Notes);
Composition(net.sourceforge.ganttproject.GanttTask);
Composition(net.sourceforge.ganttproject.gui.UIConfiguration);
Composition(net.sourceforge.ganttproject.task.TaskManager);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> setTaskToMove,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,setTaskToMove --> getTaskManager,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> paintCalendar1,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> paintTasks,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> paintDepend,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> paintCalendar2,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> drawGPVersion,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> getGranit,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> getGranit,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> calcProjectBegAndEnd,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> getFoot,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> drawVerticalLinedash,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2 --> paintCalendar2Old,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> getGranit,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> getFoot,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> getGranit,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> isVisible,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> paintATaskBilan,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> paintATaskFather,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> paintAdvancement,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> paintATaskChild,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskFather --> paintResources,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskChild --> paintResources,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskBilan --> getGranit,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskBilan --> paintResources,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> isVisible,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> indexOf,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> calcProjectBegAndEnd,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> zoomToBegin,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> changeDate2,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> getTree,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> isVisible,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> changeDate,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> printTasks,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> paintComponent,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> drawGPVersion,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printTasks --> getTree,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printTasks --> printTask,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printTask --> isVisible,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printTask --> getTree,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printTask --> printTask,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printProject --> getChart,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,export --> getChart,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> getTree,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> isVisible,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> setZoom,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> setDate,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> zoomToBegin,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> setScrollBar,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,access$21 --> getTaskManager,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<clinit> --> taskDefaultColor,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getTaskManager --> myTaskManager,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> myTaskManager,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> arrayColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> taskDefaultColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> listOfParam,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> upperLeft,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> printRendering,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> drawdepend,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> drawPercent,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> drawName,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> draw3dBorders,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> drawVersion,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> language,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> moveView,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> moveTask,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> curs,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> drag,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> storeX,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> arrow,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> notes,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> arrayColor,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> beg,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> end,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> mouseButton,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> rowCount,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> myTaskManager,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> myUIConfiguration,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> date,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> olddate,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> tree,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> margY,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> appli,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getTaskColor --> myProjectLevelTaskColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getTaskColor --> myUIConfiguration,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,setProjectLevelTaskColor --> myProjectLevelTaskColor,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> listOfParam,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> margY,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> taskToMove,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> arrow,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> notes,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> typeSeletion,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> notes,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> arrow,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,setTaskToMove --> listOfParam,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,setTaskToMove --> taskToMove,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,changeDate --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,changeDate --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,changeDate2 --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomToBegin --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomToBegin --> language,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomToBegin --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> tree,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> drawdepend,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> arrow,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> notes,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> drawVersion,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> listOfTask,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,isVisible --> tree,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,setScrollBar --> margY,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getScrollBar --> margY,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,setZoom --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomMore --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomMore --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomMore --> olddate,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomMore --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomLess --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomLess --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomLess --> olddate,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomLess --> date,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,zoomLess --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getZoom --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,setDate --> date,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getDate --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getGranit --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getGranit --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getFoot --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getFoot --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> beg,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> end,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> listOfTask,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> tree,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> appli,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> beg,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> end,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> listOfTask,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> printRendering,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> language,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> arrayColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> draw3dBorders,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> myUIConfiguration,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> beg,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> end,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> arrayColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> language,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> myUIConfiguration,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> listOfParam,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> listOfTask,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> tree,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> drawPercent,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskFather --> margY,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskFather --> drag,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskFather --> arrayColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskFather --> myUIConfiguration,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskChild --> margY,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskChild --> myUIConfiguration,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskChild --> drag,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskChild --> arrayColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskBilan --> margY,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskBilan --> drag,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskBilan --> arrayColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskBilan --> myUIConfiguration,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> listOfTask,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> listOfParam,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> margY,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintAdvancement --> margY,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> beg,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> end,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> margY,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> drawName,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> date,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> margY,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> drawdepend,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> drawPercent,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> drawName,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> draw3dBorders,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> rowCount,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> upperLeft,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,printTasks --> myUIConfiguration,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,printTask --> rowCount,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,printTask --> arrayColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,printTask --> draw3dBorders,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,printTask --> rowCount,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,printProject --> printRendering,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getTree --> tree,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$0 --> arrayColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$1 --> myTaskManager,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$2 --> appli,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$3 --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$4 --> zoomValue,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$5 --> oldX,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$6 --> oldY,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$7 --> moveView,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$8 --> moveTask,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$9 --> moveTask,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$10 --> listOfParam,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$11 --> addTaskLength,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$12 --> taskToMove,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$13 --> storeTaskLength,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$14 --> storeTaskStart,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$15 --> storeX,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$16 --> margY,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$17 --> moveView,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$18 --> oldX,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$19 --> arrow,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$20 --> notes,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$22 --> addTaskLength,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$23 --> storeTaskStart,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,access$24 --> storeTaskLength,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> type,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> y,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> x1,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> x2,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> x3,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,setTaskToMove --> taskID,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,indexOf --> taskID,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> beg,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> end,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2New --> MONTH,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2New --> DAY,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> y,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> x1,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> x2,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> depend,net.sourceforge.ganttproject.GanttExportSettings,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> percent,net.sourceforge.ganttproject.GanttExportSettings,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> name,net.sourceforge.ganttproject.GanttExportSettings,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> border3d,net.sourceforge.ganttproject.GanttExportSettings,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> <init>,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> <init>,net.sourceforge.ganttproject.GanttGraphicArea$Notes,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> <init>,net.sourceforge.ganttproject.GanttGraphicArea$1,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> addTaskListener,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> setDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> <init>,net.sourceforge.ganttproject.GanttGraphicArea$2,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> <init>,net.sourceforge.ganttproject.GanttGraphicArea$3,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,<init> --> <init>,net.sourceforge.ganttproject.GanttGraphicArea$4,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getTaskColor --> getTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> getEnd,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> newAdd,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> toString,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> <init>$2,net.sourceforge.ganttproject.GanttGraphicArea$Notes,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> setDraw,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> getCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> <init>$2,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,detectPosition --> setDraw,net.sourceforge.ganttproject.GanttGraphicArea$Notes,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,setTaskToMove --> getTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,changeDate --> go,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,changeDate2 --> go,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,zoomToBegin --> getDayWeek,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,zoomToBegin --> getDay,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,zoomToBegin --> add,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,zoomToBegin --> setDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,zoomToBegin --> setMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> paint,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintComponent --> paint,net.sourceforge.ganttproject.GanttGraphicArea$Notes,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,isVisible --> getFatherNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,isVisible --> getExpand,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,zoomMore --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,zoomLess --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,zoomLess --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getGranit --> getNumberOfDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getGranit --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getGranit --> goNextMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getGranit --> go,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getFoot --> getNumberOfDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> add,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,calcProjectBegAndEnd --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> getMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> <init>$2,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> getdayWeek,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> getdayMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> getDay,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> getMonth,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> isRedlineOn,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> getNumberOfDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> equals,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> getDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> add,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> newAdd,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar1 --> toString,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2New --> <init>,net.sourceforge.ganttproject.chart.ChartModelImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2New --> setStartDate,net.sourceforge.ganttproject.chart.ChartModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2New --> setBounds,net.sourceforge.ganttproject.chart.ChartModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2New --> setBottomUnitWidth,net.sourceforge.ganttproject.chart.ChartModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2New --> setTopTimeUnit,net.sourceforge.ganttproject.chart.ChartModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2New --> setBottomTimeUnit,net.sourceforge.ganttproject.chart.ChartModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2New --> getChartHeader,net.sourceforge.ganttproject.chart.ChartModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2New --> paint,net.sourceforge.ganttproject.chart.ChartHeader,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> getWeek,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> getdayMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> newAdd,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> getNumberOfDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> goNextMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> getMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> <init>$2,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> getdayWeek,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> getDate,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> getDay,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintCalendar2Old --> add,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> getChartMainFont,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> diff,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> isMilestone,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> getLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> getAllChildTask$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> computePercentComplete,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> getCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> getShape,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> getColor,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> getName,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> getTaskID,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintTasks --> <init>,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskFather --> getColor,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskFather --> getTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskChild --> colorDefined,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskChild --> getColor,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskChild --> getTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskBilan --> getColor,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintATaskBilan --> getTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintResources --> getAssignments,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintResources --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintResources --> getName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> getSuccessorsOld,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> getSuccessorTask,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> getTaskID,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,paintDepend --> getRelationshipType,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> <init>$3,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,getChart --> getName,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printTasks --> getChartMainFont,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printTasks --> getRoot,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printTasks --> getAllChildTask$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printTask --> getName,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printTask --> getAllChildTask$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,printProject --> <init>,net.sourceforge.ganttproject.GanttPrintable,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea,fitWholeProject --> diff,net.sourceforge.ganttproject.GanttCalendar,);
EndClass 6
StartClass 7
Class(net.sourceforge.ganttproject.GanttResourcePanel,N,N,Public);
Attribute(nbobj,int,Public,N,N,);
Attribute(table,javax.swing.JTable,Public,N,N,);
Attribute(tree,net.sourceforge.ganttproject.GanttTree,Public,N,N,);
Attribute(model,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,Public,N,N,);
Attribute(lang,net.sourceforge.ganttproject.language.GanttLanguage,Public,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Public,N,N,);
Attribute(cx,int,Public,N,N,);
Attribute(cy,int,Public,N,N,);
Attribute(vbar,javax.swing.JScrollBar,Public,N,N,);
Attribute(myResourceActionSet,net.sourceforge.ganttproject.action.ResourceActionSet,Private,N,N,);
Attribute(area,net.sourceforge.ganttproject.ResourceLoadGraphicArea,Public,N,N,);
Attribute(scrollpane,javax.swing.JScrollPane,Public,N,N,);
Attribute(left,javax.swing.JPanel,Public,N,N,);
Attribute(EMPTY_CONTEXT,net.sourceforge.ganttproject.resource.ProjectResource[],Private,N,N,);
Attribute(myContext,net.sourceforge.ganttproject.resource.ResourceContext,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(createPopupMenu,void,Public,N,N);
Method(refresh,void,Public,N,N);
Method(getNameByNumber,java.lang.String,Public,N,N);
Method(getUserByNumber,net.sourceforge.ganttproject.resource.HumanResource,Public,N,N);
Method(newHuman,void,Public,N,N);
Method(addHumans,void,Public,N,N);
Method(deleteHuman,void,Public,N,N);
Method(propertiesHuman,void,Public,N,N);
Method(sendMail,void,Public,N,N);
Method(upResource,void,Public,N,N);
Method(downResource,void,Public,N,N);
Method(getPeople,java.util.ArrayList,Public,N,N);
Method(nbPeople,int,Public,N,N);
Method(setPeople,void,Public,N,N);
Method(reset,void,Public,N,N);
Method(setResourceActions,void,Public,N,N);
Method(setTree,void,Public,N,N);
Method(resourceAdded,void,Public,N,N);
Method(resourcesRemoved,void,Public,N,N);
Method(getResources,net.sourceforge.ganttproject.resource.ProjectResource[],Public,N,N);
Method(getContext,net.sourceforge.ganttproject.resource.ResourceContext,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(createPopupMenu,int,);
Parameter(createPopupMenu,int,);
Parameter(refresh,net.sourceforge.ganttproject.language.GanttLanguage,);
Parameter(getNameByNumber,int,);
Parameter(getUserByNumber,int,);
Parameter(newHuman,net.sourceforge.ganttproject.resource.HumanResource,);
Parameter(addHumans,java.util.ArrayList,);
Parameter(deleteHuman,net.sourceforge.ganttproject.GanttProject,);
Parameter(propertiesHuman,net.sourceforge.ganttproject.GanttProject,);
Parameter(sendMail,net.sourceforge.ganttproject.GanttProject,);
Parameter(setPeople,java.util.ArrayList,);
Parameter(setResourceActions,net.sourceforge.ganttproject.action.ResourceActionSet,);
Parameter(setTree,net.sourceforge.ganttproject.GanttTree,);
Parameter(resourceAdded,net.sourceforge.ganttproject.resource.ResourceEvent,);
Parameter(resourcesRemoved,net.sourceforge.ganttproject.resource.ResourceEvent,);
Realization(net.sourceforge.ganttproject.resource.ResourceView);
Realization(net.sourceforge.ganttproject.resource.ResourceContext);
Composition(net.sourceforge.ganttproject.GanttTree);
Composition(net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.GanttProject);
Composition(net.sourceforge.ganttproject.action.ResourceActionSet);
Composition(net.sourceforge.ganttproject.ResourceLoadGraphicArea);
Composition(net.sourceforge.ganttproject.resource.ResourceContext);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,addHumans --> newHuman,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,resourceAdded --> newHuman,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> lang,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> table,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> left,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> scrollpane,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> vbar,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> nbobj,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> cx,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> cy,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> EMPTY_CONTEXT,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> myContext,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> appli,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> lang,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> model,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> table,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> tree,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> left,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> scrollpane,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> vbar,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> area,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,createPopupMenu --> myResourceActionSet,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,createPopupMenu --> appli,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,createPopupMenu --> lang,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,createPopupMenu --> vbar,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,refresh --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,refresh --> lang,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,refresh --> lang,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,getNameByNumber --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,getUserByNumber --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,newHuman --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> cy,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> lang,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> cy,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> appli,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> lang,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,sendMail --> cy,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,sendMail --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,upResource --> cy,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,upResource --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,upResource --> appli,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,upResource --> table,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,upResource --> cy,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,downResource --> cy,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,downResource --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,downResource --> appli,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,downResource --> table,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,downResource --> cy,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,getPeople --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,nbPeople --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,setPeople --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,reset --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,setResourceActions --> myResourceActionSet,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,setTree --> tree,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,resourcesRemoved --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,getResources --> cy,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,getResources --> model,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,getResources --> EMPTY_CONTEXT,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,getContext --> myContext,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,getNameByNumber --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,getUserByNumber --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> WARNING,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> YES_NO_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> YES,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,sendMail --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,upResource --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,downResource --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,getPeople --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,nbPeople --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel,getResources --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> <init>,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> <init>,net.sourceforge.ganttproject.GanttImagePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> <init>,net.sourceforge.ganttproject.GanttResourcePanel$GanttAdjustmentListener,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> <init>,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,<init> --> <init>,net.sourceforge.ganttproject.GanttResourcePanel$1,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,createPopupMenu --> getActions,net.sourceforge.ganttproject.action.ResourceActionSet,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,createPopupMenu --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,createPopupMenu --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,createPopupMenu --> createNewItem$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,createPopupMenu --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,refresh --> changeLanguage,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,getNameByNumber --> getName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,newHuman --> addRow,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> toString,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> deleteRow,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,deleteHuman --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> getStatusBar,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> <init>,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> result,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> updateRow,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,propertiesHuman --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,sendMail --> getMail,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,sendMail --> displayURL,net.sourceforge.ganttproject.util.BrowserControl,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,upResource --> moveUp,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,upResource --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,upResource --> up,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,downResource --> moveDown,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,downResource --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,downResource --> down,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,setPeople --> changePeople,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,reset --> reset,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,resourceAdded --> getResource,net.sourceforge.ganttproject.resource.ResourceEvent,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,resourcesRemoved --> getResources,net.sourceforge.ganttproject.resource.ResourceEvent,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel,resourcesRemoved --> deleteRows,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,);
EndClass 7
StartClass 8
Class(net.sourceforge.ganttproject.document.DocumentsMRU,N,N,Public);
Attribute(maxSize,int,Private,N,N,);
Attribute(documents,java.util.List,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(add,boolean,Public,N,N);
Method(append,boolean,Public,N,N);
Method(clear,void,Public,N,N);
Method(iterator,java.util.Iterator,Public,N,N);
Parameter(<init>,int,);
Parameter(add,net.sourceforge.ganttproject.document.Document,);
Parameter(append,net.sourceforge.ganttproject.document.Document,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.DocumentsMRU,<init> --> maxSize,net.sourceforge.ganttproject.document.DocumentsMRU,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.DocumentsMRU,<init> --> documents,net.sourceforge.ganttproject.document.DocumentsMRU,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.DocumentsMRU,add --> documents,net.sourceforge.ganttproject.document.DocumentsMRU,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.DocumentsMRU,add --> maxSize,net.sourceforge.ganttproject.document.DocumentsMRU,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.DocumentsMRU,append --> documents,net.sourceforge.ganttproject.document.DocumentsMRU,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.DocumentsMRU,append --> maxSize,net.sourceforge.ganttproject.document.DocumentsMRU,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.DocumentsMRU,clear --> documents,net.sourceforge.ganttproject.document.DocumentsMRU,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.DocumentsMRU,iterator --> documents,net.sourceforge.ganttproject.document.DocumentsMRU,READ);
Call(METHOD,net.sourceforge.ganttproject.document.DocumentsMRU,add --> isValidForMRU,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.document.DocumentsMRU,append --> isValidForMRU,net.sourceforge.ganttproject.document.Document,);
EndClass 8
StartClass 9
Class(net.sourceforge.ganttproject.gui.TestGanttRolloverButton,N,N,Public);
Attribute(_iconOn,javax.swing.Icon,Protected,N,N,);
Attribute(_iconOff,javax.swing.Icon,Protected,N,N,);
Attribute(c,java.awt.AlphaComposite,Private,Y,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(setIcon,void,Public,N,N);
Method(setDefaultIcon,void,Public,N,N);
Method(isOpaque,boolean,Public,N,N);
Method(setEnabled,void,Public,N,N);
Method(paint,void,Public,N,N);
Parameter(<init>,javax.swing.Action,);
Parameter(<init>$3,javax.swing.Icon,);
Parameter(<init>$4,javax.swing.Icon,);
Parameter(<init>$4,javax.swing.Icon,);
Parameter(<init>$5,javax.swing.Icon,);
Parameter(<init>$5,java.lang.String,);
Parameter(setIcon,javax.swing.Icon,);
Parameter(setIcon,javax.swing.Icon,);
Parameter(setDefaultIcon,javax.swing.Icon,);
Parameter(setEnabled,boolean,);
Parameter(paint,java.awt.Graphics,);
Call(METHOD,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init> --> <init>$2,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init>$3 --> <init>$2,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init>$4 --> <init>$2,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init>$5 --> <init>$2,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<clinit> --> c,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init> --> _iconOff,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init> --> _iconOn,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init>$2 --> _iconOn,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init>$2 --> _iconOff,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init>$3 --> _iconOn,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init>$4 --> _iconOn,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init>$4 --> _iconOff,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init>$5 --> _iconOn,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,setIcon --> _iconOn,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,setIcon --> _iconOff,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,setDefaultIcon --> _iconOn,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,paint --> c,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init> --> getIconOnMouseOver,net.sourceforge.ganttproject.action.RolloverAction,);
Call(METHOD,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,<init>$2 --> <init>,net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler,);
EndClass 9
StartClass 10
Class(net.sourceforge.ganttproject.document.Document,Y,Y,Public);
Method(getDescription,java.lang.String,Public,N,Y);
Method(canRead,boolean,Public,N,Y);
Method(canWrite,boolean,Public,N,Y);
Method(isValidForMRU,boolean,Public,N,Y);
Method(acquireLock,boolean,Public,N,Y);
Method(releaseLock,void,Public,N,Y);
Method(getInputStream,java.io.InputStream,Public,N,Y);
Method(getOutputStream,java.io.OutputStream,Public,N,Y);
Method(getPath,java.lang.String,Public,N,Y);
Method(getFilePath,java.lang.String,Public,N,Y);
Method(getURLPath,java.lang.String,Public,N,Y);
Method(getUsername,java.lang.String,Public,N,Y);
Method(getPassword,java.lang.String,Public,N,Y);
Method(setUserInfo,void,Public,N,Y);
Method(getLastError,java.lang.String,Public,N,Y);
Parameter(setUserInfo,java.lang.String,);
Parameter(setUserInfo,java.lang.String,);
EndClass 10
StartClass 11
Class(net.sourceforge.ganttproject.PrjInfos,N,N,Public);
Attribute(_sProjectName,java.lang.String,Public,N,N,);
Attribute(_sDescription,java.lang.String,Public,N,N,);
Attribute(_sOrganization,java.lang.String,Public,N,N,);
Attribute(_sWebLink,java.lang.String,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Method(getOrganization,java.lang.String,Public,N,N);
Method(getWebLink,java.lang.String,Public,N,N);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,java.lang.String,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,<init> --> _sProjectName,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,<init> --> _sDescription,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,<init> --> _sOrganization,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,<init> --> _sWebLink,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,<init>$2 --> _sProjectName,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,<init>$2 --> _sDescription,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,<init>$2 --> _sOrganization,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,<init>$2 --> _sWebLink,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,getName --> _sProjectName,net.sourceforge.ganttproject.PrjInfos,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,getDescription --> _sDescription,net.sourceforge.ganttproject.PrjInfos,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,getOrganization --> _sOrganization,net.sourceforge.ganttproject.PrjInfos,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.PrjInfos,getWebLink --> _sWebLink,net.sourceforge.ganttproject.PrjInfos,READ);
EndClass 11
StartClass 12
Class(net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,N,N,Public);
Attribute(toString,java.lang.String,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>$2,javax.swing.UIManager$LookAndFeelInfo,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,<init>$2 --> <init>,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,<init> --> toString,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,toString --> toString,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,READ);
EndClass 12
StartClass 13
Class(net.sourceforge.ganttproject.action.ResourceActionSet,N,N,Public);
Attribute(myRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Private,N,Y,);
Attribute(myManager,net.sourceforge.ganttproject.resource.ResourceManager,Private,N,Y,);
Attribute(myContext,net.sourceforge.ganttproject.resource.ResourceContext,Private,N,Y,);
Attribute(myProjectFrame,net.sourceforge.ganttproject.GanttProject,Private,N,Y,);
Attribute(myActions,javax.swing.AbstractAction[],Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getActions,javax.swing.AbstractAction[],Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.IGanttProject,);
Parameter(<init>,net.sourceforge.ganttproject.resource.ResourceContext,);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Composition(net.sourceforge.ganttproject.roles.RoleManager);
Composition(net.sourceforge.ganttproject.resource.ResourceManager);
Composition(net.sourceforge.ganttproject.resource.ResourceContext);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceActionSet,<init> --> myManager,net.sourceforge.ganttproject.action.ResourceActionSet,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceActionSet,<init> --> myRoleManager,net.sourceforge.ganttproject.action.ResourceActionSet,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceActionSet,<init> --> myContext,net.sourceforge.ganttproject.action.ResourceActionSet,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceActionSet,<init> --> myProjectFrame,net.sourceforge.ganttproject.action.ResourceActionSet,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceActionSet,getActions --> myActions,net.sourceforge.ganttproject.action.ResourceActionSet,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceActionSet,getActions --> myManager,net.sourceforge.ganttproject.action.ResourceActionSet,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceActionSet,getActions --> myRoleManager,net.sourceforge.ganttproject.action.ResourceActionSet,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceActionSet,getActions --> myProjectFrame,net.sourceforge.ganttproject.action.ResourceActionSet,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceActionSet,getActions --> myContext,net.sourceforge.ganttproject.action.ResourceActionSet,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceActionSet,getActions --> myActions,net.sourceforge.ganttproject.action.ResourceActionSet,WRITE);
Call(METHOD,net.sourceforge.ganttproject.action.ResourceActionSet,<init> --> getHumanResourceManager,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.action.ResourceActionSet,<init> --> getRoleManager,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.action.ResourceActionSet,getActions --> <init>,net.sourceforge.ganttproject.action.NewHumanAction,);
Call(METHOD,net.sourceforge.ganttproject.action.ResourceActionSet,getActions --> <init>,net.sourceforge.ganttproject.action.DeleteHumanAction,);
EndClass 13
StartClass 14
Class(net.sourceforge.ganttproject.task.TaskManager,Y,Y,Public);
Method(getRootTask,net.sourceforge.ganttproject.task.Task,Public,N,Y);
Method(clear,void,Public,N,Y);
Method(getTask,net.sourceforge.ganttproject.GanttTask,Public,N,Y);
Method(registerTask,void,Public,N,Y);
Method(createTask,net.sourceforge.ganttproject.GanttTask,Public,N,Y);
Method(createTask$2,net.sourceforge.ganttproject.GanttTask,Public,N,Y);
Method(getTimeUnitManager,net.sourceforge.ganttproject.time.TimeUnitManager,Public,N,Y);
Method(createLength,net.sourceforge.ganttproject.task.TaskLength,Public,N,Y);
Method(getDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,Public,N,Y);
Method(getAlgorithmCollection,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,Public,N,Y);
Method(createConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,Public,N,Y);
Method(addTaskListener,void,Public,N,Y);
Parameter(getTask,int,);
Parameter(registerTask,net.sourceforge.ganttproject.task.Task,);
Parameter(createTask$2,int,);
Parameter(createLength,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(createLength,long,);
Parameter(createConstraint,int,);
Parameter(addTaskListener,net.sourceforge.ganttproject.task.event.TaskListener,);
EndClass 14
StartClass 15
Class(net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,N,N,NA);
Attribute(isValid,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(isValid,boolean,Public,N,N);
Method(reset,void,Public,N,N);
Method(treeNodesChanged,void,Public,N,N);
Method(treeNodesInserted,void,Public,N,N);
Method(treeNodesRemoved,void,Public,N,N);
Method(treeStructureChanged,void,Public,N,N);
Parameter(<init>,javax.swing.tree.TreeModel,);
Parameter(treeNodesChanged,javax.swing.event.TreeModelEvent,);
Parameter(treeNodesInserted,javax.swing.event.TreeModelEvent,);
Parameter(treeNodesRemoved,javax.swing.event.TreeModelEvent,);
Parameter(treeStructureChanged,javax.swing.event.TreeModelEvent,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,<init> --> isValid,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,isValid --> isValid,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,reset --> isValid,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,treeNodesChanged --> isValid,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,treeNodesInserted --> isValid,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,treeNodesRemoved --> isValid,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,treeStructureChanged --> isValid,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,WRITE);
EndClass 15
StartClass 16
Class(net.sourceforge.ganttproject.gui.UIConfiguration,N,N,Public);
Attribute(myMenuFont,java.awt.Font,Private,N,Y,);
Attribute(myChartMainFont,java.awt.Font,Private,N,Y,);
Attribute(myTaskColor,java.awt.Color,Private,N,N,);
Attribute(myResColor,java.awt.Color,Private,N,N,);
Attribute(myResOverColor,java.awt.Color,Private,N,N,);
Attribute(isRedlineOn,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getMenuFont,java.awt.Font,Public,N,N);
Method(getChartMainFont,java.awt.Font,Public,N,N);
Method(getTaskColor,java.awt.Color,Public,N,N);
Method(setTaskColor,void,Public,N,N);
Method(getResourceColor,java.awt.Color,Public,N,N);
Method(setResourceColor,void,Public,N,N);
Method(getResourceOverloadColor,java.awt.Color,Public,N,N);
Method(setResourceOverloadColor,void,Public,N,N);
Method(isRedlineOn,boolean,Public,N,N);
Method(setRedlineOn,void,Public,N,N);
Parameter(<init>,java.awt.Font,);
Parameter(<init>,java.awt.Font,);
Parameter(<init>,java.awt.Color,);
Parameter(<init>,boolean,);
Parameter(setTaskColor,java.awt.Color,);
Parameter(setResourceColor,java.awt.Color,);
Parameter(setResourceOverloadColor,java.awt.Color,);
Parameter(setRedlineOn,boolean,);
Call(METHOD,net.sourceforge.ganttproject.gui.UIConfiguration,<init> --> setTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,<init> --> myMenuFont,net.sourceforge.ganttproject.gui.UIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,<init> --> myChartMainFont,net.sourceforge.ganttproject.gui.UIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,<init> --> isRedlineOn,net.sourceforge.ganttproject.gui.UIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,<init> --> myResColor,net.sourceforge.ganttproject.gui.UIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,<init> --> myResOverColor,net.sourceforge.ganttproject.gui.UIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,getMenuFont --> myMenuFont,net.sourceforge.ganttproject.gui.UIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,getChartMainFont --> myChartMainFont,net.sourceforge.ganttproject.gui.UIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,getTaskColor --> myTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,setTaskColor --> myTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,getResourceColor --> myResColor,net.sourceforge.ganttproject.gui.UIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,setResourceColor --> myResColor,net.sourceforge.ganttproject.gui.UIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,getResourceOverloadColor --> myResOverColor,net.sourceforge.ganttproject.gui.UIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,setResourceOverloadColor --> myResOverColor,net.sourceforge.ganttproject.gui.UIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,isRedlineOn --> isRedlineOn,net.sourceforge.ganttproject.gui.UIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.UIConfiguration,setRedlineOn --> isRedlineOn,net.sourceforge.ganttproject.gui.UIConfiguration,WRITE);
EndClass 16
StartClass 17
Class(net.sourceforge.ganttproject.GanttOptions,N,N,Public);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(x,int,Private,N,N,);
Attribute(y,int,Private,N,N,);
Attribute(width,int,Private,N,N,);
Attribute(height,int,Private,N,N,);
Attribute(styleClass,java.lang.String,Private,N,N,);
Attribute(styleName,java.lang.String,Private,N,N,);
Attribute(lookAndFeel,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,Private,N,N,);
Attribute(isloaded,boolean,Private,N,N,);
Attribute(automatic,boolean,Private,N,N,);
Attribute(dragTime,boolean,Private,N,N,);
Attribute(openTips,boolean,Private,N,N,);
Attribute(redline,boolean,Private,N,N,);
Attribute(lockDAVMinutes,int,Private,N,N,);
Attribute(xslDir,java.lang.String,Private,N,N,);
Attribute(xslFo,java.lang.String,Private,N,N,);
Attribute(workingDir,java.lang.String,Private,N,N,);
Attribute(myRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Private,N,Y,);
Attribute(documentsMRU,net.sourceforge.ganttproject.document.DocumentsMRU,Private,N,N,);
Attribute(myUIConfig,net.sourceforge.ganttproject.gui.UIConfiguration,Private,N,N,);
Attribute(myChartMainFont,java.awt.Font,Private,N,N,);
Attribute(sTaskNamePrefix,java.lang.String,Private,N,N,);
Attribute(toolBarPosition,int,Private,N,N,);
Attribute(bShowStatusBar,boolean,Private,N,N,);
Attribute(iconSize,java.lang.String,Private,N,N,);
Attribute(ICONS,int,Public,Y,Y,);
Attribute(ICONS_TEXT,int,Public,Y,Y,);
Attribute(TEXT,int,Public,Y,Y,);
Attribute(buttonsshow,int,Private,N,N,);
Attribute(bExportName,boolean,Private,N,N,);
Attribute(bExportComplete,boolean,Private,N,N,);
Attribute(bExportRelations,boolean,Private,N,N,);
Attribute(bExport3DBorders,boolean,Private,N,N,);
Attribute(csvOptions,net.sourceforge.ganttproject.io.CSVOptions,Private,N,N,);
Attribute(myMenuFont,java.awt.Font,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(initByDefault,void,Public,N,N);
Method(startElement,void,Private,N,N);
Method(endElement,void,Private,N,N);
Method(addAttribute,void,Private,N,N);
Method(emptyElement,void,Private,N,N);
Method(save,void,Public,N,N);
Method(getFontSpec,java.lang.String,Private,N,N);
Method(getFontStyle,java.lang.String,Private,N,N);
Method(correct,java.lang.String,Public,N,N);
Method(load,boolean,Public,N,N);
Method(loadRoleSets,void,Private,N,N);
Method(saveRoleSets,void,Private,N,N);
Method(saveRoles,void,Private,N,N);
Method(getUIConfiguration,net.sourceforge.ganttproject.gui.UIConfiguration,Public,N,N);
Method(getRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Private,N,N);
Method(getLanguage,net.sourceforge.ganttproject.language.GanttLanguage,Public,N,N);
Method(getDefaultColor,java.awt.Color,Public,N,N);
Method(getResourceColor,java.awt.Color,Public,N,N);
Method(getResourceOverloadColor,java.awt.Color,Public,N,N);
Method(getLockDAVMinutes,int,Public,N,N);
Method(getWorkingDir,java.lang.String,Public,N,N);
Method(getXslDir,java.lang.String,Public,N,N);
Method(getXslFo,java.lang.String,Public,N,N);
Method(getOpenTips,boolean,Public,N,N);
Method(getDragTime,boolean,Public,N,N);
Method(getAutomatic,boolean,Public,N,N);
Method(getLnfInfos,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,Public,N,N);
Method(isLoaded,boolean,Public,N,N);
Method(getShowStatusBar,boolean,Public,N,N);
Method(setShowStatusBar,void,Public,N,N);
Method(getX,int,Public,N,N);
Method(getY,int,Public,N,N);
Method(getWidth,int,Public,N,N);
Method(getHeight,int,Public,N,N);
Method(getCSVOptions,net.sourceforge.ganttproject.io.CSVOptions,Public,N,N);
Method(getTaskNamePrefix,java.lang.String,Public,N,N);
Method(getTrueTaskNamePrefix,java.lang.String,Public,N,N);
Method(getToolBarPosition,int,Public,N,N);
Method(getIconSize,java.lang.String,Public,N,N);
Method(getExportName,boolean,Public,N,N);
Method(getExportComplete,boolean,Public,N,N);
Method(getExportRelations,boolean,Public,N,N);
Method(getExport3dBorders,boolean,Public,N,N);
Method(getExportSettings,net.sourceforge.ganttproject.GanttExportSettings,Public,N,N);
Method(setExportName,void,Public,N,N);
Method(setExportComplete,void,Public,N,N);
Method(setExportRelations,void,Public,N,N);
Method(setExport3dBorders,void,Public,N,N);
Method(getButtonShow,int,Public,N,N);
Method(setButtonShow,void,Public,N,N);
Method(setIconSize,void,Public,N,N);
Method(setToolBarPosition,void,Public,N,N);
Method(setWindowPosition,void,Public,N,N);
Method(setWindowSize,void,Public,N,N);
Method(setWorkingDirectory,void,Public,N,N);
Method(setLockDAVMinutes,void,Public,N,N);
Method(setDefaultTaskColor,void,Public,N,N);
Method(setResourceColor,void,Public,N,N);
Method(setResourceOverloadColor,void,Public,N,N);
Method(setXslDir,void,Public,N,N);
Method(setXslFo,void,Public,N,N);
Method(setDocumentsMRU,void,Public,N,N);
Method(setUIConfiguration,void,Public,N,N);
Method(setOpenTips,void,Public,N,N);
Method(setAutomatic,void,Public,N,N);
Method(setDragTime,void,Public,N,N);
Method(setLookAndFeel,void,Public,N,N);
Method(setTaskNamePrefix,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.language.GanttLanguage,Public,Y,N);
Method(access$1,void,Public,Y,N);
Method(access$2,void,Public,Y,N);
Method(access$3,void,Public,Y,N);
Method(access$4,void,Public,Y,N);
Method(access$5,void,Public,Y,N);
Method(access$6,void,Public,Y,N);
Method(access$7,net.sourceforge.ganttproject.document.DocumentsMRU,Public,Y,N);
Method(access$8,void,Public,Y,N);
Method(access$9,void,Public,Y,N);
Method(access$10,void,Public,Y,N);
Method(access$11,void,Public,Y,N);
Method(access$12,void,Public,Y,N);
Method(access$13,void,Public,Y,N);
Method(access$14,void,Public,Y,N);
Method(access$15,void,Public,Y,N);
Method(access$16,void,Public,Y,N);
Method(access$17,void,Public,Y,N);
Method(access$18,void,Public,Y,N);
Method(access$19,void,Public,Y,N);
Method(access$20,void,Public,Y,N);
Method(access$21,void,Public,Y,N);
Method(access$22,void,Public,Y,N);
Method(access$23,void,Public,Y,N);
Method(access$24,void,Public,Y,N);
Method(access$25,net.sourceforge.ganttproject.io.CSVOptions,Public,Y,N);
Method(access$26,void,Public,Y,N);
Method(access$27,void,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.roles.RoleManager,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,org.xml.sax.Attributes,);
Parameter(startElement,javax.xml.transform.sax.TransformerHandler,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,javax.xml.transform.sax.TransformerHandler,);
Parameter(addAttribute,java.lang.String,);
Parameter(addAttribute,java.lang.String,);
Parameter(addAttribute,org.xml.sax.helpers.AttributesImpl,);
Parameter(emptyElement,java.lang.String,);
Parameter(emptyElement,org.xml.sax.helpers.AttributesImpl,);
Parameter(emptyElement,javax.xml.transform.sax.TransformerHandler,);
Parameter(getFontSpec,java.awt.Font,);
Parameter(getFontStyle,java.awt.Font,);
Parameter(correct,java.lang.String,);
Parameter(loadRoleSets,java.io.File,);
Parameter(saveRoleSets,javax.xml.transform.sax.TransformerHandler,);
Parameter(saveRoles,net.sourceforge.ganttproject.roles.RoleSet,);
Parameter(saveRoles,javax.xml.transform.sax.TransformerHandler,);
Parameter(setShowStatusBar,boolean,);
Parameter(setExportName,boolean,);
Parameter(setExportComplete,boolean,);
Parameter(setExportRelations,boolean,);
Parameter(setExport3dBorders,boolean,);
Parameter(setButtonShow,int,);
Parameter(setIconSize,java.lang.String,);
Parameter(setToolBarPosition,int,);
Parameter(setWindowPosition,int,);
Parameter(setWindowPosition,int,);
Parameter(setWindowSize,int,);
Parameter(setWindowSize,int,);
Parameter(setWorkingDirectory,java.lang.String,);
Parameter(setLockDAVMinutes,int,);
Parameter(setDefaultTaskColor,java.awt.Color,);
Parameter(setResourceColor,java.awt.Color,);
Parameter(setResourceOverloadColor,java.awt.Color,);
Parameter(setXslDir,java.lang.String,);
Parameter(setXslFo,java.lang.String,);
Parameter(setDocumentsMRU,net.sourceforge.ganttproject.document.DocumentsMRU,);
Parameter(setUIConfiguration,net.sourceforge.ganttproject.gui.UIConfiguration,);
Parameter(setOpenTips,boolean,);
Parameter(setAutomatic,boolean,);
Parameter(setDragTime,boolean,);
Parameter(setLookAndFeel,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,);
Parameter(setTaskNamePrefix,java.lang.String,);
Parameter(access$0,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$1,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$1,int,);
Parameter(access$2,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$2,int,);
Parameter(access$3,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$3,int,);
Parameter(access$4,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$4,int,);
Parameter(access$5,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$5,java.lang.String,);
Parameter(access$6,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$6,java.lang.String,);
Parameter(access$7,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$8,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$8,boolean,);
Parameter(access$9,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$9,boolean,);
Parameter(access$10,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$10,boolean,);
Parameter(access$11,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$11,boolean,);
Parameter(access$12,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$12,int,);
Parameter(access$13,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$13,java.lang.String,);
Parameter(access$14,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$14,java.lang.String,);
Parameter(access$15,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$15,java.lang.String,);
Parameter(access$16,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$16,java.lang.String,);
Parameter(access$17,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$17,int,);
Parameter(access$18,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$18,java.lang.String,);
Parameter(access$19,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$19,int,);
Parameter(access$20,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$20,boolean,);
Parameter(access$21,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$21,boolean,);
Parameter(access$22,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$22,boolean,);
Parameter(access$23,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$23,boolean,);
Parameter(access$24,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$24,boolean,);
Parameter(access$25,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$26,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$26,java.awt.Font,);
Parameter(access$27,net.sourceforge.ganttproject.GanttOptions,);
Parameter(access$27,java.awt.Font,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo);
Composition(net.sourceforge.ganttproject.roles.RoleManager);
Composition(net.sourceforge.ganttproject.document.DocumentsMRU);
Composition(net.sourceforge.ganttproject.gui.UIConfiguration);
Composition(net.sourceforge.ganttproject.io.CSVOptions);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,<init> --> initByDefault,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,emptyElement --> startElement,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,emptyElement --> endElement,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> addAttribute,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> emptyElement,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> startElement,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> endElement,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> getUIConfiguration,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> getFontSpec,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> saveRoleSets,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,getFontSpec --> getFontStyle,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,load --> loadRoleSets,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,loadRoleSets --> getRoleManager,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,saveRoleSets --> getRoleManager,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,saveRoleSets --> saveRoles,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,saveRoles --> addAttribute,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,saveRoles --> emptyElement,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,getDefaultColor --> getUIConfiguration,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,getResourceColor --> getUIConfiguration,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,getResourceOverloadColor --> getUIConfiguration,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,setDefaultTaskColor --> getUIConfiguration,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,setResourceColor --> getUIConfiguration,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,setResourceOverloadColor --> getUIConfiguration,net.sourceforge.ganttproject.GanttOptions,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,<init> --> language,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,<init> --> x,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,<init> --> y,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,<init> --> width,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,<init> --> height,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,<init> --> styleClass,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,<init> --> styleName,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,<init> --> workingDir,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,<init> --> myRoleManager,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> automatic,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> dragTime,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> openTips,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> redline,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> lockDAVMinutes,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> xslDir,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> xslFo,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> sTaskNamePrefix,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> toolBarPosition,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> bShowStatusBar,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> iconSize,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> buttonsshow,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> bExportName,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> bExportComplete,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> bExportRelations,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> bExport3DBorders,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,initByDefault --> csvOptions,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> language,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> myUIConfig,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> x,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> y,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> width,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> height,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> lookAndFeel,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> toolBarPosition,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> iconSize,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bShowStatusBar,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportName,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportComplete,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExport3DBorders,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportRelations,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> csvOptions,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> automatic,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> dragTime,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> openTips,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> lockDAVMinutes,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> xslDir,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> xslFo,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> workingDir,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> sTaskNamePrefix,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> documentsMRU,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,load --> documentsMRU,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,load --> styleClass,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,load --> styleName,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,load --> lookAndFeel,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,load --> lookAndFeel,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,load --> isloaded,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getUIConfiguration --> myUIConfig,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getUIConfiguration --> myMenuFont,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getUIConfiguration --> myChartMainFont,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getUIConfiguration --> redline,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getUIConfiguration --> myUIConfig,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getRoleManager --> myRoleManager,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getLanguage --> language,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getLockDAVMinutes --> lockDAVMinutes,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getWorkingDir --> workingDir,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getXslDir --> xslDir,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getXslFo --> xslFo,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getOpenTips --> openTips,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getDragTime --> dragTime,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getAutomatic --> automatic,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getLnfInfos --> lookAndFeel,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,isLoaded --> isloaded,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getShowStatusBar --> bShowStatusBar,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setShowStatusBar --> bShowStatusBar,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getX --> x,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getY --> y,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getWidth --> width,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getHeight --> height,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getCSVOptions --> csvOptions,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getTaskNamePrefix --> sTaskNamePrefix,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getTaskNamePrefix --> language,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getTrueTaskNamePrefix --> sTaskNamePrefix,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getTrueTaskNamePrefix --> language,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getToolBarPosition --> toolBarPosition,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getIconSize --> iconSize,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getExportName --> bExportName,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getExportComplete --> bExportComplete,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getExportRelations --> bExportRelations,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getExport3dBorders --> bExport3DBorders,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getExportSettings --> bExportName,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getExportSettings --> bExportComplete,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getExportSettings --> bExportRelations,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getExportSettings --> bExport3DBorders,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setExportName --> bExportName,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setExportComplete --> bExportComplete,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setExportRelations --> bExportRelations,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setExport3dBorders --> bExport3DBorders,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,getButtonShow --> buttonsshow,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setButtonShow --> buttonsshow,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setIconSize --> iconSize,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setToolBarPosition --> toolBarPosition,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setWindowPosition --> x,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setWindowPosition --> y,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setWindowSize --> width,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setWindowSize --> height,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setWorkingDirectory --> workingDir,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setLockDAVMinutes --> lockDAVMinutes,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setXslDir --> xslDir,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setXslFo --> xslFo,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setDocumentsMRU --> documentsMRU,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setUIConfiguration --> myUIConfig,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setOpenTips --> openTips,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setAutomatic --> automatic,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setDragTime --> dragTime,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setLookAndFeel --> lookAndFeel,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,setTaskNamePrefix --> sTaskNamePrefix,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$0 --> language,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$1 --> x,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$2 --> y,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$3 --> width,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$4 --> height,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$5 --> styleName,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$6 --> styleClass,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$7 --> documentsMRU,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$8 --> automatic,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$9 --> dragTime,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$10 --> openTips,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$11 --> redline,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$12 --> lockDAVMinutes,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$13 --> xslDir,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$14 --> xslFo,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$15 --> workingDir,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$16 --> sTaskNamePrefix,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$17 --> toolBarPosition,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$18 --> iconSize,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$19 --> buttonsshow,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$20 --> bShowStatusBar,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$21 --> bExportName,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$22 --> bExportComplete,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$23 --> bExportRelations,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$24 --> bExport3DBorders,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$25 --> csvOptions,net.sourceforge.ganttproject.GanttOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$26 --> myMenuFont,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,access$27 --> myChartMainFont,net.sourceforge.ganttproject.GanttOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bFixedSize,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> sSeparatedChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> sSeparatedTextChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportTaskID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportTaskName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportTaskStartDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportTaskEndDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportTaskPercent,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportTaskDuration,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportTaskWebLink,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportTaskResources,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportTaskNotes,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportResourceID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportResourceName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportResourceMail,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportResourcePhone,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions,save --> bExportResourceRole,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,initByDefault --> <init>,net.sourceforge.ganttproject.io.CSVOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> getTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> getColor,net.sourceforge.ganttproject.util.ColorConvertion,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> getResourceColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> getResourceOverloadColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> isRedlineOn,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> iterator,net.sourceforge.ganttproject.document.DocumentsMRU,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> getPath,net.sourceforge.ganttproject.document.Document,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> getMenuFont,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,save --> getChartMainFont,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,load --> <init>,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,load --> clear,net.sourceforge.ganttproject.document.DocumentsMRU,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,load --> getGanttLookAndFeels,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,load --> getInfoByClass,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,load --> getInfoByName,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,load --> getDefaultInfo,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,loadRoleSets --> <init>$2,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,loadRoleSets --> <init>,net.sourceforge.ganttproject.parser.RoleTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,loadRoleSets --> addTagHandler,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,loadRoleSets --> load$3,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,saveRoleSets --> getRoleSets,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,saveRoleSets --> getName,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,saveRoles --> getRoles,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,saveRoles --> getID,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,saveRoles --> getName,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,getUIConfiguration --> <init>,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,getDefaultColor --> getTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,getResourceColor --> getResourceColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,getResourceOverloadColor --> getResourceOverloadColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,getTaskNamePrefix --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,getTrueTaskNamePrefix --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,getExportSettings --> <init>$2,net.sourceforge.ganttproject.GanttExportSettings,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,setDefaultTaskColor --> setTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,setResourceColor --> setResourceColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions,setResourceOverloadColor --> setResourceOverloadColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
EndClass 17
StartClass 18
Class(net.sourceforge.ganttproject.gui.GanttStatusBar,N,N,Public);
Attribute(pbp,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,Protected,N,N,);
Attribute(message0,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,Protected,N,N,);
Attribute(message1,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,Protected,N,N,);
Attribute(message2,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,Protected,N,N,);
Attribute(NO_MESSAGE,int,Private,Y,Y,);
Attribute(MESSAGE_1,int,Private,Y,Y,);
Attribute(MESSAGE_2,int,Private,Y,Y,);
Attribute(PROGRESS_FINISH,int,Private,Y,Y,);
Attribute(mode,int,Public,N,N,);
Attribute(bRunning,boolean,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(setProgressValue,void,Public,N,N);
Method(setFirstText,void,Public,N,N);
Method(setSecondText,void,Public,N,N);
Method(setFirstText$2,void,Public,N,N);
Method(setSecondText$2,void,Public,N,N);
Method(getPreferredSize,java.awt.Dimension,Public,N,N);
Method(run,void,Public,N,N);
Parameter(setProgressValue,int,);
Parameter(setFirstText,java.lang.String,);
Parameter(setSecondText,java.lang.String,);
Parameter(setFirstText$2,java.lang.String,);
Parameter(setFirstText$2,int,);
Parameter(setSecondText$2,java.lang.String,);
Parameter(setSecondText$2,int,);
Composition(net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel);
Composition(net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> setFirstText$2,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> pbp,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> message0,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> message1,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> message2,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> mode,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> bRunning,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> pbp,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> message0,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> message1,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> message2,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setProgressValue --> pbp,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setProgressValue --> bRunning,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setProgressValue --> mode,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setProgressValue --> bRunning,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setFirstText --> message1,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setSecondText --> message2,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setFirstText$2 --> message1,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setFirstText$2 --> bRunning,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setFirstText$2 --> mode,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setFirstText$2 --> bRunning,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setSecondText$2 --> message2,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setSecondText$2 --> bRunning,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setSecondText$2 --> mode,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,setSecondText$2 --> bRunning,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,run --> mode,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,run --> message1,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,run --> message2,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,run --> pbp,net.sourceforge.ganttproject.gui.GanttStatusBar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,run --> mode,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar,run --> bRunning,net.sourceforge.ganttproject.gui.GanttStatusBar,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> setText,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> setValue,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,setProgressValue --> setValue,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,setFirstText --> setText,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,setSecondText --> setText,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,setFirstText$2 --> setText$2,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,setSecondText$2 --> setText$2,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,run --> getTimer,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,run --> hideText,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,run --> setText,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar,run --> setValue,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,);
EndClass 18
StartClass 19
Class(net.sourceforge.ganttproject.action.NewTaskAction,N,N,Public);
Attribute(myProject,net.sourceforge.ganttproject.IGanttProject,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(languageChanged,void,Public,N,N);
Method(setText,void,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.IGanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Parameter(languageChanged,net.sourceforge.ganttproject.language.GanttLanguage$Event,);
Parameter(setText,net.sourceforge.ganttproject.language.GanttLanguage,);
Realization(net.sourceforge.ganttproject.language.GanttLanguage$Listener);
Composition(net.sourceforge.ganttproject.IGanttProject);
Call(METHOD,net.sourceforge.ganttproject.action.NewTaskAction,<init> --> setText,net.sourceforge.ganttproject.action.NewTaskAction,);
Call(METHOD,net.sourceforge.ganttproject.action.NewTaskAction,languageChanged --> setText,net.sourceforge.ganttproject.action.NewTaskAction,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.NewTaskAction,<init> --> myProject,net.sourceforge.ganttproject.action.NewTaskAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.NewTaskAction,actionPerformed --> myProject,net.sourceforge.ganttproject.action.NewTaskAction,READ);
Call(METHOD,net.sourceforge.ganttproject.action.NewTaskAction,<init> --> getI18n,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.action.NewTaskAction,<init> --> addListener,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.action.NewTaskAction,actionPerformed --> newTask,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.action.NewTaskAction,languageChanged --> getLanguage,net.sourceforge.ganttproject.language.GanttLanguage$Event,);
Call(METHOD,net.sourceforge.ganttproject.action.NewTaskAction,setText --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.action.NewTaskAction,setText --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
EndClass 19
StartClass 20
Class(net.sourceforge.ganttproject.action.NewHumanAction,N,N,Public);
Attribute(myRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Private,N,Y,);
Attribute(MENU_MASK,int,Private,N,Y,);
Attribute(myProjectFrame,javax.swing.JFrame,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(languageChanged,void,Public,N,N);
Method(getProjectFrame,javax.swing.JFrame,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.resource.ResourceManager,);
Parameter(<init>,net.sourceforge.ganttproject.roles.RoleManager,);
Parameter(<init>,javax.swing.JFrame,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
SuperClass(net.sourceforge.ganttproject.action.ResourceAction);
Generalization(net.sourceforge.ganttproject.action.ResourceAction);
Composition(net.sourceforge.ganttproject.roles.RoleManager);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,actionPerformed --> getProjectFrame,net.sourceforge.ganttproject.action.NewHumanAction,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.NewHumanAction,<init> --> MENU_MASK,net.sourceforge.ganttproject.action.NewHumanAction,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.NewHumanAction,<init> --> MENU_MASK,net.sourceforge.ganttproject.action.NewHumanAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.NewHumanAction,<init> --> myRoleManager,net.sourceforge.ganttproject.action.NewHumanAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.NewHumanAction,<init> --> myProjectFrame,net.sourceforge.ganttproject.action.NewHumanAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.NewHumanAction,actionPerformed --> myRoleManager,net.sourceforge.ganttproject.action.NewHumanAction,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.NewHumanAction,getProjectFrame --> myProjectFrame,net.sourceforge.ganttproject.action.NewHumanAction,READ);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,<init> --> <init>,net.sourceforge.ganttproject.action.ResourceAction,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,<init> --> getLanguage,net.sourceforge.ganttproject.action.ResourceAction,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,actionPerformed --> getManager,net.sourceforge.ganttproject.action.ResourceAction,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,actionPerformed --> newHumanResource,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,actionPerformed --> getDefaultRole,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,actionPerformed --> setRole,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,actionPerformed --> getLanguage,net.sourceforge.ganttproject.action.ResourceAction,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,actionPerformed --> result,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,actionPerformed --> add,net.sourceforge.ganttproject.resource.ResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,languageChanged --> getLanguage,net.sourceforge.ganttproject.action.ResourceAction,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,languageChanged --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.action.NewHumanAction,languageChanged --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
EndClass 20
StartClass 21
Class(net.sourceforge.ganttproject.action.NewArtefactAction,N,N,Public);
Attribute(myProvider,net.sourceforge.ganttproject.action.NewArtefactAction$ActiveActionProvider,Private,N,N,);
Attribute(myIconOnMouseOver,javax.swing.Icon,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(getIconOnMouseOver,javax.swing.Icon,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.action.NewArtefactAction$ActiveActionProvider,);
Parameter(<init>,java.lang.String,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Realization(net.sourceforge.ganttproject.action.RolloverAction);
Composition(net.sourceforge.ganttproject.action.NewArtefactAction$ActiveActionProvider);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.NewArtefactAction,<init> --> myProvider,net.sourceforge.ganttproject.action.NewArtefactAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.NewArtefactAction,actionPerformed --> myProvider,net.sourceforge.ganttproject.action.NewArtefactAction,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.NewArtefactAction,getIconOnMouseOver --> myIconOnMouseOver,net.sourceforge.ganttproject.action.NewArtefactAction,READ);
Call(METHOD,net.sourceforge.ganttproject.action.NewArtefactAction,actionPerformed --> getActiveAction,net.sourceforge.ganttproject.action.NewArtefactAction$ActiveActionProvider,);
EndClass 21
StartClass 22
Class(net.sourceforge.ganttproject.resource.ProjectResource,N,Y,Public);
Attribute(id,int,Protected,N,N,);
Attribute(name,java.lang.String,Protected,N,N,);
Attribute(costsPerUnit,double,Private,N,N,);
Attribute(maximumUnitsPerDay,int,Private,N,N,);
Attribute(unitMeasure,java.lang.String,Private,N,N,);
Attribute(description,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(setName,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(setDescription,void,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Method(setUnitMeasure,void,Public,N,N);
Method(getUnitMeasure,java.lang.String,Public,N,N);
Method(setCostsPerUnit,void,Public,N,N);
Method(getCostsPerUnit,double,Public,N,N);
Method(setMaximumUnitsPerDay,void,Public,N,N);
Method(getMaximumUnitsPerDay,int,Public,N,N);
Method(setId,void,Public,N,N);
Method(getId,int,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(setName,java.lang.String,);
Parameter(setDescription,java.lang.String,);
Parameter(setUnitMeasure,java.lang.String,);
Parameter(setCostsPerUnit,double,);
Parameter(setMaximumUnitsPerDay,int,);
Parameter(setId,int,);
SubClass(net.sourceforge.ganttproject.resource.HumanResource);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,setName --> name,net.sourceforge.ganttproject.resource.ProjectResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,getName --> name,net.sourceforge.ganttproject.resource.ProjectResource,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,setDescription --> description,net.sourceforge.ganttproject.resource.ProjectResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,getDescription --> description,net.sourceforge.ganttproject.resource.ProjectResource,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,setUnitMeasure --> unitMeasure,net.sourceforge.ganttproject.resource.ProjectResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,getUnitMeasure --> unitMeasure,net.sourceforge.ganttproject.resource.ProjectResource,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,setCostsPerUnit --> costsPerUnit,net.sourceforge.ganttproject.resource.ProjectResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,getCostsPerUnit --> costsPerUnit,net.sourceforge.ganttproject.resource.ProjectResource,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,setMaximumUnitsPerDay --> maximumUnitsPerDay,net.sourceforge.ganttproject.resource.ProjectResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,getMaximumUnitsPerDay --> maximumUnitsPerDay,net.sourceforge.ganttproject.resource.ProjectResource,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,setId --> id,net.sourceforge.ganttproject.resource.ProjectResource,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,setId --> id,net.sourceforge.ganttproject.resource.ProjectResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,getId --> id,net.sourceforge.ganttproject.resource.ProjectResource,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ProjectResource,toString --> name,net.sourceforge.ganttproject.resource.ProjectResource,READ);
EndClass 22
StartClass 23
Class(net.sourceforge.ganttproject.task.Task,Y,Y,Public);
Attribute(DEFAULT_COLOR,java.awt.Color,Public,Y,Y,);
Method(<clinit>,void,Public,Y,N);
Method(createMutator,net.sourceforge.ganttproject.task.TaskMutator,Public,N,Y);
Method(getTaskID,int,Public,N,Y);
Method(getName,java.lang.String,Public,N,Y);
Method(isMilestone,boolean,Public,N,Y);
Method(getPriority,int,Public,N,Y);
Method(getStart,net.sourceforge.ganttproject.GanttCalendar,Public,N,Y);
Method(getEnd,net.sourceforge.ganttproject.GanttCalendar,Public,N,Y);
Method(getDuration,net.sourceforge.ganttproject.task.TaskLength,Public,N,Y);
Method(getCompletionPercentage,int,Public,N,Y);
Method(isStartFixed,boolean,Public,N,Y);
Method(getShape,net.sourceforge.ganttproject.shape.ShapePaint,Public,N,Y);
Method(getColor,java.awt.Color,Public,N,Y);
Method(getNotes,java.lang.String,Public,N,Y);
Method(getExpand,boolean,Public,N,Y);
Method(getPredecessors,net.sourceforge.ganttproject.GanttTaskRelationship[],Public,N,Y);
Method(getSuccessors,net.sourceforge.ganttproject.GanttTaskRelationship[],Public,N,Y);
Method(getAssignments,net.sourceforge.ganttproject.task.ResourceAssignment[],Public,N,Y);
Method(getDependencies,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,Public,N,Y);
Method(getDependenciesAsDependant,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,Public,N,Y);
Method(getDependenciesAsDependee,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,Public,N,Y);
Method(getAssignmentCollection,net.sourceforge.ganttproject.task.ResourceAssignmentCollection,Public,N,Y);
Method(getSupertask,net.sourceforge.ganttproject.task.Task,Public,N,Y);
Method(getNestedTasks,net.sourceforge.ganttproject.task.Task[],Public,N,Y);
Method(move,void,Public,N,Y);
Method(getManager,net.sourceforge.ganttproject.task.TaskManager,Public,N,Y);
Parameter(move,net.sourceforge.ganttproject.task.Task,);
Realization(net.sourceforge.ganttproject.task.MutableTask);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.Task,<clinit> --> DEFAULT_COLOR,net.sourceforge.ganttproject.task.Task,WRITE);
EndClass 23
StartClass 24
Class(net.sourceforge.ganttproject.GanttProject$ExportFileInfo,N,N,NA);
Attribute(myFile,java.io.File,Public,N,Y,);
Attribute(myFormat,int,Public,N,Y,);
Attribute(myStorageOptions,net.sourceforge.ganttproject.GanttExportSettings,Public,N,Y,);
Attribute(FORMAT_HTML,int,Public,Y,Y,);
Attribute(FORMAT_PNG,int,Public,Y,Y,);
Attribute(FORMAT_JPG,int,Public,Y,Y,);
Attribute(FORMAT_PDF,int,Public,Y,Y,);
Attribute(FORMAT_XFIG,int,Public,Y,Y,);
Attribute(FORMAT_CSV,int,Public,Y,Y,);
Attribute(EMPTY,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,Public,Y,Y,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Parameter(<init>,java.io.File,);
Parameter(<init>,int,);
Parameter(<init>,net.sourceforge.ganttproject.GanttExportSettings,);
Composition(net.sourceforge.ganttproject.GanttExportSettings);
Composition(net.sourceforge.ganttproject.GanttProject$ExportFileInfo);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,<clinit> --> <init>,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,<clinit> --> EMPTY,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,<init> --> myFile,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,<init> --> myFormat,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,<init> --> myStorageOptions,net.sourceforge.ganttproject.GanttProject$ExportFileInfo,WRITE);
EndClass 24
StartClass 25
Class(net.sourceforge.ganttproject.resource.ResourceManager,Y,Y,Public);
Method(create,net.sourceforge.ganttproject.resource.ProjectResource,Public,N,Y);
Method(add,void,Public,N,Y);
Method(getById,net.sourceforge.ganttproject.resource.ProjectResource,Public,N,Y);
Method(remove,void,Public,N,Y);
Method(removeById,void,Public,N,Y);
Method(getResources,java.util.ArrayList,Public,N,Y);
Method(save,void,Public,N,Y);
Method(clear,void,Public,N,Y);
Method(addView,void,Public,N,Y);
Parameter(create,java.lang.String,);
Parameter(create,int,);
Parameter(add,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(getById,int,);
Parameter(remove,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(removeById,int,);
Parameter(save,java.io.OutputStream,);
Parameter(addView,net.sourceforge.ganttproject.resource.ResourceView,);
EndClass 25
StartClass 26
Class(net.sourceforge.ganttproject.roles.RoleManager,Y,Y,Public);
Attribute(DEFAULT_ROLES_NUMBER,int,Public,Y,Y,);
Method(createRoleSet,net.sourceforge.ganttproject.roles.RoleSet,Public,N,Y);
Method(getRoleSets,net.sourceforge.ganttproject.roles.RoleSet[],Public,N,Y);
Method(clear,void,Public,N,Y);
Method(getProjectLevelRoles,net.sourceforge.ganttproject.roles.Role[],Public,N,Y);
Method(add,void,Public,N,Y);
Method(getProjectRoleSet,net.sourceforge.ganttproject.roles.RoleSet,Public,N,Y);
Method(getRoleSet,net.sourceforge.ganttproject.roles.RoleSet,Public,N,Y);
Method(getEnabledRoles,net.sourceforge.ganttproject.roles.Role[],Public,N,Y);
Method(getDefaultRole,net.sourceforge.ganttproject.roles.Role,Public,N,Y);
Parameter(createRoleSet,java.lang.String,);
Parameter(add,int,);
Parameter(add,java.lang.String,);
Parameter(getRoleSet,java.lang.String,);
EndClass 26
StartClass 27
Class(net.sourceforge.ganttproject.resource.ResourceEvent,N,N,Public);
Attribute(myResources,net.sourceforge.ganttproject.resource.ProjectResource[],Private,N,N,);
Attribute(myManager,net.sourceforge.ganttproject.resource.ResourceManager,Private,N,N,);
Attribute(myResource,net.sourceforge.ganttproject.resource.ProjectResource,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getManager,net.sourceforge.ganttproject.resource.ResourceManager,Public,N,N);
Method(getResource,net.sourceforge.ganttproject.resource.ProjectResource,Public,N,N);
Method(getResources,net.sourceforge.ganttproject.resource.ProjectResource[],Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.resource.ResourceManager,);
Parameter(<init>,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(<init>$2,net.sourceforge.ganttproject.resource.ResourceManager,);
Parameter(<init>$2,net.sourceforge.ganttproject.resource.ProjectResource[],);
Composition(net.sourceforge.ganttproject.resource.ResourceManager);
Composition(net.sourceforge.ganttproject.resource.ProjectResource);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ResourceEvent,<init> --> myResource,net.sourceforge.ganttproject.resource.ResourceEvent,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ResourceEvent,<init> --> myManager,net.sourceforge.ganttproject.resource.ResourceEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ResourceEvent,<init> --> myResource,net.sourceforge.ganttproject.resource.ResourceEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ResourceEvent,<init> --> myResources,net.sourceforge.ganttproject.resource.ResourceEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ResourceEvent,<init>$2 --> myManager,net.sourceforge.ganttproject.resource.ResourceEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ResourceEvent,<init>$2 --> myResources,net.sourceforge.ganttproject.resource.ResourceEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ResourceEvent,<init>$2 --> myResource,net.sourceforge.ganttproject.resource.ResourceEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ResourceEvent,getManager --> myManager,net.sourceforge.ganttproject.resource.ResourceEvent,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ResourceEvent,getResource --> myResource,net.sourceforge.ganttproject.resource.ResourceEvent,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.ResourceEvent,getResources --> myResources,net.sourceforge.ganttproject.resource.ResourceEvent,READ);
EndClass 27
StartClass 28
Class(net.sourceforge.ganttproject.io.GanttXMLOpen,N,N,Public);
Attribute(treePanel,net.sourceforge.ganttproject.GanttTree,Public,N,N,);
Attribute(prj,net.sourceforge.ganttproject.GanttProject,Public,N,N,);
Attribute(peop,net.sourceforge.ganttproject.GanttResourcePanel,Public,N,N,);
Attribute(typeChar,int,Public,N,N,);
Attribute(area,net.sourceforge.ganttproject.GanttGraphicArea,Public,N,N,);
Attribute(lot,java.util.ArrayList,Public,N,N,);
Attribute(lod,java.util.ArrayList,Public,N,N,);
Attribute(indent,java.lang.String,Public,N,N,);
Attribute(marge,java.lang.String,Public,N,N,);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Public,N,N,);
Attribute(bImport,boolean,Public,N,N,);
Attribute(maxID,int,Public,N,N,);
Attribute(myTagHandlers,java.util.ArrayList,Private,N,N,);
Attribute(myListeners,java.util.ArrayList,Private,N,N,);
Attribute(myContext,net.sourceforge.ganttproject.parser.ParsingContext,Private,N,N,);
Attribute(myTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(load,boolean,Public,N,N);
Method(load$2,boolean,Public,N,N);
Method(load$3,boolean,Public,N,N);
Method(addTagHandler,void,Public,N,N);
Method(addParsingListener,void,Public,N,N);
Method(getContext,net.sourceforge.ganttproject.parser.ParsingContext,Public,N,N);
Method(getDefaultTagHandler,net.sourceforge.ganttproject.parser.TagHandler,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.task.TaskManager,Public,Y,N);
Method(access$1,net.sourceforge.ganttproject.parser.ParsingContext,Public,Y,N);
Method(access$2,java.util.ArrayList,Public,Y,N);
Method(access$3,java.util.ArrayList,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(<init>,net.sourceforge.ganttproject.GanttResourcePanel,);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(<init>,boolean,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(load,java.lang.String,);
Parameter(load$2,java.io.InputStream,);
Parameter(load$3,java.io.File,);
Parameter(addTagHandler,net.sourceforge.ganttproject.parser.TagHandler,);
Parameter(addParsingListener,net.sourceforge.ganttproject.parser.ParsingListener,);
Parameter(access$0,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Parameter(access$1,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Parameter(access$2,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Parameter(access$3,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Composition(net.sourceforge.ganttproject.GanttTree);
Composition(net.sourceforge.ganttproject.GanttProject);
Composition(net.sourceforge.ganttproject.GanttResourcePanel);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.parser.ParsingContext);
Composition(net.sourceforge.ganttproject.task.TaskManager);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,<init> --> <init>$2,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,load --> load$3,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init> --> treePanel,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init> --> prj,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init> --> peop,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init> --> area,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init> --> bImport,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init> --> maxID,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> typeChar,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> lot,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> lod,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> indent,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> marge,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> language,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> bImport,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> maxID,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> myTagHandlers,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> myListeners,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> myContext,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> myTaskManager,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,load$2 --> myTaskManager,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,load$3 --> prj,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,load$3 --> language,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,load$3 --> treePanel,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,addTagHandler --> myTagHandlers,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,addParsingListener --> myListeners,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,getContext --> myContext,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,access$0 --> myTaskManager,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,access$1 --> myContext,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,access$2 --> myListeners,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,access$3 --> myTagHandlers,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,load$3 --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen,load$3 --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,<init> --> getMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,<init>$2 --> <init>,net.sourceforge.ganttproject.parser.ParsingContext,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,load$2 --> getAlgorithmCollection,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,load$2 --> getAdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,load$2 --> setEnabled,net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,load$2 --> getRecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,load$2 --> <init>,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,load$3 --> <init>,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,load$3 --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,load$3 --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,load$3 --> forwardScheduling,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen,getDefaultTagHandler --> <init>$2,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,);
EndClass 28
StartClass 29
Class(net.sourceforge.ganttproject.parser.RoleTagHandler,N,N,Public);
Attribute(myRoleSet,net.sourceforge.ganttproject.roles.RoleSet,Private,N,N,);
Attribute(myRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(endElement,void,Public,N,N);
Method(clearRoleSet,void,Private,N,N);
Method(startElement,void,Public,N,N);
Method(findRoleSet,void,Private,N,N);
Method(loadRoles,void,Private,N,N);
Method(getRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.roles.RoleManager,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,org.xml.sax.Attributes,);
Parameter(findRoleSet,java.lang.String,);
Parameter(loadRoles,org.xml.sax.Attributes,);
Realization(net.sourceforge.ganttproject.parser.TagHandler);
Composition(net.sourceforge.ganttproject.roles.RoleSet);
Composition(net.sourceforge.ganttproject.roles.RoleManager);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,endElement --> clearRoleSet,net.sourceforge.ganttproject.parser.RoleTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,startElement --> findRoleSet,net.sourceforge.ganttproject.parser.RoleTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,startElement --> loadRoles,net.sourceforge.ganttproject.parser.RoleTagHandler,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.RoleTagHandler,<init> --> myRoleManager,net.sourceforge.ganttproject.parser.RoleTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.RoleTagHandler,<init> --> myRoleManager,net.sourceforge.ganttproject.parser.RoleTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.RoleTagHandler,clearRoleSet --> myRoleSet,net.sourceforge.ganttproject.parser.RoleTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.RoleTagHandler,findRoleSet --> myRoleManager,net.sourceforge.ganttproject.parser.RoleTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.RoleTagHandler,findRoleSet --> myRoleSet,net.sourceforge.ganttproject.parser.RoleTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.RoleTagHandler,findRoleSet --> myRoleSet,net.sourceforge.ganttproject.parser.RoleTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.RoleTagHandler,loadRoles --> myRoleSet,net.sourceforge.ganttproject.parser.RoleTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.RoleTagHandler,getRoleManager --> myRoleManager,net.sourceforge.ganttproject.parser.RoleTagHandler,READ);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,<init> --> clear,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,findRoleSet --> getProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,findRoleSet --> getRoleSet,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,findRoleSet --> createRoleSet,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,findRoleSet --> setEnabled,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,loadRoles --> <init>,net.sourceforge.ganttproject.roles.RolePersistentID,);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,loadRoles --> getRoleID,net.sourceforge.ganttproject.roles.RolePersistentID,);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,loadRoles --> findRole,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.parser.RoleTagHandler,loadRoles --> createRole,net.sourceforge.ganttproject.roles.RoleSet,);
EndClass 29
StartClass 30
Class(net.sourceforge.ganttproject.gui.GanttPreviewPrint,N,N,Public);
Attribute(zoomX,int[],Public,N,N,);
Attribute(zoomY,int[],Public,N,N,);
Attribute(index,int,Public,N,N,);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(panel,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,Public,N,N,);
Attribute(bPrint,javax.swing.JButton,Public,N,N,);
Attribute(bPortrait,javax.swing.JButton,Public,N,N,);
Attribute(bLandscape,javax.swing.JButton,Public,N,N,);
Attribute(bClose,javax.swing.JButton,Public,N,N,);
Attribute(bZoomP,javax.swing.JButton,Public,N,N,);
Attribute(bZoomM,javax.swing.JButton,Public,N,N,);
Attribute(factorSpinner,javax.swing.JSpinner,Public,N,N,);
Attribute(spinnerModel,javax.swing.SpinnerNumberModel,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(stateChanged,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(<init>,java.awt.image.BufferedImage,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Parameter(stateChanged,javax.swing.event.ChangeEvent,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> spinnerModel,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> factorSpinner,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bClose,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bPrint,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bPortrait,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bLandscape,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bZoomP,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bZoomM,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> language,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> panel,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> zoomX,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> zoomY,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> index,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> language,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bPrint,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bPortrait,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bLandscape,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bClose,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bZoomM,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> bZoomP,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> spinnerModel,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> factorSpinner,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> panel,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> bClose,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> bPrint,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> panel,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> bPortrait,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> zoomX,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> index,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> zoomY,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> bLandscape,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> bZoomM,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> bZoomP,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> index,net.sourceforge.ganttproject.gui.GanttPreviewPrint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,stateChanged --> spinnerModel,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,stateChanged --> panel,net.sourceforge.ganttproject.gui.GanttPreviewPrint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> orientation,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> image,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,stateChanged --> orientation,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,stateChanged --> _x,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint,stateChanged --> _y,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> <init>$3,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> getToolTip,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> center,net.sourceforge.ganttproject.gui.DialogAligner,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> <init>,net.sourceforge.ganttproject.GanttPrintable,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,actionPerformed --> changeState,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,stateChanged --> scale,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint,stateChanged --> changeState,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,);
EndClass 30
StartClass 31
Class(net.sourceforge.ganttproject.io.CSVOptions,N,N,Public);
Attribute(bExportTaskID,boolean,Public,N,N,);
Attribute(bExportTaskName,boolean,Public,N,N,);
Attribute(bExportTaskStartDate,boolean,Public,N,N,);
Attribute(bExportTaskEndDate,boolean,Public,N,N,);
Attribute(bExportTaskPercent,boolean,Public,N,N,);
Attribute(bExportTaskDuration,boolean,Public,N,N,);
Attribute(bExportTaskWebLink,boolean,Public,N,N,);
Attribute(bExportTaskResources,boolean,Public,N,N,);
Attribute(bExportTaskNotes,boolean,Public,N,N,);
Attribute(bExportResourceID,boolean,Public,N,N,);
Attribute(bExportResourceName,boolean,Public,N,N,);
Attribute(bExportResourceMail,boolean,Public,N,N,);
Attribute(bExportResourcePhone,boolean,Public,N,N,);
Attribute(bExportResourceRole,boolean,Public,N,N,);
Attribute(bFixedSize,boolean,Public,N,N,);
Attribute(sSeparatedChar,java.lang.String,Public,N,N,);
Attribute(sSeparatedTextChar,java.lang.String,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(getXml,java.lang.String,Public,N,N);
Method(correct,java.lang.String,Public,N,N);
Method(getSeparatedTextChars,java.lang.String[],Public,N,N);
Parameter(correct,java.lang.String,);
Call(METHOD,net.sourceforge.ganttproject.io.CSVOptions,getXml --> correct,net.sourceforge.ganttproject.io.CSVOptions,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportTaskID,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportTaskName,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportTaskStartDate,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportTaskEndDate,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportTaskPercent,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportTaskDuration,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportTaskWebLink,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportTaskResources,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportTaskNotes,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportResourceID,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportResourceName,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportResourceMail,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportResourcePhone,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bExportResourceRole,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> bFixedSize,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> sSeparatedChar,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,<init> --> sSeparatedTextChar,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bFixedSize,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> sSeparatedChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> sSeparatedTextChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportTaskID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportTaskName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportTaskStartDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportTaskEndDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportTaskPercent,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportTaskDuration,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportTaskWebLink,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportTaskResources,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportTaskNotes,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportResourceID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportResourceName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportResourceMail,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportResourcePhone,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.CSVOptions,getXml --> bExportResourceRole,net.sourceforge.ganttproject.io.CSVOptions,READ);
EndClass 31
StartClass 32
Class(net.sourceforge.ganttproject.action.NewArtefactAction$ActiveActionProvider,Y,Y,Public);
Method(getActiveAction,javax.swing.AbstractAction,Public,N,Y);
EndClass 32
StartClass 33
Class(net.sourceforge.ganttproject.document.AbstractURLDocument,N,Y,Public);
Method(<init>,void,Public,N,N);
Method(getURLPath,java.lang.String,Public,N,N);
SuperClass(net.sourceforge.ganttproject.document.AbstractDocument);
SubClass(net.sourceforge.ganttproject.document.HttpDocument);
Generalization(net.sourceforge.ganttproject.document.AbstractDocument);
Call(METHOD,net.sourceforge.ganttproject.document.AbstractURLDocument,<init> --> <init>,net.sourceforge.ganttproject.document.AbstractDocument,);
Call(METHOD,net.sourceforge.ganttproject.document.AbstractURLDocument,getURLPath --> getPath,net.sourceforge.ganttproject.document.Document,);
EndClass 33
StartClass 34
Class(net.sourceforge.ganttproject.task.TaskManagerConfig,Y,Y,Public);
Method(getDefaultColor,java.awt.Color,Public,N,Y);
EndClass 34
StartClass 35
Class(net.sourceforge.ganttproject.shape.ShapePaint,N,N,Public);
Attribute(width,int,Protected,N,N,);
Attribute(height,int,Protected,N,N,);
Attribute(array,int[],Protected,N,N,);
Attribute(foreground,java.awt.Color,Protected,N,N,);
Attribute(background,java.awt.Color,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(createTexture,java.awt.image.BufferedImage,Private,Y,N);
Method(equals,boolean,Public,N,N);
Method(toString2,java.lang.String,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(getArray,java.lang.String,Public,N,N);
Method(getarray,int[],Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.shape.ShapePaint,);
Parameter(<init>$2,net.sourceforge.ganttproject.shape.ShapePaint,);
Parameter(<init>$2,java.awt.Color,);
Parameter(<init>$2,java.awt.Color,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int[],);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int[],);
Parameter(<init>$4,java.awt.Color,);
Parameter(<init>$4,java.awt.Color,);
Parameter(createTexture,int,);
Parameter(createTexture,int,);
Parameter(createTexture,int[],);
Parameter(createTexture,java.awt.Color,);
Parameter(createTexture,java.awt.Color,);
Parameter(equals,java.lang.Object,);
Call(METHOD,net.sourceforge.ganttproject.shape.ShapePaint,<init> --> <init>$4,net.sourceforge.ganttproject.shape.ShapePaint,);
Call(METHOD,net.sourceforge.ganttproject.shape.ShapePaint,<init>$2 --> <init>$4,net.sourceforge.ganttproject.shape.ShapePaint,);
Call(METHOD,net.sourceforge.ganttproject.shape.ShapePaint,<init>$3 --> <init>$4,net.sourceforge.ganttproject.shape.ShapePaint,);
Call(METHOD,net.sourceforge.ganttproject.shape.ShapePaint,<init>$4 --> createTexture,net.sourceforge.ganttproject.shape.ShapePaint,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init> --> width,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init> --> height,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init> --> array,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init> --> foreground,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init> --> background,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init>$2 --> width,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init>$2 --> height,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init>$2 --> array,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init>$4 --> width,net.sourceforge.ganttproject.shape.ShapePaint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init>$4 --> height,net.sourceforge.ganttproject.shape.ShapePaint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init>$4 --> array,net.sourceforge.ganttproject.shape.ShapePaint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init>$4 --> foreground,net.sourceforge.ganttproject.shape.ShapePaint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,<init>$4 --> background,net.sourceforge.ganttproject.shape.ShapePaint,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,equals --> array,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,equals --> width,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,equals --> height,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,toString2 --> width,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,toString2 --> height,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,toString2 --> array,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,toString --> width,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,toString --> height,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,toString --> array,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,toString --> foreground,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,toString --> background,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,getArray --> array,net.sourceforge.ganttproject.shape.ShapePaint,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapePaint,getarray --> array,net.sourceforge.ganttproject.shape.ShapePaint,READ);
EndClass 35
StartClass 36
Class(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,Y,Y,Public);
Method(createFacede,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Public,N,Y);
EndClass 36
StartClass 37
Class(net.sourceforge.ganttproject.filter.GanttHTMLFileFilter,N,N,Public);
Method(<init>,void,Public,N,N);
Method(accept,boolean,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Parameter(accept,java.io.File,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttHTMLFileFilter,getDescription --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttHTMLFileFilter,getDescription --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 37
StartClass 38
Class(net.sourceforge.ganttproject.GanttExportSettings,N,N,Public);
Attribute(name,boolean,Public,N,N,);
Attribute(percent,boolean,Public,N,N,);
Attribute(depend,boolean,Public,N,N,);
Attribute(border3d,boolean,Public,N,N,);
Attribute(ok,boolean,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>$2,boolean,);
Parameter(<init>$2,boolean,);
Parameter(<init>$2,boolean,);
Parameter(<init>$2,boolean,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttExportSettings,<init> --> ok,net.sourceforge.ganttproject.GanttExportSettings,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttExportSettings,<init> --> depend,net.sourceforge.ganttproject.GanttExportSettings,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttExportSettings,<init> --> percent,net.sourceforge.ganttproject.GanttExportSettings,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttExportSettings,<init> --> name,net.sourceforge.ganttproject.GanttExportSettings,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttExportSettings,<init>$2 --> name,net.sourceforge.ganttproject.GanttExportSettings,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttExportSettings,<init>$2 --> percent,net.sourceforge.ganttproject.GanttExportSettings,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttExportSettings,<init>$2 --> depend,net.sourceforge.ganttproject.GanttExportSettings,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttExportSettings,<init>$2 --> border3d,net.sourceforge.ganttproject.GanttExportSettings,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttExportSettings,<init>$2 --> ok,net.sourceforge.ganttproject.GanttExportSettings,WRITE);
EndClass 38
StartClass 39
Class(net.sourceforge.ganttproject.document.DocumentCreator,N,N,Public);
Method(<init>,void,Public,N,N);
Method(createDocument,net.sourceforge.ganttproject.document.Document,Public,Y,N);
Method(createDocument$2,net.sourceforge.ganttproject.document.Document,Public,Y,N);
Parameter(createDocument,java.lang.String,);
Parameter(createDocument$2,java.lang.String,);
Parameter(createDocument$2,java.lang.String,);
Parameter(createDocument$2,java.lang.String,);
Call(METHOD,net.sourceforge.ganttproject.document.DocumentCreator,createDocument --> createDocument$2,net.sourceforge.ganttproject.document.DocumentCreator,);
Call(METHOD,net.sourceforge.ganttproject.document.DocumentCreator,createDocument$2 --> <init>,net.sourceforge.ganttproject.document.HttpDocument,);
Call(METHOD,net.sourceforge.ganttproject.document.DocumentCreator,createDocument$2 --> <init>,net.sourceforge.ganttproject.document.FileDocument,);
EndClass 39
StartClass 40
Class(net.sourceforge.ganttproject.parser.DependencyTagHandler,N,N,Public);
Attribute(myTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,Y,);
Attribute(myDependencies,java.util.List,Private,N,N,);
Attribute(myDependenciesSectionStarted,boolean,Private,N,N,);
Attribute(myContext,net.sourceforge.ganttproject.parser.ParsingContext,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(endElement,void,Public,N,N);
Method(startElement,void,Public,N,N);
Method(parsingStarted,void,Public,N,N);
Method(parsingFinished,void,Public,N,N);
Method(loadDependency,void,Protected,N,N);
Method(getDependencyAddressee,int,Protected,N,N);
Method(getDependencyAddresser,int,Protected,N,N);
Method(getDependencies,java.util.List,Private,N,N);
Method(getContext,net.sourceforge.ganttproject.parser.ParsingContext,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.parser.ParsingContext,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,org.xml.sax.Attributes,);
Parameter(loadDependency,org.xml.sax.Attributes,);
Parameter(getDependencyAddressee,org.xml.sax.Attributes,);
Parameter(getDependencyAddresser,org.xml.sax.Attributes,);
Realization(net.sourceforge.ganttproject.parser.TagHandler);
Realization(net.sourceforge.ganttproject.parser.ParsingListener);
Composition(net.sourceforge.ganttproject.task.TaskManager);
Composition(net.sourceforge.ganttproject.parser.ParsingContext);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,startElement --> loadDependency,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,parsingFinished --> getDependencies,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,loadDependency --> getDependencyAddressee,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,loadDependency --> getDependencyAddresser,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,loadDependency --> getDependencies,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,getDependencyAddressee --> getContext,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler,<init> --> myDependencies,net.sourceforge.ganttproject.parser.DependencyTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler,<init> --> myDependenciesSectionStarted,net.sourceforge.ganttproject.parser.DependencyTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler,<init> --> myContext,net.sourceforge.ganttproject.parser.DependencyTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler,<init> --> myTaskManager,net.sourceforge.ganttproject.parser.DependencyTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler,parsingFinished --> myTaskManager,net.sourceforge.ganttproject.parser.DependencyTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler,getDependencies --> myDependencies,net.sourceforge.ganttproject.parser.DependencyTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler,getContext --> myContext,net.sourceforge.ganttproject.parser.DependencyTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler,parsingFinished --> taskID,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler,parsingFinished --> successorTaskID,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler,parsingFinished --> dependType,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,READ);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,parsingFinished --> getTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,parsingFinished --> getDependencyCollection,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,parsingFinished --> createDependency,net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,parsingFinished --> createConstraint,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,parsingFinished --> setConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,loadDependency --> <init>$3,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,loadDependency --> setTaskID,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,loadDependency --> setDependTaskID,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,loadDependency --> setDependType,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,);
Call(METHOD,net.sourceforge.ganttproject.parser.DependencyTagHandler,getDependencyAddressee --> getTaskID,net.sourceforge.ganttproject.parser.ParsingContext,);
EndClass 40
StartClass 41
Class(net.sourceforge.ganttproject.task.TaskManager$Access,N,N,Public);
Attribute(ourInstance,net.sourceforge.ganttproject.task.TaskManager,Private,Y,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(getInstance,net.sourceforge.ganttproject.task.TaskManager,Public,Y,N);
Method(newInstance,net.sourceforge.ganttproject.task.TaskManager,Public,Y,N);
Method(newInstance$2,net.sourceforge.ganttproject.task.TaskManager,Public,Y,N);
Parameter(newInstance$2,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,);
Parameter(newInstance$2,net.sourceforge.ganttproject.task.TaskManagerConfig,);
Composition(net.sourceforge.ganttproject.task.TaskManager);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManager$Access,<clinit> --> newInstance,net.sourceforge.ganttproject.task.TaskManager$Access,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManager$Access,<clinit> --> ourInstance,net.sourceforge.ganttproject.task.TaskManager$Access,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManager$Access,getInstance --> ourInstance,net.sourceforge.ganttproject.task.TaskManager$Access,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManager$Access,newInstance --> <init>$2,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManager$Access,newInstance$2 --> <init>,net.sourceforge.ganttproject.task.TaskManagerImpl,);
EndClass 41
StartClass 42
Class(net.sourceforge.ganttproject.util.BrowserControl,N,N,Public);
Attribute(URLTOKEN,java.lang.String,Private,Y,Y,);
Attribute(WIN_ID,int,Private,Y,Y,);
Attribute(WIN_PREFIX,java.lang.String,Private,Y,Y,);
Attribute(WIN_CMDLINE,java.lang.String[],Private,Y,Y,);
Attribute(MAC_ID,int,Private,Y,Y,);
Attribute(MAC_PREFIX,java.lang.String,Private,Y,Y,);
Attribute(MAC_CMDLINE,java.lang.String[],Private,Y,Y,);
Attribute(OTHER_ID,int,Private,Y,Y,);
Attribute(OTHER_CMDLINES,java.lang.String[][],Private,Y,Y,);
Attribute(OTHER_FALLBACKS,java.lang.String[][],Private,Y,Y,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(displayURL,boolean,Public,Y,N);
Method(getPlatform,int,Private,Y,N);
Method(connectStringArray,java.lang.String,Private,Y,N);
Method(replaceToken,java.lang.String[],Private,Y,N);
Method(runCmdLine,boolean,Private,Y,N);
Method(runCmdLine$2,boolean,Private,Y,N);
Parameter(displayURL,java.lang.String,);
Parameter(connectStringArray,java.lang.String[],);
Parameter(replaceToken,java.lang.String[],);
Parameter(replaceToken,java.lang.String,);
Parameter(replaceToken,java.lang.String,);
Parameter(runCmdLine,java.lang.String[],);
Parameter(runCmdLine$2,java.lang.String[],);
Parameter(runCmdLine$2,java.lang.String[],);
Call(METHOD,net.sourceforge.ganttproject.util.BrowserControl,displayURL --> getPlatform,net.sourceforge.ganttproject.util.BrowserControl,);
Call(METHOD,net.sourceforge.ganttproject.util.BrowserControl,displayURL --> replaceToken,net.sourceforge.ganttproject.util.BrowserControl,);
Call(METHOD,net.sourceforge.ganttproject.util.BrowserControl,displayURL --> runCmdLine,net.sourceforge.ganttproject.util.BrowserControl,);
Call(METHOD,net.sourceforge.ganttproject.util.BrowserControl,displayURL --> runCmdLine$2,net.sourceforge.ganttproject.util.BrowserControl,);
Call(METHOD,net.sourceforge.ganttproject.util.BrowserControl,runCmdLine --> runCmdLine$2,net.sourceforge.ganttproject.util.BrowserControl,);
Call(METHOD,net.sourceforge.ganttproject.util.BrowserControl,runCmdLine$2 --> connectStringArray,net.sourceforge.ganttproject.util.BrowserControl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.util.BrowserControl,<clinit> --> WIN_CMDLINE,net.sourceforge.ganttproject.util.BrowserControl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.util.BrowserControl,<clinit> --> MAC_CMDLINE,net.sourceforge.ganttproject.util.BrowserControl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.util.BrowserControl,<clinit> --> OTHER_CMDLINES,net.sourceforge.ganttproject.util.BrowserControl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.util.BrowserControl,<clinit> --> OTHER_FALLBACKS,net.sourceforge.ganttproject.util.BrowserControl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.util.BrowserControl,displayURL --> WIN_CMDLINE,net.sourceforge.ganttproject.util.BrowserControl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.util.BrowserControl,displayURL --> MAC_CMDLINE,net.sourceforge.ganttproject.util.BrowserControl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.util.BrowserControl,displayURL --> OTHER_CMDLINES,net.sourceforge.ganttproject.util.BrowserControl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.util.BrowserControl,displayURL --> OTHER_FALLBACKS,net.sourceforge.ganttproject.util.BrowserControl,READ);
EndClass 42
StartClass 43
Class(net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,N,N,Public);
Attribute(myMainFrame,javax.swing.JFrame,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(createNewProject,net.sourceforge.ganttproject.PrjInfos,Public,N,N);
Parameter(<init>,javax.swing.JFrame,);
Parameter(createNewProject,net.sourceforge.ganttproject.IGanttProject,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,<init> --> myMainFrame,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,createNewProject --> myMainFrame,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,createNewProject --> getRoleManager,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,createNewProject --> getRoleSets,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,createNewProject --> <init>,net.sourceforge.ganttproject.gui.projectwizard.I18N,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,createNewProject --> <init>,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,createNewProject --> addProjectNamePage,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,createNewProject --> addRoleSetPage,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,createNewProject --> show,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard,createNewProject --> <init>,net.sourceforge.ganttproject.PrjInfos,);
EndClass 43
StartClass 44
Class(net.sourceforge.ganttproject.gui.options.SettingsDialog,N,N,Public);
Attribute(reinit,boolean,Public,N,N,);
Attribute(restoreButton,javax.swing.JButton,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(constructSections,void,Public,N,N);
Method(valueChanged,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(valueChanged,javax.swing.event.TreeSelectionEvent,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
SuperClass(net.sourceforge.ganttproject.gui.GeneralDialog);
Generalization(net.sourceforge.ganttproject.gui.GeneralDialog);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> constructSections,net.sourceforge.ganttproject.gui.options.SettingsDialog,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,<init> --> restoreButton,net.sourceforge.ganttproject.gui.options.SettingsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,<init> --> reinit,net.sourceforge.ganttproject.gui.options.SettingsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,<init> --> restoreButton,net.sourceforge.ganttproject.gui.options.SettingsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> reinit,net.sourceforge.ganttproject.gui.options.SettingsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> reinit,net.sourceforge.ganttproject.gui.options.SettingsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,actionPerformed --> restoreButton,net.sourceforge.ganttproject.gui.options.SettingsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,<init> --> language,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,<init> --> southPanel,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,constructSections --> language,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,constructSections --> treeSections,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> settingPanel,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> rootNode,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> treeModel,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> mainPanel2,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> language,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> appli,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> settingPanel,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,actionPerformed --> appli,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.SettingsDialog,actionPerformed --> settingPanel,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,<init> --> <init>,net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,<init> --> <init>,net.sourceforge.ganttproject.gui.GeneralDialog,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,constructSections --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,constructSections --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,constructSections --> addObject,net.sourceforge.ganttproject.gui.GeneralDialog,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> applyChanges,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> getProject,net.sourceforge.ganttproject.gui.GeneralDialog,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> getTitle,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> getComment,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.TopPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,valueChanged --> initialize,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,actionPerformed --> actionPerformed,net.sourceforge.ganttproject.gui.GeneralDialog,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,actionPerformed --> restoreOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.SettingsDialog,actionPerformed --> initialize,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
EndClass 44
StartClass 45
Class(net.sourceforge.ganttproject.document.HttpDocument,N,N,Public);
Attribute(url,java.lang.String,Private,N,N,);
Attribute(lastError,java.lang.String,Private,N,N,);
Attribute(httpURL,org.apache.commons.httpclient.HttpURL,Private,N,N,);
Attribute(webdavResource,org.apache.webdav.lib.WebdavResource,Private,N,N,);
Attribute(locked,boolean,Private,N,N,);
Attribute(malformedURL,boolean,Private,N,N,);
Attribute(lockDAVMinutes,int,Private,Y,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(getWebdavResource,org.apache.webdav.lib.WebdavResource,Private,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Method(canRead,boolean,Public,N,N);
Method(canWrite,boolean,Public,N,N);
Method(isValidForMRU,boolean,Public,N,N);
Method(acquireLock,boolean,Public,N,N);
Method(releaseLock,void,Public,N,N);
Method(getInputStream,java.io.InputStream,Public,N,N);
Method(getOutputStream,java.io.OutputStream,Public,N,N);
Method(getPath,java.lang.String,Public,N,N);
Method(getURLPath,java.lang.String,Public,N,N);
Method(getUsername,java.lang.String,Public,N,N);
Method(getPassword,java.lang.String,Public,N,N);
Method(setUserInfo,void,Public,N,N);
Method(getLastError,java.lang.String,Public,N,N);
Method(setLockDAVMinutes,void,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(setUserInfo,java.lang.String,);
Parameter(setUserInfo,java.lang.String,);
Parameter(setLockDAVMinutes,int,);
SuperClass(net.sourceforge.ganttproject.document.AbstractURLDocument);
SuperClass(net.sourceforge.ganttproject.document.AbstractDocument);
Generalization(net.sourceforge.ganttproject.document.AbstractURLDocument);
Call(METHOD,net.sourceforge.ganttproject.document.HttpDocument,canRead --> getWebdavResource,net.sourceforge.ganttproject.document.HttpDocument,);
Call(METHOD,net.sourceforge.ganttproject.document.HttpDocument,canWrite --> getWebdavResource,net.sourceforge.ganttproject.document.HttpDocument,);
Call(METHOD,net.sourceforge.ganttproject.document.HttpDocument,acquireLock --> getWebdavResource,net.sourceforge.ganttproject.document.HttpDocument,);
Call(METHOD,net.sourceforge.ganttproject.document.HttpDocument,releaseLock --> getWebdavResource,net.sourceforge.ganttproject.document.HttpDocument,);
Call(METHOD,net.sourceforge.ganttproject.document.HttpDocument,getInputStream --> getWebdavResource,net.sourceforge.ganttproject.document.HttpDocument,);
Call(METHOD,net.sourceforge.ganttproject.document.HttpDocument,getOutputStream --> getWebdavResource,net.sourceforge.ganttproject.document.HttpDocument,);
Call(METHOD,net.sourceforge.ganttproject.document.HttpDocument,getPath --> getDescription,net.sourceforge.ganttproject.document.HttpDocument,);
Call(METHOD,net.sourceforge.ganttproject.document.HttpDocument,getURLPath --> getPath,net.sourceforge.ganttproject.document.HttpDocument,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,<clinit> --> lockDAVMinutes,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,<init> --> httpURL,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,<init> --> locked,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,<init> --> malformedURL,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,<init> --> url,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,<init> --> httpURL,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,<init> --> lastError,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,getWebdavResource --> webdavResource,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,getWebdavResource --> httpURL,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,getWebdavResource --> webdavResource,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,getWebdavResource --> lastError,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,getDescription --> httpURL,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,getDescription --> url,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,canWrite --> httpURL,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,isValidForMRU --> malformedURL,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,acquireLock --> locked,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,acquireLock --> lockDAVMinutes,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,acquireLock --> httpURL,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,acquireLock --> locked,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,releaseLock --> locked,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,getInputStream --> lastError,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,getOutputStream --> lastError,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,getUsername --> httpURL,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,getPassword --> httpURL,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,setUserInfo --> httpURL,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,setUserInfo --> webdavResource,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,setUserInfo --> lastError,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,setUserInfo --> malformedURL,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,getLastError --> lastError,net.sourceforge.ganttproject.document.HttpDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocument,setLockDAVMinutes --> lockDAVMinutes,net.sourceforge.ganttproject.document.HttpDocument,WRITE);
Call(METHOD,net.sourceforge.ganttproject.document.HttpDocument,<init> --> <init>,net.sourceforge.ganttproject.document.AbstractURLDocument,);
Call(METHOD,net.sourceforge.ganttproject.document.HttpDocument,getOutputStream --> <init>,net.sourceforge.ganttproject.document.HttpDocumentOutputStream,);
EndClass 45
StartClass 46
Class(net.sourceforge.ganttproject.parser.ParsingListener,Y,Y,Public);
Method(parsingStarted,void,Public,N,Y);
Method(parsingFinished,void,Public,N,Y);
EndClass 46
StartClass 47
Class(net.sourceforge.ganttproject.gui.about.AboutDialog,N,N,Public);
Method(<init>,void,Public,N,N);
Method(valueChanged,void,Public,N,N);
Method(constructSections,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(valueChanged,javax.swing.event.TreeSelectionEvent,);
SuperClass(net.sourceforge.ganttproject.gui.GeneralDialog);
Generalization(net.sourceforge.ganttproject.gui.GeneralDialog);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutDialog,<init> --> cancelButton,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> mainPanel2,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> language,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> appli,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> settingPanel,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> settingPanel,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutDialog,constructSections --> language,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,<init> --> <init>,net.sourceforge.ganttproject.gui.about.AboutPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,<init> --> <init>,net.sourceforge.ganttproject.gui.GeneralDialog,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.about.AboutPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.about.AboutLicensePanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> getTitle,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> getComment,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> <init>,net.sourceforge.ganttproject.gui.options.TopPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,valueChanged --> initialize,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,constructSections --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,constructSections --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutDialog,constructSections --> addObject,net.sourceforge.ganttproject.gui.GeneralDialog,);
EndClass 47
StartClass 48
Class(net.sourceforge.ganttproject.roles.Role,Y,Y,Public);
Method(getID,int,Public,N,Y);
Method(getName,java.lang.String,Public,N,Y);
Method(getPersistentID,java.lang.String,Public,N,Y);
EndClass 48
StartClass 49
Class(net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,N,N,NA);
Attribute(myTask2treeNode,java.util.Map,Private,N,N,);
Attribute(myRootTask,net.sourceforge.ganttproject.task.Task,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getNestedTasks,net.sourceforge.ganttproject.task.Task[],Public,N,N);
Method(getRoot,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(getContainer,net.sourceforge.ganttproject.task.Task,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(getNestedTasks,net.sourceforge.ganttproject.task.Task,);
Parameter(getContainer,net.sourceforge.ganttproject.task.Task,);
Realization(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade);
Composition(net.sourceforge.ganttproject.task.Task);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,<init> --> myTask2treeNode,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,<init> --> myTask2treeNode,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,<init> --> myRootTask,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,getNestedTasks --> myTask2treeNode,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,getRoot --> myRootTask,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,getContainer --> myTask2treeNode,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,<init> --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
EndClass 49
StartClass 50
Class(net.sourceforge.ganttproject.resource.HumanResourceManager,N,N,Public);
Attribute(myViews,java.util.List,Private,N,N,);
Attribute(resources,java.util.ArrayList,Private,N,N,);
Attribute(nextFreeId,int,Private,N,N,);
Attribute(myDefaultRole,net.sourceforge.ganttproject.roles.Role,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(newHumanResource,net.sourceforge.ganttproject.resource.HumanResource,Public,N,N);
Method(create,net.sourceforge.ganttproject.resource.ProjectResource,Public,N,N);
Method(add,void,Public,N,N);
Method(getById,net.sourceforge.ganttproject.resource.ProjectResource,Public,N,N);
Method(getResources,java.util.ArrayList,Public,N,N);
Method(remove,void,Public,N,N);
Method(removeById,void,Public,N,N);
Method(save,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(addView,void,Public,N,N);
Method(fireResourceAdded,void,Private,N,N);
Method(fireResourcesRemoved,void,Private,N,N);
Method(fireCleanup,void,Private,N,N);
Method(up,void,Public,N,N);
Method(down,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.roles.Role,);
Parameter(create,java.lang.String,);
Parameter(create,int,);
Parameter(add,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(getById,int,);
Parameter(remove,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(removeById,int,);
Parameter(save,java.io.OutputStream,);
Parameter(addView,net.sourceforge.ganttproject.resource.ResourceView,);
Parameter(fireResourceAdded,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(fireResourcesRemoved,net.sourceforge.ganttproject.resource.ProjectResource[],);
Parameter(up,int,);
Parameter(down,int,);
Realization(net.sourceforge.ganttproject.resource.ResourceManager);
Composition(net.sourceforge.ganttproject.roles.Role);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,create --> add,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,add --> fireResourceAdded,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,remove --> fireResourcesRemoved,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,removeById --> getById,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,removeById --> remove,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,clear --> fireCleanup,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,fireCleanup --> fireResourcesRemoved,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,<init> --> myViews,net.sourceforge.ganttproject.resource.HumanResourceManager,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,<init> --> resources,net.sourceforge.ganttproject.resource.HumanResourceManager,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,<init> --> nextFreeId,net.sourceforge.ganttproject.resource.HumanResourceManager,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,<init> --> myDefaultRole,net.sourceforge.ganttproject.resource.HumanResourceManager,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,newHumanResource --> myDefaultRole,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,create --> myDefaultRole,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,add --> nextFreeId,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,add --> resources,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,add --> nextFreeId,net.sourceforge.ganttproject.resource.HumanResourceManager,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,getById --> resources,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,getResources --> resources,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,remove --> resources,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,clear --> resources,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,addView --> myViews,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,fireResourceAdded --> myViews,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,fireResourcesRemoved --> myViews,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,fireCleanup --> resources,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,up --> resources,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResourceManager,down --> resources,net.sourceforge.ganttproject.resource.HumanResourceManager,READ);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,newHumanResource --> <init>,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,newHumanResource --> setRole,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,create --> <init>$2,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,create --> setRole,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,add --> getId,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,add --> setId,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,getById --> getId,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,fireResourceAdded --> <init>,net.sourceforge.ganttproject.resource.ResourceEvent,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,fireResourceAdded --> resourceAdded,net.sourceforge.ganttproject.resource.ResourceView,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,fireResourcesRemoved --> <init>$2,net.sourceforge.ganttproject.resource.ResourceEvent,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResourceManager,fireResourcesRemoved --> resourcesRemoved,net.sourceforge.ganttproject.resource.ResourceView,);
EndClass 50
StartClass 51
Class(net.sourceforge.ganttproject.filter.GanttPNGFileFilter,N,N,Public);
Method(<init>,void,Public,N,N);
Method(accept,boolean,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Parameter(accept,java.io.File,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttPNGFileFilter,getDescription --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttPNGFileFilter,getDescription --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 51
StartClass 52
Class(net.sourceforge.ganttproject.resource.ResourceContext,Y,Y,Public);
Method(getResources,net.sourceforge.ganttproject.resource.ProjectResource[],Public,N,Y);
EndClass 52
StartClass 53
Class(net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,N,N,Public);
Attribute(myFindPossibleDependeesAlgorithm,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm,Private,N,Y,);
Attribute(myRecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,Private,N,Y,);
Attribute(myAdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,Private,N,Y,);
Attribute(myCompletionPercentageAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getFindPossibleDependeesAlgorithm,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm,Public,N,N);
Method(getRecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,Public,N,N);
Method(getAdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,Public,N,N);
Method(getRecalculateTaskCompletionPercentageAlgorithm,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm,);
Parameter(<init>,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Parameter(<init>,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Parameter(<init>,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,);
Composition(net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm);
Composition(net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm);
Composition(net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm);
Composition(net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,<init> --> myFindPossibleDependeesAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,<init> --> myRecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,<init> --> myAdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,<init> --> myCompletionPercentageAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,getFindPossibleDependeesAlgorithm --> myFindPossibleDependeesAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,getRecalculateTaskScheduleAlgorithm --> myRecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,getAdjustTaskBoundsAlgorithm --> myAdjustTaskBoundsAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,getRecalculateTaskCompletionPercentageAlgorithm --> myCompletionPercentageAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,READ);
EndClass 53
StartClass 54
Class(net.sourceforge.ganttproject.parser.ParsingContext,N,N,Public);
Attribute(myTaskID,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getTaskID,int,Public,N,N);
Method(setTaskID,void,Public,N,N);
Parameter(setTaskID,int,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.ParsingContext,getTaskID --> myTaskID,net.sourceforge.ganttproject.parser.ParsingContext,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.ParsingContext,setTaskID --> myTaskID,net.sourceforge.ganttproject.parser.ParsingContext,WRITE);
EndClass 54
StartClass 55
Class(net.sourceforge.ganttproject.ResourceLoadGraphicArea,N,N,Public);
Attribute(date,net.sourceforge.ganttproject.GanttCalendar,Public,N,N,);
Attribute(olddate,net.sourceforge.ganttproject.GanttCalendar,Public,N,N,);
Attribute(table,javax.swing.JTable,Public,N,N,);
Attribute(ONE_WEEK,int,Public,Y,Y,);
Attribute(TWO_WEEK,int,Public,Y,Y,);
Attribute(ONE_MONTH,int,Public,Y,Y,);
Attribute(TWO_MONTH,int,Public,Y,Y,);
Attribute(THREE_MONTH,int,Public,Y,Y,);
Attribute(FOUR_MONTH,int,Public,Y,Y,);
Attribute(SIX_MONTH,int,Public,Y,Y,);
Attribute(ONE_YEAR,int,Public,Y,Y,);
Attribute(TWO_YEAR,int,Public,Y,Y,);
Attribute(THREE_YEAR,int,Public,Y,Y,);
Attribute(taskDefaultColor,java.awt.Color,Public,Y,N,);
Attribute(zoomValue,int,Private,N,N,);
Attribute(listOfParam,java.util.ArrayList,Private,N,N,);
Attribute(margY,int,Private,N,N,);
Attribute(upperLeft,java.awt.Point,Private,N,N,);
Attribute(printRendering,boolean,Private,N,N,);
Attribute(drawdepend,boolean,Private,N,N,);
Attribute(drawPercent,boolean,Private,N,N,);
Attribute(drawName,boolean,Private,N,N,);
Attribute(drawVersion,boolean,Private,N,N,);
Attribute(draw3dBorders,boolean,Private,N,N,);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Attribute(oldX,int,Private,N,N,);
Attribute(oldY,int,Private,N,N,);
Attribute(moveView,boolean,Private,N,N,);
Attribute(moveTask,int,Private,N,N,);
Attribute(curs,boolean,Public,N,N,);
Attribute(typeSeletion,int,Public,N,N,);
Attribute(storeTaskLength,int,Private,N,N,);
Attribute(addTaskLength,float,Private,N,N,);
Attribute(storeTaskStart,net.sourceforge.ganttproject.GanttCalendar,Private,N,N,);
Attribute(storeX,int[],Private,N,N,);
Attribute(arrayColor,java.awt.Color[],Private,N,N,);
Attribute(listOfTask,java.util.ArrayList,Private,N,N,);
Attribute(beg,net.sourceforge.ganttproject.GanttCalendar,Public,N,N,);
Attribute(end,net.sourceforge.ganttproject.GanttCalendar,Public,N,N,);
Attribute(loads,java.util.ArrayList,Private,N,N,);
Attribute(tree,net.sourceforge.ganttproject.GanttTree,Public,N,N,);
Attribute(mouseButton,int,Public,N,N,);
Attribute(rowCount,int,Private,N,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(getPreferredSize,java.awt.Dimension,Public,N,N);
Method(changeDate,void,Public,N,N);
Method(changeDate2,void,Public,N,N);
Method(zoomToBegin,void,Public,N,N);
Method(paintComponent,void,Public,N,N);
Method(drawGPVersion,void,Public,N,N);
Method(indexOf,int,Public,N,N);
Method(setScrollBar,void,Public,N,N);
Method(getScrollBar,int,Public,N,N);
Method(setZoom,void,Public,N,N);
Method(zoomMore,void,Public,N,N);
Method(zoomLess,void,Public,N,N);
Method(getZoom,int,Public,N,N);
Method(setDate,void,Public,N,N);
Method(getDate,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(setLanguage,void,Public,N,N);
Method(getGranit,int,Public,N,N);
Method(getFoot,int,Public,N,N);
Method(paintCalendar1,void,Public,N,N);
Method(drawVerticalLinedash,void,Public,N,N);
Method(paintCalendar2,void,Public,N,N);
Method(paintLoads,void,Public,N,N);
Method(paintEndBorder,void,Public,N,N);
Method(paintAResourceLoad,void,Public,N,N);
Method(calculateLoad,void,Private,N,N);
Method(getChart,java.awt.image.BufferedImage,Public,N,N);
Method(printResources,void,Private,N,N);
Method(export,void,Public,N,N);
Method(printProject,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.GanttProject,Public,Y,N);
Method(access$1,int,Public,Y,N);
Method(access$2,void,Public,Y,N);
Method(access$3,void,Public,Y,N);
Method(access$4,void,Public,Y,N);
Method(access$5,int,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,javax.swing.JTable,);
Parameter(changeDate,boolean,);
Parameter(changeDate2,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(paintComponent,java.awt.Graphics,);
Parameter(drawGPVersion,java.awt.Graphics,);
Parameter(indexOf,java.util.ArrayList,);
Parameter(indexOf,java.lang.String,);
Parameter(setScrollBar,int,);
Parameter(setZoom,int,);
Parameter(setDate,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(setLanguage,net.sourceforge.ganttproject.language.GanttLanguage,);
Parameter(getGranit,boolean,);
Parameter(paintCalendar1,java.awt.Graphics,);
Parameter(drawVerticalLinedash,java.awt.Graphics,);
Parameter(drawVerticalLinedash,int,);
Parameter(drawVerticalLinedash,int,);
Parameter(drawVerticalLinedash,int,);
Parameter(drawVerticalLinedash,int,);
Parameter(paintCalendar2,java.awt.Graphics,);
Parameter(paintLoads,java.awt.Graphics,);
Parameter(paintEndBorder,java.awt.Graphics,);
Parameter(paintEndBorder,int,);
Parameter(paintEndBorder,int,);
Parameter(paintAResourceLoad,java.awt.Graphics,);
Parameter(paintAResourceLoad,int,);
Parameter(paintAResourceLoad,int,);
Parameter(paintAResourceLoad,int,);
Parameter(paintAResourceLoad,java.lang.String,);
Parameter(paintAResourceLoad,java.awt.Color,);
Parameter(paintAResourceLoad,boolean,);
Parameter(paintAResourceLoad,boolean,);
Parameter(calculateLoad,java.util.ArrayList,);
Parameter(getChart,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(printResources,java.awt.Graphics,);
Parameter(export,java.io.File,);
Parameter(export,java.lang.String,);
Parameter(export,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(printProject,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(access$0,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Parameter(access$1,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Parameter(access$2,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Parameter(access$2,int,);
Parameter(access$3,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Parameter(access$3,int,);
Parameter(access$4,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Parameter(access$4,int,);
Parameter(access$5,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Composition(net.sourceforge.ganttproject.GanttCalendar);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.GanttProject);
Composition(net.sourceforge.ganttproject.GanttTree);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintComponent --> paintCalendar1,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintComponent --> paintLoads,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintComponent --> paintCalendar2,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintComponent --> drawGPVersion,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> getGranit,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> getFoot,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> drawVerticalLinedash,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> getGranit,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> getFoot,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> getGranit,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> calculateLoad,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> paintAResourceLoad,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> getGranit,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> zoomToBegin,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> changeDate2,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> changeDate,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> printResources,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> paintComponent,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> drawGPVersion,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,export --> getChart,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,printProject --> getChart,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<clinit> --> taskDefaultColor,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> arrayColor,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> taskDefaultColor,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> listOfParam,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> upperLeft,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> printRendering,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> drawdepend,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> drawPercent,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> drawName,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> drawVersion,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> draw3dBorders,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> moveView,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> moveTask,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> curs,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> storeX,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> arrayColor,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> beg,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> end,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> mouseButton,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> rowCount,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> olddate,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> table,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> tree,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> margY,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> language,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> appli,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,changeDate --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,changeDate --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,changeDate2 --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomToBegin --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomToBegin --> language,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomToBegin --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintComponent --> drawVersion,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,setScrollBar --> margY,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getScrollBar --> margY,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,setZoom --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomMore --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomMore --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomMore --> olddate,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomMore --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomLess --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomLess --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomLess --> olddate,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomLess --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomLess --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getZoom --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,setDate --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getDate --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,setLanguage --> language,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getGranit --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getGranit --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getFoot --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getFoot --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> beg,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> end,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> language,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> arrayColor,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> draw3dBorders,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> appli,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> beg,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> end,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> arrayColor,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> language,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> tree,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> listOfParam,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> appli,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> loads,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintEndBorder --> margY,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintEndBorder --> arrayColor,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintAResourceLoad --> margY,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintAResourceLoad --> draw3dBorders,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintAResourceLoad --> arrayColor,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintAResourceLoad --> drawName,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> loads,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> loads,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> appli,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> beg,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> end,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> margY,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> margY,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> draw3dBorders,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> printRendering,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> rowCount,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> upperLeft,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,printResources --> appli,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,printResources --> rowCount,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,printResources --> arrayColor,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,printResources --> draw3dBorders,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,printResources --> rowCount,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,access$0 --> appli,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,access$1 --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,access$2 --> zoomValue,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,access$3 --> oldX,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,access$4 --> oldY,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,access$5 --> oldX,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> beg,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> end,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> border3d,net.sourceforge.ganttproject.GanttExportSettings,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> name,net.sourceforge.ganttproject.GanttExportSettings,READ);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> setDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> <init>,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,<init> --> <init>,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,changeDate --> go,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,changeDate2 --> go,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomToBegin --> getDayWeek,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomToBegin --> getDay,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomToBegin --> add,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomToBegin --> setDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomToBegin --> setMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomMore --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomLess --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,zoomLess --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getGranit --> getNumberOfDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getGranit --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getGranit --> goNextMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getGranit --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getGranit --> go,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getFoot --> getNumberOfDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> add,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> getMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> <init>$2,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> getdayWeek,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> getdayMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> getDay,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> getMonth,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> getNumberOfDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> getDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> getArea,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> newAdd,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar1 --> toString,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> getWeek,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> getdayMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> getNumberOfDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> goNextMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> getMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> <init>$2,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> getdayWeek,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> getDate,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> getDay,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintCalendar2 --> add,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> diff,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> getResources,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> toString,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> getUIConfiguration,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> getResourceOverloadColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,paintLoads --> getResourceColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> add,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> diff,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> getAssignments,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> getName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,calculateLoad --> getLoad,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> getArea,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> calcProjectBegAndEnd,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> <init>$3,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> getResources,net.sourceforge.ganttproject.resource.ResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,getChart --> toString,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,printResources --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,printResources --> getResources,net.sourceforge.ganttproject.resource.ResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,printResources --> toString,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea,printProject --> <init>,net.sourceforge.ganttproject.GanttPrintable,);
EndClass 55
StartClass 56
Class(net.sourceforge.ganttproject.export.ProjectExportProcessor,N,Y,Public);
Attribute(myTransformerFactory,javax.xml.transform.sax.SAXTransformerFactory,Private,N,N,);
Attribute(myLogger,java.util.logging.Logger,Private,N,N,);
Attribute(LOGGER_NAME,java.lang.String,Private,Y,N,);
Attribute(myAttrs,org.xml.sax.helpers.AttributesImpl,Private,N,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(doExport,void,Public,N,Y);
Method(getTransformerFactory,javax.xml.transform.sax.SAXTransformerFactory,Protected,N,N);
Method(isInfoable,boolean,Protected,N,N);
Method(info,void,Protected,N,N);
Method(getLogger,java.util.logging.Logger,Protected,N,N);
Method(getCleanAttrs,org.xml.sax.helpers.AttributesImpl,Protected,N,N);
Parameter(doExport,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,);
Parameter(info,java.lang.String,);
SubClass(net.sourceforge.ganttproject.export.PDFExportProcessor);
Call(METHOD,net.sourceforge.ganttproject.export.ProjectExportProcessor,isInfoable --> getLogger,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.ProjectExportProcessor,info --> getLogger,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportProcessor,<clinit> --> LOGGER_NAME,net.sourceforge.ganttproject.export.ProjectExportProcessor,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportProcessor,<init> --> myAttrs,net.sourceforge.ganttproject.export.ProjectExportProcessor,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportProcessor,getTransformerFactory --> myTransformerFactory,net.sourceforge.ganttproject.export.ProjectExportProcessor,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportProcessor,getTransformerFactory --> myTransformerFactory,net.sourceforge.ganttproject.export.ProjectExportProcessor,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportProcessor,getLogger --> myLogger,net.sourceforge.ganttproject.export.ProjectExportProcessor,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportProcessor,getLogger --> LOGGER_NAME,net.sourceforge.ganttproject.export.ProjectExportProcessor,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportProcessor,getLogger --> myLogger,net.sourceforge.ganttproject.export.ProjectExportProcessor,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportProcessor,getCleanAttrs --> myAttrs,net.sourceforge.ganttproject.export.ProjectExportProcessor,READ);
EndClass 56
StartClass 57
Class(net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,N,Y,Public);
Attribute(myModifiedTasks,java.util.Set,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Method(run$2,void,Public,N,N);
Method(recalculateSupertaskScheduleBottomUp,void,Private,N,N);
Method(recalculateSupertaskSchedule,void,Private,N,N);
Method(modifyTaskStart,void,Private,N,N);
Method(modifyTaskEnd,void,Private,N,N);
Method(createContainmentFacade,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Protected,N,Y);
Parameter(run,net.sourceforge.ganttproject.task.Task,);
Parameter(run$2,net.sourceforge.ganttproject.task.Task[],);
Parameter(recalculateSupertaskScheduleBottomUp,java.util.Set,);
Parameter(recalculateSupertaskScheduleBottomUp,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Parameter(recalculateSupertaskSchedule,net.sourceforge.ganttproject.task.Task,);
Parameter(recalculateSupertaskSchedule,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Parameter(modifyTaskStart,net.sourceforge.ganttproject.task.Task,);
Parameter(modifyTaskStart,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(modifyTaskEnd,net.sourceforge.ganttproject.task.Task,);
Parameter(modifyTaskEnd,net.sourceforge.ganttproject.GanttCalendar,);
SuperClass(net.sourceforge.ganttproject.task.algorithm.AlgorithmBase);
SubClass(net.sourceforge.ganttproject.task.TaskManagerImpl$3);
Generalization(net.sourceforge.ganttproject.task.algorithm.AlgorithmBase);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,run --> run$2,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,run$2 --> createContainmentFacade,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,run$2 --> recalculateSupertaskScheduleBottomUp,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,recalculateSupertaskScheduleBottomUp --> recalculateSupertaskSchedule,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule --> modifyTaskStart,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule --> modifyTaskEnd,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,<init> --> myModifiedTasks,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,run$2 --> myModifiedTasks,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,modifyTaskStart --> myModifiedTasks,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,modifyTaskEnd --> myModifiedTasks,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,READ);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,<init> --> <init>,net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,run$2 --> isEnabled,net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,run$2 --> getContainer,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule --> getNestedTasks,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,modifyTaskStart --> getDuration,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,modifyTaskStart --> setStart,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,modifyTaskStart --> setDuration,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,modifyTaskEnd --> setEnd,net.sourceforge.ganttproject.task.MutableTask,);
EndClass 57
StartClass 58
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,Y,Y,Public);
Method(getDependencies,net.sourceforge.ganttproject.task.dependency.TaskDependency[],Public,N,Y);
Method(getDependenciesAsDependant,net.sourceforge.ganttproject.task.dependency.TaskDependency[],Public,N,Y);
Method(getDependenciesAsDependee,net.sourceforge.ganttproject.task.dependency.TaskDependency[],Public,N,Y);
Method(createMutator,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionMutator,Public,N,Y);
Parameter(getDependencies,net.sourceforge.ganttproject.task.Task,);
Parameter(getDependenciesAsDependant,net.sourceforge.ganttproject.task.Task,);
Parameter(getDependenciesAsDependee,net.sourceforge.ganttproject.task.Task,);
Realization(net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection);
EndClass 58
StartClass 59
Class(net.sourceforge.ganttproject.GanttSplash,N,N,NA);
Method(<init>,void,Public,N,N);
Method(close,void,Public,N,N);
Call(METHOD,net.sourceforge.ganttproject.GanttSplash,<init> --> <init>,net.sourceforge.ganttproject.GanttSplash$1,);
EndClass 59
StartClass 60
Class(net.sourceforge.ganttproject.GanttProject$5,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getActiveAction,javax.swing.AbstractAction,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Realization(net.sourceforge.ganttproject.action.NewArtefactAction$ActiveActionProvider);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$5,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$5,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$5,getActiveAction --> this$0,net.sourceforge.ganttproject.GanttProject$5,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$5,getActiveAction --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$5,getActiveAction --> access$6,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$5,getActiveAction --> access$7,net.sourceforge.ganttproject.GanttProject,);
EndClass 60
StartClass 61
Class(net.sourceforge.ganttproject.GanttProject$6,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$6,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$6,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$6,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> QUESTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> YES_NO_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> YES,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> deleteTasks,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> getContext,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> getResources,net.sourceforge.ganttproject.resource.ResourceContext,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> access$8,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> access$9,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> remove,net.sourceforge.ganttproject.resource.ResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$6,actionPerformed --> refreshProjectInfos,net.sourceforge.ganttproject.GanttProject,);
EndClass 61
StartClass 62
Class(net.sourceforge.ganttproject.GanttProject$7,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$7,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$7,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$7,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$7,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$7,actionPerformed --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$7,actionPerformed --> propertiesTask,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$7,actionPerformed --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$7,actionPerformed --> propertiesHuman,net.sourceforge.ganttproject.GanttResourcePanel,);
EndClass 62
StartClass 63
Class(net.sourceforge.ganttproject.GanttProject$8,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$8,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$8,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$8,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$8,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$8,actionPerformed --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$8,actionPerformed --> unlinkRelationships,net.sourceforge.ganttproject.GanttProject,);
EndClass 63
StartClass 64
Class(net.sourceforge.ganttproject.GanttProject$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getDefaultColor,java.awt.Color,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Realization(net.sourceforge.ganttproject.task.TaskManagerConfig);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$1,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$1,getDefaultColor --> this$0,net.sourceforge.ganttproject.GanttProject$1,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$1,getDefaultColor --> access$0,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$1,getDefaultColor --> getTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
EndClass 64
StartClass 65
Class(net.sourceforge.ganttproject.GanttProject$2,N,N,NA);
Attribute(myCachedFacade,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,Private,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(createFacede,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Realization(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory);
Composition(net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$2,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$2,createFacede --> this$0,net.sourceforge.ganttproject.GanttProject$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$2,createFacede --> myCachedFacade,net.sourceforge.ganttproject.GanttProject$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$2,createFacede --> myCachedFacade,net.sourceforge.ganttproject.GanttProject$2,WRITE);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$2,createFacede --> access$1,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$2,createFacede --> isValid,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$2,createFacede --> access$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$2,createFacede --> <init>,net.sourceforge.ganttproject.GanttProject$TaskContainmentHierarchyFacadeImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$2,createFacede --> reset,net.sourceforge.ganttproject.GanttProject$FacadeInvalidator,);
EndClass 65
StartClass 66
Class(net.sourceforge.ganttproject.GanttProject$3,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(stateChanged,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(stateChanged,javax.swing.event.ChangeEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$3,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> this$0,net.sourceforge.ganttproject.GanttProject$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> bUnlink,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> bLink,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> bInd,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> bUnind,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> bNewTask,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> bDelete,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> bProperties,net.sourceforge.ganttproject.GanttProject,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> setEnabled,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> access$3,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> getToolTip,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> access$4,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$3,stateChanged --> getButtonShow,net.sourceforge.ganttproject.GanttOptions,);
EndClass 66
StartClass 67
Class(net.sourceforge.ganttproject.GanttProject$4,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(windowClosing,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(windowClosing,java.awt.event.WindowEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$4,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$4,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$4,windowClosing --> this$0,net.sourceforge.ganttproject.GanttProject$4,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$4,windowClosing --> access$5,net.sourceforge.ganttproject.GanttProject,);
EndClass 67
StartClass 68
Class(net.sourceforge.ganttproject.GanttProject$9,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$9,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$9,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$9,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$9,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$9,actionPerformed --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$9,actionPerformed --> linkRelationships,net.sourceforge.ganttproject.GanttProject,);
EndClass 68
StartClass 69
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencyException,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$3,java.lang.Throwable,);
Parameter(<init>$4,java.lang.String,);
Parameter(<init>$4,java.lang.Throwable,);
EndClass 69
StartClass 70
Class(net.sourceforge.ganttproject.gui.TipsDialog,N,N,Public);
Attribute(pnPanel0,javax.swing.JPanel,Public,N,N,);
Attribute(taArea0,javax.swing.JTextPane,Public,N,N,);
Attribute(btBut0,javax.swing.JButton,Public,N,N,);
Attribute(btBut1,javax.swing.JButton,Public,N,N,);
Attribute(btBut2,javax.swing.JButton,Public,N,N,);
Attribute(cbBox0,javax.swing.JCheckBox,Public,N,N,);
Attribute(lbImg,javax.swing.JLabel,Public,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Public,N,N,);
Attribute(tipsText,java.lang.String[],Public,N,N,);
Attribute(index,int,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(changeText,void,Public,N,N);
Parameter(<init>,javax.swing.JFrame,);
Parameter(<init>,boolean,);
Parameter(changeText,java.lang.String,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> changeText,net.sourceforge.ganttproject.gui.TipsDialog,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> tipsText,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> pnPanel0,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> lbImg,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> taArea0,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> index,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> btBut0,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> btBut1,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> btBut2,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> cbBox0,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> appli,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> tipsText,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> index,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> pnPanel0,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> lbImg,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> taArea0,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> btBut0,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> btBut1,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> btBut2,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> cbBox0,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog,changeText --> taArea0,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> <init>,net.sourceforge.ganttproject.gui.TipsDialog$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> <init>,net.sourceforge.ganttproject.gui.TipsDialog$2,);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> <init>,net.sourceforge.ganttproject.gui.TipsDialog$3,);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> center,net.sourceforge.ganttproject.gui.DialogAligner,);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog,changeText --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog,changeText --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 70
StartClass 71
Class(net.sourceforge.ganttproject.io.GanttCSVExport,N,N,Public);
Attribute(tree,net.sourceforge.ganttproject.GanttTree,Private,N,N,);
Attribute(peop,net.sourceforge.ganttproject.GanttResourcePanel,Private,N,N,);
Attribute(prjInfos,net.sourceforge.ganttproject.PrjInfos,Private,N,N,);
Attribute(csvOptions,net.sourceforge.ganttproject.io.CSVOptions,Private,N,N,);
Attribute(lot,java.util.ArrayList,Public,N,N,);
Attribute(resources,java.util.ArrayList,Public,N,N,);
Attribute(iMaxSize,int,Public,N,N,);
Attribute(bFixedSize,boolean,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(save,void,Public,N,N);
Method(beginToSave,void,Public,N,N);
Method(writeProjectInfos,void,Private,N,N);
Method(writeTasks,void,Private,N,N);
Method(writeResources,void,Private,N,N);
Method(getMaxSize,void,Public,N,N);
Method(getName,java.lang.String,Private,N,N);
Method(getWebLink,java.lang.String,Private,N,N);
Method(getAssignments,java.lang.String,Private,N,N);
Method(correctField,java.lang.String,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.PrjInfos,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,net.sourceforge.ganttproject.GanttResourcePanel,);
Parameter(<init>,net.sourceforge.ganttproject.io.CSVOptions,);
Parameter(save,java.io.OutputStream,);
Parameter(beginToSave,java.io.OutputStreamWriter,);
Parameter(writeProjectInfos,java.io.OutputStreamWriter,);
Parameter(writeTasks,java.io.OutputStreamWriter,);
Parameter(writeResources,java.io.OutputStreamWriter,);
Parameter(getName,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(getName,net.sourceforge.ganttproject.GanttTask,);
Parameter(getWebLink,net.sourceforge.ganttproject.GanttTask,);
Parameter(getAssignments,net.sourceforge.ganttproject.GanttTask,);
Parameter(correctField,java.lang.String,);
Composition(net.sourceforge.ganttproject.GanttTree);
Composition(net.sourceforge.ganttproject.GanttResourcePanel);
Composition(net.sourceforge.ganttproject.PrjInfos);
Composition(net.sourceforge.ganttproject.io.CSVOptions);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,save --> beginToSave,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> getMaxSize,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> writeTasks,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> writeResources,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> correctField,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> getName,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> getWebLink,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> getAssignments,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> correctField,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getName,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getWebLink,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getAssignments,net.sourceforge.ganttproject.io.GanttCSVExport,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,<init> --> lot,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,<init> --> resources,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,<init> --> iMaxSize,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,<init> --> bFixedSize,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,<init> --> tree,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,<init> --> peop,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,<init> --> prjInfos,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,<init> --> csvOptions,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> tree,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> peop,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> csvOptions,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> lot,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> resources,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> bFixedSize,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> lot,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> csvOptions,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> bFixedSize,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> resources,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> csvOptions,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> bFixedSize,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> lot,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> csvOptions,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> iMaxSize,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> resources,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> iMaxSize,net.sourceforge.ganttproject.io.GanttCSVExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getName --> bFixedSize,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getAssignments --> csvOptions,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,correctField --> iMaxSize,net.sourceforge.ganttproject.io.GanttCSVExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> bFixedSize,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> bExportTaskID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> sSeparatedChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> bExportTaskName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> sSeparatedTextChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> bExportTaskStartDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> bExportTaskEndDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> bExportTaskDuration,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> bExportTaskPercent,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> bExportTaskWebLink,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> bExportTaskResources,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> bExportTaskNotes,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> bExportResourceID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> sSeparatedChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> bExportResourceName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> sSeparatedTextChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> bExportResourceMail,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> bExportResourcePhone,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportTaskID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportTaskName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportTaskStartDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportTaskEndDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportTaskDuration,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportTaskPercent,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportTaskWebLink,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportTaskResources,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportTaskNotes,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportResourceID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportResourceName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportResourceMail,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportResourcePhone,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> bExportResourceRole,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttCSVExport,getAssignments --> sSeparatedChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,beginToSave --> getPeople,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> getTaskID,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> toString,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> getEnd,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> getLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> getCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeTasks --> getNotes,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> getId,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> getName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> getMail,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> getPhone,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> getRole,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,writeResources --> getPersistentID,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getTaskID,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getEnd,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getNotes,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getId,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getMail,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getPhone,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getRole,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getMaxSize --> getPersistentID,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getName --> getName,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getWebLink --> getWebLink,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getAssignments --> getAssignments,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttCSVExport,getAssignments --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
EndClass 71
StartClass 72
Class(net.sourceforge.ganttproject.gui.GanttURLChooser,N,N,Public);
Attribute(urlField,javax.swing.JTextField,Private,N,N,);
Attribute(userNameField,javax.swing.JTextField,Private,N,N,);
Attribute(passwordField,javax.swing.JPasswordField,Private,N,N,);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Public,N,N,);
Attribute(fileurl,java.lang.String,Public,N,N,);
Attribute(userName,java.lang.String,Public,N,N,);
Attribute(password,java.lang.String,Public,N,N,);
Attribute(change,boolean,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(access$0,javax.swing.JTextField,Public,Y,N);
Method(access$1,javax.swing.JTextField,Public,Y,N);
Method(access$2,javax.swing.JPasswordField,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(<init>,boolean,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(access$0,net.sourceforge.ganttproject.gui.GanttURLChooser,);
Parameter(access$1,net.sourceforge.ganttproject.gui.GanttURLChooser,);
Parameter(access$2,net.sourceforge.ganttproject.gui.GanttURLChooser,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> language,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> urlField,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> userNameField,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> passwordField,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> language,net.sourceforge.ganttproject.gui.GanttURLChooser,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> change,net.sourceforge.ganttproject.gui.GanttURLChooser,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> urlField,net.sourceforge.ganttproject.gui.GanttURLChooser,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> userNameField,net.sourceforge.ganttproject.gui.GanttURLChooser,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> passwordField,net.sourceforge.ganttproject.gui.GanttURLChooser,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,access$0 --> urlField,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,access$1 --> userNameField,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser,access$2 --> passwordField,net.sourceforge.ganttproject.gui.GanttURLChooser,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttURLChooser$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttURLChooser$2,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> center,net.sourceforge.ganttproject.gui.DialogAligner,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttURLChooser,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 72
StartClass 73
Class(net.sourceforge.ganttproject.io.GanttTXTOpen,N,N,Public);
Attribute(treePanel,net.sourceforge.ganttproject.GanttTree,Public,N,N,);
Attribute(prj,net.sourceforge.ganttproject.GanttProject,Public,N,N,);
Attribute(area,net.sourceforge.ganttproject.GanttGraphicArea,Public,N,N,);
Attribute(myTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(load,boolean,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(load,java.io.File,);
Composition(net.sourceforge.ganttproject.GanttTree);
Composition(net.sourceforge.ganttproject.GanttProject);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Composition(net.sourceforge.ganttproject.task.TaskManager);
Call(METHOD,net.sourceforge.ganttproject.io.GanttTXTOpen,<init> --> <init>$2,net.sourceforge.ganttproject.io.GanttTXTOpen,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttTXTOpen,<init> --> treePanel,net.sourceforge.ganttproject.io.GanttTXTOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttTXTOpen,<init> --> prj,net.sourceforge.ganttproject.io.GanttTXTOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttTXTOpen,<init> --> area,net.sourceforge.ganttproject.io.GanttTXTOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttTXTOpen,<init>$2 --> myTaskManager,net.sourceforge.ganttproject.io.GanttTXTOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttTXTOpen,load --> myTaskManager,net.sourceforge.ganttproject.io.GanttTXTOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttTXTOpen,load --> area,net.sourceforge.ganttproject.io.GanttTXTOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttTXTOpen,load --> treePanel,net.sourceforge.ganttproject.io.GanttTXTOpen,READ);
Call(METHOD,net.sourceforge.ganttproject.io.GanttTXTOpen,load --> createTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttTXTOpen,load --> getTaskColor,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttTXTOpen,load --> setColor,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttTXTOpen,load --> setName,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttTXTOpen,load --> setLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttTXTOpen,load --> registerTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttTXTOpen,load --> addObject,net.sourceforge.ganttproject.GanttTree,);
EndClass 73
StartClass 74
Class(net.sourceforge.ganttproject.io.GanttHTMLExport,N,N,Public);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,Y,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(writeTasks,java.lang.String,Private,Y,N);
Method(writeResources,java.lang.String,Private,Y,N);
Method(save,void,Public,Y,N);
Method(correct,java.lang.String,Public,Y,N);
Method(getFileName,java.lang.String,Public,Y,N);
Method(getExtention,java.lang.String,Public,Y,N);
Parameter(writeTasks,net.sourceforge.ganttproject.GanttTree,);
Parameter(writeResources,net.sourceforge.ganttproject.GanttProject,);
Parameter(save,java.io.File,);
Parameter(save,net.sourceforge.ganttproject.PrjInfos,);
Parameter(save,net.sourceforge.ganttproject.GanttProject,);
Parameter(save,net.sourceforge.ganttproject.GanttTree,);
Parameter(save,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(save,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Parameter(save,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(correct,java.lang.String,);
Parameter(getFileName,java.io.File,);
Parameter(getExtention,java.io.File,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> correct,net.sourceforge.ganttproject.io.GanttHTMLExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeResources --> correct,net.sourceforge.ganttproject.io.GanttHTMLExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> getFileName,net.sourceforge.ganttproject.io.GanttHTMLExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> correct,net.sourceforge.ganttproject.io.GanttHTMLExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> writeResources,net.sourceforge.ganttproject.io.GanttHTMLExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> writeTasks,net.sourceforge.ganttproject.io.GanttHTMLExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> getExtention,net.sourceforge.ganttproject.io.GanttHTMLExport,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttHTMLExport,<clinit> --> language,net.sourceforge.ganttproject.io.GanttHTMLExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> language,net.sourceforge.ganttproject.io.GanttHTMLExport,READ);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,<clinit> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getRoot,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getManager,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getRootTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getName,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> isMilestone,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getCompletionPercentage,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getAssignments,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeTasks --> getNotes,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeResources --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeResources --> getResources,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeResources --> toString,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeResources --> getRole,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeResources --> getName,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeResources --> getMail,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,writeResources --> getPhone,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> export,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> export,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> getName,net.sourceforge.ganttproject.PrjInfos,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> getOrganization,net.sourceforge.ganttproject.PrjInfos,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> getWebLink,net.sourceforge.ganttproject.PrjInfos,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> getDescription,net.sourceforge.ganttproject.PrjInfos,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> getDateAndTime,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttHTMLExport,save --> getXslDir,net.sourceforge.ganttproject.GanttProject,);
EndClass 74
StartClass 75
Class(net.sourceforge.ganttproject.io.GanttXFIGSaver,N,N,Public);
Attribute(tree,net.sourceforge.ganttproject.GanttTree,Private,N,N,);
Attribute(peop,net.sourceforge.ganttproject.GanttResourcePanel,Private,N,N,);
Attribute(area,net.sourceforge.ganttproject.GanttGraphicArea,Private,N,N,);
Attribute(prjInfos,net.sourceforge.ganttproject.PrjInfos,Private,N,N,);
Attribute(lot,java.util.ArrayList,Public,N,N,);
Attribute(lots,java.util.ArrayList,Public,N,N,);
Attribute(loc,java.util.ArrayList,Public,N,N,);
Attribute(atl,java.util.ArrayList,Public,N,N,);
Attribute(abl,java.util.ArrayList,Public,N,N,);
Attribute(dateShift,net.sourceforge.ganttproject.GanttCalendar,Public,N,N,);
Attribute(scale,float,Public,N,N,);
Attribute(chwidth,float,Public,N,N,);
Attribute(fTtextwidth,float,Public,N,N,);
Attribute(debug,boolean,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(save,void,Public,N,N);
Method(beginToSave,void,Public,N,N);
Method(getProjectTextWidth,float,Public,N,N);
Method(getTaskTextWidth,float,Public,N,N);
Method(xfigheader,void,Public,N,N);
Method(searchUserColor,void,Public,N,N);
Method(setProjectPlotTimes,void,Public,N,N);
Method(task2text,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,Public,N,N);
Method(task2box,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,Public,N,N);
Method(drawTasks,void,Public,N,N);
Method(drawtext,void,Public,N,N);
Method(drawbox,void,Public,N,N);
Method(labelAxes,void,Public,N,N);
Method(getHexaColor,java.lang.String,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.PrjInfos,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,net.sourceforge.ganttproject.GanttResourcePanel,);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(save,java.io.OutputStream,);
Parameter(save,java.lang.String,);
Parameter(beginToSave,java.io.OutputStreamWriter,);
Parameter(beginToSave,java.lang.String,);
Parameter(getTaskTextWidth,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(xfigheader,java.io.OutputStreamWriter,);
Parameter(setProjectPlotTimes,float,);
Parameter(setProjectPlotTimes,float,);
Parameter(task2text,net.sourceforge.ganttproject.GanttTask,);
Parameter(task2text,int,);
Parameter(task2text,int,);
Parameter(task2text,int,);
Parameter(task2box,net.sourceforge.ganttproject.GanttTask,);
Parameter(task2box,int,);
Parameter(task2box,int,);
Parameter(task2box,boolean,);
Parameter(drawTasks,java.io.OutputStreamWriter,);
Parameter(drawtext,java.io.OutputStreamWriter,);
Parameter(drawtext,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,);
Parameter(drawbox,java.io.OutputStreamWriter,);
Parameter(drawbox,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,);
Parameter(labelAxes,java.io.OutputStreamWriter,);
Parameter(getHexaColor,java.awt.Color,);
Composition(net.sourceforge.ganttproject.GanttTree);
Composition(net.sourceforge.ganttproject.GanttResourcePanel);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Composition(net.sourceforge.ganttproject.PrjInfos);
Composition(net.sourceforge.ganttproject.GanttCalendar);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,save --> beginToSave,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> getProjectTextWidth,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> xfigheader,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> searchUserColor,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> setProjectPlotTimes,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> drawTasks,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> labelAxes,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,getProjectTextWidth --> getTaskTextWidth,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,getTaskTextWidth --> getTaskTextWidth,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,searchUserColor --> getHexaColor,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> task2text,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> task2box,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawTasks --> drawtext,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawTasks --> drawbox,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> lot,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> lots,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> loc,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> atl,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> abl,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> dateShift,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> scale,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> chwidth,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> fTtextwidth,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> tree,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> peop,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> area,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> prjInfos,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> tree,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> fTtextwidth,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> lot,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> lots,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> fTtextwidth,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,getProjectTextWidth --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,getProjectTextWidth --> lot,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,getTaskTextWidth --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,getTaskTextWidth --> tree,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,xfigheader --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,searchUserColor --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,searchUserColor --> loc,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,searchUserColor --> lot,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> fTtextwidth,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> lot,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> scale,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> chwidth,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> atl,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> abl,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> dateShift,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> scale,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> chwidth,net.sourceforge.ganttproject.io.GanttXFIGSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> scale,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> dateShift,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> fTtextwidth,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawTasks --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawTasks --> lot,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawTasks --> atl,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawTasks --> abl,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,labelAxes --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,getHexaColor --> debug,net.sourceforge.ganttproject.io.GanttXFIGSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> sub_type,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> color,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> depth,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> pen_style,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> font,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> font_size,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> angle,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> font_flags,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> height,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> length,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> y,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> x,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> str,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> depth,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> sub_type,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> points,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> sub_type,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> npoints,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> depth,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> points,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> sub_type,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> color,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> depth,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> pen_style,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> font,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> font_size,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> angle,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> font_flags,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> height,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> length,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> x,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> y,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawtext --> str,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> sub_type,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> line_style,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> thickness,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> pen_color,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> fill_color,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> depth,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> pen_style,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> area_fill,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> style_val,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> join_style,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> cap_style,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> radius,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> forward_arrow,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> backward_arrow,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> npoints,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver,drawbox --> points,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,READ);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,<init> --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,beginToSave --> getArryListTaskString,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,getTaskTextWidth --> getName,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,getTaskTextWidth --> getAllChildTask$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,searchUserColor --> getColor,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,setProjectPlotTimes --> diff,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> <init>$2,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2text --> getName,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> <init>$2,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> getLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> getCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver,task2box --> diff,net.sourceforge.ganttproject.GanttCalendar,);
EndClass 75
StartClass 76
Class(net.sourceforge.ganttproject.export.DeprecatedProjectExportData,N,N,Public);
Attribute(myFilename,java.lang.String,Public,N,Y,);
Attribute(myProject,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Attribute(myTree,net.sourceforge.ganttproject.GanttTree,Public,N,Y,);
Attribute(myGanttChart,net.sourceforge.ganttproject.GanttGraphicArea,Public,N,Y,);
Attribute(myResourceChart,net.sourceforge.ganttproject.ResourceLoadGraphicArea,Public,N,Y,);
Attribute(myExportOptions,net.sourceforge.ganttproject.GanttExportSettings,Public,N,Y,);
Attribute(myXslFoScript,java.lang.String,Public,N,Y,);
Method(<init>,void,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(<init>,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Parameter(<init>,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(<init>,java.lang.String,);
Composition(net.sourceforge.ganttproject.GanttProject);
Composition(net.sourceforge.ganttproject.GanttTree);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Composition(net.sourceforge.ganttproject.ResourceLoadGraphicArea);
Composition(net.sourceforge.ganttproject.GanttExportSettings);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,<init> --> myFilename,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,<init> --> myProject,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,<init> --> myTree,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,<init> --> myGanttChart,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,<init> --> myResourceChart,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,<init> --> myExportOptions,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,<init> --> myXslFoScript,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,WRITE);
EndClass 76
StartClass 77
Class(net.sourceforge.ganttproject.export.PDFExportProcessor,N,N,Public);
Attribute(myStylesheetPath,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(doExport,void,Public,N,N);
Method(run,void,Public,N,N);
Method(exportProject,void,Protected,N,N);
Method(createDriver,org.apache.fop.apps.Driver,Private,N,N);
Method(exportGanttChart,java.io.File,Protected,N,N);
Method(exportResourceChart,java.io.File,Protected,N,N);
Method(createOptions,org.apache.fop.apps.Options,Private,N,N);
Method(createConfiguration,void,Private,N,N);
Method(writeTriplets,void,Private,N,N);
Parameter(doExport,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,);
Parameter(run,net.sourceforge.ganttproject.export.PDFExportData,);
Parameter(exportProject,javax.xml.transform.sax.TransformerHandler,);
Parameter(createDriver,net.sourceforge.ganttproject.export.PDFExportData,);
Parameter(exportGanttChart,net.sourceforge.ganttproject.export.ProjectExportData,);
Parameter(exportResourceChart,net.sourceforge.ganttproject.export.ProjectExportData,);
Parameter(createConfiguration,javax.xml.transform.sax.TransformerHandler,);
Parameter(createConfiguration,net.sourceforge.ganttproject.export.FontRecord[],);
Parameter(writeTriplets,javax.xml.transform.sax.TransformerHandler,);
Parameter(writeTriplets,net.sourceforge.ganttproject.export.FontTriplet[],);
SuperClass(net.sourceforge.ganttproject.export.ProjectExportProcessor);
Generalization(net.sourceforge.ganttproject.export.ProjectExportProcessor);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,run --> exportGanttChart,net.sourceforge.ganttproject.export.PDFExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,run --> exportResourceChart,net.sourceforge.ganttproject.export.PDFExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,run --> createDriver,net.sourceforge.ganttproject.export.PDFExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,run --> exportProject,net.sourceforge.ganttproject.export.PDFExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,createDriver --> createOptions,net.sourceforge.ganttproject.export.PDFExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,createOptions --> createConfiguration,net.sourceforge.ganttproject.export.PDFExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,createConfiguration --> writeTriplets,net.sourceforge.ganttproject.export.PDFExportProcessor,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,run --> myStylesheetPath,net.sourceforge.ganttproject.export.PDFExportProcessor,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,exportProject --> myStylesheetPath,net.sourceforge.ganttproject.export.PDFExportProcessor,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,doExport --> myFilename,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,doExport --> myProject,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,doExport --> myTree,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,doExport --> myGanttChart,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,doExport --> myResourceChart,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,doExport --> myExportOptions,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,doExport --> myXslFoScript,net.sourceforge.ganttproject.export.DeprecatedProjectExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,run --> myOutputFile,net.sourceforge.ganttproject.export.ProjectExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,run --> myStylesheet,net.sourceforge.ganttproject.export.PDFExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,createDriver --> myOutputFile,net.sourceforge.ganttproject.export.ProjectExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,exportGanttChart --> myExportSettings,net.sourceforge.ganttproject.export.ProjectExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,exportGanttChart --> myGanttChartExportProcessor,net.sourceforge.ganttproject.export.ProjectExportData,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportProcessor,exportResourceChart --> myResourceChartExportProcessor,net.sourceforge.ganttproject.export.ProjectExportData,READ);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,<init> --> <init>,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,doExport --> <init>,net.sourceforge.ganttproject.export.ExportException,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,doExport --> getHumanResourceManager,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,doExport --> save,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,doExport --> <init>$2,net.sourceforge.ganttproject.export.ExportException,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,run --> isInfoable,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,run --> info,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,run --> getTransformerFactory,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,exportProject --> getCleanAttrs,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,createDriver --> isInfoable,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,createDriver --> info,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,exportGanttChart --> isInfoable,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,exportGanttChart --> info,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,exportGanttChart --> <init>,net.sourceforge.ganttproject.export.GanttChartExportData,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,exportGanttChart --> run,net.sourceforge.ganttproject.export.GanttChartExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,exportResourceChart --> isInfoable,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,exportResourceChart --> info,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,exportResourceChart --> <init>,net.sourceforge.ganttproject.export.ResourceChartExportData,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,exportResourceChart --> run,net.sourceforge.ganttproject.export.ResourceChartExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,createOptions --> getTransformerFactory,net.sourceforge.ganttproject.export.ProjectExportProcessor,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,createConfiguration --> getMetricsLocation,net.sourceforge.ganttproject.export.FontRecord,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,createConfiguration --> getFontLocation,net.sourceforge.ganttproject.export.FontRecord,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,createConfiguration --> getFontTriplets,net.sourceforge.ganttproject.export.FontRecord,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,writeTriplets --> getName,net.sourceforge.ganttproject.export.FontTriplet,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,writeTriplets --> isItalic,net.sourceforge.ganttproject.export.FontTriplet,);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportProcessor,writeTriplets --> isBold,net.sourceforge.ganttproject.export.FontTriplet,);
EndClass 77
StartClass 78
Class(net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,N,Y,Public);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Method(recalculateSupertaskCompletionPercentageBottomUp,void,Private,N,N);
Method(recalculateSupertaskCompletionPercentage,void,Private,N,N);
Method(createContainmentFacade,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Protected,N,Y);
Parameter(run,net.sourceforge.ganttproject.task.Task,);
Parameter(recalculateSupertaskCompletionPercentageBottomUp,net.sourceforge.ganttproject.task.Task,);
Parameter(recalculateSupertaskCompletionPercentageBottomUp,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Parameter(recalculateSupertaskCompletionPercentage,net.sourceforge.ganttproject.task.Task,);
Parameter(recalculateSupertaskCompletionPercentage,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
SubClass(net.sourceforge.ganttproject.task.TaskManagerImpl$5);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,run --> createContainmentFacade,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,run --> recalculateSupertaskCompletionPercentageBottomUp,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentageBottomUp --> recalculateSupertaskCompletionPercentage,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentageBottomUp --> getContainer,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage --> getNestedTasks,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage --> getDuration,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage --> getLength$2,net.sourceforge.ganttproject.task.TaskLength,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage --> getCompletionPercentage,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage --> setCompletionPercentage,net.sourceforge.ganttproject.task.MutableTask,);
EndClass 78
StartClass 79
Class(net.sourceforge.ganttproject.task.dependency.TaskDependency,Y,Y,Public);
Method(getDependant,net.sourceforge.ganttproject.task.Task,Public,N,Y);
Method(getDependee,net.sourceforge.ganttproject.task.Task,Public,N,Y);
Method(setConstraint,void,Public,N,Y);
Method(getConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,Public,N,Y);
Method(delete,void,Public,N,Y);
Parameter(setConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,);
EndClass 79
StartClass 80
Class(net.sourceforge.ganttproject.filter.GanttCSVFilter,N,N,Public);
Method(<init>,void,Public,N,N);
Method(accept,boolean,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Method(getExtension,java.lang.String,Public,Y,N);
Parameter(accept,java.io.File,);
Parameter(getExtension,java.io.File,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttCSVFilter,accept --> getExtension,net.sourceforge.ganttproject.filter.GanttCSVFilter,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttCSVFilter,getDescription --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttCSVFilter,getDescription --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 80
StartClass 81
Class(net.sourceforge.ganttproject.roles.RoleManager$Access,N,N,Public);
Attribute(ourInstance,net.sourceforge.ganttproject.roles.RoleManager,Private,Y,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(getInstance,net.sourceforge.ganttproject.roles.RoleManager,Public,Y,N);
Composition(net.sourceforge.ganttproject.roles.RoleManager);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManager$Access,<clinit> --> ourInstance,net.sourceforge.ganttproject.roles.RoleManager$Access,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManager$Access,getInstance --> ourInstance,net.sourceforge.ganttproject.roles.RoleManager$Access,READ);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManager$Access,<clinit> --> <init>,net.sourceforge.ganttproject.roles.RoleManagerImpl,);
EndClass 81
StartClass 82
Class(net.sourceforge.ganttproject.action.ImportResources,N,N,Public);
Attribute(myTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,Y,);
Attribute(myResourceManager,net.sourceforge.ganttproject.resource.ResourceManager,Private,N,Y,);
Attribute(myproject,net.sourceforge.ganttproject.GanttProject,Private,N,Y,);
Attribute(myRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(getResourcesFile,java.io.File,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.resource.ResourceManager,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(<init>,net.sourceforge.ganttproject.roles.RoleManager,);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.task.TaskManager);
Composition(net.sourceforge.ganttproject.resource.ResourceManager);
Composition(net.sourceforge.ganttproject.GanttProject);
Composition(net.sourceforge.ganttproject.roles.RoleManager);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> getResourcesFile,net.sourceforge.ganttproject.action.ImportResources,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ImportResources,<init> --> myTaskManager,net.sourceforge.ganttproject.action.ImportResources,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ImportResources,<init> --> myRoleManager,net.sourceforge.ganttproject.action.ImportResources,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ImportResources,<init> --> myResourceManager,net.sourceforge.ganttproject.action.ImportResources,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ImportResources,<init> --> myproject,net.sourceforge.ganttproject.action.ImportResources,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> myTaskManager,net.sourceforge.ganttproject.action.ImportResources,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> myResourceManager,net.sourceforge.ganttproject.action.ImportResources,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> myRoleManager,net.sourceforge.ganttproject.action.ImportResources,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ImportResources,getResourcesFile --> myproject,net.sourceforge.ganttproject.action.ImportResources,READ);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> <init>$2,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> <init>,net.sourceforge.ganttproject.parser.ResourceTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> getContext,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> <init>,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> getInstance,net.sourceforge.ganttproject.roles.RoleManager$Access,);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> <init>,net.sourceforge.ganttproject.parser.RoleTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> addTagHandler,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,actionPerformed --> load$3,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,getResourcesFile --> <init>,net.sourceforge.ganttproject.gui.OpenFileDialog,);
Call(METHOD,net.sourceforge.ganttproject.action.ImportResources,getResourcesFile --> show,net.sourceforge.ganttproject.gui.OpenFileDialog,);
EndClass 82
StartClass 83
Class(net.sourceforge.ganttproject.parser.AllocationTagHandler,N,N,Public);
Attribute(myResourceManager,net.sourceforge.ganttproject.resource.ResourceManager,Private,N,N,);
Attribute(myTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(startElement,void,Public,N,N);
Method(endElement,void,Public,N,N);
Method(loadAllocation,void,Private,N,N);
Method(getResourceManager,net.sourceforge.ganttproject.resource.ResourceManager,Private,N,N);
Method(getTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.resource.ResourceManager,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,org.xml.sax.Attributes,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(loadAllocation,org.xml.sax.Attributes,);
Realization(net.sourceforge.ganttproject.parser.TagHandler);
Composition(net.sourceforge.ganttproject.resource.ResourceManager);
Composition(net.sourceforge.ganttproject.task.TaskManager);
Call(METHOD,net.sourceforge.ganttproject.parser.AllocationTagHandler,startElement --> loadAllocation,net.sourceforge.ganttproject.parser.AllocationTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.parser.AllocationTagHandler,loadAllocation --> getResourceManager,net.sourceforge.ganttproject.parser.AllocationTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.parser.AllocationTagHandler,loadAllocation --> getTaskManager,net.sourceforge.ganttproject.parser.AllocationTagHandler,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.AllocationTagHandler,<init> --> myResourceManager,net.sourceforge.ganttproject.parser.AllocationTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.AllocationTagHandler,<init> --> myTaskManager,net.sourceforge.ganttproject.parser.AllocationTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.AllocationTagHandler,getResourceManager --> myResourceManager,net.sourceforge.ganttproject.parser.AllocationTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.AllocationTagHandler,getTaskManager --> myTaskManager,net.sourceforge.ganttproject.parser.AllocationTagHandler,READ);
Call(METHOD,net.sourceforge.ganttproject.parser.AllocationTagHandler,loadAllocation --> <init>$2,net.sourceforge.ganttproject.parser.FileFormatException,);
Call(METHOD,net.sourceforge.ganttproject.parser.AllocationTagHandler,loadAllocation --> <init>$3,net.sourceforge.ganttproject.parser.FileFormatException,);
Call(METHOD,net.sourceforge.ganttproject.parser.AllocationTagHandler,loadAllocation --> getById,net.sourceforge.ganttproject.resource.ResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.AllocationTagHandler,loadAllocation --> getTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.AllocationTagHandler,loadAllocation --> getAssignmentCollection,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.parser.AllocationTagHandler,loadAllocation --> addAssignment,net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection,);
Call(METHOD,net.sourceforge.ganttproject.parser.AllocationTagHandler,loadAllocation --> setLoad,net.sourceforge.ganttproject.task.ResourceAssignment,);
EndClass 83
StartClass 84
Class(net.sourceforge.ganttproject.GanttProject$16,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$16,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$16,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$16,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> bZoomIn,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> bZoomOut,net.sourceforge.ganttproject.GanttProject,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> access$12,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> getZoom,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> zoomMore,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> zoomMore,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> zoomToBegin,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> zoomToBegin,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$16,actionPerformed --> setEnabled,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
EndClass 84
StartClass 85
Class(net.sourceforge.ganttproject.GanttProject$17,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$17,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$17,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$17,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> bZoomIn,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> bZoomOut,net.sourceforge.ganttproject.GanttProject,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> access$12,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> getZoom,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> zoomLess,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> zoomLess,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> zoomToBegin,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> zoomToBegin,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$17,actionPerformed --> setEnabled,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
EndClass 85
StartClass 86
Class(net.sourceforge.ganttproject.GanttProject$14,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$14,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$14,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$14,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$14,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$14,actionPerformed --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$14,actionPerformed --> access$12,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$14,actionPerformed --> changeDate,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$14,actionPerformed --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$14,actionPerformed --> changeDate,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
EndClass 86
StartClass 87
Class(net.sourceforge.ganttproject.parser.TagHandler,Y,Y,Public);
Method(startElement,void,Public,N,Y);
Method(endElement,void,Public,N,Y);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,org.xml.sax.Attributes,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
EndClass 87
StartClass 88
Class(net.sourceforge.ganttproject.GanttProject$15,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$15,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$15,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$15,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$15,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$15,actionPerformed --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$15,actionPerformed --> access$12,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$15,actionPerformed --> changeDate,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$15,actionPerformed --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$15,actionPerformed --> changeDate,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
EndClass 88
StartClass 89
Class(net.sourceforge.ganttproject.GanttProject$12,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$12,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$12,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$12,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$12,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$12,actionPerformed --> access$10,net.sourceforge.ganttproject.GanttProject,);
EndClass 89
StartClass 90
Class(net.sourceforge.ganttproject.GanttProject$13,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$13,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$13,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$13,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$13,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$13,actionPerformed --> access$11,net.sourceforge.ganttproject.GanttProject,);
EndClass 90
StartClass 91
Class(net.sourceforge.ganttproject.GanttProject$10,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$10,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$10,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$10,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$10,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$10,actionPerformed --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$10,actionPerformed --> access$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$10,actionPerformed --> indentCurrentNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$10,actionPerformed --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
EndClass 91
StartClass 92
Class(net.sourceforge.ganttproject.GanttProject$11,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttProject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$11,<init> --> this$0,net.sourceforge.ganttproject.GanttProject$11,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$11,actionPerformed --> this$0,net.sourceforge.ganttproject.GanttProject$11,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttProject$11,actionPerformed --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$11,actionPerformed --> access$2,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$11,actionPerformed --> dedentCurrentNodes,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttProject$11,actionPerformed --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
EndClass 92
StartClass 93
Class(net.sourceforge.ganttproject.filter.GanttTXTFileFilter,N,N,Public);
Method(<init>,void,Public,N,N);
Method(accept,boolean,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Method(getExtension,java.lang.String,Public,Y,N);
Parameter(accept,java.io.File,);
Parameter(getExtension,java.io.File,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttTXTFileFilter,accept --> getExtension,net.sourceforge.ganttproject.filter.GanttTXTFileFilter,);
EndClass 93
StartClass 94
Class(net.sourceforge.ganttproject.filter.GanttJPGFileFilter,N,N,Public);
Method(<init>,void,Public,N,N);
Method(accept,boolean,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Parameter(accept,java.io.File,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttJPGFileFilter,getDescription --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttJPGFileFilter,getDescription --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 94
StartClass 95
Class(net.sourceforge.ganttproject.GanttTask,N,N,Public);
Attribute(LOW,int,Public,Y,N,);
Attribute(NORMAL,int,Public,Y,N,);
Attribute(HIGHT,int,Public,Y,N,);
Attribute(checked,boolean,Private,N,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Private,N,N);
Method(Clone,net.sourceforge.ganttproject.GanttTask,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(getLength,int,Public,N,N);
Method(setLength,void,Public,N,N);
Method(getPredecessorsOld,java.util.Vector,Public,N,N);
Method(getSuccessorsOld,java.util.Vector,Public,N,N);
Method(unlink,void,Public,N,N);
Method(isChecked,boolean,Public,N,N);
Method(setChecked,void,Public,N,N);
Method(setTaskID,void,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(<init>,long,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(<init>$2,net.sourceforge.ganttproject.GanttTask,);
Parameter(setLength,int,);
Parameter(setChecked,boolean,);
Parameter(setTaskID,int,);
SuperClass(net.sourceforge.ganttproject.task.TaskImpl);
Generalization(net.sourceforge.ganttproject.task.TaskImpl);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,Clone --> <init>$2,net.sourceforge.ganttproject.GanttTask,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTask,<clinit> --> LOW,net.sourceforge.ganttproject.GanttTask,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTask,<clinit> --> NORMAL,net.sourceforge.ganttproject.GanttTask,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTask,<clinit> --> HIGHT,net.sourceforge.ganttproject.GanttTask,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTask,<init> --> checked,net.sourceforge.ganttproject.GanttTask,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTask,<init>$2 --> checked,net.sourceforge.ganttproject.GanttTask,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTask,isChecked --> checked,net.sourceforge.ganttproject.GanttTask,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTask,setChecked --> checked,net.sourceforge.ganttproject.GanttTask,WRITE);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init> --> <init>,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init> --> getTimeUnitManager,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init> --> createMutator,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init> --> setName,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init> --> setStart,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init> --> getTimeUnit,net.sourceforge.ganttproject.time.TimeUnitManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init> --> createLength,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init> --> setDuration,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init> --> commit,net.sourceforge.ganttproject.task.TaskMutator,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init> --> enableEvents,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init>$2 --> <init>$2,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,<init>$2 --> enableEvents,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,toString --> getName,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getLength --> getDuration,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getLength --> getLength$2,net.sourceforge.ganttproject.task.TaskLength,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,setLength --> createMutator,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,setLength --> getManager,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,setLength --> getDuration,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,setLength --> getTimeUnit,net.sourceforge.ganttproject.task.TaskLength,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,setLength --> createLength,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,setLength --> setDuration,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,setLength --> commit,net.sourceforge.ganttproject.task.TaskMutator,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getPredecessorsOld --> getDependenciesAsDependant,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getPredecessorsOld --> toArray,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getPredecessorsOld --> getDependee,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getPredecessorsOld --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getPredecessorsOld --> getTaskID,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getPredecessorsOld --> getConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getPredecessorsOld --> getID,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getPredecessorsOld --> getManager,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getPredecessorsOld --> <init>$3,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getSuccessorsOld --> getDependenciesAsDependee,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getSuccessorsOld --> toArray,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getSuccessorsOld --> getTaskID,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getSuccessorsOld --> getDependant,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getSuccessorsOld --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getSuccessorsOld --> getConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getSuccessorsOld --> getID,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getSuccessorsOld --> getManager,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,getSuccessorsOld --> <init>$3,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,unlink --> getDependencies,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,unlink --> clear,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,);
Call(METHOD,net.sourceforge.ganttproject.GanttTask,setTaskID --> setTaskIDHack,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 95
StartClass 96
Class(net.sourceforge.ganttproject.action.DeleteHumanAction,N,N,Public);
Attribute(myContext,net.sourceforge.ganttproject.resource.ResourceContext,Private,N,Y,);
Attribute(ICON_URL,java.lang.String,Private,Y,Y,);
Attribute(MENU_MASK,int,Private,N,Y,);
Attribute(myProjectFrame,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(getProjectFrame,net.sourceforge.ganttproject.GanttProject,Private,N,N);
Method(deleteResources,void,Private,N,N);
Method(getDisplayName,java.lang.String,Private,N,N);
Method(getContext,net.sourceforge.ganttproject.resource.ResourceContext,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.resource.ResourceManager,);
Parameter(<init>,net.sourceforge.ganttproject.resource.ResourceContext,);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Parameter(deleteResources,net.sourceforge.ganttproject.resource.ProjectResource[],);
Parameter(getDisplayName,net.sourceforge.ganttproject.resource.ProjectResource[],);
SuperClass(net.sourceforge.ganttproject.action.ResourceAction);
Generalization(net.sourceforge.ganttproject.action.ResourceAction);
Composition(net.sourceforge.ganttproject.resource.ResourceContext);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> getContext,net.sourceforge.ganttproject.action.DeleteHumanAction,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> getDisplayName,net.sourceforge.ganttproject.action.DeleteHumanAction,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> deleteResources,net.sourceforge.ganttproject.action.DeleteHumanAction,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> getProjectFrame,net.sourceforge.ganttproject.action.DeleteHumanAction,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,<init> --> MENU_MASK,net.sourceforge.ganttproject.action.DeleteHumanAction,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,<init> --> MENU_MASK,net.sourceforge.ganttproject.action.DeleteHumanAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,<init> --> myProjectFrame,net.sourceforge.ganttproject.action.DeleteHumanAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,<init> --> myContext,net.sourceforge.ganttproject.action.DeleteHumanAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> myProjectFrame,net.sourceforge.ganttproject.action.DeleteHumanAction,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,getProjectFrame --> myProjectFrame,net.sourceforge.ganttproject.action.DeleteHumanAction,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,getContext --> myContext,net.sourceforge.ganttproject.action.DeleteHumanAction,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> tabpane,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> WARNING,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> YES_NO_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> YES,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,<init> --> <init>,net.sourceforge.ganttproject.action.ResourceAction,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,<init> --> getLanguage,net.sourceforge.ganttproject.action.ResourceAction,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> getResources,net.sourceforge.ganttproject.resource.ResourceContext,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> getLanguage,net.sourceforge.ganttproject.action.ResourceAction,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,actionPerformed --> refreshProjectInfos,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,deleteResources --> getManager,net.sourceforge.ganttproject.action.ResourceAction,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,deleteResources --> remove,net.sourceforge.ganttproject.resource.ResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.action.DeleteHumanAction,getDisplayName --> toString,net.sourceforge.ganttproject.resource.ProjectResource,);
EndClass 96
StartClass 97
Class(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Y,Y,Public);
Method(getNestedTasks,net.sourceforge.ganttproject.task.Task[],Public,N,Y);
Method(getRoot,net.sourceforge.ganttproject.task.Task,Public,N,Y);
Method(getContainer,net.sourceforge.ganttproject.task.Task,Public,N,Y);
Parameter(getNestedTasks,net.sourceforge.ganttproject.task.Task,);
Parameter(getContainer,net.sourceforge.ganttproject.task.Task,);
EndClass 97
StartClass 98
Class(net.sourceforge.ganttproject.GanttImagePanel,N,N,Public);
Attribute(x,int,Public,N,N,);
Attribute(y,int,Public,N,N,);
Attribute(image,javax.swing.ImageIcon,Public,N,N,);
Attribute(image2,javax.swing.ImageIcon,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(paintComponent,void,Public,N,N);
Method(getPreferredSize,java.awt.Dimension,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(paintComponent,java.awt.Graphics,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttImagePanel,<init> --> x,net.sourceforge.ganttproject.GanttImagePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttImagePanel,<init> --> y,net.sourceforge.ganttproject.GanttImagePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttImagePanel,<init> --> image,net.sourceforge.ganttproject.GanttImagePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttImagePanel,<init> --> image2,net.sourceforge.ganttproject.GanttImagePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttImagePanel,paintComponent --> image2,net.sourceforge.ganttproject.GanttImagePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttImagePanel,paintComponent --> image,net.sourceforge.ganttproject.GanttImagePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttImagePanel,getPreferredSize --> x,net.sourceforge.ganttproject.GanttImagePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttImagePanel,getPreferredSize --> y,net.sourceforge.ganttproject.GanttImagePanel,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttImagePanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttImagePanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 98
StartClass 99
Class(net.sourceforge.ganttproject.document.OpenDocumentAction,N,N,Public);
Attribute(document,net.sourceforge.ganttproject.document.Document,Private,N,N,);
Attribute(listener,java.awt.event.ActionListener,Private,N,N,);
Attribute(MENU_MASK,int,Private,Y,Y,);
Attribute(SHORTCUT_KEYS,int[],Private,Y,Y,);
Attribute(MNEMONIC_KEYS,int[],Private,Y,Y,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,int,);
Parameter(<init>,net.sourceforge.ganttproject.document.Document,);
Parameter(<init>,java.awt.event.ActionListener,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.document.Document);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.OpenDocumentAction,<clinit> --> MENU_MASK,net.sourceforge.ganttproject.document.OpenDocumentAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.OpenDocumentAction,<clinit> --> SHORTCUT_KEYS,net.sourceforge.ganttproject.document.OpenDocumentAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.OpenDocumentAction,<clinit> --> MNEMONIC_KEYS,net.sourceforge.ganttproject.document.OpenDocumentAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.OpenDocumentAction,<init> --> MNEMONIC_KEYS,net.sourceforge.ganttproject.document.OpenDocumentAction,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.OpenDocumentAction,<init> --> SHORTCUT_KEYS,net.sourceforge.ganttproject.document.OpenDocumentAction,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.OpenDocumentAction,<init> --> MENU_MASK,net.sourceforge.ganttproject.document.OpenDocumentAction,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.OpenDocumentAction,<init> --> document,net.sourceforge.ganttproject.document.OpenDocumentAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.OpenDocumentAction,<init> --> listener,net.sourceforge.ganttproject.document.OpenDocumentAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.OpenDocumentAction,actionPerformed --> listener,net.sourceforge.ganttproject.document.OpenDocumentAction,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.OpenDocumentAction,actionPerformed --> document,net.sourceforge.ganttproject.document.OpenDocumentAction,READ);
Call(METHOD,net.sourceforge.ganttproject.document.OpenDocumentAction,<init> --> getDescription,net.sourceforge.ganttproject.document.Document,);
EndClass 99
StartClass 100
Class(net.sourceforge.ganttproject.gui.GanttDialogInfo,N,N,Public);
Attribute(ERROR,int,Public,Y,N,);
Attribute(WARNING,int,Public,Y,N,);
Attribute(INFO,int,Public,Y,N,);
Attribute(QUESTION,int,Public,Y,N,);
Attribute(YES,int,Public,Y,N,);
Attribute(NO,int,Public,Y,N,);
Attribute(CANCEL,int,Public,Y,N,);
Attribute(res,int,Public,N,N,);
Attribute(YES_OPTION,int,Public,Y,N,);
Attribute(YES_NO_OPTION,int,Public,Y,N,);
Attribute(YES_NO_CANCEL_OPTION,int,Public,Y,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Parameter(<init>,java.awt.Frame,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<clinit> --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<clinit> --> WARNING,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<clinit> --> INFO,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<clinit> --> QUESTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<clinit> --> YES,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<clinit> --> NO,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<clinit> --> CANCEL,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<clinit> --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<clinit> --> YES_NO_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<clinit> --> YES_NO_CANCEL_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> WARNING,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> INFO,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> QUESTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo$2,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo$3,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> center,net.sourceforge.ganttproject.gui.DialogAligner,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogInfo,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 100
StartClass 101
Class(net.sourceforge.ganttproject.gui.GanttDialogProperties,N,N,Public);
Attribute(jtfname,javax.swing.JTextField,Private,N,N,);
Attribute(jcbfather,javax.swing.JComboBox,Private,N,N,);
Attribute(jtfbegin,javax.swing.JTextField,Private,N,N,);
Attribute(jtflength,javax.swing.JTextField,Private,N,N,);
Attribute(spercent,javax.swing.JSlider,Private,N,N,);
Attribute(advancementLabel,javax.swing.JLabel,Private,N,N,);
Attribute(jcbbilan,javax.swing.JCheckBox,Private,N,N,);
Attribute(haschild,boolean,Public,N,N,);
Attribute(ttree,net.sourceforge.ganttproject.GanttTree,Private,N,N,);
Attribute(ttask,net.sourceforge.ganttproject.task.Task,Private,N,N,);
Attribute(aarea,net.sourceforge.ganttproject.GanttGraphicArea,Private,N,N,);
Attribute(button,javax.swing.JButton,Private,N,N,);
Attribute(percentValue,int,Public,N,N,);
Attribute(lang,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(prj,javax.swing.JFrame,Public,N,N,);
Attribute(saveDuration,int,Public,N,N,);
Attribute(saveColor,java.awt.Color,Public,N,N,);
Attribute(change,boolean,Public,N,N,);
Attribute(colorChooser,javax.swing.JColorChooser,Protected,Y,N,);
Attribute(taskPropertiesBean,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,Private,N,N,);
Attribute(task,net.sourceforge.ganttproject.task.Task,Private,N,N,);
Attribute(tree,net.sourceforge.ganttproject.GanttTree,Private,N,N,);
Attribute(area,net.sourceforge.ganttproject.GanttGraphicArea,Private,N,N,);
Attribute(parent,javax.swing.JFrame,Private,N,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(findTheIndex,int,Private,N,N);
Method(actionPerformed,void,Public,N,N);
Method(getTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,N);
Parameter(<init>,javax.swing.JFrame,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,java.util.Hashtable,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTask,);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(findTheIndex,java.lang.Object,);
Parameter(findTheIndex,java.lang.String[],);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttTree);
Composition(net.sourceforge.ganttproject.task.Task);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<clinit> --> colorChooser,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> taskPropertiesBean,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> lang,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> haschild,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> lang,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> change,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> tree,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> task,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> saveDuration,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> area,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> parent,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> taskPropertiesBean,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> taskPropertiesBean,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> tree,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> task,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> area,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> saveDuration,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> parent,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> lang,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> change,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> saveDuration,net.sourceforge.ganttproject.gui.GanttDialogProperties,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,getTaskManager --> task,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> okButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> toString,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> getLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> addActionListener,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> center,net.sourceforge.ganttproject.gui.DialogAligner,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> getStart,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> <init>$2,net.sourceforge.ganttproject.gui.GanttDialogDate,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> getDate,net.sourceforge.ganttproject.gui.GanttDialogDate,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> setStart,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> getEnd,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.GanttDialogDate,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> setEnd,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> getReturnTask,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> getNode,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> getFatherNode$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> getJTree,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> changeLength,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,actionPerformed --> changeNameOfTask,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogProperties,getTaskManager --> getManager,net.sourceforge.ganttproject.task.Task,);
EndClass 101
StartClass 102
Class(net.sourceforge.ganttproject.GanttCalendar,N,N,Public);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(isFixed,boolean,Private,N,N,);
Method(isFixed,boolean,Public,N,N);
Method(setFixed,void,Public,N,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(parseXMLDate,net.sourceforge.ganttproject.GanttCalendar,Public,Y,N);
Method(Clone,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(toXMLString,java.lang.String,Public,N,N);
Method(getYear,int,Public,N,N);
Method(getMonth,int,Public,N,N);
Method(getDate,int,Public,N,N);
Method(getDay,int,Public,N,N);
Method(getDayWeek,int,Public,N,N);
Method(getWeek,int,Public,N,N);
Method(getDayMonthLanguage,java.lang.String[],Public,N,N);
Method(getDayWeekLanguage,java.lang.String[],Public,N,N);
Method(setYear,void,Public,N,N);
Method(setMonth,void,Public,N,N);
Method(setDay,void,Public,N,N);
Method(add,void,Public,N,N);
Method(newAdd,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(diff,int,Public,N,N);
Method(getdayMonth,java.lang.String,Public,N,N);
Method(getdayWeek,java.lang.String,Public,N,N);
Method(getNumberOfDay,int,Public,N,N);
Method(module,int,Private,N,N);
Method(compareTo,int,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(goNextMonth,void,Public,N,N);
Method(goPrevMonth,void,Public,N,N);
Method(go,void,Public,N,N);
Method(getDateAndTime,java.lang.String,Public,Y,N);
Parameter(setFixed,boolean,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$3,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(<init>$4,java.util.Date,);
Parameter(parseXMLDate,java.lang.String,);
Parameter(setYear,int,);
Parameter(setMonth,int,);
Parameter(setDay,int,);
Parameter(add,int,);
Parameter(newAdd,int,);
Parameter(diff,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(module,int,);
Parameter(compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(equals,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(go,int,);
Parameter(go,int,);
SuperClass(net.sourceforge.ganttproject.time.gregorian.GregorianCalendar);
Generalization(net.sourceforge.ganttproject.time.gregorian.GregorianCalendar);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,<init>$3 --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,<init>$3 --> getMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,<init>$3 --> getDate,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,parseXMLDate --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,Clone --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,Clone --> getMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,Clone --> getDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,Clone --> <init>$2,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,Clone --> isFixed,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,Clone --> setFixed,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,toXMLString --> getDate,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,toXMLString --> getMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,toXMLString --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,newAdd --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,newAdd --> getMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,newAdd --> getDate,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,newAdd --> <init>$2,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,diff --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,diff --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,diff --> <init>$3,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,diff --> add,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,getdayMonth --> getMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,compareTo --> module,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,equals --> getYear,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,equals --> getMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,equals --> getDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,getDateAndTime --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,getDateAndTime --> toString,net.sourceforge.ganttproject.GanttCalendar,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttCalendar,isFixed --> isFixed,net.sourceforge.ganttproject.GanttCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttCalendar,setFixed --> isFixed,net.sourceforge.ganttproject.GanttCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttCalendar,<init> --> language,net.sourceforge.ganttproject.GanttCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttCalendar,<init>$2 --> language,net.sourceforge.ganttproject.GanttCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttCalendar,<init>$3 --> language,net.sourceforge.ganttproject.GanttCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttCalendar,<init>$4 --> language,net.sourceforge.ganttproject.GanttCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttCalendar,toString --> language,net.sourceforge.ganttproject.GanttCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttCalendar,getDayMonthLanguage --> language,net.sourceforge.ganttproject.GanttCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttCalendar,getDayWeekLanguage --> language,net.sourceforge.ganttproject.GanttCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttCalendar,getdayMonth --> language,net.sourceforge.ganttproject.GanttCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttCalendar,getdayWeek --> language,net.sourceforge.ganttproject.GanttCalendar,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,<init> --> <init>,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,<init>$2 --> <init>$2,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,<init>$2 --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,<init>$3 --> <init>$2,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,<init>$3 --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,<init>$4 --> <init>,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,<init>$4 --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,toString --> formatDate,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,getDayMonthLanguage --> getMonth,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,getDayWeekLanguage --> getDay,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,add --> add,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,newAdd --> add,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,getdayMonth --> getMonth,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,getdayWeek --> getDay,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,goNextMonth --> add,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,goPrevMonth --> add,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,go --> add,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,getDateAndTime --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttCalendar,getDateAndTime --> formatTime,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 102
StartClass 103
Class(net.sourceforge.ganttproject.filter.GanttPDFFileFilter,N,N,Public);
Method(<init>,void,Public,N,N);
Method(accept,boolean,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Parameter(accept,java.io.File,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttPDFFileFilter,getDescription --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttPDFFileFilter,getDescription --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 103
StartClass 104
Class(net.sourceforge.ganttproject.gui.GanttDialogCalendar,N,N,Public);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(listCalendar,javax.swing.JList,Private,N,N,);
Attribute(panelDate,net.sourceforge.ganttproject.gui.GanttPanelDate,Private,N,N,);
Attribute(bNew,javax.swing.JButton,Private,N,N,);
Attribute(bDelete,javax.swing.JButton,Private,N,N,);
Attribute(bImport,javax.swing.JButton,Private,N,N,);
Attribute(bSelectDays,javax.swing.JButton,Private,N,N,);
Attribute(bWork,javax.swing.JRadioButton,Private,N,N,);
Attribute(bNonWork,javax.swing.JRadioButton,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,javax.swing.JFrame,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.gui.GanttPanelDate);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bNew,net.sourceforge.ganttproject.gui.GanttDialogCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bDelete,net.sourceforge.ganttproject.gui.GanttDialogCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bImport,net.sourceforge.ganttproject.gui.GanttDialogCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bSelectDays,net.sourceforge.ganttproject.gui.GanttDialogCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> language,net.sourceforge.ganttproject.gui.GanttDialogCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> panelDate,net.sourceforge.ganttproject.gui.GanttDialogCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bWork,net.sourceforge.ganttproject.gui.GanttDialogCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bNonWork,net.sourceforge.ganttproject.gui.GanttDialogCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> listCalendar,net.sourceforge.ganttproject.gui.GanttDialogCalendar,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> language,net.sourceforge.ganttproject.gui.GanttDialogCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bNew,net.sourceforge.ganttproject.gui.GanttDialogCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bDelete,net.sourceforge.ganttproject.gui.GanttDialogCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bImport,net.sourceforge.ganttproject.gui.GanttDialogCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bSelectDays,net.sourceforge.ganttproject.gui.GanttDialogCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> listCalendar,net.sourceforge.ganttproject.gui.GanttDialogCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> panelDate,net.sourceforge.ganttproject.gui.GanttDialogCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bWork,net.sourceforge.ganttproject.gui.GanttDialogCalendar,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> bNonWork,net.sourceforge.ganttproject.gui.GanttDialogCalendar,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> <init>$3,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> getToolTip,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttDialogCalendar$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttDialogCalendar$2,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> center,net.sourceforge.ganttproject.gui.DialogAligner,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogCalendar,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 104
StartClass 105
Class(net.sourceforge.ganttproject.gui.GanttLookAndFeels,N,N,Public);
Attribute(infoByClass,java.util.Map,Protected,N,N,);
Attribute(infoByName,java.util.Map,Protected,N,N,);
Attribute(singleton,net.sourceforge.ganttproject.gui.GanttLookAndFeels,Protected,Y,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Protected,N,N);
Method(addLookAndFeel,void,Protected,N,N);
Method(getInfoByClass,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,Public,N,N);
Method(getInfoByName,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,Public,N,N);
Method(getDefaultInfo,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,Public,N,N);
Method(getInstalledLookAndFeels,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo[],Public,N,N);
Method(getGanttLookAndFeels,net.sourceforge.ganttproject.gui.GanttLookAndFeels,Public,Y,N);
Parameter(addLookAndFeel,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,);
Parameter(getInfoByClass,java.lang.String,);
Parameter(getInfoByName,java.lang.String,);
Composition(net.sourceforge.ganttproject.gui.GanttLookAndFeels);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttLookAndFeels,<init> --> addLookAndFeel,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttLookAndFeels,getDefaultInfo --> getInfoByClass,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttLookAndFeels,getGanttLookAndFeels --> <init>,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttLookAndFeels,<init> --> infoByClass,net.sourceforge.ganttproject.gui.GanttLookAndFeels,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttLookAndFeels,<init> --> infoByName,net.sourceforge.ganttproject.gui.GanttLookAndFeels,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttLookAndFeels,addLookAndFeel --> infoByClass,net.sourceforge.ganttproject.gui.GanttLookAndFeels,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttLookAndFeels,addLookAndFeel --> infoByName,net.sourceforge.ganttproject.gui.GanttLookAndFeels,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttLookAndFeels,getInfoByClass --> infoByClass,net.sourceforge.ganttproject.gui.GanttLookAndFeels,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttLookAndFeels,getInfoByName --> infoByName,net.sourceforge.ganttproject.gui.GanttLookAndFeels,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttLookAndFeels,getInstalledLookAndFeels --> infoByClass,net.sourceforge.ganttproject.gui.GanttLookAndFeels,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttLookAndFeels,getGanttLookAndFeels --> singleton,net.sourceforge.ganttproject.gui.GanttLookAndFeels,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttLookAndFeels,getGanttLookAndFeels --> singleton,net.sourceforge.ganttproject.gui.GanttLookAndFeels,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttLookAndFeels,<init> --> <init>$2,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,);
EndClass 105
StartClass 106
Class(net.sourceforge.ganttproject.document.FileDocument,N,N,Public);
Attribute(file,java.io.File,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Method(canRead,boolean,Public,N,N);
Method(canWrite,boolean,Public,N,N);
Method(isValidForMRU,boolean,Public,N,N);
Method(getInputStream,java.io.InputStream,Public,N,N);
Method(getOutputStream,java.io.OutputStream,Public,N,N);
Method(getPath,java.lang.String,Public,N,N);
Method(getFilePath,java.lang.String,Public,N,N);
Parameter(<init>,java.io.File,);
SuperClass(net.sourceforge.ganttproject.document.AbstractDocument);
Generalization(net.sourceforge.ganttproject.document.AbstractDocument);
Call(METHOD,net.sourceforge.ganttproject.document.FileDocument,getFilePath --> getPath,net.sourceforge.ganttproject.document.FileDocument,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.FileDocument,<init> --> file,net.sourceforge.ganttproject.document.FileDocument,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.FileDocument,getDescription --> file,net.sourceforge.ganttproject.document.FileDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.FileDocument,canRead --> file,net.sourceforge.ganttproject.document.FileDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.FileDocument,canWrite --> file,net.sourceforge.ganttproject.document.FileDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.FileDocument,isValidForMRU --> file,net.sourceforge.ganttproject.document.FileDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.FileDocument,getInputStream --> file,net.sourceforge.ganttproject.document.FileDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.FileDocument,getOutputStream --> file,net.sourceforge.ganttproject.document.FileDocument,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.FileDocument,getPath --> file,net.sourceforge.ganttproject.document.FileDocument,READ);
Call(METHOD,net.sourceforge.ganttproject.document.FileDocument,<init> --> <init>,net.sourceforge.ganttproject.document.AbstractDocument,);
EndClass 106
StartClass 107
Class(net.sourceforge.ganttproject.filter.GanttXMLFileFilter,N,N,Public);
Method(<init>,void,Public,N,N);
Method(accept,boolean,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Method(getExtension,java.lang.String,Public,Y,N);
Parameter(accept,java.io.File,);
Parameter(getExtension,java.io.File,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttXMLFileFilter,accept --> getExtension,net.sourceforge.ganttproject.filter.GanttXMLFileFilter,);
EndClass 107
StartClass 108
Class(net.sourceforge.ganttproject.io.GanttXMLSaver,N,N,Public);
Attribute(myProject,net.sourceforge.ganttproject.IGanttProject,Private,N,Y,);
Attribute(tree,net.sourceforge.ganttproject.GanttTree,Private,N,N,);
Attribute(peop,net.sourceforge.ganttproject.GanttResourcePanel,Private,N,N,);
Attribute(area,net.sourceforge.ganttproject.GanttGraphicArea,Private,N,N,);
Attribute(usersId,java.util.HashMap,Private,N,N,);
Attribute(number,java.util.ArrayList,Public,N,N,);
Attribute(lot,java.util.ArrayList,Public,N,N,);
Attribute(lots,java.util.ArrayList,Public,N,N,);
Attribute(cpt,int,Public,N,N,);
Attribute(s,java.lang.String,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(replaceAll,java.lang.String,Public,N,N);
Method(writeTask,void,Public,N,N);
Method(writeResources,void,Public,N,N);
Method(writeAllocations,void,Public,N,N);
Method(writeRoles,void,Public,N,N);
Method(correct,java.lang.String,Public,N,N);
Method(save,void,Public,N,N);
Method(startElement,void,Private,N,N);
Method(endElement,void,Private,N,N);
Method(addAttribute,void,Private,N,N);
Method(emptyElement,void,Private,N,N);
Method(emptyComment,void,Private,N,N);
Method(save$2,void,Public,N,N);
Method(saveRoles,void,Private,N,N);
Method(_save,void,Public,N,N);
Method(getProject,net.sourceforge.ganttproject.IGanttProject,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.IGanttProject,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,net.sourceforge.ganttproject.GanttResourcePanel,);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(replaceAll,java.lang.String,);
Parameter(replaceAll,java.lang.String,);
Parameter(replaceAll,java.lang.String,);
Parameter(writeTask,java.io.Writer,);
Parameter(writeTask,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(writeTask,java.lang.String,);
Parameter(writeResources,java.io.Writer,);
Parameter(writeAllocations,java.io.Writer,);
Parameter(writeRoles,java.io.Writer,);
Parameter(correct,java.lang.String,);
Parameter(save,java.io.OutputStream,);
Parameter(save,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,org.xml.sax.helpers.AttributesImpl,);
Parameter(startElement,javax.xml.transform.sax.TransformerHandler,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,javax.xml.transform.sax.TransformerHandler,);
Parameter(addAttribute,java.lang.String,);
Parameter(addAttribute,java.lang.String,);
Parameter(addAttribute,org.xml.sax.helpers.AttributesImpl,);
Parameter(emptyElement,java.lang.String,);
Parameter(emptyElement,org.xml.sax.helpers.AttributesImpl,);
Parameter(emptyElement,javax.xml.transform.sax.TransformerHandler,);
Parameter(emptyComment,javax.xml.transform.sax.TransformerHandler,);
Parameter(save$2,java.io.OutputStreamWriter,);
Parameter(save$2,java.lang.String,);
Parameter(save$2,boolean,);
Parameter(saveRoles,javax.xml.transform.sax.TransformerHandler,);
Parameter(_save,java.io.OutputStreamWriter,);
Parameter(_save,java.lang.String,);
Parameter(_save,boolean,);
Composition(net.sourceforge.ganttproject.IGanttProject);
Composition(net.sourceforge.ganttproject.GanttTree);
Composition(net.sourceforge.ganttproject.GanttResourcePanel);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> correct,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> replaceAll,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> writeTask,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeResources --> correct,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeRoles --> correct,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save --> save$2,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,emptyElement --> startElement,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,emptyElement --> endElement,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> getProject,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> addAttribute,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> startElement,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> emptyComment,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> _save,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> saveRoles,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> endElement,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> getProject,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> addAttribute,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> emptyElement,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> startElement,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> endElement,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> getProject,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> replaceAll,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> correct,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> writeTask,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> writeResources,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> writeAllocations,net.sourceforge.ganttproject.io.GanttXMLSaver,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,<init> --> usersId,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,<init> --> number,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,<init> --> lot,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,<init> --> lots,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,<init> --> s,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,<init> --> tree,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,<init> --> peop,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,<init> --> area,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,<init> --> myProject,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> s,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> tree,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> number,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> cpt,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> lot,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> cpt,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeResources --> peop,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeResources --> s,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeResources --> usersId,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeAllocations --> lot,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeAllocations --> s,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeRoles --> s,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> area,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> number,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> s,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> tree,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> area,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> lot,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> lots,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> cpt,net.sourceforge.ganttproject.io.GanttXMLSaver,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,getProject --> myProject,net.sourceforge.ganttproject.io.GanttXMLSaver,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> BACKSLASH,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getTaskID,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getAllChildTask$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getSuccessorsOld,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getNotes,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getName,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> colorDefined,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getColor,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getColor,net.sourceforge.ganttproject.util.ColorConvertion,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> shapeDefined,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getShape,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> <init>$2,net.sourceforge.ganttproject.shape.ShapePaint,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getArray,net.sourceforge.ganttproject.shape.ShapePaint,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> isMilestone,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> toXMLString,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> isStartFixed,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getPriority,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getWebLink,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getExpand,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getSuccessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeTask --> getRelationshipType,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeResources --> getPeople,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeResources --> getName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeResources --> getId,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeResources --> getRole,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeResources --> getPersistentID,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeResources --> getMail,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeResources --> getPhone,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeAllocations --> getAssignments,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeAllocations --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeAllocations --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeAllocations --> getId,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeAllocations --> getLoad,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeRoles --> getInstance,net.sourceforge.ganttproject.roles.RoleManager$Access,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeRoles --> getProjectLevelRoles,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeRoles --> getPersistentID,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,writeRoles --> getName,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> getProjectName,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> getOrganization,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> getWebLink,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> getDate,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> toXMLString,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,save$2 --> getZoom,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> getRoleManager,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> getRoleSets,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> isEnabled,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> getName,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> getProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> isEmpty,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> getRoles,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> getPersistentID,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,saveRoles --> getName,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> getDescription,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> getArryListTaskString,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> getTaskColor,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> getColor,net.sourceforge.ganttproject.util.ColorConvertion,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLSaver,_save --> getJTree,net.sourceforge.ganttproject.GanttTree,);
EndClass 108
StartClass 109
Class(net.sourceforge.ganttproject.filter.GanttXFIGFileFilter,N,N,Public);
Method(<init>,void,Public,N,N);
Method(accept,boolean,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Parameter(accept,java.io.File,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttXFIGFileFilter,getDescription --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttXFIGFileFilter,getDescription --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 109
StartClass 110
Class(net.sourceforge.ganttproject.parser.ResourceTagHandler,N,N,Public);
Attribute(myLateResource2roleBinding,java.util.HashMap,Private,N,Y,);
Attribute(myResourceManager,net.sourceforge.ganttproject.resource.ResourceManager,Private,N,Y,);
Attribute(myRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(endElement,void,Public,N,N);
Method(startElement,void,Public,N,N);
Method(loadResource,void,Private,N,N);
Method(getResourceManager,net.sourceforge.ganttproject.resource.ResourceManager,Private,N,N);
Method(findRole,net.sourceforge.ganttproject.roles.Role,Private,N,N);
Method(parsingStarted,void,Public,N,N);
Method(parsingFinished,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.resource.ResourceManager,);
Parameter(<init>,net.sourceforge.ganttproject.roles.RoleManager,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,org.xml.sax.Attributes,);
Parameter(loadResource,org.xml.sax.Attributes,);
Parameter(findRole,java.lang.String,);
Realization(net.sourceforge.ganttproject.parser.TagHandler);
Realization(net.sourceforge.ganttproject.parser.ParsingListener);
Composition(net.sourceforge.ganttproject.resource.ResourceManager);
Composition(net.sourceforge.ganttproject.roles.RoleManager);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,startElement --> loadResource,net.sourceforge.ganttproject.parser.ResourceTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,loadResource --> getResourceManager,net.sourceforge.ganttproject.parser.ResourceTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,parsingFinished --> findRole,net.sourceforge.ganttproject.parser.ResourceTagHandler,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.ResourceTagHandler,<init> --> myResourceManager,net.sourceforge.ganttproject.parser.ResourceTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.ResourceTagHandler,<init> --> myLateResource2roleBinding,net.sourceforge.ganttproject.parser.ResourceTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.ResourceTagHandler,<init> --> myResourceManager,net.sourceforge.ganttproject.parser.ResourceTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.ResourceTagHandler,<init> --> myRoleManager,net.sourceforge.ganttproject.parser.ResourceTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.ResourceTagHandler,loadResource --> myLateResource2roleBinding,net.sourceforge.ganttproject.parser.ResourceTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.ResourceTagHandler,getResourceManager --> myResourceManager,net.sourceforge.ganttproject.parser.ResourceTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.ResourceTagHandler,findRole --> myRoleManager,net.sourceforge.ganttproject.parser.ResourceTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.ResourceTagHandler,parsingFinished --> myLateResource2roleBinding,net.sourceforge.ganttproject.parser.ResourceTagHandler,READ);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,<init> --> clear,net.sourceforge.ganttproject.resource.ResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,loadResource --> create,net.sourceforge.ganttproject.resource.ResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,loadResource --> setMail,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,loadResource --> setPhone,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,loadResource --> setId,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,findRole --> <init>,net.sourceforge.ganttproject.roles.RolePersistentID,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,findRole --> getRoleSetID,net.sourceforge.ganttproject.roles.RolePersistentID,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,findRole --> getRoleID,net.sourceforge.ganttproject.roles.RolePersistentID,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,findRole --> getProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,findRole --> findRole,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,findRole --> getRoleSet,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,findRole --> setEnabled,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.parser.ResourceTagHandler,parsingFinished --> setRole,net.sourceforge.ganttproject.resource.HumanResource,);
EndClass 110
StartClass 111
Class(net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,N,N,NA);
Attribute(textBuffer,java.lang.StringBuffer,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.io.GanttXMLOpen,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(endDocument,void,Public,N,N);
Method(startElement,void,Public,N,N);
Method(endElement,void,Public,N,N);
Method(getCorrectString,java.lang.String,Public,N,N);
Method(characters,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,org.xml.sax.Attributes,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(getCorrectString,java.lang.String,);
Parameter(characters,char[],);
Parameter(characters,int,);
Parameter(characters,int,);
Composition(net.sourceforge.ganttproject.io.GanttXMLOpen);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,characters --> getCorrectString,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,<init> --> this$0,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,endDocument --> this$0,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,startElement --> this$0,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,endElement --> this$0,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,getCorrectString --> this$0,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,characters --> this$0,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,getCorrectString --> indent,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,getCorrectString --> marge,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,characters --> typeChar,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,characters --> prj,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,characters --> prjInfos,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,characters --> lot,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,characters --> _sDescription,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,characters --> typeChar,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,endDocument --> access$2,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,endDocument --> parsingFinished,net.sourceforge.ganttproject.parser.ParsingListener,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,startElement --> access$3,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,startElement --> startElement,net.sourceforge.ganttproject.parser.TagHandler,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,endElement --> access$3,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,endElement --> endElement,net.sourceforge.ganttproject.parser.TagHandler,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$GanttXMLParser,characters --> setNotes,net.sourceforge.ganttproject.task.MutableTask,);
EndClass 111
StartClass 112
Class(net.sourceforge.ganttproject.task.TaskManagerImpl,N,N,Public);
Attribute(myTimeUnitManager,net.sourceforge.ganttproject.time.TimeUnitManager,Private,N,Y,);
Attribute(myHierarchyManager,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,Private,N,Y,);
Attribute(myDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,Private,N,Y,);
Attribute(myAlgorithmCollection,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,Private,N,Y,);
Attribute(myListeners,java.util.List,Private,N,Y,);
Attribute(myMaxID,int,Private,N,N,);
Attribute(myId2task,java.util.Map,Private,N,N,);
Attribute(myRoot,net.sourceforge.ganttproject.task.Task,Private,N,N,);
Attribute(myConfig,net.sourceforge.ganttproject.task.TaskManagerConfig,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getTask,net.sourceforge.ganttproject.GanttTask,Public,N,N);
Method(getRootTask,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(clear,void,Public,N,N);
Method(createTask,net.sourceforge.ganttproject.GanttTask,Public,N,N);
Method(createTask$2,net.sourceforge.ganttproject.GanttTask,Public,N,N);
Method(registerTask,void,Public,N,N);
Method(setTask,void,Public,N,N);
Method(getTimeUnitManager,net.sourceforge.ganttproject.time.TimeUnitManager,Public,N,N);
Method(createLength,net.sourceforge.ganttproject.task.TaskLength,Public,N,N);
Method(getDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,Public,N,N);
Method(getAlgorithmCollection,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,Public,N,N);
Method(getHierarchyManager,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,Public,N,N);
Method(createConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,Public,N,N);
Method(getMaxID,int,Public,N,N);
Method(setMaxID,void,Private,N,N);
Method(increaseMaxID,void,Public,N,N);
Method(addTaskListener,void,Public,N,N);
Method(fireTaskScheduleChanged,void,Public,N,N);
Method(fireDependencyAdded,void,Private,N,N);
Method(fireDependencyRemoved,void,Private,N,N);
Method(fireTaskAdded,void,Private,N,N);
Method(fireTaskRemoved,void,Private,N,N);
Method(getConfig,net.sourceforge.ganttproject.task.TaskManagerConfig,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.task.Task,Public,Y,N);
Method(access$1,void,Public,Y,N);
Method(access$2,void,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManagerConfig,);
Parameter(getTask,int,);
Parameter(createTask$2,int,);
Parameter(registerTask,net.sourceforge.ganttproject.task.Task,);
Parameter(setTask,net.sourceforge.ganttproject.task.Task,);
Parameter(createLength,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(createLength,long,);
Parameter(createConstraint,int,);
Parameter(setMaxID,int,);
Parameter(addTaskListener,net.sourceforge.ganttproject.task.event.TaskListener,);
Parameter(fireTaskScheduleChanged,net.sourceforge.ganttproject.task.Task,);
Parameter(fireTaskScheduleChanged,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(fireTaskScheduleChanged,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(fireDependencyAdded,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Parameter(fireDependencyRemoved,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Parameter(fireTaskAdded,net.sourceforge.ganttproject.task.Task,);
Parameter(fireTaskRemoved,net.sourceforge.ganttproject.task.Task,);
Parameter(fireTaskRemoved,net.sourceforge.ganttproject.task.Task,);
Parameter(access$0,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Parameter(access$1,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Parameter(access$1,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Parameter(access$2,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Parameter(access$2,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Realization(net.sourceforge.ganttproject.task.TaskManager);
Composition(net.sourceforge.ganttproject.time.TimeUnitManager);
Composition(net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl);
Composition(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl);
Composition(net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection);
Composition(net.sourceforge.ganttproject.task.Task);
Composition(net.sourceforge.ganttproject.task.TaskManagerConfig);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> clear,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init>$2 --> <init>,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,getRootTask --> getTimeUnitManager,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,getRootTask --> createLength,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,clear --> setMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createTask --> getMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createTask --> createTask$2,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createTask --> increaseMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createTask$2 --> getRootTask,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createTask$2 --> fireTaskAdded,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,registerTask --> getMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,registerTask --> setMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,setTask --> getMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,setTask --> setMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireDependencyAdded --> getDependencyCollection,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireDependencyRemoved --> getDependencyCollection,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,access$1 --> fireDependencyAdded,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,access$2 --> fireDependencyRemoved,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> myListeners,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> myMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> myId2task,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> myConfig,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> myTimeUnitManager,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> myHierarchyManager,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> myDependencyCollection,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> myAlgorithmCollection,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,getTask --> myId2task,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,getRootTask --> myRoot,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,getRootTask --> myRoot,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,clear --> myId2task,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,clear --> myDependencyCollection,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,clear --> myRoot,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,registerTask --> myId2task,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,setTask --> myId2task,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,getTimeUnitManager --> myTimeUnitManager,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,getDependencyCollection --> myDependencyCollection,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,getAlgorithmCollection --> myAlgorithmCollection,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,getHierarchyManager --> myHierarchyManager,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,getMaxID --> myMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,setMaxID --> myMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,increaseMaxID --> myMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,increaseMaxID --> myMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,addTaskListener --> myListeners,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskScheduleChanged --> myListeners,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,fireDependencyAdded --> myListeners,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,fireDependencyRemoved --> myListeners,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskAdded --> myListeners,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskRemoved --> myListeners,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,getConfig --> myConfig,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl,access$0 --> myRoot,net.sourceforge.ganttproject.task.TaskManagerImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> <init>,net.sourceforge.ganttproject.time.TimeUnitManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> <init>,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> <init>$2,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeFactoryImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> <init>,net.sourceforge.ganttproject.task.TaskManagerImpl$1,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> <init>,net.sourceforge.ganttproject.task.TaskManagerImpl$2,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> <init>,net.sourceforge.ganttproject.task.TaskManagerImpl$3,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> <init>,net.sourceforge.ganttproject.task.TaskManagerImpl$4,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> <init>,net.sourceforge.ganttproject.task.TaskManagerImpl$5,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init> --> <init>,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,<init>$2 --> <init>,net.sourceforge.ganttproject.task.TaskManagerImpl$6,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,getRootTask --> <init>$4,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,getRootTask --> <init>,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,getRootTask --> setStart,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,getRootTask --> getTimeUnit,net.sourceforge.ganttproject.time.TimeUnitManager,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,getRootTask --> setDuration,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,getRootTask --> setExpand,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,clear --> clear,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createTask --> getTaskID,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createTask$2 --> <init>,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createTask$2 --> <init>,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createTask$2 --> setTaskID,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createTask$2 --> move,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,registerTask --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,setTask --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createLength --> <init>,net.sourceforge.ganttproject.task.TaskLengthImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createConstraint --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createConstraint --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createConstraint --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,createConstraint --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskScheduleChanged --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskScheduleChanged --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskScheduleChanged --> <init>,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskScheduleChanged --> taskScheduleChanged,net.sourceforge.ganttproject.task.event.TaskListener,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireDependencyAdded --> <init>,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireDependencyAdded --> dependencyAdded,net.sourceforge.ganttproject.task.event.TaskListener,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireDependencyRemoved --> <init>,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireDependencyRemoved --> dependencyRemoved,net.sourceforge.ganttproject.task.event.TaskListener,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskAdded --> getSupertask,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskAdded --> <init>,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskAdded --> taskAdded,net.sourceforge.ganttproject.task.event.TaskListener,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskRemoved --> <init>,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl,fireTaskRemoved --> taskRemoved,net.sourceforge.ganttproject.task.event.TaskListener,);
EndClass 112
StartClass 113
Class(net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.io.GanttXMLOpen,Public,N,Y,);
Method(<init>,void,Private,N,N);
Method(startElement,void,Public,N,N);
Method(endElement,void,Public,N,N);
Method(determineColor,java.awt.Color,Private,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,org.xml.sax.Attributes,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(endElement,java.lang.String,);
Parameter(determineColor,java.lang.String,);
Parameter(<init>$2,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Parameter(<init>$2,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,);
Realization(net.sourceforge.ganttproject.parser.TagHandler);
Composition(net.sourceforge.ganttproject.io.GanttXMLOpen);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> determineColor,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,<init>$2 --> <init>,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,<init> --> this$0,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> this$0,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,endElement --> this$0,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> indent,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> prj,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> prjInfos,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> area,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> peop,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> bImport,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> maxID,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> lot,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> treePanel,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> indent,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> typeChar,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> _sProjectName,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> _sOrganization,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> _sWebLink,net.sourceforge.ganttproject.PrjInfos,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,endElement --> lot,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,endElement --> indent,net.sourceforge.ganttproject.io.GanttXMLOpen,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,endElement --> indent,net.sourceforge.ganttproject.io.GanttXMLOpen,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,determineColor --> taskDefaultColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> access$0,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> createTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> parseXMLDate,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setDate,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setDate,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setZoom,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setZoom,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> access$1,net.sourceforge.ganttproject.io.GanttXMLOpen,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setTaskID,net.sourceforge.ganttproject.parser.ParsingContext,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> getTaskID,net.sourceforge.ganttproject.parser.ParsingContext,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setTaskID,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> registerTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setName,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setMilestone,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setPriority,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setWebLink,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setExpand,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setColor,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setStartFixed,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> getColor,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> <init>$4,net.sourceforge.ganttproject.shape.ShapePaint,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setShape,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> setProjectLevelTaskColor,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXMLOpen$DefaultTagHandler,startElement --> addObjectWithExpand,net.sourceforge.ganttproject.GanttTree,);
EndClass 113
StartClass 114
Class(net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,N,Y,Public);
Attribute(myMarkedTasks,java.util.Set,Private,N,N,);
Attribute(myDistance2dependencyList,java.util.SortedMap,Private,N,N,);
Attribute(myModifiedTasks,java.util.Set,Private,N,N,);
Attribute(myAdjuster,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,Private,N,Y,);
Attribute(myEntranceCounter,int,Private,N,N,);
Attribute(isRunning,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Method(run$2,void,Public,N,N);
Method(isRunning,boolean,Public,N,N);
Method(traverse,void,Private,N,N);
Method(fulfilDependencies,void,Private,N,N);
Method(fulfilConstraints,void,Private,N,N);
Method(modifyTaskStart,void,Private,N,N);
Method(modifyTaskEnd,void,Private,N,N);
Method(buildDistanceGraph,void,Private,N,N);
Method(buildDistanceGraph$2,void,Private,N,N);
Method(markTask,void,Private,N,N);
Method(isMarked,boolean,Private,N,N);
Method(createContainmentFacade,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Protected,N,Y);
Parameter(<init>,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Parameter(run,net.sourceforge.ganttproject.task.Task,);
Parameter(traverse,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Parameter(traverse,net.sourceforge.ganttproject.task.Task,);
Parameter(traverse,java.util.Set,);
Parameter(fulfilConstraints,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Parameter(modifyTaskStart,net.sourceforge.ganttproject.task.Task,);
Parameter(modifyTaskStart,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(modifyTaskEnd,net.sourceforge.ganttproject.task.Task,);
Parameter(modifyTaskEnd,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(buildDistanceGraph,net.sourceforge.ganttproject.task.Task,);
Parameter(buildDistanceGraph$2,net.sourceforge.ganttproject.task.dependency.TaskDependency[],);
Parameter(buildDistanceGraph$2,int,);
Parameter(markTask,net.sourceforge.ganttproject.task.Task,);
Parameter(isMarked,net.sourceforge.ganttproject.task.Task,);
SuperClass(net.sourceforge.ganttproject.task.algorithm.AlgorithmBase);
SubClass(net.sourceforge.ganttproject.task.TaskManagerImpl$4);
Generalization(net.sourceforge.ganttproject.task.algorithm.AlgorithmBase);
Composition(net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run --> buildDistanceGraph,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run --> fulfilDependencies,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run$2 --> createContainmentFacade,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run$2 --> traverse,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run$2 --> buildDistanceGraph,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run$2 --> fulfilDependencies,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,traverse --> traverse,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilDependencies --> fulfilConstraints,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilConstraints --> modifyTaskStart,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,buildDistanceGraph --> buildDistanceGraph$2,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,buildDistanceGraph$2 --> buildDistanceGraph$2,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,<init> --> myMarkedTasks,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,<init> --> myDistance2dependencyList,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,<init> --> myModifiedTasks,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,<init> --> myAdjuster,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run --> myEntranceCounter,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run --> myMarkedTasks,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run --> myDistance2dependencyList,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run --> myModifiedTasks,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run --> myAdjuster,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run --> isRunning,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run --> myEntranceCounter,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run$2 --> isRunning,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,isRunning --> isRunning,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilDependencies --> myDistance2dependencyList,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,modifyTaskStart --> myModifiedTasks,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,modifyTaskEnd --> myModifiedTasks,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,buildDistanceGraph$2 --> myDistance2dependencyList,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,markTask --> myMarkedTasks,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,isMarked --> myMarkedTasks,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,READ);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,<init> --> <init>,net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run --> isEnabled,net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run --> run$2,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,run$2 --> getRoot,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,traverse --> getDependenciesAsDependant,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,traverse --> toArray,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,traverse --> getNestedTasks,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilDependencies --> getConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilDependencies --> getCollision,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilDependencies --> isActive,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$Collision,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilConstraints --> getDependant,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilConstraints --> getDependenciesAsDependant,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilConstraints --> toArray,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilConstraints --> getConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilConstraints --> getCollision,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilConstraints --> getAcceptableStart,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$Collision,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilConstraints --> getVariation,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$Collision,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilConstraints --> <init>$2,net.sourceforge.ganttproject.task.dependency.TaskDependencyException,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilConstraints --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,fulfilConstraints --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,modifyTaskStart --> getDuration,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,modifyTaskStart --> setStart,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,modifyTaskStart --> setDuration,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,modifyTaskEnd --> setEnd,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,buildDistanceGraph --> getDependenciesAsDependee,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,buildDistanceGraph --> toArray,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,buildDistanceGraph$2 --> getDependant,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,buildDistanceGraph$2 --> getDependenciesAsDependee,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,buildDistanceGraph$2 --> toArray,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,);
EndClass 114
StartClass 115
Class(net.sourceforge.ganttproject.roles.RoleSet,Y,Y,Public);
Attribute(SOFTWARE_DEVELOPMENT,java.lang.String,Public,Y,Y,);
Attribute(DEFAULT,java.lang.String,Public,Y,Y,);
Method(getName,java.lang.String,Public,N,Y);
Method(getRoles,net.sourceforge.ganttproject.roles.Role[],Public,N,Y);
Method(createRole,net.sourceforge.ganttproject.roles.Role,Public,N,Y);
Method(deleteRole,void,Public,N,Y);
Method(findRole,net.sourceforge.ganttproject.roles.Role,Public,N,Y);
Method(isEnabled,boolean,Public,N,Y);
Method(setEnabled,void,Public,N,Y);
Method(isEmpty,boolean,Public,N,Y);
Method(clear,void,Public,N,Y);
Parameter(createRole,java.lang.String,);
Parameter(createRole,int,);
Parameter(deleteRole,net.sourceforge.ganttproject.roles.Role,);
Parameter(findRole,int,);
Parameter(setEnabled,boolean,);
EndClass 115
StartClass 116
Class(net.sourceforge.ganttproject.roles.RolePersistentID,N,N,Public);
Attribute(ROLESET_DELIMITER,java.lang.String,Private,Y,Y,);
Attribute(myRoleSetID,java.lang.String,Private,N,Y,);
Attribute(myRoleID,int,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getRoleSetID,java.lang.String,Public,N,N);
Method(getRoleID,int,Public,N,N);
Method(asString,java.lang.String,Public,N,N);
Parameter(<init>,java.lang.String,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RolePersistentID,<init> --> myRoleID,net.sourceforge.ganttproject.roles.RolePersistentID,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RolePersistentID,<init> --> myRoleSetID,net.sourceforge.ganttproject.roles.RolePersistentID,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RolePersistentID,getRoleSetID --> myRoleSetID,net.sourceforge.ganttproject.roles.RolePersistentID,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RolePersistentID,getRoleID --> myRoleID,net.sourceforge.ganttproject.roles.RolePersistentID,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RolePersistentID,asString --> myRoleSetID,net.sourceforge.ganttproject.roles.RolePersistentID,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RolePersistentID,asString --> myRoleID,net.sourceforge.ganttproject.roles.RolePersistentID,READ);
EndClass 116
StartClass 117
Class(net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,N,N,NA);
Attribute(save,java.awt.image.BufferedImage,Public,N,N,);
Attribute(image,java.awt.image.BufferedImage,Public,N,N,);
Attribute(rendering,java.awt.image.BufferedImage,Public,N,N,);
Attribute(pageWidth,int,Public,N,N,);
Attribute(pageHeight,int,Public,N,N,);
Attribute(nbx,int,Public,N,N,);
Attribute(nby,int,Public,N,N,);
Attribute(_x,int,Public,N,N,);
Attribute(_y,int,Public,N,N,);
Attribute(sizex,int,Public,N,N,);
Attribute(sizey,int,Public,N,N,);
Attribute(orientation,int,Public,N,N,);
Attribute(haveto,boolean,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttPreviewPrint,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(scale,void,Public,N,N);
Method(changeState,void,Public,N,N);
Method(paint,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttPreviewPrint,);
Parameter(<init>,java.awt.image.BufferedImage,);
Parameter(scale,double,);
Parameter(changeState,int,);
Parameter(changeState,int,);
Parameter(changeState,int,);
Parameter(paint,java.awt.Graphics,);
Composition(net.sourceforge.ganttproject.gui.GanttPreviewPrint);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,<init> --> scale,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,<init> --> changeState,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> paint,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,<init> --> save,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,scale --> save,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,scale --> image,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,scale --> image,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> pageWidth,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> pageHeight,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> image,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> nbx,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> sizex,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> nby,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> sizey,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> rendering,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> _x,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> _y,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> pageWidth,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> pageHeight,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> sizex,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> sizey,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> nbx,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> nby,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> rendering,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> haveto,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,changeState --> orientation,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,paint --> sizex,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,paint --> sizey,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,paint --> pageWidth,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,paint --> pageHeight,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,paint --> image,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,paint --> nbx,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,paint --> nby,net.sourceforge.ganttproject.gui.GanttPreviewPrint$PreviewPanel,READ);
EndClass 117
StartClass 118
Class(net.sourceforge.ganttproject.GanttPrintable,N,N,Public);
Attribute(image,java.awt.image.BufferedImage,Private,N,N,);
Attribute(x,int,Private,N,N,);
Attribute(y,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(print,int,Public,N,N);
Parameter(<init>,java.awt.image.BufferedImage,);
Parameter(print,java.awt.Graphics,);
Parameter(print,java.awt.print.PageFormat,);
Parameter(print,int,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttPrintable,<init> --> image,net.sourceforge.ganttproject.GanttPrintable,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttPrintable,<init> --> y,net.sourceforge.ganttproject.GanttPrintable,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttPrintable,<init> --> x,net.sourceforge.ganttproject.GanttPrintable,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttPrintable,print --> image,net.sourceforge.ganttproject.GanttPrintable,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttPrintable,print --> x,net.sourceforge.ganttproject.GanttPrintable,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttPrintable,print --> y,net.sourceforge.ganttproject.GanttPrintable,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttPrintable,print --> x,net.sourceforge.ganttproject.GanttPrintable,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttPrintable,print --> y,net.sourceforge.ganttproject.GanttPrintable,WRITE);
EndClass 118
StartClass 119
Class(net.sourceforge.ganttproject.gui.DialogAligner,N,N,Public);
Method(<init>,void,Public,N,N);
Method(center,void,Public,Y,N);
Parameter(center,javax.swing.JDialog,);
Parameter(center,java.awt.Container,);
EndClass 119
StartClass 120
Class(net.sourceforge.ganttproject.task.MutableTask,Y,Y,Public);
Method(setName,void,Public,N,Y);
Method(setMilestone,void,Public,N,Y);
Method(setPriority,void,Public,N,Y);
Method(setStart,void,Public,N,Y);
Method(setEnd,void,Public,N,Y);
Method(setDuration,void,Public,N,Y);
Method(setCompletionPercentage,void,Public,N,Y);
Method(setStartFixed,void,Public,N,Y);
Method(setShape,void,Public,N,Y);
Method(setColor,void,Public,N,Y);
Method(setNotes,void,Public,N,Y);
Method(addNotes,void,Public,N,Y);
Method(setExpand,void,Public,N,Y);
Parameter(setName,java.lang.String,);
Parameter(setMilestone,boolean,);
Parameter(setPriority,int,);
Parameter(setStart,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(setEnd,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(setDuration,net.sourceforge.ganttproject.task.TaskLength,);
Parameter(setCompletionPercentage,int,);
Parameter(setStartFixed,boolean,);
Parameter(setShape,net.sourceforge.ganttproject.shape.ShapePaint,);
Parameter(setColor,java.awt.Color,);
Parameter(setNotes,java.lang.String,);
Parameter(addNotes,java.lang.String,);
Parameter(setExpand,boolean,);
EndClass 120
StartClass 121
Class(net.sourceforge.ganttproject.task.TaskMutator,Y,Y,Public);
Method(commit,void,Public,N,Y);
Realization(net.sourceforge.ganttproject.task.MutableTask);
EndClass 121
StartClass 122
Class(net.sourceforge.ganttproject.task.TaskLength,Y,Y,Public);
Method(getLength,long,Public,N,Y);
Method(getLength$2,long,Public,N,Y);
Method(getTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,Y);
Parameter(getLength,net.sourceforge.ganttproject.time.TimeUnit,);
EndClass 122
StartClass 123
Class(net.sourceforge.ganttproject.GanttTaskRelationship,N,N,Public);
Attribute(SS,int,Public,Y,Y,);
Attribute(FS,int,Public,Y,Y,);
Attribute(FF,int,Public,Y,Y,);
Attribute(SF,int,Public,Y,Y,);
Attribute(predecessorTaskID,int,Private,N,N,);
Attribute(successorTaskID,int,Private,N,N,);
Attribute(relationshipType,int,Private,N,N,);
Attribute(myTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getPredecessorTask,net.sourceforge.ganttproject.GanttTask,Public,N,N);
Method(getPredecessorTaskID,int,Public,N,N);
Method(setPredecessorTask,void,Public,N,N);
Method(setPredecessorTask$2,void,Public,N,N);
Method(getSuccessorTask,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(getSuccessorTaskID,int,Public,N,N);
Method(setSuccessorTask,void,Public,N,N);
Method(setSuccessorTask$2,void,Public,N,N);
Method(getRelationshipType,int,Public,N,N);
Method(setRelationshipType,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(clone,java.lang.Object,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(getManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,N);
Parameter(<init>$2,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(setPredecessorTask,net.sourceforge.ganttproject.task.Task,);
Parameter(setPredecessorTask$2,int,);
Parameter(setSuccessorTask,net.sourceforge.ganttproject.task.Task,);
Parameter(setSuccessorTask$2,int,);
Parameter(setRelationshipType,int,);
Parameter(equals,net.sourceforge.ganttproject.GanttTaskRelationship,);
Composition(net.sourceforge.ganttproject.task.TaskManager);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,<init> --> <init>$2,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,<init>$3 --> <init>$2,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,getPredecessorTask --> getManager,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,getSuccessorTask --> getManager,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,clone --> <init>$2,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,toString --> getSuccessorTask,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,toString --> getSuccessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,toString --> getPredecessorTask,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,toString --> getPredecessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,<init>$2 --> predecessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,<init>$2 --> successorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,<init>$2 --> myTaskManager,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,<init>$3 --> predecessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,<init>$3 --> successorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,<init>$3 --> relationshipType,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,getPredecessorTask --> predecessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,getPredecessorTaskID --> predecessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,setPredecessorTask --> predecessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,setPredecessorTask$2 --> predecessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,getSuccessorTask --> successorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,getSuccessorTaskID --> successorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,setSuccessorTask --> successorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,setSuccessorTask$2 --> successorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,getRelationshipType --> relationshipType,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,setRelationshipType --> relationshipType,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,equals --> relationshipType,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,equals --> predecessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,equals --> successorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,clone --> myTaskManager,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,clone --> relationshipType,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,clone --> predecessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,clone --> successorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,clone --> relationshipType,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,clone --> predecessorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,clone --> successorTaskID,net.sourceforge.ganttproject.GanttTaskRelationship,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,toString --> relationshipType,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTaskRelationship,getManager --> myTaskManager,net.sourceforge.ganttproject.GanttTaskRelationship,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,getPredecessorTask --> getTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,setPredecessorTask --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,getSuccessorTask --> getTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttTaskRelationship,setSuccessorTask --> getTaskID,net.sourceforge.ganttproject.task.Task,);
EndClass 123
StartClass 124
Class(net.sourceforge.ganttproject.task.ResourceAssignment,Y,Y,Public);
Method(getTask,net.sourceforge.ganttproject.task.Task,Public,N,Y);
Method(getResource,net.sourceforge.ganttproject.resource.ProjectResource,Public,N,Y);
Method(getLoad,float,Public,N,Y);
Method(setLoad,void,Public,N,Y);
Method(delete,void,Public,N,Y);
Parameter(setLoad,float,);
EndClass 124
StartClass 125
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,Y,Y,Public);
Method(toArray,net.sourceforge.ganttproject.task.dependency.TaskDependency[],Public,N,Y);
Method(clear,void,Public,N,Y);
EndClass 125
StartClass 126
Class(net.sourceforge.ganttproject.task.ResourceAssignmentCollection,Y,Y,Public);
Method(getAssignments,net.sourceforge.ganttproject.task.ResourceAssignment[],Public,N,Y);
Method(getAssignment,net.sourceforge.ganttproject.task.ResourceAssignment,Public,N,Y);
Method(createMutator,net.sourceforge.ganttproject.task.ResourceAssignmentMutator,Public,N,Y);
Parameter(getAssignment,net.sourceforge.ganttproject.resource.ProjectResource,);
Realization(net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection);
EndClass 126
StartClass 127
Class(net.sourceforge.ganttproject.document.AbstractDocument,N,Y,Public);
Method(<init>,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(acquireLock,boolean,Public,N,N);
Method(releaseLock,void,Public,N,N);
Method(getFilePath,java.lang.String,Public,N,N);
Method(getURLPath,java.lang.String,Public,N,N);
Method(getUsername,java.lang.String,Public,N,N);
Method(getPassword,java.lang.String,Public,N,N);
Method(setUserInfo,void,Public,N,N);
Method(getLastError,java.lang.String,Public,N,N);
Parameter(equals,java.lang.Object,);
Parameter(setUserInfo,java.lang.String,);
Parameter(setUserInfo,java.lang.String,);
SubClass(net.sourceforge.ganttproject.document.HttpDocument);
SubClass(net.sourceforge.ganttproject.document.AbstractURLDocument);
SubClass(net.sourceforge.ganttproject.document.FileDocument);
Realization(net.sourceforge.ganttproject.document.Document);
Call(METHOD,net.sourceforge.ganttproject.document.AbstractDocument,equals --> getPath,net.sourceforge.ganttproject.document.Document,);
EndClass 127
StartClass 128
Class(net.sourceforge.ganttproject.language.GanttLanguage$Listener,Y,Y,Public);
Method(languageChanged,void,Public,N,Y);
Parameter(languageChanged,net.sourceforge.ganttproject.language.GanttLanguage$Event,);
EndClass 128
StartClass 129
Class(net.sourceforge.ganttproject.language.GanttLanguage$Event,N,N,Public);
Attribute(this$0,net.sourceforge.ganttproject.language.GanttLanguage,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getLanguage,net.sourceforge.ganttproject.language.GanttLanguage,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.language.GanttLanguage,);
Parameter(<init>,net.sourceforge.ganttproject.language.GanttLanguage,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Call(ATTRIBUTE,net.sourceforge.ganttproject.language.GanttLanguage$Event,<init> --> this$0,net.sourceforge.ganttproject.language.GanttLanguage$Event,WRITE);
EndClass 129
StartClass 130
Class(net.sourceforge.ganttproject.time.TimeUnitManager,Y,Y,Public);
Method(getTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,Y);
Parameter(getTimeUnit,int,);
EndClass 130
StartClass 131
Class(net.sourceforge.ganttproject.time.TimeUnit,Y,Y,Public);
Attribute(DAY,int,Public,Y,Y,);
Method(getName,java.lang.String,Public,N,Y);
Method(isConstructedFrom,boolean,Public,N,Y);
Method(getAtomCount,int,Public,N,Y);
Method(getDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,Y);
Method(setTextFormatter,void,Public,N,Y);
Method(format,java.lang.String,Public,N,Y);
Parameter(isConstructedFrom,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getAtomCount,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(setTextFormatter,net.sourceforge.ganttproject.time.TextFormatter,);
Parameter(format,java.util.Date,);
EndClass 131
StartClass 132
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,Y,Y,Public);
Method(setTaskDependency,void,Public,N,Y);
Method(getCollision,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$Collision,Public,N,Y);
Method(getName,java.lang.String,Public,N,Y);
Method(getID,int,Public,N,Y);
Parameter(setTaskDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
EndClass 132
StartClass 133
Class(net.sourceforge.ganttproject.task.event.TaskListener,Y,Y,Public);
Method(taskScheduleChanged,void,Public,N,Y);
Method(dependencyAdded,void,Public,N,Y);
Method(dependencyRemoved,void,Public,N,Y);
Method(taskAdded,void,Public,N,Y);
Method(taskRemoved,void,Public,N,Y);
Method(taskMoved,void,Public,N,Y);
Parameter(taskScheduleChanged,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,);
Parameter(dependencyAdded,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,);
Parameter(dependencyRemoved,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,);
Parameter(taskAdded,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,);
Parameter(taskRemoved,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,);
Parameter(taskMoved,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,);
EndClass 133
StartClass 134
Class(net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,N,N,NA);
Attribute(taskID,int,Public,N,N,);
Attribute(successorTaskID,int,Public,N,N,);
Attribute(dependType,int,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.parser.DependencyTagHandler,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(setTaskID,void,Public,N,N);
Method(setDependTaskID,void,Public,N,N);
Method(setDependType,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>$2,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$3,net.sourceforge.ganttproject.parser.DependencyTagHandler,);
Parameter(setTaskID,int,);
Parameter(setDependTaskID,int,);
Parameter(setDependType,int,);
Composition(net.sourceforge.ganttproject.parser.DependencyTagHandler);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,<init> --> this$0,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,<init> --> dependType,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,<init> --> taskID,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,<init> --> successorTaskID,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,<init>$2 --> this$0,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,<init>$2 --> dependType,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,<init>$2 --> taskID,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,<init>$2 --> successorTaskID,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,<init>$3 --> this$0,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,<init>$3 --> dependType,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,setTaskID --> taskID,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,setDependTaskID --> successorTaskID,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,setDependType --> dependType,net.sourceforge.ganttproject.parser.DependencyTagHandler$GanttDependStructure,WRITE);
EndClass 134
StartClass 135
Class(net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,N,N,Public);
Attribute(myI18n,net.sourceforge.ganttproject.gui.projectwizard.I18N,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(addRoleSetPage,void,Public,N,N);
Method(addProjectNamePage,void,Public,N,N);
Method(nextPage,void,Public,N,N);
Method(show,void,Public,N,N);
Method(backPage,void,Public,N,N);
Parameter(<init>,javax.swing.JFrame,);
Parameter(<init>,net.sourceforge.ganttproject.gui.projectwizard.I18N,);
Parameter(addRoleSetPage,net.sourceforge.ganttproject.roles.RoleSet[],);
Parameter(addProjectNamePage,net.sourceforge.ganttproject.IGanttProject,);
SuperClass(net.sourceforge.ganttproject.gui.projectwizard.WizardImpl);
Generalization(net.sourceforge.ganttproject.gui.projectwizard.WizardImpl);
Composition(net.sourceforge.ganttproject.gui.projectwizard.I18N);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,<init> --> myI18n,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,addRoleSetPage --> myI18n,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,addProjectNamePage --> myI18n,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,<init> --> getNewProjectWizardWindowTitle,net.sourceforge.ganttproject.gui.projectwizard.I18N,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,<init> --> <init>,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,addRoleSetPage --> <init>,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,addRoleSetPage --> addPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,addProjectNamePage --> <init>,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,addProjectNamePage --> addPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,nextPage --> nextPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,show --> show,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow,backPage --> backPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
EndClass 135
StartClass 136
Class(net.sourceforge.ganttproject.gui.projectwizard.I18N,N,N,Public);
Method(<init>,void,Public,N,N);
Method(getNewProjectWizardWindowTitle,java.lang.String,Public,N,N);
Method(getProjectDomainPageTitle,java.lang.String,Public,N,N);
Method(getRolesetTooltipHeader,java.lang.String,Public,N,N);
Method(getRolesetTooltipFooter,java.lang.String,Public,N,N);
Method(formatRoleForTooltip,java.lang.String,Public,N,N);
Parameter(getRolesetTooltipHeader,java.lang.String,);
Parameter(formatRoleForTooltip,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.I18N,getNewProjectWizardWindowTitle --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.I18N,getNewProjectWizardWindowTitle --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.I18N,getProjectDomainPageTitle --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.I18N,getProjectDomainPageTitle --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.I18N,formatRoleForTooltip --> getName,net.sourceforge.ganttproject.roles.Role,);
EndClass 136
StartClass 137
Class(net.sourceforge.ganttproject.gui.GeneralDialog,N,Y,Public);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Protected,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Protected,N,N,);
Attribute(treeSections,javax.swing.JTree,Protected,N,N,);
Attribute(rootNode,javax.swing.tree.DefaultMutableTreeNode,Protected,N,N,);
Attribute(treeModel,javax.swing.tree.DefaultTreeModel,Protected,N,N,);
Attribute(okButton,javax.swing.JButton,Protected,N,N,);
Attribute(cancelButton,javax.swing.JButton,Protected,N,N,);
Attribute(applyButton,javax.swing.JButton,Protected,N,N,);
Attribute(settingPanel,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,Protected,N,N,);
Attribute(mainPanel2,javax.swing.JPanel,Protected,N,N,);
Attribute(southPanel,javax.swing.JPanel,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(constructSections,void,Public,N,Y);
Method(addObject,javax.swing.tree.DefaultMutableTreeNode,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(getProject,net.sourceforge.ganttproject.IGanttProject,Protected,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,boolean,);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Parameter(addObject,java.lang.Object,);
Parameter(addObject,javax.swing.tree.DefaultMutableTreeNode,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
SubClass(net.sourceforge.ganttproject.gui.options.SettingsDialog);
SubClass(net.sourceforge.ganttproject.gui.about.AboutDialog);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.GanttProject);
Composition(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> constructSections,net.sourceforge.ganttproject.gui.GeneralDialog,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> rootNode,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> treeModel,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> treeSections,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> language,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> okButton,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> southPanel,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> applyButton,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> cancelButton,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> settingPanel,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> mainPanel2,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> language,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> settingPanel,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> mainPanel2,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> appli,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> rootNode,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> treeModel,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> treeSections,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> southPanel,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> okButton,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> applyButton,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> cancelButton,net.sourceforge.ganttproject.gui.GeneralDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,addObject --> rootNode,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,addObject --> treeModel,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,addObject --> treeSections,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,actionPerformed --> okButton,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,actionPerformed --> settingPanel,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,actionPerformed --> cancelButton,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,actionPerformed --> applyButton,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog,getProject --> appli,net.sourceforge.ganttproject.gui.GeneralDialog,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> <init>,net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer,);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> getTitle,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> getComment,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> <init>,net.sourceforge.ganttproject.gui.options.TopPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> initialize,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,<init> --> center,net.sourceforge.ganttproject.gui.DialogAligner,);
Call(METHOD,net.sourceforge.ganttproject.gui.GeneralDialog,actionPerformed --> applyChanges,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
EndClass 137
StartClass 138
Class(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,N,Y,Public);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Protected,N,N,);
Attribute(vb,javax.swing.Box,Protected,N,N,);
Attribute(bHasChange,boolean,Protected,N,N,);
Attribute(appli,java.awt.Frame,Private,N,N,);
Attribute(myTitle,java.lang.String,Private,N,N,);
Attribute(myComment,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getComponent,java.awt.Component,Public,N,N);
Method(applyChanges,boolean,Public,N,Y);
Method(initialize,void,Public,N,Y);
Method(askForApplyChanges,boolean,Public,N,N);
Method(getTitle,java.lang.String,Public,N,N);
Method(getComment,java.lang.String,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.awt.Frame,);
Parameter(applyChanges,boolean,);
SubClass(net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel);
SubClass(net.sourceforge.ganttproject.gui.options.ExportSettingsPanel);
SubClass(net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel);
SubClass(net.sourceforge.ganttproject.gui.options.CSVSettingsPanel);
SubClass(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel);
SubClass(net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel);
SubClass(net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel);
SubClass(net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel);
SubClass(net.sourceforge.ganttproject.gui.options.PDFSettingsPanel);
SubClass(net.sourceforge.ganttproject.gui.options.RolesSettingsPanel);
SubClass(net.sourceforge.ganttproject.gui.options.LnFSettingsPanel);
SubClass(net.sourceforge.ganttproject.gui.about.AboutLibraryPanel);
SubClass(net.sourceforge.ganttproject.gui.about.AboutPanel);
SubClass(net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel);
SubClass(net.sourceforge.ganttproject.gui.about.AboutLicensePanel);
SubClass(net.sourceforge.ganttproject.gui.about.AboutAuthorPanel);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,<init> --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,<init> --> appli,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,<init> --> myTitle,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,<init> --> myComment,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,askForApplyChanges --> appli,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,askForApplyChanges --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,getTitle --> myTitle,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,getComment --> myComment,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,askForApplyChanges --> QUESTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,askForApplyChanges --> YES_NO_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,askForApplyChanges --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,askForApplyChanges --> YES,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,askForApplyChanges --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,askForApplyChanges --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
EndClass 138
StartClass 139
Class(net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,N,N,Public);
Attribute(buttonXsl,javax.swing.JButton,Public,N,N,);
Attribute(tfXsl,javax.swing.JTextField,Public,N,N,);
Attribute(cbDefault,javax.swing.JCheckBox,Public,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Method(getXslDirectory,java.lang.String,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.GanttProject,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
Parameter(getXslDirectory,boolean,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Parameter(access$0,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,applyChanges --> getXslDirectory,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> tfXsl,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> buttonXsl,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> cbDefault,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> appli,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> buttonXsl,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> tfXsl,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> cbDefault,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,applyChanges --> appli,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,applyChanges --> cbDefault,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,initialize --> tfXsl,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,initialize --> appli,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,getXslDirectory --> tfXsl,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,actionPerformed --> cbDefault,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,access$0 --> appli,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,actionPerformed --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> <init>$3,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,applyChanges --> askForApplyChanges,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,applyChanges --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,applyChanges --> setXslDir,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,initialize --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,initialize --> getXslDir,net.sourceforge.ganttproject.GanttOptions,);
EndClass 139
StartClass 140
Class(net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,N,N,Public);
Attribute(cbName,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbComplete,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbRelations,javax.swing.JCheckBox,Public,N,N,);
Attribute(cb3dBorder,javax.swing.JCheckBox,Public,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Method(getExportName,boolean,Public,N,N);
Method(getExportComplete,boolean,Public,N,N);
Method(getExportRelations,boolean,Public,N,N);
Method(getExport3DBorder,boolean,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> getExportName,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> getExportComplete,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> getExportRelations,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> getExport3DBorder,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,<init> --> appli,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,<init> --> cbName,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,<init> --> cbComplete,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,<init> --> cbRelations,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,<init> --> cb3dBorder,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> appli,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,initialize --> cbName,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,initialize --> appli,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,initialize --> cbComplete,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,initialize --> cbRelations,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,initialize --> cb3dBorder,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,getExportName --> cbName,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,getExportComplete --> cbComplete,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,getExportRelations --> cbRelations,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,getExport3DBorder --> cb3dBorder,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> getExportName,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> getExportComplete,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> getExportRelations,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> getExport3dBorders,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> askForApplyChanges,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> setExportName,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> setExportComplete,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> setExportRelations,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,applyChanges --> setExport3dBorders,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,initialize --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,initialize --> getExportName,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,initialize --> getExportComplete,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,initialize --> getExportRelations,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ExportSettingsPanel,initialize --> getExport3dBorders,net.sourceforge.ganttproject.GanttOptions,);
EndClass 140
StartClass 141
Class(net.sourceforge.ganttproject.gui.options.TopPanel,N,N,Public);
Method(<init>,void,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.TopPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.TopPanel$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.TopPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.TopPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.TopPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 141
StartClass 142
Class(net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel,N,N,Public);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.WelcomeSettingsPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 142
StartClass 143
Class(net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,N,N,Public);
Attribute(bFixedSize,javax.swing.JRadioButton,Public,N,N,);
Attribute(bSeparatedText,javax.swing.JRadioButton,Public,N,N,);
Attribute(bDoubleDot,javax.swing.JRadioButton,Public,N,N,);
Attribute(bDotComa,javax.swing.JRadioButton,Public,N,N,);
Attribute(bComa,javax.swing.JRadioButton,Public,N,N,);
Attribute(bSpace,javax.swing.JRadioButton,Public,N,N,);
Attribute(bOther,javax.swing.JRadioButton,Public,N,N,);
Attribute(cbTextSeparator,javax.swing.JComboBox,Public,N,N,);
Attribute(tfOther,javax.swing.JTextField,Public,N,N,);
Attribute(cbTaskID,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbTaskName,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbStartDate,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbEndDate,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbTaskPercent,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbTaskDuration,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbTaskWebLink,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbTaskResources,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbTaskNotes,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbResID,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbResName,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbResMail,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbResPhone,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbResRole,javax.swing.JCheckBox,Public,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(addUsingGBL,void,Private,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(unselectOther,void,Public,N,N);
Method(enableSeparatedButton,void,Public,N,N);
Method(getFixed,boolean,Public,N,N);
Method(getTaskID,boolean,Public,N,N);
Method(getTaskName,boolean,Public,N,N);
Method(getTaskSD,boolean,Public,N,N);
Method(getTaskED,boolean,Public,N,N);
Method(getTaskPercent,boolean,Public,N,N);
Method(getTaskDuration,boolean,Public,N,N);
Method(getTaskWebLink,boolean,Public,N,N);
Method(getTaskResources,boolean,Public,N,N);
Method(getTaskNotes,boolean,Public,N,N);
Method(getResourceID,boolean,Public,N,N);
Method(getResourceName,boolean,Public,N,N);
Method(getResourcePhone,boolean,Public,N,N);
Method(getResourceMail,boolean,Public,N,N);
Method(getResourceRole,boolean,Public,N,N);
Method(separatCharHasChange,boolean,Public,N,N);
Method(getTextSeparat,java.lang.String,Public,N,N);
Method(getSeparat,java.lang.String,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(addUsingGBL,java.awt.Container,);
Parameter(addUsingGBL,java.awt.Component,);
Parameter(addUsingGBL,java.awt.GridBagConstraints,);
Parameter(addUsingGBL,int,);
Parameter(addUsingGBL,int,);
Parameter(addUsingGBL,int,);
Parameter(addUsingGBL,int,);
Parameter(applyChanges,boolean,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Parameter(unselectOther,javax.swing.JRadioButton,);
Parameter(enableSeparatedButton,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> addUsingGBL,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getFixed,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getTaskID,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getTaskName,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getTaskSD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getTaskED,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getTaskDuration,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getTaskPercent,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getTaskWebLink,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getTaskResources,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getTaskNotes,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getResourceID,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getResourceName,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getResourceMail,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getResourcePhone,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getResourceRole,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> separatCharHasChange,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getTextSeparat,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getSeparat,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> enableSeparatedButton,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> unselectOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,actionPerformed --> enableSeparatedButton,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,actionPerformed --> unselectOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bFixedSize,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bSeparatedText,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bDoubleDot,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bDotComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bSpace,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> appli,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbTextSeparator,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bFixedSize,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bSeparatedText,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bDoubleDot,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bDotComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bSpace,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> bOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbTextSeparator,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> tfOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> appli,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbTaskID,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbTaskName,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbTaskDuration,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbStartDate,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbEndDate,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbTaskPercent,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbTaskWebLink,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbTaskResources,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbTaskNotes,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbResID,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbResName,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbResMail,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbResPhone,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> cbResRole,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> appli,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbTaskID,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> appli,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbTaskName,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbStartDate,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbEndDate,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbTaskPercent,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbTaskDuration,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbTaskWebLink,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbTaskResources,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbTaskNotes,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbResID,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbResName,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbResMail,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbResPhone,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbResRole,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bFixedSize,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bSeparatedText,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bDotComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bDoubleDot,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bSpace,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> tfOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> cbTextSeparator,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,actionPerformed --> bFixedSize,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,actionPerformed --> bSeparatedText,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,actionPerformed --> bDoubleDot,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,actionPerformed --> bDotComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,actionPerformed --> bComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,actionPerformed --> bSpace,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,actionPerformed --> bOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,unselectOther --> bDoubleDot,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,unselectOther --> bDotComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,unselectOther --> bComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,unselectOther --> bSpace,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,unselectOther --> bOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,unselectOther --> tfOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,enableSeparatedButton --> bDoubleDot,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,enableSeparatedButton --> bDotComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,enableSeparatedButton --> bComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,enableSeparatedButton --> bSpace,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,enableSeparatedButton --> bOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,enableSeparatedButton --> tfOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getFixed --> bFixedSize,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getTaskID --> cbTaskID,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getTaskName --> cbTaskName,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getTaskSD --> cbStartDate,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getTaskED --> cbEndDate,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getTaskPercent --> cbTaskPercent,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getTaskDuration --> cbTaskDuration,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getTaskWebLink --> cbTaskWebLink,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getTaskResources --> cbTaskResources,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getTaskNotes --> cbTaskNotes,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getResourceID --> cbResID,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getResourceName --> cbResName,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getResourcePhone --> cbResPhone,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getResourceMail --> cbResMail,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getResourceRole --> cbResRole,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,separatCharHasChange --> appli,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,separatCharHasChange --> bDoubleDot,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,separatCharHasChange --> bComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,separatCharHasChange --> bDotComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,separatCharHasChange --> bSpace,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,separatCharHasChange --> bOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,separatCharHasChange --> tfOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getTextSeparat --> cbTextSeparator,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getSeparat --> bDoubleDot,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getSeparat --> bComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getSeparat --> bDotComa,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getSeparat --> bSpace,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,getSeparat --> tfOther,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bFixedSize,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskStartDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskEndDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskDuration,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskPercent,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskWebLink,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskResources,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskNotes,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportResourceID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportResourceName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportResourceMail,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportResourcePhone,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportResourceRole,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> sSeparatedTextChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> sSeparatedTextChar,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> sSeparatedChar,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bFixedSize,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskID,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskName,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskStartDate,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskEndDate,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskDuration,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskPercent,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskWebLink,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskResources,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportTaskNotes,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportResourceID,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportResourceName,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportResourceMail,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportResourcePhone,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> bExportResourceRole,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportTaskID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportTaskName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportTaskStartDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportTaskEndDate,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportTaskPercent,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportTaskDuration,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportTaskWebLink,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportTaskResources,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportTaskNotes,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportResourceID,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportResourceName,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportResourceMail,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportResourcePhone,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bExportResourceRole,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> bFixedSize,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> sSeparatedChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> sSeparatedTextChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,separatCharHasChange --> sSeparatedChar,net.sourceforge.ganttproject.io.CSVOptions,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> getCSVOptions,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> getSeparatedTextChars,net.sourceforge.ganttproject.io.CSVOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> getCSVOptions,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,applyChanges --> askForApplyChanges,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,initialize --> getCSVOptions,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,separatCharHasChange --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.CSVSettingsPanel,separatCharHasChange --> getCSVOptions,net.sourceforge.ganttproject.GanttOptions,);
EndClass 143
StartClass 144
Class(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,N,N,Public);
Attribute(bTaskColor,javax.swing.JButton,Public,N,N,);
Attribute(bResourceColor,javax.swing.JButton,Public,N,N,);
Attribute(bResourceOverloadColor,javax.swing.JButton,Public,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Attribute(colorChooser,javax.swing.JColorChooser,Protected,Y,N,);
Attribute(vb1,javax.swing.Box,Public,N,N,);
Attribute(vb2,javax.swing.Box,Public,N,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<clinit> --> colorChooser,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> vb1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> vb2,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> bTaskColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> bResourceColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> bResourceOverloadColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> vb1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> vb2,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> appli,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> bTaskColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> bResourceColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> bResourceOverloadColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,applyChanges --> appli,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,applyChanges --> bTaskColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,applyChanges --> bResourceColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,applyChanges --> bResourceOverloadColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,initialize --> bTaskColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,initialize --> appli,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,initialize --> bResourceColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,initialize --> bResourceOverloadColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,applyChanges --> askForApplyChanges,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,applyChanges --> getUIConfiguration,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,applyChanges --> setTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,applyChanges --> setResourceColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,applyChanges --> setResourceOverloadColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,initialize --> getUIConfiguration,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,initialize --> getTaskColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,initialize --> getResourceColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,initialize --> getResourceOverloadColor,net.sourceforge.ganttproject.gui.UIConfiguration,);
EndClass 144
StartClass 145
Class(net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,N,N,Public);
Attribute(cbAutomatic,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbDrag,javax.swing.JCheckBox,Public,N,N,);
Attribute(cbRedLine,javax.swing.JCheckBox,Public,N,N,);
Attribute(spLockDAV,javax.swing.JSpinner,Public,N,N,);
Attribute(tfTaskPrefix,javax.swing.JTextField,Public,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Method(getAutomatic,boolean,Public,N,N);
Method(getDragTime,boolean,Public,N,N);
Method(getRedLine,boolean,Public,N,N);
Method(getLockDAVMinutes,int,Public,N,N);
Method(getTaskNamePrefix,java.lang.String,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> getAutomatic,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> getRedLine,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> getDragTime,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> getLockDAVMinutes,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> getTaskNamePrefix,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> appli,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> cbAutomatic,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> cbDrag,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> cbRedLine,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> spLockDAV,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> tfTaskPrefix,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> appli,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> cbAutomatic,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> appli,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> cbRedLine,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> cbDrag,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> tfTaskPrefix,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> spLockDAV,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,getAutomatic --> cbAutomatic,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,getDragTime --> cbDrag,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,getRedLine --> cbRedLine,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,getLockDAVMinutes --> spLockDAV,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,getTaskNamePrefix --> tfTaskPrefix,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,getTaskNamePrefix --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> getAutomatic,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> getUIConfiguration,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> isRedlineOn,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> getDragTime,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> getLockDAVMinutes,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> getTrueTaskNamePrefix,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> askForApplyChanges,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> setAutomatic,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> setRedlineOn,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> setDragTime,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> setTaskNamePrefix,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> setLockDAVMinutes,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,applyChanges --> setLockDAVMinutes,net.sourceforge.ganttproject.document.HttpDocument,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> getAutomatic,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> getUIConfiguration,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> isRedlineOn,net.sourceforge.ganttproject.gui.UIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> getDragTime,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> getTaskNamePrefix,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,initialize --> getLockDAVMinutes,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ParametersSettingsPanel,getTaskNamePrefix --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 145
StartClass 146
Class(net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,N,N,Public);
Attribute(cbLanguage,javax.swing.JComboBox,Private,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Method(itemStateChanged,void,Public,N,N);
Method(changeLanguage,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
Parameter(itemStateChanged,java.awt.event.ItemEvent,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,applyChanges --> changeLanguage,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,<init> --> cbLanguage,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,<init> --> appli,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,<init> --> cbLanguage,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,initialize --> cbLanguage,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,changeLanguage --> cbLanguage,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,changeLanguage --> appli,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,initialize --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,initialize --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,itemStateChanged --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,changeLanguage --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,applyChanges --> askForApplyChanges,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,initialize --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,changeLanguage --> setLocale,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LanguageSettingsPanel,changeLanguage --> changeLanguage,net.sourceforge.ganttproject.GanttProject,);
EndClass 146
StartClass 147
Class(net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,N,N,Public);
Attribute(tfName,javax.swing.JTextField,Public,N,N,);
Attribute(tfOrganization,javax.swing.JTextField,Public,N,N,);
Attribute(tfWebLink,javax.swing.JTextField,Public,N,N,);
Attribute(taDescr,javax.swing.JTextArea,Public,N,N,);
Attribute(myProject,net.sourceforge.ganttproject.IGanttProject,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Method(getProjectName,java.lang.String,Public,N,N);
Method(getProjectOrganization,java.lang.String,Public,N,N);
Method(getWebLink,java.lang.String,Public,N,N);
Method(getProjectDescription,java.lang.String,Public,N,N);
Parameter(<init>,java.awt.Frame,);
Parameter(<init>,net.sourceforge.ganttproject.IGanttProject,);
Parameter(applyChanges,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Composition(net.sourceforge.ganttproject.IGanttProject);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> getProjectName,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> getProjectDescription,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> getProjectOrganization,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> getWebLink,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> tfWebLink,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> taDescr,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> myProject,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> tfName,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> tfOrganization,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> tfWebLink,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> taDescr,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> myProject,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> tfName,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> tfOrganization,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> tfWebLink,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> taDescr,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,initialize --> tfName,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,initialize --> myProject,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,initialize --> tfOrganization,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,initialize --> tfWebLink,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,initialize --> taDescr,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,getProjectName --> tfName,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,getProjectOrganization --> tfOrganization,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,getWebLink --> tfWebLink,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,getProjectDescription --> taDescr,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> <init>$3,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> getToolTip,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> getProjectName,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> getOrganization,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> getWebLink,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> getDescription,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> askForApplyChanges,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> setProjectName,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> setDescription,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> setOrganization,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,applyChanges --> setWebLink,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,initialize --> getProjectName,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,initialize --> getOrganization,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,initialize --> getWebLink,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,initialize --> getDescription,net.sourceforge.ganttproject.IGanttProject,);
EndClass 147
StartClass 148
Class(net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,N,N,Public);
Attribute(buttonXslFo,javax.swing.JButton,Public,N,N,);
Attribute(tfXslFo,javax.swing.JTextField,Public,N,N,);
Attribute(cbDefault,javax.swing.JCheckBox,Public,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Method(getXslFoFile,java.lang.String,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.GanttProject,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
Parameter(getXslFoFile,boolean,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Parameter(access$0,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,applyChanges --> getXslFoFile,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> tfXslFo,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> buttonXslFo,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> cbDefault,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> appli,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> buttonXslFo,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> tfXslFo,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> cbDefault,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,applyChanges --> appli,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,applyChanges --> cbDefault,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,initialize --> tfXslFo,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,initialize --> appli,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,getXslFoFile --> tfXslFo,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,actionPerformed --> cbDefault,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,access$0 --> appli,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,actionPerformed --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> <init>$3,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,applyChanges --> askForApplyChanges,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,applyChanges --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,applyChanges --> setXslFo,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,initialize --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,initialize --> getXslFo,net.sourceforge.ganttproject.GanttOptions,);
EndClass 148
StartClass 149
Class(net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,N,N,Public);
Attribute(myRolesModel,net.sourceforge.ganttproject.gui.RolesTableModel,Public,N,N,);
Attribute(rolesTable,javax.swing.JTable,Public,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Composition(net.sourceforge.ganttproject.gui.RolesTableModel);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> myRolesModel,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> rolesTable,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> appli,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> myRolesModel,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> rolesTable,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,applyChanges --> myRolesModel,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,applyChanges --> appli,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.RolesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,applyChanges --> getRoleManager,net.sourceforge.ganttproject.gui.RolesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,applyChanges --> hasChanges,net.sourceforge.ganttproject.gui.RolesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,applyChanges --> applyChanges,net.sourceforge.ganttproject.gui.RolesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.RolesSettingsPanel,applyChanges --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
EndClass 149
StartClass 150
Class(net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,N,N,Public);
Attribute(cbLnf,javax.swing.JComboBox,Private,N,N,);
Attribute(cbSmallIcon,javax.swing.JCheckBox,Private,N,N,);
Attribute(cbButtonType,javax.swing.JComboBox,Private,N,N,);
Attribute(cbShowStatus,javax.swing.JCheckBox,Private,N,N,);
Attribute(appli,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(itemStateChanged,void,Public,N,N);
Method(getLookAndFeel,net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo,Public,N,N);
Method(getShowStatusBar,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
Parameter(itemStateChanged,java.awt.event.ItemEvent,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> getShowStatusBar,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> getLookAndFeel,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> cbLnf,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> cbButtonType,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> appli,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> cbLnf,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> cbButtonType,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> cbSmallIcon,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> cbShowStatus,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> cbSmallIcon,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> appli,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> cbButtonType,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> cbShowStatus,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,getLookAndFeel --> cbLnf,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,getShowStatusBar --> cbShowStatus,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,initialize --> cbLnf,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,initialize --> appli,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,initialize --> cbSmallIcon,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,initialize --> cbButtonType,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,initialize --> cbShowStatus,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,itemStateChanged --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,initialize --> lookAndFeel,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,initialize --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> getGanttLookAndFeels,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> getInstalledLookAndFeels,net.sourceforge.ganttproject.gui.GanttLookAndFeels,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> getIconSize,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> getButtonShow,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> getShowStatusBar,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> askForApplyChanges,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> changeLookAndFeel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> setIconSize,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> setButtonShow,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> setShowStatusBar,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> getStatusBar,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,applyChanges --> applyButtonOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,initialize --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,initialize --> getIconSize,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,initialize --> getButtonShow,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.LnFSettingsPanel,initialize --> getShowStatusBar,net.sourceforge.ganttproject.GanttOptions,);
EndClass 150
StartClass 151
Class(net.sourceforge.ganttproject.document.HttpDocumentOutputStream,N,N,NA);
Attribute(webdavResource,org.apache.webdav.lib.WebdavResource,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(close,void,Public,N,N);
Parameter(<init>,org.apache.webdav.lib.WebdavResource,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocumentOutputStream,<init> --> webdavResource,net.sourceforge.ganttproject.document.HttpDocumentOutputStream,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.document.HttpDocumentOutputStream,close --> webdavResource,net.sourceforge.ganttproject.document.HttpDocumentOutputStream,READ);
EndClass 151
StartClass 152
Class(net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,N,N,Public);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,<init> --> addField,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 152
StartClass 153
Class(net.sourceforge.ganttproject.gui.about.AboutPanel,N,N,Public);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutPanel,applyChanges --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutPanel,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.about.AboutPanel$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutPanel,<init> --> getToolTip,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.about.AboutPanel$2,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 153
StartClass 154
Class(net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,N,N,Public);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,<init> --> addField,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 154
StartClass 155
Class(net.sourceforge.ganttproject.gui.about.AboutLicensePanel,N,N,Public);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLicensePanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLicensePanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLicensePanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLicensePanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLicensePanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLicensePanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 155
StartClass 156
Class(net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,N,N,Public);
Method(<init>,void,Public,N,N);
Method(applyChanges,boolean,Public,N,N);
Method(initialize,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(applyChanges,boolean,);
SuperClass(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Generalization(net.sourceforge.ganttproject.gui.options.GeneralOptionPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,<init> --> vb,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,<init> --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,<init> --> addField,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 156
StartClass 157
Class(net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,N,N,Public);
Attribute(data,java.util.ArrayList,Public,N,N,);
Attribute(colums,java.util.ArrayList,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.GanttResourcePanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getRowCount,int,Public,N,N);
Method(getColumnCount,int,Public,N,N);
Method(getValueAt,java.lang.Object,Public,N,N);
Method(getColumnName,java.lang.String,Public,N,N);
Method(changeLanguage,void,Public,N,N);
Method(addRow,void,Public,N,N);
Method(updateRow,void,Public,N,N);
Method(deleteRow,void,Public,N,N);
Method(moveUp,boolean,Public,N,N);
Method(moveDown,boolean,Public,N,N);
Method(deleteRows,void,Public,N,N);
Method(changePeople,void,Public,N,N);
Method(isCellEditable,boolean,Public,N,N);
Method(reset,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttResourcePanel,);
Parameter(<init>,net.sourceforge.ganttproject.language.GanttLanguage,);
Parameter(getValueAt,int,);
Parameter(getValueAt,int,);
Parameter(getColumnName,int,);
Parameter(changeLanguage,net.sourceforge.ganttproject.language.GanttLanguage,);
Parameter(addRow,net.sourceforge.ganttproject.resource.HumanResource,);
Parameter(updateRow,int,);
Parameter(updateRow,net.sourceforge.ganttproject.resource.HumanResource,);
Parameter(deleteRow,int,);
Parameter(moveUp,int,);
Parameter(moveDown,int,);
Parameter(deleteRows,net.sourceforge.ganttproject.resource.ProjectResource[],);
Parameter(changePeople,java.util.ArrayList,);
Parameter(isCellEditable,int,);
Parameter(isCellEditable,int,);
Composition(net.sourceforge.ganttproject.GanttResourcePanel);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,<init> --> changeLanguage,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,<init> --> this$0,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,<init> --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,<init> --> colums,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,getRowCount --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,getColumnCount --> colums,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,getValueAt --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,getValueAt --> colums,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,getColumnName --> colums,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,changeLanguage --> colums,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,changeLanguage --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,addRow --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,updateRow --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,deleteRow --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,moveUp --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,moveDown --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,deleteRows --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,changePeople --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,reset --> data,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,getValueAt --> getName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,getValueAt --> getMail,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,getValueAt --> getPhone,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,getValueAt --> getRole,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,getValueAt --> getName,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel$GanttTableModel,changeLanguage --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 157
StartClass 158
Class(net.sourceforge.ganttproject.resource.HumanResource,N,N,Public);
Attribute(phone,java.lang.String,Private,N,N,);
Attribute(email,java.lang.String,Private,N,N,);
Attribute(function,int,Private,N,N,);
Attribute(myRole,net.sourceforge.ganttproject.roles.Role,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(setMail,void,Public,N,N);
Method(getMail,java.lang.String,Public,N,N);
Method(setPhone,void,Public,N,N);
Method(getPhone,java.lang.String,Public,N,N);
Method(setRole,void,Public,N,N);
Method(getRole,net.sourceforge.ganttproject.roles.Role,Public,N,N);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,int,);
Parameter(setMail,java.lang.String,);
Parameter(setPhone,java.lang.String,);
Parameter(setRole,net.sourceforge.ganttproject.roles.Role,);
SuperClass(net.sourceforge.ganttproject.resource.ProjectResource);
Generalization(net.sourceforge.ganttproject.resource.ProjectResource);
Composition(net.sourceforge.ganttproject.roles.Role);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,<init> --> phone,net.sourceforge.ganttproject.resource.HumanResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,<init> --> email,net.sourceforge.ganttproject.resource.HumanResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,<init>$2 --> phone,net.sourceforge.ganttproject.resource.HumanResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,<init>$2 --> email,net.sourceforge.ganttproject.resource.HumanResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,setMail --> email,net.sourceforge.ganttproject.resource.HumanResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,getMail --> email,net.sourceforge.ganttproject.resource.HumanResource,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,setPhone --> phone,net.sourceforge.ganttproject.resource.HumanResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,getPhone --> phone,net.sourceforge.ganttproject.resource.HumanResource,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,setRole --> myRole,net.sourceforge.ganttproject.resource.HumanResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,getRole --> myRole,net.sourceforge.ganttproject.resource.HumanResource,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,<init> --> name,net.sourceforge.ganttproject.resource.ProjectResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,<init> --> id,net.sourceforge.ganttproject.resource.ProjectResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,<init>$2 --> name,net.sourceforge.ganttproject.resource.ProjectResource,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.resource.HumanResource,<init>$2 --> id,net.sourceforge.ganttproject.resource.ProjectResource,WRITE);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResource,<init> --> <init>,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.resource.HumanResource,<init>$2 --> <init>,net.sourceforge.ganttproject.resource.ProjectResource,);
EndClass 158
StartClass 159
Class(net.sourceforge.ganttproject.GanttResourcePanel$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttResourcePanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(mousePressed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttResourcePanel,);
Parameter(mousePressed,java.awt.event.MouseEvent,);
Composition(net.sourceforge.ganttproject.GanttResourcePanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$1,<init> --> this$0,net.sourceforge.ganttproject.GanttResourcePanel$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$1,mousePressed --> this$0,net.sourceforge.ganttproject.GanttResourcePanel$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$1,mousePressed --> table,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$1,mousePressed --> appli,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$1,mousePressed --> cx,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$1,mousePressed --> cy,net.sourceforge.ganttproject.GanttResourcePanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel$1,mousePressed --> createPopupMenu,net.sourceforge.ganttproject.GanttResourcePanel,);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel$1,mousePressed --> propertiesHuman,net.sourceforge.ganttproject.GanttResourcePanel,);
EndClass 159
StartClass 160
Class(net.sourceforge.ganttproject.GanttResourcePanel$GanttAdjustmentListener,N,N,Public);
Attribute(this$0,net.sourceforge.ganttproject.GanttResourcePanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(adjustmentValueChanged,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttResourcePanel,);
Parameter(adjustmentValueChanged,java.awt.event.AdjustmentEvent,);
Composition(net.sourceforge.ganttproject.GanttResourcePanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttAdjustmentListener,<init> --> this$0,net.sourceforge.ganttproject.GanttResourcePanel$GanttAdjustmentListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttAdjustmentListener,adjustmentValueChanged --> this$0,net.sourceforge.ganttproject.GanttResourcePanel$GanttAdjustmentListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttResourcePanel$GanttAdjustmentListener,adjustmentValueChanged --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttResourcePanel$GanttAdjustmentListener,adjustmentValueChanged --> setScrollBar,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
EndClass 160
StartClass 161
Class(net.sourceforge.ganttproject.gui.GanttDialogPerson,N,N,Public);
Attribute(change,boolean,Private,N,N,);
Attribute(person,net.sourceforge.ganttproject.resource.HumanResource,Private,N,N,);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(cancelButton,javax.swing.JButton,Private,N,N,);
Attribute(efficency,javax.swing.JLabel,Private,N,N,);
Attribute(email,javax.swing.JLabel,Private,N,N,);
Attribute(emailField,javax.swing.JTextField,Private,N,N,);
Attribute(emailInput1,javax.swing.JTextField,Private,N,N,);
Attribute(function,javax.swing.JLabel,Private,N,N,);
Attribute(functionList,javax.swing.JComboBox,Private,N,N,);
Attribute(jPanel1,javax.swing.JPanel,Private,N,N,);
Attribute(jPanel2,javax.swing.JPanel,Private,N,N,);
Attribute(jPanel3,javax.swing.JPanel,Private,N,N,);
Attribute(jPanel4,javax.swing.JPanel,Private,N,N,);
Attribute(name,javax.swing.JLabel,Private,N,N,);
Attribute(nameField,javax.swing.JTextField,Private,N,N,);
Attribute(okButton,javax.swing.JButton,Private,N,N,);
Attribute(persTitle,javax.swing.JLabel,Private,N,N,);
Attribute(phone,javax.swing.JLabel,Private,N,N,);
Attribute(phoneField,javax.swing.JTextField,Private,N,N,);
Attribute(phoneField1,javax.swing.JTextField,Private,N,N,);
Attribute(resourceData,javax.swing.JLabel,Private,N,N,);
Attribute(unitsPerDay,javax.swing.JLabel,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(result,boolean,Public,N,N);
Method(initComponents,void,Private,N,N);
Method(okButtonActionPerformed,void,Private,N,N);
Method(cancelButtonActionPerformed,void,Private,N,N);
Method(nameFieldActionPerformed,void,Private,N,N);
Method(emailFieldActionPerformed,void,Private,N,N);
Method(closeDialog,void,Private,N,N);
Method(access$0,void,Public,Y,N);
Method(access$1,void,Public,Y,N);
Method(access$2,void,Public,Y,N);
Method(access$3,void,Public,Y,N);
Method(access$4,void,Public,Y,N);
Parameter(<init>,java.awt.Frame,);
Parameter(<init>,net.sourceforge.ganttproject.language.GanttLanguage,);
Parameter(<init>,net.sourceforge.ganttproject.resource.HumanResource,);
Parameter(okButtonActionPerformed,java.awt.event.ActionEvent,);
Parameter(cancelButtonActionPerformed,java.awt.event.ActionEvent,);
Parameter(nameFieldActionPerformed,java.awt.event.ActionEvent,);
Parameter(emailFieldActionPerformed,java.awt.event.ActionEvent,);
Parameter(closeDialog,java.awt.event.WindowEvent,);
Parameter(access$0,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Parameter(access$0,java.awt.event.WindowEvent,);
Parameter(access$1,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Parameter(access$1,java.awt.event.ActionEvent,);
Parameter(access$2,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Parameter(access$2,java.awt.event.ActionEvent,);
Parameter(access$3,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Parameter(access$3,java.awt.event.ActionEvent,);
Parameter(access$4,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Parameter(access$4,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.resource.HumanResource);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,<init> --> initComponents,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,okButtonActionPerformed --> closeDialog,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,cancelButtonActionPerformed --> closeDialog,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,access$0 --> closeDialog,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,access$1 --> nameFieldActionPerformed,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,access$2 --> emailFieldActionPerformed,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,access$3 --> okButtonActionPerformed,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,access$4 --> cancelButtonActionPerformed,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,<init> --> language,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,<init> --> person,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,result --> change,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> person,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> functionList,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> nameField,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> phoneField,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> emailField,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> jPanel3,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> jPanel2,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> language,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> unitsPerDay,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> phoneField1,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> efficency,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> emailInput1,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> jPanel1,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> name,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> phone,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> email,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> function,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> okButton,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> cancelButton,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> jPanel4,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> jPanel3,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> jPanel2,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> unitsPerDay,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> phoneField1,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> efficency,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> emailInput1,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> resourceData,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> jPanel1,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> functionList,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> name,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> nameField,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> phone,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> phoneField,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> email,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> emailField,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> function,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> persTitle,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> okButton,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> cancelButton,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> jPanel4,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,okButtonActionPerformed --> person,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,okButtonActionPerformed --> nameField,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,okButtonActionPerformed --> emailField,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,okButtonActionPerformed --> phoneField,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,okButtonActionPerformed --> functionList,net.sourceforge.ganttproject.gui.GanttDialogPerson,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson,okButtonActionPerformed --> change,net.sourceforge.ganttproject.gui.GanttDialogPerson,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,<init> --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,<init> --> center,net.sourceforge.ganttproject.gui.DialogAligner,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> getInstance,net.sourceforge.ganttproject.roles.RoleManager$Access,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> getEnabledRoles,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> getRole,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> <init>,net.sourceforge.ganttproject.gui.GanttCellListRenderer,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> getName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> getPhone,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> getMail,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> <init>,net.sourceforge.ganttproject.gui.GanttDialogPerson$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> <init>,net.sourceforge.ganttproject.gui.GanttDialogPerson$2,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> <init>,net.sourceforge.ganttproject.gui.GanttDialogPerson$3,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> <init>,net.sourceforge.ganttproject.gui.GanttDialogPerson$4,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,initComponents --> <init>,net.sourceforge.ganttproject.gui.GanttDialogPerson$5,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,okButtonActionPerformed --> setName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,okButtonActionPerformed --> setMail,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,okButtonActionPerformed --> setPhone,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson,okButtonActionPerformed --> setRole,net.sourceforge.ganttproject.resource.HumanResource,);
EndClass 161
StartClass 162
Class(net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,N,N,NA);
Attribute(tree,javax.swing.JTree,Private,N,N,);
Attribute(textField,javax.swing.JTextField,Private,N,N,);
Attribute(myFocusListener,java.awt.event.FocusListener,Private,N,Y,);
Attribute(this$0,net.sourceforge.ganttproject.GanttTree,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getCellEditorValue,java.lang.Object,Public,N,N);
Method(access$0,javax.swing.JTextField,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,javax.swing.JTree,);
Parameter(<init>,javax.swing.JTextField,);
Parameter(access$0,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,);
Composition(net.sourceforge.ganttproject.GanttTree);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,<init> --> myFocusListener,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,<init> --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,<init> --> myFocusListener,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,<init> --> tree,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,<init> --> textField,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,getCellEditorValue --> tree,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,getCellEditorValue --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,getCellEditorValue --> textField,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,access$0 --> textField,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,<init> --> <init>,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor$1,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,getCellEditorValue --> access$1,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,getCellEditorValue --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,getCellEditorValue --> setName,net.sourceforge.ganttproject.task.MutableTask,);
EndClass 162
StartClass 163
Class(net.sourceforge.ganttproject.GanttTree$GanttAdjustmentListener,N,N,Public);
Attribute(this$0,net.sourceforge.ganttproject.GanttTree,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(adjustmentValueChanged,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(adjustmentValueChanged,java.awt.event.AdjustmentEvent,);
Composition(net.sourceforge.ganttproject.GanttTree);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttAdjustmentListener,<init> --> this$0,net.sourceforge.ganttproject.GanttTree$GanttAdjustmentListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttAdjustmentListener,adjustmentValueChanged --> this$0,net.sourceforge.ganttproject.GanttTree$GanttAdjustmentListener,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttAdjustmentListener,adjustmentValueChanged --> access$0,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttAdjustmentListener,adjustmentValueChanged --> setScrollBar,net.sourceforge.ganttproject.GanttGraphicArea,);
EndClass 163
StartClass 164
Class(net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,N,N,Public);
Attribute(this$0,net.sourceforge.ganttproject.GanttTree,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getTreeCellRendererComponent,java.awt.Component,Public,N,N);
Method(getToolTip,java.lang.String,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(getTreeCellRendererComponent,javax.swing.JTree,);
Parameter(getTreeCellRendererComponent,java.lang.Object,);
Parameter(getTreeCellRendererComponent,boolean,);
Parameter(getTreeCellRendererComponent,boolean,);
Parameter(getTreeCellRendererComponent,boolean,);
Parameter(getTreeCellRendererComponent,int,);
Parameter(getTreeCellRendererComponent,boolean,);
Parameter(getToolTip,net.sourceforge.ganttproject.task.Task,);
Parameter(getToolTip,int,);
Composition(net.sourceforge.ganttproject.GanttTree);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getTreeCellRendererComponent --> getToolTip,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,<init> --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getToolTip --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getTreeCellRendererComponent --> LOW,net.sourceforge.ganttproject.GanttTask,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getTreeCellRendererComponent --> NORMAL,net.sourceforge.ganttproject.GanttTask,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getTreeCellRendererComponent --> HIGHT,net.sourceforge.ganttproject.GanttTask,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getToolTip --> language,net.sourceforge.ganttproject.GanttTree,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getTreeCellRendererComponent --> isMilestone,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getTreeCellRendererComponent --> getPriority,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getToolTip --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getToolTip --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getToolTip --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getToolTip --> getPriority,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getToolTip --> getAssignments,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getToolTip --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getToolTip --> getName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellRenderer,getToolTip --> getNotes,net.sourceforge.ganttproject.task.Task,);
EndClass 164
StartClass 165
Class(net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,N,N,Public);
Attribute(this$0,net.sourceforge.ganttproject.GanttTree,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(treeExpanded,void,Public,N,N);
Method(treeCollapsed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(treeExpanded,javax.swing.event.TreeExpansionEvent,);
Parameter(treeCollapsed,javax.swing.event.TreeExpansionEvent,);
Composition(net.sourceforge.ganttproject.GanttTree);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,<init> --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,treeExpanded --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,treeCollapsed --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,treeExpanded --> access$0,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,treeExpanded --> setExpand,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,treeExpanded --> access$1,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,treeExpanded --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,treeCollapsed --> access$0,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,treeCollapsed --> setExpand,net.sourceforge.ganttproject.task.MutableTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,treeCollapsed --> access$1,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeExpansionListener,treeCollapsed --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
EndClass 165
StartClass 166
Class(net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,N,N,NA);
Attribute(lastPath,javax.swing.tree.TreePath,Private,N,N,);
Attribute(cueLineRect,java.awt.geom.Rectangle2D,Private,N,N,);
Attribute(ghostImageRect,java.awt.geom.Rectangle2D,Private,N,N,);
Attribute(cueLineColor,java.awt.Color,Private,N,N,);
Attribute(lastEventPoint,java.awt.Point,Private,N,N,);
Attribute(hoverTimer,javax.swing.Timer,Private,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.GanttTree,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(dragEnter,void,Public,N,N);
Method(dragOver,void,Public,N,N);
Method(dropActionChanged,void,Public,N,N);
Method(drop,void,Public,N,N);
Method(dragExit,void,Public,N,N);
Method(isDragAcceptable,boolean,Public,N,N);
Method(isDropAcceptable,boolean,Public,N,N);
Method(access$0,javax.swing.tree.TreePath,Public,Y,N);
Method(access$1,net.sourceforge.ganttproject.GanttTree,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(dragEnter,java.awt.dnd.DropTargetDragEvent,);
Parameter(dragOver,java.awt.dnd.DropTargetDragEvent,);
Parameter(dropActionChanged,java.awt.dnd.DropTargetDragEvent,);
Parameter(drop,java.awt.dnd.DropTargetDropEvent,);
Parameter(dragExit,java.awt.dnd.DropTargetEvent,);
Parameter(isDragAcceptable,java.awt.dnd.DropTargetDragEvent,);
Parameter(isDropAcceptable,java.awt.dnd.DropTargetDropEvent,);
Parameter(access$0,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,);
Parameter(access$1,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,);
Composition(net.sourceforge.ganttproject.GanttTree);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragEnter --> isDragAcceptable,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> isDragAcceptable,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dropActionChanged --> isDragAcceptable,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,drop --> isDropAcceptable,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,<init> --> hoverTimer,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,<init> --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,<init> --> lastPath,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,<init> --> cueLineRect,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,<init> --> ghostImageRect,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,<init> --> lastEventPoint,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,<init> --> cueLineColor,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,<init> --> hoverTimer,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragEnter --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> lastEventPoint,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> ghostImageRect,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> cueLineRect,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> lastPath,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> hoverTimer,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> cueLineColor,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> lastEventPoint,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> lastPath,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> ghostImageRect,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,drop --> hoverTimer,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,drop --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragExit --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragExit --> ghostImageRect,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,isDragAcceptable --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,isDropAcceptable --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,access$0 --> lastPath,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,access$1 --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,isDragAcceptable --> TREEPATH_FLAVOR,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,isDropAcceptable --> TREEPATH_FLAVOR,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,<init> --> <init>,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener$1,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragEnter --> access$3,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragEnter --> access$4,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> access$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> access$5,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragOver --> access$3,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,drop --> access$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,drop --> access$6,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,drop --> refreshAllFather,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,drop --> expandRefresh,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,drop --> forwardScheduling,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,drop --> access$0,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,drop --> access$1,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,drop --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,dragExit --> access$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,isDragAcceptable --> access$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,isDragAcceptable --> access$7,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,isDragAcceptable --> isMilestone,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,isDropAcceptable --> access$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,isDropAcceptable --> access$7,net.sourceforge.ganttproject.GanttTree,);
EndClass 166
StartClass 167
Class(net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,N,N,Public);
Attribute(this$0,net.sourceforge.ganttproject.GanttTree,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(treeNodesChanged,void,Public,N,N);
Method(treeNodesInserted,void,Public,N,N);
Method(treeNodesRemoved,void,Public,N,N);
Method(treeStructureChanged,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(treeNodesChanged,javax.swing.event.TreeModelEvent,);
Parameter(treeNodesInserted,javax.swing.event.TreeModelEvent,);
Parameter(treeNodesRemoved,javax.swing.event.TreeModelEvent,);
Parameter(treeStructureChanged,javax.swing.event.TreeModelEvent,);
Composition(net.sourceforge.ganttproject.GanttTree);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,<init> --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,treeNodesChanged --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,treeNodesInserted --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,treeNodesRemoved --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,treeStructureChanged --> this$0,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,treeNodesChanged --> access$0,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,treeNodesInserted --> access$0,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,treeNodesRemoved --> access$0,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeModelListener,treeStructureChanged --> access$0,net.sourceforge.ganttproject.GanttTree,);
EndClass 167
StartClass 168
Class(net.sourceforge.ganttproject.GanttTree$AutoscrollingTree,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttTree,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getAutoscrollInsets,java.awt.Insets,Public,N,N);
Method(autoscroll,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,javax.swing.tree.DefaultTreeModel,);
Parameter(autoscroll,java.awt.Point,);
Composition(net.sourceforge.ganttproject.GanttTree);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$AutoscrollingTree,<init> --> this$0,net.sourceforge.ganttproject.GanttTree$AutoscrollingTree,WRITE);
EndClass 168
StartClass 169
Class(net.sourceforge.ganttproject.GanttTree$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttTree,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(mouseClicked,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(mouseClicked,java.awt.event.MouseEvent,);
Composition(net.sourceforge.ganttproject.GanttTree);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$1,<init> --> this$0,net.sourceforge.ganttproject.GanttTree$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$1,mouseClicked --> this$0,net.sourceforge.ganttproject.GanttTree$1,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$1,mouseClicked --> access$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$1,mouseClicked --> createPopupMenu,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$1,mouseClicked --> access$1,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$1,mouseClicked --> propertiesTask,net.sourceforge.ganttproject.GanttProject,);
EndClass 169
StartClass 170
Class(net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,N,N,NA);
Attribute(TREEPATH_FLAVOR,java.awt.datatransfer.DataFlavor,Public,Y,Y,);
Attribute(_path,javax.swing.tree.TreePath,Private,N,N,);
Attribute(_flavors,java.awt.datatransfer.DataFlavor[],Private,N,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(getTransferDataFlavors,java.awt.datatransfer.DataFlavor[],Public,N,N);
Method(isDataFlavorSupported,boolean,Public,N,N);
Method(getTransferData,java.lang.Object,Public,N,N);
Parameter(<init>,javax.swing.tree.TreePath,);
Parameter(isDataFlavorSupported,java.awt.datatransfer.DataFlavor,);
Parameter(getTransferData,java.awt.datatransfer.DataFlavor,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,<clinit> --> TREEPATH_FLAVOR,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,<init> --> TREEPATH_FLAVOR,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,<init> --> _flavors,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,<init> --> _path,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,getTransferDataFlavors --> _flavors,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,isDataFlavorSupported --> _flavors,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,getTransferData --> TREEPATH_FLAVOR,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,getTransferData --> _path,net.sourceforge.ganttproject.GanttTree$GanttTransferableTreePath,READ);
EndClass 170
StartClass 171
Class(net.sourceforge.ganttproject.action.RolloverAction,Y,Y,Public);
Method(getIconOnMouseOver,javax.swing.Icon,Public,N,Y);
EndClass 171
StartClass 172
Class(net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm,Y,Y,Public);
Method(run,net.sourceforge.ganttproject.task.Task[],Public,N,Y);
Parameter(run,net.sourceforge.ganttproject.task.Task,);
EndClass 172
StartClass 173
Class(net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.ResourceLoadGraphicArea,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(mouseWheelMoved,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Parameter(mouseWheelMoved,java.awt.event.MouseWheelEvent,);
Composition(net.sourceforge.ganttproject.ResourceLoadGraphicArea);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,<init> --> this$0,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> this$0,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> bZoomIn,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> bZoomOut,net.sourceforge.ganttproject.GanttProject,READ);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> zoomMore,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> access$0,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> getArea,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> zoomMore,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> zoomLess,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> zoomLess,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> access$1,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> access$2,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> setZoom,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> zoomToBegin,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$1,mouseWheelMoved --> setEnabled,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
EndClass 173
StartClass 174
Class(net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.ResourceLoadGraphicArea,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(mouseClicked,void,Public,N,N);
Method(mouseEntered,void,Public,N,N);
Method(mouseExited,void,Public,N,N);
Method(mousePressed,void,Public,N,N);
Method(mouseReleased,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Parameter(mouseClicked,java.awt.event.MouseEvent,);
Parameter(mouseEntered,java.awt.event.MouseEvent,);
Parameter(mouseExited,java.awt.event.MouseEvent,);
Parameter(mousePressed,java.awt.event.MouseEvent,);
Parameter(mouseReleased,java.awt.event.MouseEvent,);
Composition(net.sourceforge.ganttproject.ResourceLoadGraphicArea);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,<init> --> this$0,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mousePressed --> this$0,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mouseReleased --> this$0,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mouseReleased --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mouseReleased --> date,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mousePressed --> access$3,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mousePressed --> access$4,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mouseReleased --> access$5,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mouseReleased --> access$1,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mouseReleased --> go,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mouseReleased --> access$0,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mouseReleased --> getArea,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.ResourceLoadGraphicArea$2,mouseReleased --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
EndClass 174
StartClass 175
Class(net.sourceforge.ganttproject.export.ExportException,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.Throwable,);
Parameter(<init>$2,java.lang.String,);
EndClass 175
StartClass 176
Class(net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,N,N,Public);
Attribute(isEnabled,boolean,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(setEnabled,void,Public,N,N);
Method(isEnabled,boolean,Protected,N,N);
Parameter(setEnabled,boolean,);
SubClass(net.sourceforge.ganttproject.task.TaskManagerImpl$3);
SubClass(net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm);
SubClass(net.sourceforge.ganttproject.task.TaskManagerImpl$4);
SubClass(net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,<init> --> isEnabled,net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,setEnabled --> isEnabled,net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,isEnabled --> isEnabled,net.sourceforge.ganttproject.task.algorithm.AlgorithmBase,READ);
EndClass 176
StartClass 177
Class(net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection,Y,Y,Public);
Method(clear,void,Public,N,Y);
Method(createDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,Public,N,Y);
Method(deleteDependency,void,Public,N,Y);
Parameter(createDependency,net.sourceforge.ganttproject.task.Task,);
Parameter(createDependency,net.sourceforge.ganttproject.task.Task,);
Parameter(deleteDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
EndClass 177
StartClass 178
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionMutator,Y,Y,Public);
Method(commit,void,Public,N,Y);
Realization(net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection);
EndClass 178
StartClass 179
Class(net.sourceforge.ganttproject.util.ColorConvertion,N,N,Public);
Method(<init>,void,Public,N,N);
Method(getColor,java.lang.String,Public,Y,N);
Method(determineColor,java.awt.Color,Public,Y,N);
Parameter(getColor,java.awt.Color,);
Parameter(determineColor,java.lang.String,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.util.ColorConvertion,determineColor --> taskDefaultColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
EndClass 179
StartClass 180
Class(net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttOptions,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(startElement,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttOptions,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,java.lang.String,);
Parameter(startElement,org.xml.sax.Attributes,);
Composition(net.sourceforge.ganttproject.GanttOptions);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,<init> --> this$0,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> this$0,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bFixedSize,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> sSeparatedChar,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> sSeparatedTextChar,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportTaskID,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportTaskName,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportTaskStartDate,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportTaskEndDate,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportTaskPercent,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportTaskDuration,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportTaskWebLink,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportTaskResources,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportTaskNotes,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportResourceID,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportResourceName,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportResourceMail,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportResourcePhone,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> bExportResourceRole,net.sourceforge.ganttproject.io.CSVOptions,WRITE);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$0,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> setLocale,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$1,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$2,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$3,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$4,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$5,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$6,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$7,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> createDocument,net.sourceforge.ganttproject.document.DocumentCreator,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> append,net.sourceforge.ganttproject.document.DocumentsMRU,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$8,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$9,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$10,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$11,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$12,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$13,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$14,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$15,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$16,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$17,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$18,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$19,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$20,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$21,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$22,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$23,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$24,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> determineColor,net.sourceforge.ganttproject.util.ColorConvertion,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> setDefaultTaskColor,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> setResourceColor,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> setResourceOverloadColor,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$25,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$26,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttOptions$GanttXMLOptionsParser,startElement --> access$27,net.sourceforge.ganttproject.GanttOptions,);
EndClass 180
StartClass 181
Class(net.sourceforge.ganttproject.GanttSplash$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttSplash,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(paint,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttSplash,);
Parameter(<init>,javax.swing.Icon,);
Parameter(paint,java.awt.Graphics,);
Composition(net.sourceforge.ganttproject.GanttSplash);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttSplash$1,<init> --> this$0,net.sourceforge.ganttproject.GanttSplash$1,WRITE);
EndClass 181
StartClass 182
Class(net.sourceforge.ganttproject.gui.TipsDialog$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.TipsDialog,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.TipsDialog,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.TipsDialog);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$1,<init> --> this$0,net.sourceforge.ganttproject.gui.TipsDialog$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.TipsDialog$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$1,actionPerformed --> appli,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$1,actionPerformed --> cbBox0,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog$1,actionPerformed --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog$1,actionPerformed --> setOpenTips,net.sourceforge.ganttproject.GanttOptions,);
EndClass 182
StartClass 183
Class(net.sourceforge.ganttproject.gui.TipsDialog$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.TipsDialog,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.TipsDialog,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.TipsDialog);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$2,<init> --> this$0,net.sourceforge.ganttproject.gui.TipsDialog$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$2,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.TipsDialog$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$2,actionPerformed --> index,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$2,actionPerformed --> tipsText,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$2,actionPerformed --> index,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog$2,actionPerformed --> changeText,net.sourceforge.ganttproject.gui.TipsDialog,);
EndClass 183
StartClass 184
Class(net.sourceforge.ganttproject.gui.TipsDialog$3,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.TipsDialog,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.TipsDialog,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.TipsDialog);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$3,<init> --> this$0,net.sourceforge.ganttproject.gui.TipsDialog$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$3,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.TipsDialog$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$3,actionPerformed --> index,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$3,actionPerformed --> tipsText,net.sourceforge.ganttproject.gui.TipsDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TipsDialog$3,actionPerformed --> index,net.sourceforge.ganttproject.gui.TipsDialog,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.TipsDialog$3,actionPerformed --> changeText,net.sourceforge.ganttproject.gui.TipsDialog,);
EndClass 184
StartClass 185
Class(net.sourceforge.ganttproject.gui.GanttURLChooser$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttURLChooser,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttURLChooser,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttURLChooser);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser$2,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttURLChooser$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser$2,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttURLChooser$2,READ);
EndClass 185
StartClass 186
Class(net.sourceforge.ganttproject.gui.GanttURLChooser$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttURLChooser,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttURLChooser,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttURLChooser);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser$1,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttURLChooser$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttURLChooser$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser$1,actionPerformed --> fileurl,net.sourceforge.ganttproject.gui.GanttURLChooser,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser$1,actionPerformed --> userName,net.sourceforge.ganttproject.gui.GanttURLChooser,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser$1,actionPerformed --> password,net.sourceforge.ganttproject.gui.GanttURLChooser,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttURLChooser$1,actionPerformed --> change,net.sourceforge.ganttproject.gui.GanttURLChooser,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttURLChooser$1,actionPerformed --> access$0,net.sourceforge.ganttproject.gui.GanttURLChooser,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttURLChooser$1,actionPerformed --> access$1,net.sourceforge.ganttproject.gui.GanttURLChooser,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttURLChooser$1,actionPerformed --> access$2,net.sourceforge.ganttproject.gui.GanttURLChooser,);
EndClass 186
StartClass 187
Class(net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,N,N,NA);
Attribute(sub_type,int,Public,N,N,);
Attribute(color,int,Public,N,N,);
Attribute(depth,int,Public,N,N,);
Attribute(pen_style,int,Public,N,N,);
Attribute(font,int,Public,N,N,);
Attribute(font_size,float,Public,N,N,);
Attribute(angle,float,Public,N,N,);
Attribute(font_flags,int,Public,N,N,);
Attribute(height,float,Public,N,N,);
Attribute(length,float,Public,N,N,);
Attribute(x,int,Public,N,N,);
Attribute(y,int,Public,N,N,);
Attribute(str,java.lang.String,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.io.GanttXFIGSaver,Public,N,Y,);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Parameter(<init>$2,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Parameter(<init>$2,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,);
Composition(net.sourceforge.ganttproject.io.GanttXFIGSaver);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,<init>$2 --> <init>,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,<init> --> this$0,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,<init> --> str,net.sourceforge.ganttproject.io.GanttXFIGSaver$TextObject,WRITE);
EndClass 187
StartClass 188
Class(net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,N,N,NA);
Attribute(code,int,Public,N,N,);
Attribute(npoints,int,Public,N,N,);
Attribute(sub_type,int,Public,N,N,);
Attribute(fill_color,int,Public,N,N,);
Attribute(line_style,int,Public,N,N,);
Attribute(thickness,int,Public,N,N,);
Attribute(pen_color,int,Public,N,N,);
Attribute(depth,int,Public,N,N,);
Attribute(pen_style,int,Public,N,N,);
Attribute(area_fill,int,Public,N,N,);
Attribute(style_val,int,Public,N,N,);
Attribute(join_style,int,Public,N,N,);
Attribute(cap_style,int,Public,N,N,);
Attribute(radius,int,Public,N,N,);
Attribute(forward_arrow,int,Public,N,N,);
Attribute(backward_arrow,int,Public,N,N,);
Attribute(points,float[],Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.io.GanttXFIGSaver,Public,N,Y,);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Parameter(<init>$2,net.sourceforge.ganttproject.io.GanttXFIGSaver,);
Parameter(<init>$2,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,);
Composition(net.sourceforge.ganttproject.io.GanttXFIGSaver);
Call(METHOD,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init>$2 --> <init>,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> this$0,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> code,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> fill_color,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> line_style,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> thickness,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> pen_color,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> pen_style,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> area_fill,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> style_val,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> join_style,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> cap_style,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> radius,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> forward_arrow,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,<init> --> backward_arrow,net.sourceforge.ganttproject.io.GanttXFIGSaver$BoxObject,WRITE);
EndClass 188
StartClass 189
Class(net.sourceforge.ganttproject.export.PDFExportData,N,N,Public);
Attribute(myStylesheet,java.lang.String,Public,N,Y,);
Method(<init>,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(<init>,java.io.File,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Parameter(<init>,net.sourceforge.ganttproject.export.GanttChartExportProcessor,);
Parameter(<init>,net.sourceforge.ganttproject.export.ResourceChartExportProcessor,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,java.lang.String,);
SuperClass(net.sourceforge.ganttproject.export.ProjectExportData);
Generalization(net.sourceforge.ganttproject.export.ProjectExportData);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.PDFExportData,<init> --> myStylesheet,net.sourceforge.ganttproject.export.PDFExportData,WRITE);
Call(METHOD,net.sourceforge.ganttproject.export.PDFExportData,<init> --> <init>,net.sourceforge.ganttproject.export.ProjectExportData,);
EndClass 189
StartClass 190
Class(net.sourceforge.ganttproject.export.ProjectExportData,N,N,Public);
Attribute(myExportSettings,net.sourceforge.ganttproject.GanttExportSettings,Public,N,Y,);
Attribute(myOutputFile,java.io.File,Public,N,Y,);
Attribute(myProjectName,java.lang.String,Public,N,Y,);
Attribute(myProjectDescription,java.lang.String,Public,N,Y,);
Attribute(myOrganization,java.lang.String,Public,N,Y,);
Attribute(myResourceManager,net.sourceforge.ganttproject.resource.HumanResourceManager,Public,N,Y,);
Attribute(myTaskHierarchyFacade,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Public,N,Y,);
Attribute(myGanttChartExportProcessor,net.sourceforge.ganttproject.export.GanttChartExportProcessor,Public,N,Y,);
Attribute(myResourceChartExportProcessor,net.sourceforge.ganttproject.export.ResourceChartExportProcessor,Public,N,Y,);
Attribute(myGanttTree,net.sourceforge.ganttproject.GanttTree,Public,N,Y,);
Method(<init>,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(<init>,java.io.File,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Parameter(<init>,net.sourceforge.ganttproject.export.GanttChartExportProcessor,);
Parameter(<init>,net.sourceforge.ganttproject.export.ResourceChartExportProcessor,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
SubClass(net.sourceforge.ganttproject.export.PDFExportData);
Composition(net.sourceforge.ganttproject.GanttExportSettings);
Composition(net.sourceforge.ganttproject.resource.HumanResourceManager);
Composition(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade);
Composition(net.sourceforge.ganttproject.export.GanttChartExportProcessor);
Composition(net.sourceforge.ganttproject.export.ResourceChartExportProcessor);
Composition(net.sourceforge.ganttproject.GanttTree);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportData,<init> --> myExportSettings,net.sourceforge.ganttproject.export.ProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportData,<init> --> myOutputFile,net.sourceforge.ganttproject.export.ProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportData,<init> --> myProjectName,net.sourceforge.ganttproject.export.ProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportData,<init> --> myProjectDescription,net.sourceforge.ganttproject.export.ProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportData,<init> --> myOrganization,net.sourceforge.ganttproject.export.ProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportData,<init> --> myResourceManager,net.sourceforge.ganttproject.export.ProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportData,<init> --> myTaskHierarchyFacade,net.sourceforge.ganttproject.export.ProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportData,<init> --> myGanttChartExportProcessor,net.sourceforge.ganttproject.export.ProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportData,<init> --> myResourceChartExportProcessor,net.sourceforge.ganttproject.export.ProjectExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ProjectExportData,<init> --> myGanttTree,net.sourceforge.ganttproject.export.ProjectExportData,WRITE);
EndClass 190
StartClass 191
Class(net.sourceforge.ganttproject.export.FontRecord,N,N,Public);
Attribute(myLocation,java.net.URI,Private,N,N,);
Attribute(myMetricsLocation,java.net.URI,Private,N,N,);
Attribute(myTriplets,java.util.ArrayList,Private,N,N,);
Attribute(myTTFFile,net.sourceforge.ganttproject.export.TTFFileExt,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(addTriplet,void,Public,N,N);
Method(getFontLocation,java.net.URI,Public,N,N);
Method(getMetricsLocation,java.net.URI,Public,N,N);
Method(getFontTriplets,net.sourceforge.ganttproject.export.FontTriplet[],Public,N,N);
Method(getTTFFile,net.sourceforge.ganttproject.export.TTFFileExt,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,java.io.File,);
Parameter(<init>,net.sourceforge.ganttproject.export.FontMetricsStorage,);
Parameter(<init>$2,java.net.URI,);
Parameter(<init>$2,java.net.URI,);
Parameter(addTriplet,net.sourceforge.ganttproject.export.FontTriplet,);
Composition(net.sourceforge.ganttproject.export.TTFFileExt);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,<init> --> myTTFFile,net.sourceforge.ganttproject.export.FontRecord,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,<init> --> myTriplets,net.sourceforge.ganttproject.export.FontRecord,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,<init> --> myTTFFile,net.sourceforge.ganttproject.export.FontRecord,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,<init> --> myLocation,net.sourceforge.ganttproject.export.FontRecord,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,<init> --> myMetricsLocation,net.sourceforge.ganttproject.export.FontRecord,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,<init>$2 --> myTriplets,net.sourceforge.ganttproject.export.FontRecord,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,<init>$2 --> myLocation,net.sourceforge.ganttproject.export.FontRecord,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,<init>$2 --> myMetricsLocation,net.sourceforge.ganttproject.export.FontRecord,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,addTriplet --> myTriplets,net.sourceforge.ganttproject.export.FontRecord,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,getFontLocation --> myLocation,net.sourceforge.ganttproject.export.FontRecord,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,getMetricsLocation --> myMetricsLocation,net.sourceforge.ganttproject.export.FontRecord,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,getFontTriplets --> myTriplets,net.sourceforge.ganttproject.export.FontRecord,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,getTTFFile --> myTTFFile,net.sourceforge.ganttproject.export.FontRecord,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,toString --> myLocation,net.sourceforge.ganttproject.export.FontRecord,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontRecord,toString --> myMetricsLocation,net.sourceforge.ganttproject.export.FontRecord,READ);
Call(METHOD,net.sourceforge.ganttproject.export.FontRecord,<init> --> <init>,net.sourceforge.ganttproject.export.TTFFileExt,);
Call(METHOD,net.sourceforge.ganttproject.export.FontRecord,<init> --> getFontMetricsURI,net.sourceforge.ganttproject.export.FontMetricsStorage,);
EndClass 191
StartClass 192
Class(net.sourceforge.ganttproject.export.FontTriplet,N,N,Public);
Attribute(myName,java.lang.String,Private,N,N,);
Attribute(isItalic,boolean,Private,N,N,);
Attribute(isBold,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(isItalic,boolean,Public,N,N);
Method(isBold,boolean,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,boolean,);
Parameter(<init>,boolean,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontTriplet,<init> --> myName,net.sourceforge.ganttproject.export.FontTriplet,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontTriplet,<init> --> isItalic,net.sourceforge.ganttproject.export.FontTriplet,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontTriplet,<init> --> isBold,net.sourceforge.ganttproject.export.FontTriplet,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontTriplet,getName --> myName,net.sourceforge.ganttproject.export.FontTriplet,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontTriplet,isItalic --> isItalic,net.sourceforge.ganttproject.export.FontTriplet,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.FontTriplet,isBold --> isBold,net.sourceforge.ganttproject.export.FontTriplet,READ);
EndClass 192
StartClass 193
Class(net.sourceforge.ganttproject.export.GanttChartExportData,N,N,Public);
Attribute(myOutputFile,java.io.File,Public,N,Y,);
Attribute(myExportSettings,net.sourceforge.ganttproject.GanttExportSettings,Public,N,Y,);
Attribute(myImageFormat,java.lang.String,Public,N,Y,);
Method(<init>,void,Public,N,N);
Parameter(<init>,java.io.File,);
Parameter(<init>,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(<init>,java.lang.String,);
Composition(net.sourceforge.ganttproject.GanttExportSettings);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.GanttChartExportData,<init> --> myOutputFile,net.sourceforge.ganttproject.export.GanttChartExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.GanttChartExportData,<init> --> myExportSettings,net.sourceforge.ganttproject.export.GanttChartExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.GanttChartExportData,<init> --> myImageFormat,net.sourceforge.ganttproject.export.GanttChartExportData,WRITE);
EndClass 193
StartClass 194
Class(net.sourceforge.ganttproject.export.ResourceChartExportProcessor,N,N,Public);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(run,net.sourceforge.ganttproject.export.ResourceChartExportData,);
EndClass 194
StartClass 195
Class(net.sourceforge.ganttproject.export.GanttChartExportProcessor,N,N,Public);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(run,net.sourceforge.ganttproject.export.GanttChartExportData,);
EndClass 195
StartClass 196
Class(net.sourceforge.ganttproject.io.GanttPDFExport,N,N,Public);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,Y,N,);
Attribute(ourTransformerFactory,javax.xml.transform.sax.SAXTransformerFactory,Private,Y,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(getHexaColor,java.lang.String,Private,Y,N);
Method(writeTasks,java.lang.String,Private,Y,N);
Method(writeResources,java.lang.String,Private,Y,N);
Method(save,void,Public,Y,N);
Method(correct,java.lang.String,Public,Y,N);
Method(convert2PDF,void,Public,Y,N);
Method(createOptions,org.apache.fop.apps.Options,Private,Y,N);
Method(createConfiguration,void,Private,Y,N);
Method(writeTriplets,void,Private,Y,N);
Method(getTransformerFactory,javax.xml.transform.sax.SAXTransformerFactory,Private,Y,N);
Parameter(getHexaColor,java.awt.Color,);
Parameter(writeTasks,net.sourceforge.ganttproject.GanttTree,);
Parameter(writeResources,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Parameter(save,java.io.File,);
Parameter(save,net.sourceforge.ganttproject.IGanttProject,);
Parameter(save,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Parameter(save,net.sourceforge.ganttproject.GanttTree,);
Parameter(save,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(save,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Parameter(save,net.sourceforge.ganttproject.GanttExportSettings,);
Parameter(save,java.lang.String,);
Parameter(correct,java.lang.String,);
Parameter(convert2PDF,java.lang.StringBuffer,);
Parameter(convert2PDF,java.io.File,);
Parameter(convert2PDF,java.lang.String,);
Parameter(createConfiguration,javax.xml.transform.sax.TransformerHandler,);
Parameter(createConfiguration,net.sourceforge.ganttproject.export.FontRecord[],);
Parameter(writeTriplets,javax.xml.transform.sax.TransformerHandler,);
Parameter(writeTriplets,net.sourceforge.ganttproject.export.FontTriplet[],);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> correct,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getHexaColor,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeResources --> correct,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> correct,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> writeTasks,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> writeResources,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> convert2PDF,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,convert2PDF --> createOptions,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,createOptions --> getTransformerFactory,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,createOptions --> createConfiguration,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,createConfiguration --> writeTriplets,net.sourceforge.ganttproject.io.GanttPDFExport,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttPDFExport,<clinit> --> language,net.sourceforge.ganttproject.io.GanttPDFExport,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttPDFExport,save --> language,net.sourceforge.ganttproject.io.GanttPDFExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttPDFExport,getTransformerFactory --> ourTransformerFactory,net.sourceforge.ganttproject.io.GanttPDFExport,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.io.GanttPDFExport,getTransformerFactory --> ourTransformerFactory,net.sourceforge.ganttproject.io.GanttPDFExport,WRITE);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,<clinit> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getAllTasks,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getManager,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getRootTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> isMilestone,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getCompletionPercentage,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getAssignments,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getName,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getNotes,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTasks --> getColor,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeResources --> getResources,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeResources --> toString,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeResources --> getRole,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeResources --> getName,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeResources --> getMail,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeResources --> getPhone,net.sourceforge.ganttproject.resource.HumanResource,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> export,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> export,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> getProjectName,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> getOrganization,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> getWebLink,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,save --> getDescription,net.sourceforge.ganttproject.IGanttProject,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,createOptions --> <init>,net.sourceforge.ganttproject.export.JDKFontLocator,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,createOptions --> getFontRecords,net.sourceforge.ganttproject.export.JDKFontLocator,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,createConfiguration --> getMetricsLocation,net.sourceforge.ganttproject.export.FontRecord,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,createConfiguration --> getFontLocation,net.sourceforge.ganttproject.export.FontRecord,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,createConfiguration --> getFontTriplets,net.sourceforge.ganttproject.export.FontRecord,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTriplets --> getName,net.sourceforge.ganttproject.export.FontTriplet,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTriplets --> isItalic,net.sourceforge.ganttproject.export.FontTriplet,);
Call(METHOD,net.sourceforge.ganttproject.io.GanttPDFExport,writeTriplets --> isBold,net.sourceforge.ganttproject.export.FontTriplet,);
EndClass 196
StartClass 197
Class(net.sourceforge.ganttproject.export.ResourceChartExportData,N,N,Public);
Attribute(myOutputFile,java.io.File,Public,N,Y,);
Attribute(myImageFormat,java.lang.String,Public,N,Y,);
Method(<init>,void,Public,N,N);
Parameter(<init>,java.io.File,);
Parameter(<init>,java.lang.String,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ResourceChartExportData,<init> --> myOutputFile,net.sourceforge.ganttproject.export.ResourceChartExportData,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.ResourceChartExportData,<init> --> myImageFormat,net.sourceforge.ganttproject.export.ResourceChartExportData,WRITE);
EndClass 197
StartClass 198
Class(net.sourceforge.ganttproject.roles.RoleManagerImpl,N,N,Public);
Attribute(defaultRoles,java.lang.String[],Public,N,N,);
Attribute(myProjectRoleSet,net.sourceforge.ganttproject.roles.RoleSetImpl,Private,N,N,);
Attribute(myRoleSets,java.util.ArrayList,Private,N,N,);
Attribute(SOFTWARE_DEVELOPMENT_ROLE_SET,net.sourceforge.ganttproject.roles.RoleSetImpl,Public,Y,Y,);
Attribute(DEFAULT_ROLE_SET,net.sourceforge.ganttproject.roles.RoleSetImpl,Public,Y,Y,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(getProjectLevelRoles,net.sourceforge.ganttproject.roles.Role[],Public,N,N);
Method(add,void,Public,N,N);
Method(getRoleSets,net.sourceforge.ganttproject.roles.RoleSet[],Public,N,N);
Method(createRoleSet,net.sourceforge.ganttproject.roles.RoleSet,Public,N,N);
Method(getProjectRoleSet,net.sourceforge.ganttproject.roles.RoleSet,Public,N,N);
Method(getRoleSet,net.sourceforge.ganttproject.roles.RoleSet,Public,N,N);
Method(getEnabledRoles,net.sourceforge.ganttproject.roles.Role[],Public,N,N);
Method(getDefaultRole,net.sourceforge.ganttproject.roles.Role,Public,N,N);
Parameter(add,int,);
Parameter(add,java.lang.String,);
Parameter(createRoleSet,java.lang.String,);
Parameter(getRoleSet,java.lang.String,);
Realization(net.sourceforge.ganttproject.roles.RoleManager);
Composition(net.sourceforge.ganttproject.roles.RoleSetImpl);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,<init> --> clear,net.sourceforge.ganttproject.roles.RoleManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,getRoleSet --> getRoleSets,net.sourceforge.ganttproject.roles.RoleManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,getEnabledRoles --> getRoleSets,net.sourceforge.ganttproject.roles.RoleManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,getEnabledRoles --> getProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManagerImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,<clinit> --> SOFTWARE_DEVELOPMENT_ROLE_SET,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,<clinit> --> DEFAULT_ROLE_SET,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,<clinit> --> SOFTWARE_DEVELOPMENT_ROLE_SET,net.sourceforge.ganttproject.roles.RoleManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,<clinit> --> DEFAULT_ROLE_SET,net.sourceforge.ganttproject.roles.RoleManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,<init> --> myRoleSets,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,<init> --> DEFAULT_ROLE_SET,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,<init> --> SOFTWARE_DEVELOPMENT_ROLE_SET,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,<init> --> myProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,<init> --> myProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,<init> --> myRoleSets,net.sourceforge.ganttproject.roles.RoleManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,clear --> myRoleSets,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,clear --> myProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,clear --> DEFAULT_ROLE_SET,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,clear --> SOFTWARE_DEVELOPMENT_ROLE_SET,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,clear --> myProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,getProjectLevelRoles --> myProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,add --> myProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,getRoleSets --> myRoleSets,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,createRoleSet --> myRoleSets,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,getProjectRoleSet --> myProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleManagerImpl,getDefaultRole --> DEFAULT_ROLE_SET,net.sourceforge.ganttproject.roles.RoleManagerImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,<clinit> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,<clinit> --> <init>,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,<clinit> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,<clinit> --> createRole,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,<clinit> --> setEnabled,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,<init> --> <init>$2,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,<init> --> setEnabled,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,clear --> <init>$2,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,clear --> setEnabled,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,clear --> setEnabled,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,getProjectLevelRoles --> getRoles,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,add --> createRole,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,createRoleSet --> <init>,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,getRoleSet --> getName,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,getEnabledRoles --> isEnabled,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,getEnabledRoles --> getRoles,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleManagerImpl,getDefaultRole --> findRole,net.sourceforge.ganttproject.roles.RoleSetImpl,);
EndClass 198
StartClass 199
Class(net.sourceforge.ganttproject.gui.OpenFileDialog,N,N,Public);
Attribute(myStartDirectory,java.io.File,Private,N,N,);
Attribute(myproject,net.sourceforge.ganttproject.GanttProject,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(show,java.io.File,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttProject,);
Parameter(<init>$2,java.lang.String,);
Composition(net.sourceforge.ganttproject.GanttProject);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.OpenFileDialog,<init> --> myStartDirectory,net.sourceforge.ganttproject.gui.OpenFileDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.OpenFileDialog,<init> --> myproject,net.sourceforge.ganttproject.gui.OpenFileDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.OpenFileDialog,<init>$2 --> myStartDirectory,net.sourceforge.ganttproject.gui.OpenFileDialog,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.OpenFileDialog,<init>$2 --> myStartDirectory,net.sourceforge.ganttproject.gui.OpenFileDialog,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.OpenFileDialog,show --> myStartDirectory,net.sourceforge.ganttproject.gui.OpenFileDialog,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.OpenFileDialog,show --> <init>,net.sourceforge.ganttproject.filter.GanttXMLFileFilter,);
EndClass 199
StartClass 200
Class(net.sourceforge.ganttproject.parser.FileFormatException,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.lang.Throwable,);
Parameter(<init>$4,java.lang.Throwable,);
EndClass 200
StartClass 201
Class(net.sourceforge.ganttproject.action.ResourceAction,N,Y,NA);
Attribute(myManager,net.sourceforge.ganttproject.resource.ResourceManager,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getManager,net.sourceforge.ganttproject.resource.ResourceManager,Protected,N,N);
Method(getLanguage,net.sourceforge.ganttproject.language.GanttLanguage,Protected,N,N);
Parameter(<init>,net.sourceforge.ganttproject.resource.ResourceManager,);
SubClass(net.sourceforge.ganttproject.action.NewHumanAction);
SubClass(net.sourceforge.ganttproject.action.DeleteHumanAction);
Composition(net.sourceforge.ganttproject.resource.ResourceManager);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceAction,<init> --> myManager,net.sourceforge.ganttproject.action.ResourceAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.action.ResourceAction,getManager --> myManager,net.sourceforge.ganttproject.action.ResourceAction,READ);
Call(METHOD,net.sourceforge.ganttproject.action.ResourceAction,getLanguage --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 201
StartClass 202
Class(net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(mouseEntered,void,Public,N,N);
Method(mouseExited,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Parameter(mouseEntered,java.awt.event.MouseEvent,);
Parameter(mouseExited,java.awt.event.MouseEvent,);
Composition(net.sourceforge.ganttproject.gui.TestGanttRolloverButton);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler,<init> --> this$0,net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler,mouseEntered --> this$0,net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler,mouseExited --> this$0,net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler,mouseEntered --> _iconOn,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.TestGanttRolloverButton$MouseOverHandler,mouseExited --> _iconOff,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,READ);
EndClass 202
StartClass 203
Class(net.sourceforge.ganttproject.task.TaskImpl,N,N,Public);
Attribute(myID,int,Private,N,N,);
Attribute(myManager,net.sourceforge.ganttproject.task.TaskManagerImpl,Private,N,Y,);
Attribute(myName,java.lang.String,Private,N,N,);
Attribute(myWebLink,java.lang.String,Private,N,N,);
Attribute(isMilestone,boolean,Private,N,N,);
Attribute(myPriority,int,Private,N,N,);
Attribute(myStart,net.sourceforge.ganttproject.GanttCalendar,Private,N,N,);
Attribute(myEnd,net.sourceforge.ganttproject.GanttCalendar,Private,N,N,);
Attribute(myCompletionPercentage,int,Private,N,N,);
Attribute(myLength,net.sourceforge.ganttproject.task.TaskLength,Private,N,N,);
Attribute(isStartFixed,boolean,Private,N,N,);
Attribute(bExpand,boolean,Private,N,N,);
Attribute(myTimeUnitManager,net.sourceforge.ganttproject.time.TimeUnitManager,Private,N,N,);
Attribute(myAssignments,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,Private,N,Y,);
Attribute(myDependencySlice,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,Private,N,Y,);
Attribute(myDependencySliceAsDependant,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,Private,N,Y,);
Attribute(myDependencySliceAsDependee,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,Private,N,Y,);
Attribute(myEventsEnabled,boolean,Private,N,N,);
Attribute(myTaskHierarchyItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,Private,N,Y,);
Attribute(myShape,net.sourceforge.ganttproject.shape.ShapePaint,Private,N,N,);
Attribute(myColor,java.awt.Color,Private,N,N,);
Attribute(myNotes,java.lang.String,Private,N,N,);
Method(<init>,void,Protected,N,N);
Method(<init>$2,void,Protected,N,N);
Method(createMutator,net.sourceforge.ganttproject.task.TaskMutator,Public,N,N);
Method(getTaskID,int,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(getWebLink,java.lang.String,Public,N,N);
Method(isMilestone,boolean,Public,N,N);
Method(getPriority,int,Public,N,N);
Method(getStart,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(getEnd,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(getDuration,net.sourceforge.ganttproject.task.TaskLength,Public,N,N);
Method(getCompletionPercentage,int,Public,N,N);
Method(isStartFixed,boolean,Public,N,N);
Method(getExpand,boolean,Public,N,N);
Method(getShape,net.sourceforge.ganttproject.shape.ShapePaint,Public,N,N);
Method(getColor,java.awt.Color,Public,N,N);
Method(getNotes,java.lang.String,Public,N,N);
Method(getPredecessors,net.sourceforge.ganttproject.GanttTaskRelationship[],Public,N,N);
Method(getSuccessors,net.sourceforge.ganttproject.GanttTaskRelationship[],Public,N,N);
Method(getAssignments,net.sourceforge.ganttproject.task.ResourceAssignment[],Public,N,N);
Method(getAssignmentCollection,net.sourceforge.ganttproject.task.ResourceAssignmentCollection,Public,N,N);
Method(getSupertask,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(getNestedTasks,net.sourceforge.ganttproject.task.Task[],Public,N,N);
Method(move,void,Public,N,N);
Method(getDependencies,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,Public,N,N);
Method(getDependenciesAsDependant,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,Public,N,N);
Method(getDependenciesAsDependee,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,Public,N,N);
Method(getManager,net.sourceforge.ganttproject.task.TaskManager,Public,N,N);
Method(setTaskIDHack,void,Protected,N,N);
Method(getTimeUnitManager,net.sourceforge.ganttproject.time.TimeUnitManager,Protected,N,N);
Method(setName,void,Public,N,N);
Method(setWebLink,void,Public,N,N);
Method(setMilestone,void,Public,N,N);
Method(setPriority,void,Public,N,N);
Method(setStart,void,Public,N,N);
Method(setEnd,void,Public,N,N);
Method(setDuration,void,Public,N,N);
Method(setCompletionPercentage,void,Public,N,N);
Method(setStartFixed,void,Public,N,N);
Method(setShape,void,Public,N,N);
Method(setColor,void,Public,N,N);
Method(setNotes,void,Public,N,N);
Method(setExpand,void,Public,N,N);
Method(addNotes,void,Public,N,N);
Method(enableEvents,void,Protected,N,N);
Method(areEventsEnabled,boolean,Protected,N,N);
Method(shapeDefined,boolean,Public,N,N);
Method(colorDefined,boolean,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManager,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.TaskImpl,);
Parameter(move,net.sourceforge.ganttproject.task.Task,);
Parameter(setTaskIDHack,int,);
Parameter(setName,java.lang.String,);
Parameter(setWebLink,java.lang.String,);
Parameter(setMilestone,boolean,);
Parameter(setPriority,int,);
Parameter(setStart,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(setEnd,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(setDuration,net.sourceforge.ganttproject.task.TaskLength,);
Parameter(setCompletionPercentage,int,);
Parameter(setStartFixed,boolean,);
Parameter(setShape,net.sourceforge.ganttproject.shape.ShapePaint,);
Parameter(setColor,java.awt.Color,);
Parameter(setNotes,java.lang.String,);
Parameter(setExpand,boolean,);
Parameter(addNotes,java.lang.String,);
Parameter(enableEvents,boolean,);
SubClass(net.sourceforge.ganttproject.GanttTask);
Realization(net.sourceforge.ganttproject.task.Task);
Composition(net.sourceforge.ganttproject.task.TaskManagerImpl);
Composition(net.sourceforge.ganttproject.GanttCalendar);
Composition(net.sourceforge.ganttproject.task.TaskLength);
Composition(net.sourceforge.ganttproject.time.TimeUnitManager);
Composition(net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl);
Composition(net.sourceforge.ganttproject.task.dependency.TaskDependencySlice);
Composition(net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem);
Composition(net.sourceforge.ganttproject.shape.ShapePaint);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getEnd --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getEnd --> getDuration,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getShape --> getColor,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setStart --> areEventsEnabled,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setStart --> getEnd,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> getManager,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> areEventsEnabled,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setDuration --> areEventsEnabled,net.sourceforge.ganttproject.task.TaskImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myManager,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myWebLink,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myManager,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myID,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myTimeUnitManager,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myAssignments,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myDependencySlice,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myDependencySliceAsDependant,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myDependencySliceAsDependee,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myPriority,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myTaskHierarchyItem,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> isStartFixed,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myNotes,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> bExpand,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init> --> myColor,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myManager,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myAssignments,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myID,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myName,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myWebLink,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> isMilestone,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myPriority,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myStart,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myEnd,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myLength,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> isStartFixed,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myShape,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myColor,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myNotes,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> bExpand,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myTimeUnitManager,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myDependencySlice,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myDependencySliceAsDependant,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myDependencySliceAsDependee,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myWebLink,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myManager,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myAssignments,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myID,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myName,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> isMilestone,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myPriority,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myStart,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myEnd,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myLength,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> isStartFixed,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myShape,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myColor,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myNotes,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> bExpand,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myTimeUnitManager,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myDependencySlice,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myDependencySliceAsDependant,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myDependencySliceAsDependee,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> myTaskHierarchyItem,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getTaskID --> myID,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getName --> myName,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getWebLink --> myWebLink,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,isMilestone --> isMilestone,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getPriority --> myPriority,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getStart --> myStart,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getEnd --> myEnd,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getEnd --> myEnd,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getDuration --> myLength,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getCompletionPercentage --> myCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,isStartFixed --> isStartFixed,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getExpand --> bExpand,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getShape --> myShape,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getColor --> myColor,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getColor --> myManager,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getNotes --> myNotes,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getAssignments --> myAssignments,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getAssignmentCollection --> myAssignments,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getSupertask --> myTaskHierarchyItem,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getNestedTasks --> myTaskHierarchyItem,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,move --> myTaskHierarchyItem,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getDependencies --> myDependencySlice,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getDependenciesAsDependant --> myDependencySliceAsDependant,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getDependenciesAsDependee --> myDependencySliceAsDependee,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getManager --> myManager,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setTaskIDHack --> myID,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getTimeUnitManager --> myTimeUnitManager,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setName --> myName,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setWebLink --> myWebLink,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setMilestone --> isMilestone,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setPriority --> myPriority,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setStart --> myStart,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setStart --> myManager,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setStart --> myStart,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> myEnd,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> myStart,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> myLength,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> myManager,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> myEnd,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> myLength,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setDuration --> myEnd,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setDuration --> myStart,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setDuration --> myManager,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setDuration --> myLength,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setDuration --> myEnd,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setCompletionPercentage --> myCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setStartFixed --> isStartFixed,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setShape --> myShape,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setColor --> myColor,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setNotes --> myNotes,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,setExpand --> bExpand,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,addNotes --> myNotes,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,addNotes --> myNotes,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,enableEvents --> myEventsEnabled,net.sourceforge.ganttproject.task.TaskImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,areEventsEnabled --> myEventsEnabled,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,shapeDefined --> myShape,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,colorDefined --> myColor,net.sourceforge.ganttproject.task.TaskImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl,getShape --> BACKSLASH,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init> --> getMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init> --> increaseMaxID,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init> --> getTimeUnitManager,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init> --> <init>,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init> --> getDependencyCollection,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init> --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init> --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init> --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init> --> getHierarchyManager,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init> --> createItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> copy,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> getHierarchyManager,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,<init>$2 --> createItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,createMutator --> <init>$2,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getEnd --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getEnd --> getLength$2,net.sourceforge.ganttproject.task.TaskLength,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getEnd --> add,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getShape --> <init>$2,net.sourceforge.ganttproject.shape.ShapePaint,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getColor --> getConfig,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getColor --> getDefaultColor,net.sourceforge.ganttproject.task.TaskManagerConfig,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getAssignments --> getAssignments,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getSupertask --> getContainerItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getSupertask --> getTask,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getNestedTasks --> getNestedItems,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,getNestedTasks --> getTask,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,move --> delete,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,move --> addNestedItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setStart --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setStart --> fireTaskScheduleChanged,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> diff,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> getTimeUnit,net.sourceforge.ganttproject.task.TaskLength,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> createLength,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setEnd --> fireTaskScheduleChanged,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setDuration --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setDuration --> getLength$2,net.sourceforge.ganttproject.task.TaskLength,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setDuration --> newAdd,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl,setDuration --> fireTaskScheduleChanged,net.sourceforge.ganttproject.task.TaskManagerImpl,);
EndClass 203
StartClass 204
Class(net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,N,N,NA);
Attribute(progressBar,javax.swing.JProgressBar,Private,N,N,);
Attribute(progressLabel,javax.swing.JLabel,Private,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttStatusBar,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(setValue,void,Public,N,N);
Method(reset,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Parameter(setValue,int,);
Composition(net.sourceforge.ganttproject.gui.GanttStatusBar);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,<init> --> progressBar,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,<init> --> progressLabel,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,<init> --> progressBar,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,<init> --> progressLabel,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,setValue --> progressBar,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,setValue --> progressLabel,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,reset --> progressBar,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,reset --> progressLabel,net.sourceforge.ganttproject.gui.GanttStatusBar$ProgressBarPanel,READ);
EndClass 204
StartClass 205
Class(net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,N,N,NA);
Attribute(message,javax.swing.JLabel,Public,N,N,);
Attribute(textColor,java.awt.Color,Public,N,N,);
Attribute(timer,int,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttStatusBar,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(setText,void,Public,N,N);
Method(setText$2,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(hideText,void,Public,N,N);
Method(getTimer,int,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttStatusBar,);
Parameter(<init>,int,);
Parameter(<init>,boolean,);
Parameter(setText,java.lang.String,);
Parameter(setText$2,java.lang.String,);
Parameter(setText$2,int,);
Composition(net.sourceforge.ganttproject.gui.GanttStatusBar);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,<init> --> message,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,<init> --> textColor,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,<init> --> timer,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,<init> --> message,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,setText --> message,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,setText --> timer,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,setText$2 --> message,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,setText$2 --> timer,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,clear --> message,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,hideText --> textColor,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,getTimer --> timer,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel$1,);
EndClass 205
StartClass 206
Class(net.sourceforge.ganttproject.gui.GanttDialogInfo$3,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogInfo,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogInfo);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$3,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogInfo$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$3,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttDialogInfo$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$3,actionPerformed --> CANCEL,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$3,actionPerformed --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
EndClass 206
StartClass 207
Class(net.sourceforge.ganttproject.gui.GanttDialogInfo$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogInfo,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogInfo);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$2,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogInfo$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$2,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttDialogInfo$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$2,actionPerformed --> NO,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$2,actionPerformed --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
EndClass 207
StartClass 208
Class(net.sourceforge.ganttproject.gui.GanttDialogInfo$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogInfo,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogInfo);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$1,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogInfo$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttDialogInfo$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$1,actionPerformed --> YES,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogInfo$1,actionPerformed --> res,net.sourceforge.ganttproject.gui.GanttDialogInfo,WRITE);
EndClass 208
StartClass 209
Class(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,N,N,Public);
Attribute(selectedTask,net.sourceforge.ganttproject.GanttTask,Protected,N,N,);
Attribute(savePredecessors,java.util.Vector,Protected,N,N,);
Attribute(tree,net.sourceforge.ganttproject.GanttTree,Private,N,N,);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(parent,javax.swing.JDialog,Private,N,N,);
Attribute(length,int,Private,N,N,);
Attribute(percentComplete,int,Private,N,N,);
Attribute(priority,int,Private,N,N,);
Attribute(start,net.sourceforge.ganttproject.GanttCalendar,Private,N,N,);
Attribute(end,net.sourceforge.ganttproject.GanttCalendar,Private,N,N,);
Attribute(bilan,boolean,Private,N,N,);
Attribute(notes,java.lang.String,Private,N,N,);
Attribute(gbc,java.awt.GridBagConstraints,Public,N,N,);
Attribute(flowL,java.awt.FlowLayout,Public,N,N,);
Attribute(tabbedPane,javax.swing.JTabbedPane,Public,N,N,);
Attribute(generalPanel,javax.swing.JPanel,Public,N,N,);
Attribute(predecessorsPanel,javax.swing.JPanel,Public,N,N,);
Attribute(resourcesPanel,javax.swing.JPanel,Public,N,N,);
Attribute(notesPanel,javax.swing.JPanel,Public,N,N,);
Attribute(firstRowPanel1,javax.swing.JPanel,Public,N,N,);
Attribute(nameField1,javax.swing.JTextField,Public,N,N,);
Attribute(durationField1,javax.swing.JTextField,Public,N,N,);
Attribute(nameLabel1,javax.swing.JLabel,Public,N,N,);
Attribute(durationLabel1,javax.swing.JLabel,Public,N,N,);
Attribute(lblWebLink,javax.swing.JLabel,Public,N,N,);
Attribute(tfWebLink,javax.swing.JTextField,Public,N,N,);
Attribute(bWebLink,javax.swing.JButton,Public,N,N,);
Attribute(secondRowPanel1,javax.swing.JPanel,Public,N,N,);
Attribute(percentCompleteSlider,javax.swing.JSpinner,Public,N,N,);
Attribute(percentCompleteLabel1,javax.swing.JLabel,Public,N,N,);
Attribute(priorityLabel1,javax.swing.JLabel,Public,N,N,);
Attribute(priorityComboBox,javax.swing.JComboBox,Public,N,N,);
Attribute(thirdRowPanel1,javax.swing.JPanel,Public,N,N,);
Attribute(startDateField1,javax.swing.JTextField,Public,N,N,);
Attribute(finishDateField1,javax.swing.JTextField,Public,N,N,);
Attribute(startDateLabel1,javax.swing.JLabel,Public,N,N,);
Attribute(finishDateLabel1,javax.swing.JLabel,Public,N,N,);
Attribute(startDateButton1,javax.swing.JButton,Public,N,N,);
Attribute(finishDateButton1,javax.swing.JButton,Public,N,N,);
Attribute(lastRowPanel1,javax.swing.JPanel,Public,N,N,);
Attribute(webLinkPanel,javax.swing.JPanel,Public,N,N,);
Attribute(mileStoneLabel1,javax.swing.JLabel,Public,N,N,);
Attribute(mileStoneCheckBox1,javax.swing.JCheckBox,Public,N,N,);
Attribute(colorButton,javax.swing.JButton,Public,N,N,);
Attribute(colorSpace,javax.swing.JButton,Public,N,N,);
Attribute(colorPanel,javax.swing.JPanel,Public,N,N,);
Attribute(shapeComboBox,net.sourceforge.ganttproject.shape.JPaintCombo,Public,N,N,);
Attribute(nameLabel2,javax.swing.JLabel,Public,N,N,);
Attribute(durationLabel2,javax.swing.JLabel,Public,N,N,);
Attribute(nameField2,javax.swing.JTextField,Public,N,N,);
Attribute(firstRowPanel2,javax.swing.JPanel,Public,N,N,);
Attribute(predecessorsScrollPane,javax.swing.JScrollPane,Public,N,N,);
Attribute(nameLabelNotes,javax.swing.JLabel,Public,N,N,);
Attribute(durationLabelNotes,javax.swing.JLabel,Public,N,N,);
Attribute(nameFieldNotes,javax.swing.JTextField,Public,N,N,);
Attribute(durationFieldNotes,javax.swing.JTextField,Public,N,N,);
Attribute(scrollPaneNotes,javax.swing.JScrollPane,Public,N,N,);
Attribute(noteAreaNotes,javax.swing.JTextArea,Public,N,N,);
Attribute(firstRowPanelNotes,javax.swing.JPanel,Public,N,N,);
Attribute(secondRowPanelNotes,javax.swing.JPanel,Public,N,N,);
Attribute(okButton,javax.swing.JButton,Public,N,N,);
Attribute(cancelButton,javax.swing.JButton,Public,N,N,);
Attribute(southPanel,javax.swing.JPanel,Public,N,N,);
Attribute(myDependenciesPanel,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,Private,N,N,);
Attribute(myAllocationsPanel,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,Private,N,N,);
Attribute(isStartFixed,boolean,Private,N,N,);
Attribute(myHumanResourceManager,net.sourceforge.ganttproject.resource.HumanResourceManager,Private,N,Y,);
Method(addUsingGBL,void,Private,N,N);
Method(setFirstRow,void,Private,N,N);
Method(constructGeneralPanel,void,Private,N,N);
Method(addActionListener,void,Public,N,N);
Method(changeNameOfTask,void,Public,N,N);
Method(constructPredecessorsPanel,void,Private,N,N);
Method(constructResourcesPanel,void,Private,N,N);
Method(constructNotesPanel,void,Private,N,N);
Method(constructSouthPanel,void,Private,N,N);
Method(<init>,void,Public,N,N);
Method(init,void,Public,N,N);
Method(getReturnTask,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(setSelectedTask,void,Public,N,N);
Method(setTree,void,Public,N,N);
Method(isBilan,boolean,Public,N,N);
Method(getEnd,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(getLength,int,Public,N,N);
Method(fireDurationChanged,void,Public,N,N);
Method(changeLength,void,Public,N,N);
Method(getNotes,java.lang.String,Public,N,N);
Method(getTaskName,java.lang.String,Public,N,N);
Method(getWebLink,java.lang.String,Public,N,N);
Method(getPercentComplete,int,Public,N,N);
Method(getPriority,int,Public,N,N);
Method(setStartFixed,void,Public,N,N);
Method(getStart,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(setStart,void,Public,N,N);
Method(setEnd,void,Public,N,N);
Method(access$0,javax.swing.JDialog,Public,Y,N);
Method(access$1,net.sourceforge.ganttproject.language.GanttLanguage,Public,Y,N);
Parameter(addUsingGBL,java.awt.Container,);
Parameter(addUsingGBL,java.awt.Component,);
Parameter(addUsingGBL,java.awt.GridBagConstraints,);
Parameter(addUsingGBL,int,);
Parameter(addUsingGBL,int,);
Parameter(addUsingGBL,int,);
Parameter(addUsingGBL,int,);
Parameter(setFirstRow,java.awt.Container,);
Parameter(setFirstRow,java.awt.GridBagConstraints,);
Parameter(setFirstRow,javax.swing.JLabel,);
Parameter(setFirstRow,javax.swing.JTextField,);
Parameter(setFirstRow,javax.swing.JLabel,);
Parameter(setFirstRow,javax.swing.JTextField,);
Parameter(addActionListener,java.awt.event.ActionListener,);
Parameter(<init>,javax.swing.JDialog,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTask,);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree,);
Parameter(<init>,java.util.Hashtable,);
Parameter(setSelectedTask,net.sourceforge.ganttproject.GanttTask,);
Parameter(setTree,net.sourceforge.ganttproject.GanttTree,);
Parameter(changeLength,int,);
Parameter(setStartFixed,boolean,);
Parameter(setStart,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(setStart,boolean,);
Parameter(setEnd,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(setEnd,boolean,);
Parameter(access$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Parameter(access$1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Composition(net.sourceforge.ganttproject.GanttTask);
Composition(net.sourceforge.ganttproject.GanttTree);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.GanttCalendar);
Composition(net.sourceforge.ganttproject.shape.JPaintCombo);
Composition(net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel);
Composition(net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel);
Composition(net.sourceforge.ganttproject.resource.HumanResourceManager);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setFirstRow --> addUsingGBL,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> setFirstRow,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> addUsingGBL,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> setFirstRow,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> addUsingGBL,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> init,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> setSelectedTask,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> setTree,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> constructGeneralPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> constructPredecessorsPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> constructResourcesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> constructNotesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> constructSouthPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> getTaskName,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> getWebLink,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> isBilan,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> getStart,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> getEnd,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> getLength,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> getNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> getPercentComplete,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> getPriority,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> setStart,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> setEnd,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> setStartFixed,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,fireDurationChanged --> changeLength,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> setStartFixed,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> language,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> nameField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> durationField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> flowL,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> firstRowPanel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> gbc,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> nameLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> durationLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> secondRowPanel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> percentCompleteLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> percentCompleteSlider,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> priorityLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> priorityComboBox,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> startDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> finishDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> startDateButton1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> finishDateButton1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> thirdRowPanel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> startDateLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> finishDateLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> lastRowPanel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> mileStoneCheckBox1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> shapeComboBox,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> colorButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> selectedTask,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> colorSpace,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> colorPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> generalPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> webLinkPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> lblWebLink,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> tfWebLink,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> bWebLink,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> generalPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> nameLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> nameField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> durationLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> durationField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> firstRowPanel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> percentCompleteLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> percentCompleteSlider,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> secondRowPanel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> priorityLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> priorityComboBox,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> startDateLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> startDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> finishDateLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> finishDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> startDateButton1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> finishDateButton1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> thirdRowPanel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> mileStoneCheckBox1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> lastRowPanel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> shapeComboBox,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> colorButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> colorSpace,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> colorPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> webLinkPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> lblWebLink,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> tfWebLink,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> bWebLink,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,addActionListener --> nameField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,addActionListener --> startDateButton1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,addActionListener --> finishDateButton1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,addActionListener --> okButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,addActionListener --> cancelButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,addActionListener --> durationField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeNameOfTask --> nameField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeNameOfTask --> nameFieldNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeNameOfTask --> myDependenciesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeNameOfTask --> myAllocationsPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructPredecessorsPanel --> selectedTask,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructPredecessorsPanel --> myDependenciesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructPredecessorsPanel --> myDependenciesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructPredecessorsPanel --> predecessorsPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructResourcesPanel --> selectedTask,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructResourcesPanel --> myHumanResourceManager,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructResourcesPanel --> myAllocationsPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructResourcesPanel --> myAllocationsPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructResourcesPanel --> resourcesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> language,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> nameFieldNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> durationFieldNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> firstRowPanelNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> gbc,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> nameLabelNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> durationLabelNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> secondRowPanelNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> noteAreaNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> scrollPaneNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> notesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> notesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> nameLabelNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> nameFieldNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> durationLabelNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> durationFieldNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> firstRowPanelNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> secondRowPanelNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> noteAreaNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> scrollPaneNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructSouthPanel --> language,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructSouthPanel --> okButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructSouthPanel --> cancelButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructSouthPanel --> southPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructSouthPanel --> okButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructSouthPanel --> cancelButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructSouthPanel --> southPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> language,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> gbc,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> flowL,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> parent,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> selectedTask,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> savePredecessors,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> myHumanResourceManager,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> tabbedPane,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> language,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> generalPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> predecessorsPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> resourcesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> notesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> southPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> tabbedPane,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> myAllocationsPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> selectedTask,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> isStartFixed,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> colorButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> shapeComboBox,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> myDependenciesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> nameField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> nameFieldNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> durationField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> durationFieldNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> percentCompleteSlider,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> percentCompleteLabel1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> language,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> priorityComboBox,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> startDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> finishDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> mileStoneCheckBox1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> bilan,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> tfWebLink,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> shapeComboBox,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> noteAreaNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> selectedTask,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> bilan,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setTree --> tree,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,isBilan --> mileStoneCheckBox1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,isBilan --> bilan,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,isBilan --> bilan,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getEnd --> end,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getLength --> durationField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getLength --> length,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getLength --> length,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,fireDurationChanged --> durationField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> durationField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> myDependenciesPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> myAllocationsPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> durationFieldNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> start,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> length,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> finishDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> length,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> end,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getNotes --> noteAreaNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getNotes --> notes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getNotes --> notes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getTaskName --> nameField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getWebLink --> tfWebLink,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getPercentComplete --> percentCompleteSlider,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getPercentComplete --> percentComplete,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getPercentComplete --> percentComplete,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getPriority --> priorityComboBox,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getPriority --> priority,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getPriority --> priority,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStartFixed --> startDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStartFixed --> isStartFixed,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStartFixed --> isStartFixed,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getStart --> start,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getStart --> isStartFixed,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> startDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> start,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> end,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> length,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> finishDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> durationField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> myAllocationsPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> durationFieldNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> start,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> length,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> end,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> finishDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> start,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> end,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> length,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> startDateField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> durationField1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> myAllocationsPanel,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> durationFieldNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> end,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> length,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> start,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,access$0 --> parent,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,access$1 --> language,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> PATTERN_LIST,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> taskDefaultColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> PATTERN_LIST,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> <init>$3,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> getToolTip,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> <init>,net.sourceforge.ganttproject.shape.JPaintCombo,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> getColor,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> <init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> <init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$2,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructGeneralPanel --> <init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeNameOfTask --> nameChanged,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeNameOfTask --> nameChanged,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructPredecessorsPanel --> <init>,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructPredecessorsPanel --> getComponent,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructResourcesPanel --> <init>,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructResourcesPanel --> getComponent,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> <init>$3,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> getToolTip,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructNotesPanel --> <init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$4,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,constructSouthPanel --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,<init> --> getPredecessorsOld,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> <init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$5,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,init --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> getTableModel,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> commit,net.sourceforge.ganttproject.gui.ResourcesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setName,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setWebLink,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setMilestone,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setChecked,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setEnd,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setNotes,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setPriority,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setStartFixed,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setColor,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> getSelectedPaint,net.sourceforge.ganttproject.shape.JPaintCombo,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> <init>$2,net.sourceforge.ganttproject.shape.ShapePaint,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> setShape,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> getTableModel,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getReturnTask --> commit,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> getName,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> toString,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> getLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> getCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> getPriority,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> toString,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> getEnd,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> isMilestone,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> getWebLink,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> shapeDefined,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> getShape,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> equals,net.sourceforge.ganttproject.shape.ShapePaint,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> getNotes,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setSelectedTask --> isStartFixed,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> durationChanged,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> durationChanged,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> newAdd,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,changeLength --> toString,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,getStart --> setFixed,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> toString,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> isFixed,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> diff,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> newAdd,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setStart --> durationChanged,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> toString,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> diff,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> newAdd,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,setEnd --> durationChanged,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
EndClass 209
StartClass 210
Class(net.sourceforge.ganttproject.gui.GanttDialogDate,N,N,Public);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(panel,net.sourceforge.ganttproject.gui.GanttPanelDate,Private,N,N,);
Attribute(jbPrevMonth,javax.swing.JButton,Private,N,N,);
Attribute(jbNextMonth,javax.swing.JButton,Private,N,N,);
Attribute(jtDate,javax.swing.JFormattedTextField,Private,N,N,);
Attribute(jbPrevYear,javax.swing.JButton,Private,N,N,);
Attribute(jbNextYear,javax.swing.JButton,Private,N,N,);
Attribute(myFixedDate,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getDate,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.gui.GanttPanelDate,Public,Y,N);
Method(access$1,void,Public,Y,N);
Parameter(<init>,javax.swing.JDialog,);
Parameter(<init>,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(<init>$2,javax.swing.JDialog,);
Parameter(<init>$2,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(<init>$2,boolean,);
Parameter(access$0,net.sourceforge.ganttproject.gui.GanttDialogDate,);
Parameter(access$1,net.sourceforge.ganttproject.gui.GanttDialogDate,);
Parameter(access$1,boolean,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.gui.GanttPanelDate);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,<init> --> <init>$2,net.sourceforge.ganttproject.gui.GanttDialogDate,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> language,net.sourceforge.ganttproject.gui.GanttDialogDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> panel,net.sourceforge.ganttproject.gui.GanttDialogDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> myFixedDate,net.sourceforge.ganttproject.gui.GanttDialogDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> language,net.sourceforge.ganttproject.gui.GanttDialogDate,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> myFixedDate,net.sourceforge.ganttproject.gui.GanttDialogDate,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> panel,net.sourceforge.ganttproject.gui.GanttDialogDate,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate,getDate --> panel,net.sourceforge.ganttproject.gui.GanttDialogDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate,getDate --> myFixedDate,net.sourceforge.ganttproject.gui.GanttDialogDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate,access$0 --> panel,net.sourceforge.ganttproject.gui.GanttDialogDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate,access$1 --> myFixedDate,net.sourceforge.ganttproject.gui.GanttDialogDate,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> isFixed,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> <init>,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> <init>,net.sourceforge.ganttproject.gui.GanttDialogDate$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> <init>,net.sourceforge.ganttproject.gui.GanttDialogDate$2,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> <init>,net.sourceforge.ganttproject.gui.GanttDialogDate$3,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> center,net.sourceforge.ganttproject.gui.DialogAligner,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,<init>$2 --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,getDate --> getDate,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate,getDate --> setFixed,net.sourceforge.ganttproject.GanttCalendar,);
EndClass 210
StartClass 211
Class(net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,N,N,Public);
Method(add,void,Public,N,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(<init>$6,void,Public,N,N);
Method(<init>$7,void,Public,N,N);
Parameter(add,int,);
Parameter(add,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$5,java.util.Locale,);
Parameter(<init>$6,java.util.TimeZone,);
Parameter(<init>$7,java.util.TimeZone,);
Parameter(<init>$7,java.util.Locale,);
SubClass(net.sourceforge.ganttproject.GanttCalendar);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,add --> add,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
EndClass 211
StartClass 212
Class(net.sourceforge.ganttproject.gui.GanttPanelDate,N,N,Public);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(ddd,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,Private,N,N,);
Attribute(save,net.sourceforge.ganttproject.GanttCalendar,Private,N,N,);
Attribute(jbPrevMonth,javax.swing.JButton,Private,N,N,);
Attribute(jbNextMonth,javax.swing.JButton,Private,N,N,);
Attribute(jtDate,javax.swing.JFormattedTextField,Private,N,N,);
Attribute(jbPrevYear,javax.swing.JButton,Private,N,N,);
Attribute(jbNextYear,javax.swing.JButton,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(cancel,void,Public,N,N);
Method(changeDate,void,Private,N,N);
Method(rollDate,void,Private,N,N);
Method(getDate,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(access$0,void,Public,Y,N);
Method(access$1,void,Public,Y,N);
Method(access$2,javax.swing.JFormattedTextField,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(changeDate,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Parameter(rollDate,int,);
Parameter(rollDate,int,);
Parameter(access$0,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Parameter(access$0,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Parameter(access$1,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Parameter(access$1,int,);
Parameter(access$1,int,);
Parameter(access$2,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay);
Composition(net.sourceforge.ganttproject.GanttCalendar);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,cancel --> changeDate,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,access$0 --> changeDate,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,access$1 --> rollDate,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> jbPrevYear,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> jbPrevMonth,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> jbNextMonth,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> jbNextYear,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> language,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> jtDate,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> ddd,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> language,net.sourceforge.ganttproject.gui.GanttPanelDate,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> save,net.sourceforge.ganttproject.gui.GanttPanelDate,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> jbPrevYear,net.sourceforge.ganttproject.gui.GanttPanelDate,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> jbPrevMonth,net.sourceforge.ganttproject.gui.GanttPanelDate,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> jbNextMonth,net.sourceforge.ganttproject.gui.GanttPanelDate,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> jbNextYear,net.sourceforge.ganttproject.gui.GanttPanelDate,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> ddd,net.sourceforge.ganttproject.gui.GanttPanelDate,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> jtDate,net.sourceforge.ganttproject.gui.GanttPanelDate,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,cancel --> ddd,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,cancel --> save,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,changeDate --> ddd,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,changeDate --> jtDate,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,rollDate --> ddd,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,rollDate --> jtDate,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,getDate --> ddd,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,access$2 --> jtDate,net.sourceforge.ganttproject.gui.GanttPanelDate,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> date,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,cancel --> date,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,changeDate --> date,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,rollDate --> date,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate,getDate --> date,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> <init>$3,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttPanelDate$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttPanelDate$2,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttPanelDate$3,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttPanelDate$4,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> getToolTip,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttPanelDate$5,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate,rollDate --> add,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
EndClass 212
StartClass 213
Class(net.sourceforge.ganttproject.gui.GanttDialogCalendar$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogCalendar,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogCalendar,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogCalendar);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar$2,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogCalendar$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar$2,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttDialogCalendar$2,READ);
EndClass 213
StartClass 214
Class(net.sourceforge.ganttproject.gui.GanttDialogCalendar$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogCalendar,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogCalendar,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogCalendar);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar$1,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogCalendar$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogCalendar$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttDialogCalendar$1,READ);
EndClass 214
StartClass 215
Class(net.sourceforge.ganttproject.shape.ShapeConstants,N,N,Public);
Attribute(TRANSPARENT,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(DEFAULT,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(CROSS,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(VERT,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(HORZ,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(GRID,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(ROUND,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(NW_TRIANGLE,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(NE_TRIANGLE,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(SW_TRIANGLE,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(SE_TRIANGLE,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(DIAMOND,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(DOTS,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(DOT,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(SLASH,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(BACKSLASH,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(THICK_VERT,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(THICK_HORZ,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(THICK_GRID,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(THICK_SLASH,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(THICK_BACKSLASH,net.sourceforge.ganttproject.shape.ShapePaint,Public,Y,Y,);
Attribute(PATTERN_LIST,net.sourceforge.ganttproject.shape.ShapePaint[],Public,Y,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Composition(net.sourceforge.ganttproject.shape.ShapePaint);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> TRANSPARENT,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> DEFAULT,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> CROSS,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> VERT,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> HORZ,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> GRID,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> ROUND,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> NW_TRIANGLE,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> NE_TRIANGLE,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> SW_TRIANGLE,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> SE_TRIANGLE,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> DIAMOND,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> DOTS,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> DOT,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> SLASH,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> BACKSLASH,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> THICK_VERT,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> THICK_HORZ,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> THICK_GRID,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> THICK_SLASH,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> THICK_BACKSLASH,net.sourceforge.ganttproject.shape.ShapeConstants,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> TRANSPARENT,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> DEFAULT,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> CROSS,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> VERT,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> HORZ,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> GRID,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> ROUND,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> NW_TRIANGLE,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> NE_TRIANGLE,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> SW_TRIANGLE,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> SE_TRIANGLE,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> DIAMOND,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> DOTS,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> DOT,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> SLASH,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> BACKSLASH,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> THICK_VERT,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> THICK_HORZ,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> THICK_GRID,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> THICK_SLASH,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> THICK_BACKSLASH,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> PATTERN_LIST,net.sourceforge.ganttproject.shape.ShapeConstants,WRITE);
Call(METHOD,net.sourceforge.ganttproject.shape.ShapeConstants,<clinit> --> <init>$3,net.sourceforge.ganttproject.shape.ShapePaint,);
EndClass 215
StartClass 216
Class(net.sourceforge.ganttproject.GanttGraphicArea$Arrow,N,N,Public);
Attribute(x1,int,Private,N,N,);
Attribute(x2,int,Private,N,N,);
Attribute(y1,int,Private,N,N,);
Attribute(y2,int,Private,N,N,);
Attribute(draw,boolean,Private,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.GanttGraphicArea,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(setDraw,void,Public,N,N);
Method(getDraw,boolean,Public,N,N);
Method(changePoint2,void,Public,N,N);
Method(paint,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(<init>$2,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(setDraw,boolean,);
Parameter(changePoint2,int,);
Parameter(changePoint2,int,);
Parameter(paint,java.awt.Graphics,);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init> --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init> --> y2,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init> --> y1,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init> --> x2,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init> --> x1,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init> --> draw,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init>$2 --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init>$2 --> x1,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init>$2 --> x2,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init>$2 --> y1,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init>$2 --> y2,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,<init>$2 --> draw,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,setDraw --> draw,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,getDraw --> draw,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,changePoint2 --> x2,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,changePoint2 --> y2,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,paint --> draw,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,paint --> x1,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,paint --> y1,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,paint --> x2,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,paint --> y2,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,READ);
EndClass 216
StartClass 217
Class(net.sourceforge.ganttproject.GanttGraphicArea$Notes,N,N,Public);
Attribute(n,java.lang.String,Public,N,N,);
Attribute(x,int,Public,N,N,);
Attribute(y,int,Public,N,N,);
Attribute(draw,boolean,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.GanttGraphicArea,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(setDraw,void,Public,N,N);
Method(getDraw,boolean,Public,N,N);
Method(setX,void,Public,N,N);
Method(setString,void,Public,N,N);
Method(paint,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(<init>$2,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(setDraw,boolean,);
Parameter(setX,int,);
Parameter(setString,java.lang.String,);
Parameter(paint,java.awt.Graphics,);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,<init> --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$Notes,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,<init> --> n,net.sourceforge.ganttproject.GanttGraphicArea$Notes,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,<init> --> draw,net.sourceforge.ganttproject.GanttGraphicArea$Notes,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,<init>$2 --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$Notes,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,<init>$2 --> n,net.sourceforge.ganttproject.GanttGraphicArea$Notes,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,<init>$2 --> x,net.sourceforge.ganttproject.GanttGraphicArea$Notes,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,<init>$2 --> y,net.sourceforge.ganttproject.GanttGraphicArea$Notes,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,<init>$2 --> draw,net.sourceforge.ganttproject.GanttGraphicArea$Notes,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,setDraw --> draw,net.sourceforge.ganttproject.GanttGraphicArea$Notes,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,getDraw --> draw,net.sourceforge.ganttproject.GanttGraphicArea$Notes,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,setX --> x,net.sourceforge.ganttproject.GanttGraphicArea$Notes,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,setString --> n,net.sourceforge.ganttproject.GanttGraphicArea$Notes,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,paint --> draw,net.sourceforge.ganttproject.GanttGraphicArea$Notes,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,paint --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$Notes,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,paint --> x,net.sourceforge.ganttproject.GanttGraphicArea$Notes,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,paint --> y,net.sourceforge.ganttproject.GanttGraphicArea$Notes,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$Notes,paint --> n,net.sourceforge.ganttproject.GanttGraphicArea$Notes,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$Notes,paint --> access$0,net.sourceforge.ganttproject.GanttGraphicArea,);
EndClass 217
StartClass 218
Class(net.sourceforge.ganttproject.chart.ChartHeader,Y,Y,Public);
Method(paint,void,Public,N,Y);
Parameter(paint,java.awt.Graphics,);
EndClass 218
StartClass 219
Class(net.sourceforge.ganttproject.GanttGraphicArea$4,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttGraphicArea,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(mouseDragged,void,Public,N,N);
Method(mouseMoved,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(mouseDragged,java.awt.event.MouseEvent,);
Parameter(mouseMoved,java.awt.event.MouseEvent,);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,<init> --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$4,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$4,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseMoved --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$4,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> mouseButton,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> typeSeletion,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> y,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> x1,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> x2,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> drag,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> drag,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseMoved --> curs,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseMoved --> typeSeletion,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseMoved --> curs,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$9,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$18,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> getGranit,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$22,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$11,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$12,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> isMilestone,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$23,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> newAdd,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> setStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$5,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$2,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$20,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> toString,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> setString,net.sourceforge.ganttproject.GanttGraphicArea$Notes,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> setX,net.sourceforge.ganttproject.GanttGraphicArea$Notes,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> getEnd,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$24,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> setLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$15,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> setCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$19,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> changePoint2,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$10,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> access$16,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> getDuration,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseDragged --> setDuration,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseMoved --> detectPosition,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseMoved --> access$19,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseMoved --> setDraw,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseMoved --> access$20,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$4,mouseMoved --> setDraw,net.sourceforge.ganttproject.GanttGraphicArea$Notes,);
EndClass 219
StartClass 220
Class(net.sourceforge.ganttproject.GanttGraphicArea$3,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttGraphicArea,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(mouseClicked,void,Public,N,N);
Method(mouseEntered,void,Public,N,N);
Method(mouseExited,void,Public,N,N);
Method(mousePressed,void,Public,N,N);
Method(mouseReleased,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(mouseClicked,java.awt.event.MouseEvent,);
Parameter(mouseEntered,java.awt.event.MouseEvent,);
Parameter(mouseExited,java.awt.event.MouseEvent,);
Parameter(mousePressed,java.awt.event.MouseEvent,);
Parameter(mouseReleased,java.awt.event.MouseEvent,);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,<init> --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseClicked --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseEntered --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseExited --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> drag,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> tree,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> type,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> typeSeletion,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> x1,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> x2,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> x3,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> mouseButton,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> drag,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> date,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> typeSeletion,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> taskID,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> tree,net.sourceforge.ganttproject.GanttGraphicArea,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> drag,net.sourceforge.ganttproject.GanttGraphicArea,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> date,net.sourceforge.ganttproject.ResourceLoadGraphicArea,WRITE);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseClicked --> access$2,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseClicked --> propertiesTask,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$5,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$6,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$7,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> detectPosition,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> selectTreeRow,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$8,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$9,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$10,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> setTaskToMove,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$11,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$12,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> getLength,net.sourceforge.ganttproject.GanttTask,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$13,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> getStart,net.sourceforge.ganttproject.task.TaskImpl,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$14,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$15,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> access$16,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mousePressed --> createPopupMenu,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> access$17,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> access$18,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> access$19,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> setDraw,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> access$20,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> setDraw,net.sourceforge.ganttproject.GanttGraphicArea$Notes,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> access$2,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> getOptions,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> getDragTime,net.sourceforge.ganttproject.GanttOptions,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> access$3,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> go,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> getDraw,net.sourceforge.ganttproject.GanttGraphicArea$Arrow,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> detectPosition,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> access$10,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> access$21,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> getTask,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> access$12,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> checkDepend,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> getDependencyCollection,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> createDependency,net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> setAskForSave,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> access$8,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$3,mouseReleased --> forwardScheduling,net.sourceforge.ganttproject.GanttTree,);
EndClass 220
StartClass 221
Class(net.sourceforge.ganttproject.GanttGraphicArea$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttGraphicArea,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(mouseWheelMoved,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(mouseWheelMoved,java.awt.event.MouseWheelEvent,);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$2,<init> --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> area,net.sourceforge.ganttproject.GanttResourcePanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> bZoomIn,net.sourceforge.ganttproject.GanttProject,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> bZoomOut,net.sourceforge.ganttproject.GanttProject,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> zoomMore,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> access$2,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> getResourcePanel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> zoomMore,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> zoomLess,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> zoomLess,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> access$3,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> access$4,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> setZoom,net.sourceforge.ganttproject.ResourceLoadGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> zoomToBegin,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$2,mouseWheelMoved --> setEnabled,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
EndClass 221
StartClass 222
Class(net.sourceforge.ganttproject.GanttGraphicArea$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.GanttGraphicArea,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(taskScheduleChanged,void,Public,N,N);
Method(dependencyAdded,void,Public,N,N);
Method(adjustDependencies,void,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(taskScheduleChanged,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,);
Parameter(dependencyAdded,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,);
Parameter(adjustDependencies,net.sourceforge.ganttproject.task.Task,);
SuperClass(net.sourceforge.ganttproject.task.event.TaskListenerAdapter);
Generalization(net.sourceforge.ganttproject.task.event.TaskListenerAdapter);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$1,taskScheduleChanged --> adjustDependencies,net.sourceforge.ganttproject.GanttGraphicArea$1,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$1,dependencyAdded --> adjustDependencies,net.sourceforge.ganttproject.GanttGraphicArea$1,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$1,<init> --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$1,adjustDependencies --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$1,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$1,<init> --> <init>,net.sourceforge.ganttproject.task.event.TaskListenerAdapter,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$1,dependencyAdded --> getDependency,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$1,dependencyAdded --> getDependee,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$1,adjustDependencies --> access$1,net.sourceforge.ganttproject.GanttGraphicArea,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$1,adjustDependencies --> getAlgorithmCollection,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$1,adjustDependencies --> getRecalculateTaskScheduleAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$1,adjustDependencies --> isRunning,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.GanttGraphicArea$1,adjustDependencies --> run,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
EndClass 222
StartClass 223
Class(net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate,Y,Y,Public);
Method(createTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,Y);
Parameter(createTimeUnit,java.util.Date,);
Realization(net.sourceforge.ganttproject.time.TimeUnit);
EndClass 223
StartClass 224
Class(net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,N,N,Public);
Attribute(x1,int,Public,N,N,);
Attribute(x2,int,Public,N,N,);
Attribute(x3,int,Public,N,N,);
Attribute(name,java.lang.String,Public,N,N,);
Attribute(taskID,int,Public,N,N,);
Attribute(y,int,Public,N,N,);
Attribute(type,int,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.GanttGraphicArea,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttGraphicArea,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Composition(net.sourceforge.ganttproject.GanttGraphicArea);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,<init> --> this$0,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,<init> --> name,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,<init> --> taskID,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,<init> --> x1,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,<init> --> x2,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,<init> --> x3,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,<init> --> y,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,<init> --> type,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,toString --> name,net.sourceforge.ganttproject.GanttGraphicArea$GanttPaintParam,READ);
EndClass 224
StartClass 225
Class(net.sourceforge.ganttproject.chart.ChartModelImpl,N,N,Public);
Attribute(myChartHeader,net.sourceforge.ganttproject.chart.ChartHeader,Private,N,Y,);
Attribute(myChartUIConfiguration,net.sourceforge.ganttproject.chart.ChartUIConfiguration,Private,N,Y,);
Attribute(myBounds,java.awt.Dimension,Private,N,N,);
Attribute(myStartDate,java.util.Date,Private,N,N,);
Attribute(myAtomUnitPixels,int,Private,N,N,);
Attribute(myTimeFrames,net.sourceforge.ganttproject.time.TimeFrame[],Private,N,N,);
Attribute(myTimeUnitStack,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,Private,N,Y,);
Attribute(myTopUnit,net.sourceforge.ganttproject.time.TimeUnit,Private,N,N,);
Attribute(myBottomUnit,net.sourceforge.ganttproject.time.TimeUnit,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getChartHeader,net.sourceforge.ganttproject.chart.ChartHeader,Public,N,N);
Method(getChartUIConfiguration,net.sourceforge.ganttproject.chart.ChartUIConfiguration,Public,N,N);
Method(setBounds,void,Public,N,N);
Method(setStartDate,void,Public,N,N);
Method(setBottomUnitWidth,void,Public,N,N);
Method(setTopTimeUnit,void,Public,N,N);
Method(setBottomTimeUnit,void,Public,N,N);
Method(getBounds,java.awt.Dimension,Public,N,N);
Method(getTimeFrames,net.sourceforge.ganttproject.time.TimeFrame[],Public,N,N);
Method(getBottomUnitWidth,int,Public,N,N);
Method(calculateTimeFrames,net.sourceforge.ganttproject.time.TimeFrame[],Private,N,N);
Parameter(setBounds,java.awt.Dimension,);
Parameter(setStartDate,java.util.Date,);
Parameter(setBottomUnitWidth,int,);
Parameter(setTopTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(setBottomTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Realization(net.sourceforge.ganttproject.chart.ChartModel);
Composition(net.sourceforge.ganttproject.chart.ChartHeader);
Composition(net.sourceforge.ganttproject.chart.ChartUIConfiguration);
Composition(net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack);
Composition(net.sourceforge.ganttproject.time.TimeUnit);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartModelImpl,getTimeFrames --> calculateTimeFrames,net.sourceforge.ganttproject.chart.ChartModelImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartModelImpl,calculateTimeFrames --> getBounds,net.sourceforge.ganttproject.chart.ChartModelImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,<init> --> myTimeUnitStack,net.sourceforge.ganttproject.chart.ChartModelImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,<init> --> myChartHeader,net.sourceforge.ganttproject.chart.ChartModelImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,<init> --> myChartUIConfiguration,net.sourceforge.ganttproject.chart.ChartModelImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,getChartHeader --> myChartHeader,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,getChartUIConfiguration --> myChartUIConfiguration,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,setBounds --> myBounds,net.sourceforge.ganttproject.chart.ChartModelImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,setStartDate --> myStartDate,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,setStartDate --> myStartDate,net.sourceforge.ganttproject.chart.ChartModelImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,setStartDate --> myTimeFrames,net.sourceforge.ganttproject.chart.ChartModelImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,setBottomUnitWidth --> myAtomUnitPixels,net.sourceforge.ganttproject.chart.ChartModelImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,setTopTimeUnit --> myStartDate,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,setTopTimeUnit --> myTopUnit,net.sourceforge.ganttproject.chart.ChartModelImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,setBottomTimeUnit --> myBottomUnit,net.sourceforge.ganttproject.chart.ChartModelImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,getBounds --> myBounds,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,getTimeFrames --> myTimeFrames,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,getTimeFrames --> myTimeFrames,net.sourceforge.ganttproject.chart.ChartModelImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,getBottomUnitWidth --> myAtomUnitPixels,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,calculateTimeFrames --> myStartDate,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,calculateTimeFrames --> myTimeUnitStack,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,calculateTimeFrames --> myTopUnit,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,calculateTimeFrames --> myBottomUnit,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartModelImpl,calculateTimeFrames --> myAtomUnitPixels,net.sourceforge.ganttproject.chart.ChartModelImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartModelImpl,<init> --> <init>,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartModelImpl,<init> --> <init>,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartModelImpl,<init> --> <init>,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartModelImpl,setTopTimeUnit --> createTimeUnit,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartModelImpl,calculateTimeFrames --> createTimeFrame,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartModelImpl,calculateTimeFrames --> getUnitCount,net.sourceforge.ganttproject.time.TimeFrame,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartModelImpl,calculateTimeFrames --> getFinishDate,net.sourceforge.ganttproject.time.TimeFrame,);
EndClass 225
StartClass 226
Class(net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,N,N,Public);
Attribute(ourGraph,net.sourceforge.ganttproject.time.TimeUnitGraph,Private,Y,N,);
Attribute(DAY_FRAMER,net.sourceforge.ganttproject.time.DateFrameable,Private,Y,Y,);
Attribute(MONTH_FRAMER,net.sourceforge.ganttproject.time.DateFrameable,Private,Y,Y,);
Attribute(HOUR_FRAMER,net.sourceforge.ganttproject.time.DateFrameable,Private,Y,Y,);
Attribute(MINUTE_FRAMER,net.sourceforge.ganttproject.time.DateFrameable,Private,Y,Y,);
Attribute(SECOND_FRAMER,net.sourceforge.ganttproject.time.DateFrameable,Private,Y,Y,);
Attribute(SECOND,net.sourceforge.ganttproject.time.TimeUnit,Public,Y,Y,);
Attribute(MINUTE,net.sourceforge.ganttproject.time.TimeUnit,Public,Y,Y,);
Attribute(HOUR,net.sourceforge.ganttproject.time.TimeUnit,Public,Y,Y,);
Attribute(DAY,net.sourceforge.ganttproject.time.TimeUnit,Public,Y,Y,);
Attribute(MONTH,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate,Public,Y,Y,);
Attribute(ATOM_UNIT,net.sourceforge.ganttproject.time.TimeUnit,Private,Y,Y,);
Attribute(ourUnit2field,java.util.HashMap,Private,Y,Y,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(createTimeFrame,net.sourceforge.ganttproject.time.TimeFrame,Public,N,N);
Parameter(createTimeFrame,java.util.Date,);
Parameter(createTimeFrame,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(createTimeFrame,net.sourceforge.ganttproject.time.TimeUnit,);
Composition(net.sourceforge.ganttproject.time.TimeUnitGraph);
Composition(net.sourceforge.ganttproject.time.DateFrameable);
Composition(net.sourceforge.ganttproject.time.TimeUnit);
Composition(net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> ourGraph,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> SECOND,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> MINUTE_FRAMER,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> MINUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> HOUR_FRAMER,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> HOUR,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> DAY_FRAMER,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> DAY,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> MONTH_FRAMER,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> MONTH,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> ourUnit2field,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> ourGraph,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> DAY_FRAMER,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> MONTH_FRAMER,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> HOUR_FRAMER,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> MINUTE_FRAMER,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> SECOND_FRAMER,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> ourUnit2field,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> SECOND,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> MINUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> HOUR,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> DAY,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> MONTH,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> ATOM_UNIT,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,WRITE);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> <init>,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> <init>,net.sourceforge.ganttproject.time.gregorian.FramerImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> createAtomTimeUnit,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> createDateFrameableTimeUnit,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> <init>,net.sourceforge.ganttproject.time.gregorian.DayTextFormatter,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> setTextFormatter,net.sourceforge.ganttproject.time.TimeUnit,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> createTimeUnitFunctionOfDate,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,<clinit> --> <init>,net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack,createTimeFrame --> <init>,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
EndClass 226
StartClass 227
Class(net.sourceforge.ganttproject.chart.ChartModel,Y,Y,Public);
Method(getChartHeader,net.sourceforge.ganttproject.chart.ChartHeader,Public,N,Y);
Method(setBounds,void,Public,N,Y);
Method(setStartDate,void,Public,N,Y);
Method(setBottomUnitWidth,void,Public,N,Y);
Method(setTopTimeUnit,void,Public,N,Y);
Method(setBottomTimeUnit,void,Public,N,Y);
Parameter(setBounds,java.awt.Dimension,);
Parameter(setStartDate,java.util.Date,);
Parameter(setBottomUnitWidth,int,);
Parameter(setTopTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(setBottomTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,);
EndClass 227
StartClass 228
Class(net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,N,N,Public);
Attribute(myRootItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getRootItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,Public,N,N);
Method(createItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,Public,N,N);
Parameter(createItem,net.sourceforge.ganttproject.task.Task,);
Composition(net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,<init> --> myRootItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,getRootItem --> myRootItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,createItem --> myRootItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,<init> --> <init>,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,);
Call(METHOD,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl,createItem --> <init>,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,);
EndClass 228
StartClass 229
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,N,N,Public);
Attribute(myDependencies,java.util.Set,Private,N,N,);
Attribute(mySearchKey2dependency,java.util.SortedMap,Private,N,N,);
Attribute(myEventDispatcher,net.sourceforge.ganttproject.task.dependency.EventDispatcher,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getDependencies,net.sourceforge.ganttproject.task.dependency.TaskDependency[],Public,N,N);
Method(getDependencies$2,net.sourceforge.ganttproject.task.dependency.TaskDependency[],Public,N,N);
Method(getDependenciesAsDependant,net.sourceforge.ganttproject.task.dependency.TaskDependency[],Public,N,N);
Method(getDependenciesAsDependee,net.sourceforge.ganttproject.task.dependency.TaskDependency[],Public,N,N);
Method(createDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,Public,N,N);
Method(deleteDependency,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(createMutator,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionMutator,Public,N,N);
Method(auxCreateDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,Private,N,N);
Method(addDependency,void,Public,N,N);
Method(delete,void,Public,N,N);
Method(doClear,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.task.dependency.TaskDependency,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.task.dependency.EventDispatcher,);
Parameter(getDependencies$2,net.sourceforge.ganttproject.task.Task,);
Parameter(getDependenciesAsDependant,net.sourceforge.ganttproject.task.Task,);
Parameter(getDependenciesAsDependee,net.sourceforge.ganttproject.task.Task,);
Parameter(createDependency,net.sourceforge.ganttproject.task.Task,);
Parameter(createDependency,net.sourceforge.ganttproject.task.Task,);
Parameter(deleteDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Parameter(auxCreateDependency,net.sourceforge.ganttproject.task.Task,);
Parameter(auxCreateDependency,net.sourceforge.ganttproject.task.Task,);
Parameter(addDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Parameter(delete,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Parameter(access$0,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Parameter(access$0,net.sourceforge.ganttproject.task.Task,);
Parameter(access$0,net.sourceforge.ganttproject.task.Task,);
Realization(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection);
Composition(net.sourceforge.ganttproject.task.dependency.EventDispatcher);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,createDependency --> auxCreateDependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,createDependency --> addDependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,deleteDependency --> delete,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,clear --> doClear,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,access$0 --> auxCreateDependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,<init> --> myDependencies,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,<init> --> mySearchKey2dependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,<init> --> myEventDispatcher,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,getDependencies --> myDependencies,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,getDependencies$2 --> mySearchKey2dependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,getDependenciesAsDependant --> mySearchKey2dependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,getDependenciesAsDependee --> mySearchKey2dependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,addDependency --> myDependencies,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,addDependency --> mySearchKey2dependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,addDependency --> myEventDispatcher,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,delete --> myDependencies,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,delete --> mySearchKey2dependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,delete --> myEventDispatcher,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,doClear --> myDependencies,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,doClear --> mySearchKey2dependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,getDependencies$2 --> <init>,net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,getDependencies$2 --> <init>,net.sourceforge.ganttproject.task.dependency.RangeSearchToKey,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,getDependenciesAsDependant --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,getDependenciesAsDependant --> <init>$2,net.sourceforge.ganttproject.task.dependency.SearchKey,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,getDependenciesAsDependee --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,getDependenciesAsDependee --> <init>$2,net.sourceforge.ganttproject.task.dependency.SearchKey,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,createMutator --> <init>$2,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,auxCreateDependency --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,auxCreateDependency --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,auxCreateDependency --> setConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,addDependency --> <init>$2,net.sourceforge.ganttproject.task.dependency.TaskDependencyException,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,addDependency --> <init>,net.sourceforge.ganttproject.task.dependency.SearchKey,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,addDependency --> fireDependencyAdded,net.sourceforge.ganttproject.task.dependency.EventDispatcher,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,delete --> getDependant,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,delete --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,delete --> getDependee,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,delete --> <init>$2,net.sourceforge.ganttproject.task.dependency.SearchKey,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,delete --> fireDependencyRemoved,net.sourceforge.ganttproject.task.dependency.EventDispatcher,);
EndClass 229
StartClass 230
Class(net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,N,N,Public);
Method(<init>,void,Public,N,N);
Method(getCollision,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$Collision,Public,N,N);
SuperClass(net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl);
Generalization(net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl);
Realization(net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,<init> --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,getCollision --> getDependency,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,getCollision --> getDependee,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,getCollision --> getDependant,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,getCollision --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,getCollision --> isStartFixed,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,getCollision --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,getCollision --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,getCollision --> getDuration,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,getCollision --> getLength$2,net.sourceforge.ganttproject.task.TaskLength,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,getCollision --> newAdd,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,getCollision --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,);
EndClass 230
StartClass 231
Class(net.sourceforge.ganttproject.task.TaskLengthImpl,N,N,Public);
Attribute(myUnit,net.sourceforge.ganttproject.time.TimeUnit,Private,N,Y,);
Attribute(myCount,long,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getLength,long,Public,N,N);
Method(getTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,N);
Method(setLength,void,Public,N,N);
Method(getLength$2,long,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(<init>,long,);
Parameter(setLength,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(setLength,long,);
Parameter(getLength$2,net.sourceforge.ganttproject.time.TimeUnit,);
Realization(net.sourceforge.ganttproject.task.TaskLength);
Composition(net.sourceforge.ganttproject.time.TimeUnit);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskLengthImpl,<init> --> myUnit,net.sourceforge.ganttproject.task.TaskLengthImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskLengthImpl,<init> --> myCount,net.sourceforge.ganttproject.task.TaskLengthImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskLengthImpl,getLength --> myCount,net.sourceforge.ganttproject.task.TaskLengthImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskLengthImpl,getTimeUnit --> myUnit,net.sourceforge.ganttproject.task.TaskLengthImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskLengthImpl,setLength --> myUnit,net.sourceforge.ganttproject.task.TaskLengthImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskLengthImpl,setLength --> myCount,net.sourceforge.ganttproject.task.TaskLengthImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskLengthImpl,getLength$2 --> myUnit,net.sourceforge.ganttproject.task.TaskLengthImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskLengthImpl,getLength$2 --> myCount,net.sourceforge.ganttproject.task.TaskLengthImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskLengthImpl,toString --> myCount,net.sourceforge.ganttproject.task.TaskLengthImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskLengthImpl,toString --> myUnit,net.sourceforge.ganttproject.task.TaskLengthImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskLengthImpl,toString --> getName,net.sourceforge.ganttproject.time.TimeUnit,);
EndClass 231
StartClass 232
Class(net.sourceforge.ganttproject.task.event.TaskDependencyEvent,N,N,Public);
Attribute(myDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,);
Parameter(<init>,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Composition(net.sourceforge.ganttproject.task.dependency.TaskDependency);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,<init> --> myDependency,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,getDependency --> myDependency,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,READ);
EndClass 232
StartClass 233
Class(net.sourceforge.ganttproject.time.TimeUnitManagerImpl,N,N,Public);
Attribute(myUnits,net.sourceforge.ganttproject.time.TimeUnit[],Private,N,N,);
Attribute(myTimeGraph,net.sourceforge.ganttproject.time.TimeUnitGraph,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,N);
Parameter(getTimeUnit,int,);
Realization(net.sourceforge.ganttproject.time.TimeUnitManager);
Composition(net.sourceforge.ganttproject.time.TimeUnitGraph);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitManagerImpl,<init> --> myTimeGraph,net.sourceforge.ganttproject.time.TimeUnitManagerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitManagerImpl,<init> --> myTimeGraph,net.sourceforge.ganttproject.time.TimeUnitManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitManagerImpl,<init> --> myUnits,net.sourceforge.ganttproject.time.TimeUnitManagerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitManagerImpl,getTimeUnit --> myUnits,net.sourceforge.ganttproject.time.TimeUnitManagerImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitManagerImpl,<init> --> <init>,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitManagerImpl,<init> --> createAtomTimeUnit,net.sourceforge.ganttproject.time.TimeUnitGraph,);
EndClass 233
StartClass 234
Class(net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,N,N,Public);
Method(<init>,void,Public,N,N);
Method(getCollision,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$Collision,Public,N,N);
SuperClass(net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl);
Generalization(net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl);
Realization(net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,<init> --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,getCollision --> getDependency,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,getCollision --> getDependee,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,getCollision --> getDependant,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,getCollision --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,getCollision --> isStartFixed,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,getCollision --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,getCollision --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,);
EndClass 234
StartClass 235
Class(net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeFactoryImpl,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.task.TaskManagerImpl,Public,N,Y,);
Method(<init>,void,Private,N,N);
Method(createFacede,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Public,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeFactoryImpl,);
Realization(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory);
Composition(net.sourceforge.ganttproject.task.TaskManagerImpl);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeFactoryImpl,<init>$2 --> <init>,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeFactoryImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeFactoryImpl,<init> --> this$0,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeFactoryImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeFactoryImpl,createFacede --> this$0,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeFactoryImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeFactoryImpl,createFacede --> access$0,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeFactoryImpl,createFacede --> <init>,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl,);
EndClass 235
StartClass 236
Class(net.sourceforge.ganttproject.task.event.TaskScheduleEvent,N,N,Public);
Attribute(myOldStartDate,net.sourceforge.ganttproject.GanttCalendar,Private,N,Y,);
Attribute(myOldFinishDate,net.sourceforge.ganttproject.GanttCalendar,Private,N,Y,);
Attribute(myNewStartDate,net.sourceforge.ganttproject.GanttCalendar,Private,N,Y,);
Attribute(myNewFinishDate,net.sourceforge.ganttproject.GanttCalendar,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getOldStartDate,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(getOldFinishDate,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(getNewStartDate,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(getNewFinishDate,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(<init>,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(<init>,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(<init>,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(<init>,net.sourceforge.ganttproject.GanttCalendar,);
Composition(net.sourceforge.ganttproject.GanttCalendar);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,<init> --> myOldStartDate,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,<init> --> myOldFinishDate,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,<init> --> myNewStartDate,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,<init> --> myNewFinishDate,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,getOldStartDate --> myOldStartDate,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,getOldFinishDate --> myOldFinishDate,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,getNewStartDate --> myNewStartDate,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,getNewFinishDate --> myNewFinishDate,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,READ);
EndClass 236
StartClass 237
Class(net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl,N,N,NA);
Attribute(myRoot,net.sourceforge.ganttproject.task.Task,Private,N,Y,);
Attribute(this$0,net.sourceforge.ganttproject.task.TaskManagerImpl,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getNestedTasks,net.sourceforge.ganttproject.task.Task[],Public,N,N);
Method(getRoot,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(getContainer,net.sourceforge.ganttproject.task.Task,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(getNestedTasks,net.sourceforge.ganttproject.task.Task,);
Parameter(getContainer,net.sourceforge.ganttproject.task.Task,);
Realization(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade);
Composition(net.sourceforge.ganttproject.task.Task);
Composition(net.sourceforge.ganttproject.task.TaskManagerImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl,<init> --> this$0,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl,<init> --> myRoot,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl,getRoot --> myRoot,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl,getNestedTasks --> getNestedTasks,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$FacadeImpl,getContainer --> getSupertask,net.sourceforge.ganttproject.task.Task,);
EndClass 237
StartClass 238
Class(net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,N,N,Public);
Attribute(myNewContainer,net.sourceforge.ganttproject.task.Task,Private,N,Y,);
Attribute(myTask,net.sourceforge.ganttproject.task.Task,Private,N,Y,);
Attribute(myOldContainer,net.sourceforge.ganttproject.task.Task,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getTask,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(getOldContainer,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(getNewContainer,net.sourceforge.ganttproject.task.Task,Public,N,N);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Composition(net.sourceforge.ganttproject.task.Task);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,<init> --> myNewContainer,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,<init> --> myTask,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,<init> --> myOldContainer,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,getTask --> myTask,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,getOldContainer --> myOldContainer,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,getNewContainer --> myNewContainer,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,READ);
EndClass 238
StartClass 239
Class(net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,N,N,Public);
Method(<init>,void,Public,N,N);
Method(getCollision,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$Collision,Public,N,N);
SuperClass(net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl);
Generalization(net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl);
Realization(net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,<init> --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,getCollision --> getDependency,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,getCollision --> getDependee,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,getCollision --> getDependant,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,getCollision --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,getCollision --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,getCollision --> isStartFixed,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,getCollision --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,getCollision --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,);
EndClass 239
StartClass 240
Class(net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,N,N,Public);
Method(<init>,void,Public,N,N);
Method(getCollision,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$Collision,Public,N,N);
SuperClass(net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl);
Generalization(net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl);
Realization(net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,<init> --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,getCollision --> getDependency,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,getCollision --> getDependee,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,getCollision --> getDependant,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,getCollision --> getStart,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,getCollision --> getEnd,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,getCollision --> isStartFixed,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,getCollision --> compareTo,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,getCollision --> getDuration,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,getCollision --> getLength$2,net.sourceforge.ganttproject.task.TaskLength,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,getCollision --> newAdd,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,getCollision --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,);
EndClass 240
StartClass 241
Class(net.sourceforge.ganttproject.task.TaskManagerImpl$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.task.TaskManagerImpl,Public,N,Y,);
Attribute(val$factory,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(createContainmentFacade,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Protected,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,);
SuperClass(net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl);
Generalization(net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl);
Composition(net.sourceforge.ganttproject.task.TaskManagerImpl);
Composition(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$2,<init> --> this$0,net.sourceforge.ganttproject.task.TaskManagerImpl$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$2,<init> --> val$factory,net.sourceforge.ganttproject.task.TaskManagerImpl$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$2,createContainmentFacade --> val$factory,net.sourceforge.ganttproject.task.TaskManagerImpl$2,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$2,<init> --> <init>,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$2,createContainmentFacade --> createFacede,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,);
EndClass 241
StartClass 242
Class(net.sourceforge.ganttproject.task.TaskManagerImpl$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.task.TaskManagerImpl,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(fireDependencyAdded,void,Public,N,N);
Method(fireDependencyRemoved,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Parameter(fireDependencyAdded,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Parameter(fireDependencyRemoved,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Realization(net.sourceforge.ganttproject.task.dependency.EventDispatcher);
Composition(net.sourceforge.ganttproject.task.TaskManagerImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$1,<init> --> this$0,net.sourceforge.ganttproject.task.TaskManagerImpl$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$1,fireDependencyAdded --> this$0,net.sourceforge.ganttproject.task.TaskManagerImpl$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$1,fireDependencyRemoved --> this$0,net.sourceforge.ganttproject.task.TaskManagerImpl$1,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$1,fireDependencyAdded --> access$1,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$1,fireDependencyRemoved --> access$2,net.sourceforge.ganttproject.task.TaskManagerImpl,);
EndClass 242
StartClass 243
Class(net.sourceforge.ganttproject.task.TaskManagerImpl$6,N,N,NA);
Method(<init>,void,Public,N,N);
Method(getDefaultColor,java.awt.Color,Public,N,N);
Realization(net.sourceforge.ganttproject.task.TaskManagerConfig);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$6,getDefaultColor --> DEFAULT_COLOR,net.sourceforge.ganttproject.task.Task,READ);
EndClass 243
StartClass 244
Class(net.sourceforge.ganttproject.task.TaskManagerImpl$5,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.task.TaskManagerImpl,Public,N,Y,);
Attribute(val$factory,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(createContainmentFacade,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Protected,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,);
SuperClass(net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm);
Generalization(net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm);
Composition(net.sourceforge.ganttproject.task.TaskManagerImpl);
Composition(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$5,<init> --> this$0,net.sourceforge.ganttproject.task.TaskManagerImpl$5,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$5,<init> --> val$factory,net.sourceforge.ganttproject.task.TaskManagerImpl$5,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$5,createContainmentFacade --> val$factory,net.sourceforge.ganttproject.task.TaskManagerImpl$5,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$5,<init> --> <init>,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$5,createContainmentFacade --> createFacede,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,);
EndClass 244
StartClass 245
Class(net.sourceforge.ganttproject.task.TaskManagerImpl$4,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.task.TaskManagerImpl,Public,N,Y,);
Attribute(val$factory,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(createContainmentFacade,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Protected,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Parameter(<init>,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,);
SuperClass(net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm);
SuperClass(net.sourceforge.ganttproject.task.algorithm.AlgorithmBase);
Generalization(net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm);
Composition(net.sourceforge.ganttproject.task.TaskManagerImpl);
Composition(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$4,<init> --> this$0,net.sourceforge.ganttproject.task.TaskManagerImpl$4,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$4,<init> --> val$factory,net.sourceforge.ganttproject.task.TaskManagerImpl$4,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$4,createContainmentFacade --> val$factory,net.sourceforge.ganttproject.task.TaskManagerImpl$4,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$4,<init> --> <init>,net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$4,createContainmentFacade --> createFacede,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,);
EndClass 245
StartClass 246
Class(net.sourceforge.ganttproject.task.TaskManagerImpl$3,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.task.TaskManagerImpl,Public,N,Y,);
Attribute(val$factory,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(createContainmentFacade,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Protected,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskManagerImpl,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,);
SuperClass(net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm);
SuperClass(net.sourceforge.ganttproject.task.algorithm.AlgorithmBase);
Generalization(net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm);
Composition(net.sourceforge.ganttproject.task.TaskManagerImpl);
Composition(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$3,<init> --> this$0,net.sourceforge.ganttproject.task.TaskManagerImpl$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$3,<init> --> val$factory,net.sourceforge.ganttproject.task.TaskManagerImpl$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskManagerImpl$3,createContainmentFacade --> val$factory,net.sourceforge.ganttproject.task.TaskManagerImpl$3,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$3,<init> --> <init>,net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskManagerImpl$3,createContainmentFacade --> createFacede,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade$Factory,);
EndClass 246
StartClass 247
Class(net.sourceforge.ganttproject.task.dependency.EventDispatcher,Y,Y,Public);
Method(fireDependencyAdded,void,Public,N,Y);
Method(fireDependencyRemoved,void,Public,N,Y);
Parameter(fireDependencyAdded,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Parameter(fireDependencyRemoved,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
EndClass 247
StartClass 248
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$Collision,Y,Y,Public);
Attribute(NO_VARIATION,int,Public,Y,Y,);
Attribute(START_EARLIER_VARIATION,int,Public,Y,Y,);
Attribute(START_LATER_VARIATION,int,Public,Y,Y,);
Method(getAcceptableStart,net.sourceforge.ganttproject.GanttCalendar,Public,N,Y);
Method(getVariation,int,Public,N,Y);
Method(isActive,boolean,Public,N,Y);
EndClass 248
StartClass 249
Class(net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection,Y,Y,NA);
Method(addAssignment,net.sourceforge.ganttproject.task.ResourceAssignment,Public,N,Y);
Method(deleteAssignment,void,Public,N,Y);
Parameter(addAssignment,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(deleteAssignment,net.sourceforge.ganttproject.resource.ProjectResource,);
EndClass 249
StartClass 250
Class(net.sourceforge.ganttproject.task.ResourceAssignmentMutator,Y,Y,Public);
Method(commit,void,Public,N,Y);
Realization(net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection);
EndClass 250
StartClass 251
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,N,N,Public);
Attribute(myAcceptableStart,net.sourceforge.ganttproject.GanttCalendar,Private,N,Y,);
Attribute(myVariation,int,Private,N,Y,);
Attribute(isActive,boolean,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getAcceptableStart,net.sourceforge.ganttproject.GanttCalendar,Public,N,N);
Method(getVariation,int,Public,N,N);
Method(isActive,boolean,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(<init>,int,);
Parameter(<init>,boolean,);
Realization(net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$Collision);
Composition(net.sourceforge.ganttproject.GanttCalendar);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,<init> --> myAcceptableStart,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,<init> --> myVariation,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,<init> --> isActive,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,getAcceptableStart --> myAcceptableStart,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,getVariation --> myVariation,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,isActive --> isActive,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint$DefaultCollision,READ);
EndClass 251
StartClass 252
Class(net.sourceforge.ganttproject.time.TextFormatter,Y,Y,Public);
Method(format,java.lang.String,Public,N,Y);
Parameter(format,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(format,java.util.Date,);
EndClass 252
StartClass 253
Class(net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,N,Y,NA);
Attribute(myPages,java.util.ArrayList,Private,N,Y,);
Attribute(myCurrentPage,int,Private,N,N,);
Attribute(myPagesContainer,javax.swing.JPanel,Private,N,N,);
Attribute(myCardLayout,java.awt.CardLayout,Private,N,N,);
Attribute(myNextAction,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction,Private,N,N,);
Attribute(myBackAction,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(nextPage,void,Public,N,N);
Method(backPage,void,Public,N,N);
Method(show,void,Public,N,N);
Method(adjustButtonState,void,Private,N,N);
Method(createNextButton,javax.swing.JButton,Private,N,N);
Method(createBackButton,javax.swing.JButton,Private,N,N);
Method(createOkButton,javax.swing.JButton,Private,N,N);
Method(addPage,void,Protected,N,N);
Method(getCurrentPage,net.sourceforge.ganttproject.gui.projectwizard.WizardPage,Private,N,N);
Method(access$0,net.sourceforge.ganttproject.gui.projectwizard.WizardPage,Public,Y,N);
Parameter(<init>,javax.swing.JFrame,);
Parameter(<init>,java.lang.String,);
Parameter(addPage,net.sourceforge.ganttproject.gui.projectwizard.WizardPage,);
Parameter(access$0,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
SubClass(net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow);
Composition(net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction);
Composition(net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,nextPage --> getCurrentPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,nextPage --> adjustButtonState,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,backPage --> getCurrentPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,backPage --> adjustButtonState,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,show --> createBackButton,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,show --> createNextButton,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,show --> createOkButton,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,show --> adjustButtonState,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,access$0 --> getCurrentPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,<init> --> myCardLayout,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,<init> --> myPages,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,<init> --> myCardLayout,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,<init> --> myPagesContainer,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,<init> --> myNextAction,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,<init> --> myBackAction,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,nextPage --> myCurrentPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,nextPage --> myPages,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,nextPage --> myCardLayout,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,nextPage --> myPagesContainer,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,nextPage --> myCurrentPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,backPage --> myCurrentPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,backPage --> myCardLayout,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,backPage --> myPagesContainer,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,backPage --> myCurrentPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,show --> myPages,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,show --> myPagesContainer,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,show --> myCardLayout,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,adjustButtonState --> myBackAction,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,adjustButtonState --> myNextAction,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,adjustButtonState --> myCurrentPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,adjustButtonState --> myPages,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,createNextButton --> myNextAction,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,createBackButton --> myBackAction,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,addPage --> myPages,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,getCurrentPage --> myPages,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,getCurrentPage --> myCurrentPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,<init> --> <init>,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,<init> --> <init>,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,nextPage --> setActive,net.sourceforge.ganttproject.gui.projectwizard.WizardPage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,backPage --> setActive,net.sourceforge.ganttproject.gui.projectwizard.WizardPage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,show --> getTitle,net.sourceforge.ganttproject.gui.projectwizard.WizardPage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,show --> <init>,net.sourceforge.ganttproject.gui.options.TopPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,show --> getComponent,net.sourceforge.ganttproject.gui.projectwizard.WizardPage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,show --> center,net.sourceforge.ganttproject.gui.DialogAligner,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,createOkButton --> <init>,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$OkAction,);
EndClass 253
StartClass 254
Class(net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,N,N,Public);
Attribute(myI18N,net.sourceforge.ganttproject.gui.projectwizard.I18N,Private,N,Y,);
Attribute(myListModel,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getTitle,java.lang.String,Public,N,N);
Method(getComponent,java.awt.Component,Public,N,N);
Method(setActive,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.roles.RoleSet[],);
Parameter(<init>,net.sourceforge.ganttproject.gui.projectwizard.I18N,);
Parameter(setActive,boolean,);
Parameter(access$0,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,);
Realization(net.sourceforge.ganttproject.gui.projectwizard.WizardPage);
Composition(net.sourceforge.ganttproject.gui.projectwizard.I18N);
Composition(net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,<init> --> myI18N,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,<init> --> myListModel,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,getTitle --> myI18N,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,getComponent --> myListModel,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,access$0 --> myListModel,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,<init> --> <init>,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,getTitle --> getProjectDomainPageTitle,net.sourceforge.ganttproject.gui.projectwizard.I18N,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,getComponent --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,getComponent --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,getComponent --> getCellRenderer,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,getComponent --> <init>,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,);
EndClass 254
StartClass 255
Class(net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,N,N,Public);
Attribute(myI18N,net.sourceforge.ganttproject.gui.projectwizard.I18N,Private,N,Y,);
Attribute(myProjectSettingsPanel,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getTitle,java.lang.String,Public,N,N);
Method(getComponent,java.awt.Component,Public,N,N);
Method(setActive,void,Public,N,N);
Parameter(<init>,java.awt.Frame,);
Parameter(<init>,net.sourceforge.ganttproject.IGanttProject,);
Parameter(<init>,net.sourceforge.ganttproject.gui.projectwizard.I18N,);
Parameter(setActive,boolean,);
Realization(net.sourceforge.ganttproject.gui.projectwizard.WizardPage);
Composition(net.sourceforge.ganttproject.gui.projectwizard.I18N);
Composition(net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,<init> --> myProjectSettingsPanel,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,<init> --> myI18N,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,getTitle --> myI18N,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,getComponent --> myProjectSettingsPanel,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,setActive --> myProjectSettingsPanel,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,<init> --> <init>,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,getTitle --> getNewProjectWizardWindowTitle,net.sourceforge.ganttproject.gui.projectwizard.I18N,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage,setActive --> applyChanges,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,);
EndClass 255
StartClass 256
Class(net.sourceforge.ganttproject.gui.projectwizard.WizardPage,Y,Y,Public);
Method(getTitle,java.lang.String,Public,N,Y);
Method(getComponent,java.awt.Component,Public,N,Y);
Method(setActive,void,Public,N,Y);
Parameter(setActive,boolean,);
EndClass 256
StartClass 257
Class(net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer,N,N,Public);
Attribute(this$0,net.sourceforge.ganttproject.gui.GeneralDialog,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getTreeCellRendererComponent,java.awt.Component,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GeneralDialog,);
Parameter(getTreeCellRendererComponent,javax.swing.JTree,);
Parameter(getTreeCellRendererComponent,java.lang.Object,);
Parameter(getTreeCellRendererComponent,boolean,);
Parameter(getTreeCellRendererComponent,boolean,);
Parameter(getTreeCellRendererComponent,boolean,);
Parameter(getTreeCellRendererComponent,int,);
Parameter(getTreeCellRendererComponent,boolean,);
Composition(net.sourceforge.ganttproject.gui.GeneralDialog);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer,<init> --> this$0,net.sourceforge.ganttproject.gui.GeneralDialog$SettinsDefaultTreeCellRenderer,WRITE);
EndClass 257
StartClass 258
Class(net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel$1,<init> --> this$0,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel$1,actionPerformed --> tfXsl,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel$1,actionPerformed --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel$1,actionPerformed --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel$1,actionPerformed --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel$1,actionPerformed --> access$0,net.sourceforge.ganttproject.gui.options.HTMLSettingsPanel,);
EndClass 258
StartClass 259
Class(net.sourceforge.ganttproject.gui.options.TopPanel$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.options.TopPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(paint,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.TopPanel,);
Parameter(<init>,java.awt.LayoutManager,);
Parameter(paint,java.awt.Graphics,);
Composition(net.sourceforge.ganttproject.gui.options.TopPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.TopPanel$1,<init> --> this$0,net.sourceforge.ganttproject.gui.options.TopPanel$1,WRITE);
EndClass 259
StartClass 260
Class(net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel,N,N,NA);
Attribute(icon,javax.swing.Icon,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.gui.options.TopPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(paintComponent,void,Public,N,N);
Method(getPreferredSize,java.awt.Dimension,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.TopPanel,);
Parameter(paintComponent,java.awt.Graphics,);
Composition(net.sourceforge.ganttproject.gui.options.TopPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel,<init> --> this$0,net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel,<init> --> icon,net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel,paintComponent --> icon,net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.TopPanel$myIconPanel,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 260
StartClass 261
Class(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,Public,N,Y,);
Attribute(val$colorChooserTitle,java.lang.String,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,);
Parameter(<init>,java.lang.String,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Parameter(access$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,);
Composition(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,<init> --> this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,<init> --> val$colorChooserTitle,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,actionPerformed --> val$colorChooserTitle,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,access$0 --> this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,actionPerformed --> colorChooser,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,actionPerformed --> bResourceOverloadColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$2,);
EndClass 261
StartClass 262
Class(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,Public,N,Y,);
Attribute(val$colorChooserTitle,java.lang.String,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,);
Parameter(<init>,java.lang.String,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Parameter(access$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,);
Composition(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,<init> --> this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,<init> --> val$colorChooserTitle,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,actionPerformed --> val$colorChooserTitle,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,access$0 --> this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,actionPerformed --> colorChooser,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,actionPerformed --> bResourceColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$2,);
EndClass 262
StartClass 263
Class(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,Public,N,Y,);
Attribute(val$colorChooserTitle,java.lang.String,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,);
Parameter(<init>,java.lang.String,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Parameter(access$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,);
Composition(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,<init> --> this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,<init> --> val$colorChooserTitle,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,actionPerformed --> val$colorChooserTitle,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,access$0 --> this$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,actionPerformed --> colorChooser,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,actionPerformed --> bTaskColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$2,);
EndClass 263
StartClass 264
Class(net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,<init> --> this$0,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,actionPerformed --> tfWebLink,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,actionPerformed --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,actionPerformed --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,actionPerformed --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,actionPerformed --> displayURL,net.sourceforge.ganttproject.util.BrowserControl,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,actionPerformed --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel$1,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
EndClass 264
StartClass 265
Class(net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.options.PDFSettingsPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,<init> --> this$0,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,actionPerformed --> tfXslFo,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,actionPerformed --> language,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,actionPerformed --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,actionPerformed --> <init>,net.sourceforge.ganttproject.filter.GanttXSLFileFilter,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,actionPerformed --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel$1,actionPerformed --> access$0,net.sourceforge.ganttproject.gui.options.PDFSettingsPanel,);
EndClass 265
StartClass 266
Class(net.sourceforge.ganttproject.gui.RolesTableModel,N,N,Public);
Attribute(columnNames,java.lang.String[],Public,N,Y,);
Attribute(data,java.lang.Object[][],Public,N,Y,);
Attribute(myRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getColumnCount,int,Public,N,N);
Method(getRowCount,int,Public,N,N);
Method(getColumnName,java.lang.String,Public,N,N);
Method(getValueAt,java.lang.Object,Public,N,N);
Method(isCellEditable,boolean,Public,N,N);
Method(setValueAt,void,Public,N,N);
Method(getRoleManager,net.sourceforge.ganttproject.roles.RoleManager,Public,N,N);
Method(hasChanges,boolean,Public,N,N);
Method(applyChanges,void,Public,N,N);
Parameter(getColumnName,int,);
Parameter(getValueAt,int,);
Parameter(getValueAt,int,);
Parameter(isCellEditable,int,);
Parameter(isCellEditable,int,);
Parameter(setValueAt,java.lang.Object,);
Parameter(setValueAt,int,);
Parameter(setValueAt,int,);
Composition(net.sourceforge.ganttproject.roles.RoleManager);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,<init> --> getRoleManager,net.sourceforge.ganttproject.gui.RolesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,hasChanges --> getRoleManager,net.sourceforge.ganttproject.gui.RolesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,hasChanges --> getValueAt,net.sourceforge.ganttproject.gui.RolesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,hasChanges --> getRowCount,net.sourceforge.ganttproject.gui.RolesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,applyChanges --> getRoleManager,net.sourceforge.ganttproject.gui.RolesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,applyChanges --> getValueAt,net.sourceforge.ganttproject.gui.RolesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,applyChanges --> getRowCount,net.sourceforge.ganttproject.gui.RolesTableModel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.RolesTableModel,<init> --> data,net.sourceforge.ganttproject.gui.RolesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.RolesTableModel,<init> --> columnNames,net.sourceforge.ganttproject.gui.RolesTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.RolesTableModel,<init> --> data,net.sourceforge.ganttproject.gui.RolesTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.RolesTableModel,<init> --> myRoleManager,net.sourceforge.ganttproject.gui.RolesTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.RolesTableModel,getColumnCount --> columnNames,net.sourceforge.ganttproject.gui.RolesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.RolesTableModel,getRowCount --> data,net.sourceforge.ganttproject.gui.RolesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.RolesTableModel,getColumnName --> columnNames,net.sourceforge.ganttproject.gui.RolesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.RolesTableModel,getValueAt --> data,net.sourceforge.ganttproject.gui.RolesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.RolesTableModel,setValueAt --> data,net.sourceforge.ganttproject.gui.RolesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.RolesTableModel,getRoleManager --> myRoleManager,net.sourceforge.ganttproject.gui.RolesTableModel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,<init> --> getInstance,net.sourceforge.ganttproject.roles.RoleManager$Access,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,<init> --> getProjectLevelRoles,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,<init> --> getName,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,hasChanges --> getProjectLevelRoles,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,hasChanges --> getName,net.sourceforge.ganttproject.roles.Role,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,applyChanges --> getProjectRoleSet,net.sourceforge.ganttproject.roles.RoleManager,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,applyChanges --> clear,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.gui.RolesTableModel,applyChanges --> add,net.sourceforge.ganttproject.roles.RoleManager,);
EndClass 266
StartClass 267
Class(net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,N,N,NA);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(columnNames,java.lang.String[],Public,N,Y,);
Attribute(columnClasses,java.lang.Class[],Public,N,Y,);
Attribute(data,java.util.Vector,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(addField,void,Public,N,N);
Method(getColumnCount,int,Public,N,N);
Method(getRowCount,int,Public,N,N);
Method(getColumnName,java.lang.String,Public,N,N);
Method(getColumnClass,java.lang.Class,Public,N,N);
Method(getValueAt,java.lang.Object,Public,N,N);
Method(isCellEditable,boolean,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,);
Parameter(addField,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,);
Parameter(getColumnName,int,);
Parameter(getColumnClass,int,);
Parameter(getValueAt,int,);
Parameter(getValueAt,int,);
Parameter(isCellEditable,int,);
Parameter(isCellEditable,int,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.gui.about.AboutLibraryPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,<init> --> language,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,<init> --> this$0,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,<init> --> language,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,<init> --> columnNames,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,<init> --> columnClasses,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,<init> --> data,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,addField --> data,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,getColumnCount --> columnNames,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,getRowCount --> data,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,getColumnName --> columnNames,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,getColumnClass --> columnClasses,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,getValueAt --> data,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,getValueAt --> getName,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,getValueAt --> getWeb,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryFieldTableModel,getValueAt --> getComment,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,);
EndClass 267
StartClass 268
Class(net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,N,N,NA);
Attribute(libName,java.lang.String,Private,N,N,);
Attribute(libWeb,java.lang.String,Private,N,N,);
Attribute(libComment,java.lang.String,Private,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(getWeb,java.lang.String,Public,N,N);
Method(getComment,java.lang.String,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Composition(net.sourceforge.ganttproject.gui.about.AboutLibraryPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,<init> --> this$0,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,<init> --> libName,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,<init> --> libWeb,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,<init> --> libComment,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,getName --> libName,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,getWeb --> libWeb,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,getComment --> libComment,net.sourceforge.ganttproject.gui.about.AboutLibraryPanel$LibraryInfo,READ);
EndClass 268
StartClass 269
Class(net.sourceforge.ganttproject.gui.about.AboutPanel$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.about.AboutPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.about.AboutPanel,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.about.AboutPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutPanel$2,<init> --> this$0,net.sourceforge.ganttproject.gui.about.AboutPanel$2,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutPanel$2,actionPerformed --> displayURL,net.sourceforge.ganttproject.util.BrowserControl,);
EndClass 269
StartClass 270
Class(net.sourceforge.ganttproject.gui.about.AboutPanel$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.about.AboutPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(paint,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.about.AboutPanel,);
Parameter(<init>,javax.swing.Icon,);
Parameter(paint,java.awt.Graphics,);
Composition(net.sourceforge.ganttproject.gui.about.AboutPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutPanel$1,<init> --> this$0,net.sourceforge.ganttproject.gui.about.AboutPanel$1,WRITE);
EndClass 270
StartClass 271
Class(net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,N,N,NA);
Attribute(name,java.lang.String,Private,N,N,);
Attribute(value,java.lang.String,Private,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(getValue,java.lang.String,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Composition(net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,<init> --> this$0,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,<init> --> name,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,<init> --> value,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,getName --> name,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,getValue --> value,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,READ);
EndClass 271
StartClass 272
Class(net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,N,N,NA);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(columnNames,java.lang.String[],Public,N,Y,);
Attribute(columnClasses,java.lang.Class[],Public,N,Y,);
Attribute(data,java.util.Vector,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(addField,void,Public,N,N);
Method(getColumnCount,int,Public,N,N);
Method(getRowCount,int,Public,N,N);
Method(getColumnName,java.lang.String,Public,N,N);
Method(getColumnClass,java.lang.Class,Public,N,N);
Method(getValueAt,java.lang.Object,Public,N,N);
Method(isCellEditable,boolean,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel,);
Parameter(addField,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,);
Parameter(getColumnName,int,);
Parameter(getColumnClass,int,);
Parameter(getValueAt,int,);
Parameter(getValueAt,int,);
Parameter(isCellEditable,int,);
Parameter(isCellEditable,int,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,<init> --> language,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,<init> --> this$0,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,<init> --> language,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,<init> --> columnNames,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,<init> --> columnClasses,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,<init> --> data,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,addField --> data,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,getColumnCount --> columnNames,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,getRowCount --> data,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,getColumnName --> columnNames,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,getColumnClass --> columnClasses,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,getValueAt --> data,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,getValueAt --> getName,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$AboutFieldTableModel,getValueAt --> getValue,net.sourceforge.ganttproject.gui.about.AboutJavaInfosPanel$SystemInfo,);
EndClass 272
StartClass 273
Class(net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,N,N,NA);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,N,);
Attribute(columnNames,java.lang.String[],Public,N,Y,);
Attribute(columnClasses,java.lang.Class[],Public,N,Y,);
Attribute(data,java.util.Vector,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(addField,void,Public,N,N);
Method(getColumnCount,int,Public,N,N);
Method(getRowCount,int,Public,N,N);
Method(getColumnName,java.lang.String,Public,N,N);
Method(getColumnClass,java.lang.Class,Public,N,N);
Method(getValueAt,java.lang.Object,Public,N,N);
Method(isCellEditable,boolean,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,);
Parameter(addField,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,);
Parameter(getColumnName,int,);
Parameter(getColumnClass,int,);
Parameter(getValueAt,int,);
Parameter(getValueAt,int,);
Parameter(isCellEditable,int,);
Parameter(isCellEditable,int,);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.gui.about.AboutAuthorPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,<init> --> language,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,<init> --> this$0,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,<init> --> language,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,<init> --> columnNames,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,<init> --> columnClasses,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,<init> --> data,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,addField --> data,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,getColumnCount --> columnNames,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,getRowCount --> data,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,getColumnName --> columnNames,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,getColumnClass --> columnClasses,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,getValueAt --> data,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,getValueAt --> getName,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,);
Call(METHOD,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsFieldTableModel,getValueAt --> getMail,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,);
EndClass 273
StartClass 274
Class(net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,N,N,NA);
Attribute(name,java.lang.String,Private,N,N,);
Attribute(mail,java.lang.String,Private,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(getMail,java.lang.String,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Composition(net.sourceforge.ganttproject.gui.about.AboutAuthorPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,<init> --> this$0,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,<init> --> name,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,<init> --> mail,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,getName --> name,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,getMail --> mail,net.sourceforge.ganttproject.gui.about.AboutAuthorPanel$AuthorsInfo,READ);
EndClass 274
StartClass 275
Class(net.sourceforge.ganttproject.gui.GanttCellListRenderer,N,N,Public);
Method(<init>,void,Public,N,N);
Method(getListCellRendererComponent,java.awt.Component,Public,N,N);
Parameter(getListCellRendererComponent,javax.swing.JList,);
Parameter(getListCellRendererComponent,java.lang.Object,);
Parameter(getListCellRendererComponent,int,);
Parameter(getListCellRendererComponent,boolean,);
Parameter(getListCellRendererComponent,boolean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttCellListRenderer,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttCellListRenderer,<init> --> getComponentOrientation,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 275
StartClass 276
Class(net.sourceforge.ganttproject.gui.GanttDialogPerson$5,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogPerson);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson$5,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson$5,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson$5,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson$5,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson$5,actionPerformed --> access$4,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
EndClass 276
StartClass 277
Class(net.sourceforge.ganttproject.gui.GanttDialogPerson$4,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogPerson);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson$4,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson$4,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson$4,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson$4,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson$4,actionPerformed --> access$3,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
EndClass 277
StartClass 278
Class(net.sourceforge.ganttproject.gui.GanttDialogPerson$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(windowClosing,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Parameter(windowClosing,java.awt.event.WindowEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogPerson);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson$1,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson$1,windowClosing --> this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson$1,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson$1,windowClosing --> access$0,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
EndClass 278
StartClass 279
Class(net.sourceforge.ganttproject.gui.GanttDialogPerson$3,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogPerson);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson$3,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson$3,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson$3,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson$3,actionPerformed --> access$2,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
EndClass 279
StartClass 280
Class(net.sourceforge.ganttproject.gui.GanttDialogPerson$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogPerson);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson$2,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogPerson$2,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttDialogPerson$2,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogPerson$2,actionPerformed --> access$1,net.sourceforge.ganttproject.gui.GanttDialogPerson,);
EndClass 280
StartClass 281
Class(net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor$1,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(focusGained,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,);
Parameter(focusGained,java.awt.event.FocusEvent,);
Composition(net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor$1,<init> --> this$1,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor$1,focusGained --> this$1,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor$1,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor$1,focusGained --> access$0,net.sourceforge.ganttproject.GanttTree$GanttTreeCellEditor,);
EndClass 281
StartClass 282
Class(net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener$1,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener$1,<init> --> this$1,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener$1,actionPerformed --> this$1,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener$1,READ);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener$1,actionPerformed --> access$1,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener$1,actionPerformed --> access$2,net.sourceforge.ganttproject.GanttTree,);
Call(METHOD,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener$1,actionPerformed --> access$0,net.sourceforge.ganttproject.GanttTree$GanttTreeDropListener,);
EndClass 282
StartClass 283
Class(net.sourceforge.ganttproject.export.JDKFontLocator,N,N,Public);
Attribute(myFontMetricsStorage,net.sourceforge.ganttproject.export.FontMetricsStorage,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getFontRecords,net.sourceforge.ganttproject.export.FontRecord[],Public,N,N);
Method(populateWithTriplets,void,Private,N,N);
Parameter(populateWithTriplets,net.sourceforge.ganttproject.export.FontRecord,);
Composition(net.sourceforge.ganttproject.export.FontMetricsStorage);
Call(METHOD,net.sourceforge.ganttproject.export.JDKFontLocator,getFontRecords --> populateWithTriplets,net.sourceforge.ganttproject.export.JDKFontLocator,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.JDKFontLocator,<init> --> myFontMetricsStorage,net.sourceforge.ganttproject.export.JDKFontLocator,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.JDKFontLocator,getFontRecords --> myFontMetricsStorage,net.sourceforge.ganttproject.export.JDKFontLocator,READ);
Call(METHOD,net.sourceforge.ganttproject.export.JDKFontLocator,<init> --> <init>,net.sourceforge.ganttproject.export.FontMetricsStorage,);
Call(METHOD,net.sourceforge.ganttproject.export.JDKFontLocator,getFontRecords --> <init>,net.sourceforge.ganttproject.export.JDKFontLocator$1,);
Call(METHOD,net.sourceforge.ganttproject.export.JDKFontLocator,getFontRecords --> <init>,net.sourceforge.ganttproject.export.FontRecord,);
Call(METHOD,net.sourceforge.ganttproject.export.JDKFontLocator,getFontRecords --> getMetricsLocation,net.sourceforge.ganttproject.export.FontRecord,);
Call(METHOD,net.sourceforge.ganttproject.export.JDKFontLocator,populateWithTriplets --> getTTFFile,net.sourceforge.ganttproject.export.FontRecord,);
Call(METHOD,net.sourceforge.ganttproject.export.JDKFontLocator,populateWithTriplets --> isItalic,net.sourceforge.ganttproject.export.TTFFileExt,);
Call(METHOD,net.sourceforge.ganttproject.export.JDKFontLocator,populateWithTriplets --> isBold,net.sourceforge.ganttproject.export.TTFFileExt,);
Call(METHOD,net.sourceforge.ganttproject.export.JDKFontLocator,populateWithTriplets --> <init>,net.sourceforge.ganttproject.export.FontTriplet,);
Call(METHOD,net.sourceforge.ganttproject.export.JDKFontLocator,populateWithTriplets --> addTriplet,net.sourceforge.ganttproject.export.FontRecord,);
EndClass 283
StartClass 284
Class(net.sourceforge.ganttproject.export.TTFFileExt,N,N,NA);
Attribute(myFile,java.io.File,Private,N,Y,);
Attribute(myAwtFont,java.awt.Font,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(isItalic,boolean,Public,N,N);
Method(isBold,boolean,Public,N,N);
Method(getFile,java.io.File,Public,N,N);
Method(getAwtFont,java.awt.Font,Private,N,N);
Parameter(<init>,java.io.File,);
Call(METHOD,net.sourceforge.ganttproject.export.TTFFileExt,isBold --> getAwtFont,net.sourceforge.ganttproject.export.TTFFileExt,);
Call(METHOD,net.sourceforge.ganttproject.export.TTFFileExt,getAwtFont --> getFile,net.sourceforge.ganttproject.export.TTFFileExt,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.TTFFileExt,<init> --> myFile,net.sourceforge.ganttproject.export.TTFFileExt,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.TTFFileExt,getFile --> myFile,net.sourceforge.ganttproject.export.TTFFileExt,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.TTFFileExt,getAwtFont --> myAwtFont,net.sourceforge.ganttproject.export.TTFFileExt,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.TTFFileExt,getAwtFont --> myAwtFont,net.sourceforge.ganttproject.export.TTFFileExt,WRITE);
EndClass 284
StartClass 285
Class(net.sourceforge.ganttproject.export.FontMetricsStorage,N,N,Public);
Method(<init>,void,Public,N,N);
Method(getFontMetricsURI,java.net.URI,Public,N,N);
Parameter(getFontMetricsURI,net.sourceforge.ganttproject.export.TTFFileExt,);
Call(METHOD,net.sourceforge.ganttproject.export.FontMetricsStorage,getFontMetricsURI --> getFile,net.sourceforge.ganttproject.export.TTFFileExt,);
EndClass 285
StartClass 286
Class(net.sourceforge.ganttproject.roles.RoleSetImpl,N,N,Public);
Attribute(myName,java.lang.String,Private,N,Y,);
Attribute(myRoles,java.util.ArrayList,Private,N,Y,);
Attribute(isEnabled,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(getRoles,net.sourceforge.ganttproject.roles.Role[],Public,N,N);
Method(createRole,net.sourceforge.ganttproject.roles.Role,Public,N,N);
Method(deleteRole,void,Public,N,N);
Method(findRole,net.sourceforge.ganttproject.roles.Role,Public,N,N);
Method(isEnabled,boolean,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(setEnabled,void,Public,N,N);
Method(isEmpty,boolean,Public,N,N);
Method(clear,void,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(createRole,java.lang.String,);
Parameter(createRole,int,);
Parameter(deleteRole,net.sourceforge.ganttproject.roles.Role,);
Parameter(findRole,int,);
Parameter(setEnabled,boolean,);
Realization(net.sourceforge.ganttproject.roles.RoleSet);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleSetImpl,<init>$2 --> <init>,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleSetImpl,toString --> getName,net.sourceforge.ganttproject.roles.RoleSetImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleSetImpl,<init> --> myRoles,net.sourceforge.ganttproject.roles.RoleSetImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleSetImpl,<init> --> myName,net.sourceforge.ganttproject.roles.RoleSetImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleSetImpl,getName --> myName,net.sourceforge.ganttproject.roles.RoleSetImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleSetImpl,getRoles --> myRoles,net.sourceforge.ganttproject.roles.RoleSetImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleSetImpl,createRole --> myRoles,net.sourceforge.ganttproject.roles.RoleSetImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleSetImpl,deleteRole --> myRoles,net.sourceforge.ganttproject.roles.RoleSetImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleSetImpl,findRole --> myRoles,net.sourceforge.ganttproject.roles.RoleSetImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleSetImpl,isEnabled --> isEnabled,net.sourceforge.ganttproject.roles.RoleSetImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleSetImpl,setEnabled --> isEnabled,net.sourceforge.ganttproject.roles.RoleSetImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleSetImpl,isEmpty --> myRoles,net.sourceforge.ganttproject.roles.RoleSetImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleSetImpl,clear --> myRoles,net.sourceforge.ganttproject.roles.RoleSetImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleSetImpl,createRole --> <init>,net.sourceforge.ganttproject.roles.RoleImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleSetImpl,findRole --> getID,net.sourceforge.ganttproject.roles.Role,);
EndClass 286
StartClass 287
Class(net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,N,N,NA);
Attribute(myAssignments,java.util.Map,Private,N,Y,);
Attribute(myTask,net.sourceforge.ganttproject.task.TaskImpl,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Private,N,N);
Method(getAssignments,net.sourceforge.ganttproject.task.ResourceAssignment[],Public,N,N);
Method(getAssignment,net.sourceforge.ganttproject.task.ResourceAssignment,Public,N,N);
Method(createMutator,net.sourceforge.ganttproject.task.ResourceAssignmentMutator,Public,N,N);
Method(copy,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,Public,N,N);
Method(addAssignment,net.sourceforge.ganttproject.task.ResourceAssignment,Public,N,N);
Method(deleteAssignment,void,Public,N,N);
Method(auxAddAssignment,net.sourceforge.ganttproject.task.ResourceAssignment,Private,N,N);
Method(addAssignment$2,void,Private,N,N);
Method(getTask,net.sourceforge.ganttproject.task.Task,Private,N,N);
Method(access$0,net.sourceforge.ganttproject.task.Task,Public,Y,N);
Method(access$1,java.util.Map,Public,Y,N);
Method(access$2,net.sourceforge.ganttproject.task.ResourceAssignment,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Parameter(getAssignment,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(addAssignment,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(deleteAssignment,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(auxAddAssignment,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(addAssignment$2,net.sourceforge.ganttproject.task.ResourceAssignment,);
Parameter(access$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Parameter(access$1,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Parameter(access$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Parameter(access$2,net.sourceforge.ganttproject.resource.ProjectResource,);
Realization(net.sourceforge.ganttproject.task.ResourceAssignmentCollection);
Composition(net.sourceforge.ganttproject.task.TaskImpl);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,<init>$2 --> getAssignments,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,<init>$2 --> addAssignment$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,copy --> <init>$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,addAssignment --> auxAddAssignment,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,auxAddAssignment --> addAssignment$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,access$0 --> getTask,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,access$2 --> auxAddAssignment,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,<init> --> myAssignments,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,<init> --> myTask,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,<init>$2 --> myTask,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,<init>$2 --> myAssignments,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,<init>$2 --> myTask,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,getAssignments --> myAssignments,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,getAssignment --> myAssignments,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,deleteAssignment --> myAssignments,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,addAssignment$2 --> myAssignments,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,getTask --> myTask,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,access$1 --> myAssignments,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,<init>$2 --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,<init>$2 --> <init>,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,<init>$2 --> getLoad,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,<init>$2 --> setLoad,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,createMutator --> <init>$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,auxAddAssignment --> <init>,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,addAssignment$2 --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
EndClass 287
StartClass 288
Class(net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,N,N,Public);
Attribute(myTask,net.sourceforge.ganttproject.task.Task,Private,N,N,);
Attribute(myContainerItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,Private,N,N,);
Attribute(myFirstNestedItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,Private,N,N,);
Attribute(myNextSiblingItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,Private,N,N,);
Attribute(EMPTY_ARRAY,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem[],Private,Y,Y,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(getTask,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(getContainerItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,Public,N,N);
Method(getNestedItems,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem[],Public,N,N);
Method(addNestedItem,void,Public,N,N);
Method(delete,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(<init>,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,);
Parameter(addNestedItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,);
Composition(net.sourceforge.ganttproject.task.Task);
Composition(net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem);
Call(METHOD,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,<init> --> addNestedItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,<clinit> --> EMPTY_ARRAY,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,<init> --> myContainerItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,<init> --> myTask,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,<init> --> myContainerItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,getTask --> myTask,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,getContainerItem --> myContainerItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,getNestedItems --> myFirstNestedItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,getNestedItems --> EMPTY_ARRAY,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,getNestedItems --> myNextSiblingItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,addNestedItem --> myFirstNestedItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,addNestedItem --> myNextSiblingItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,addNestedItem --> myContainerItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,addNestedItem --> myFirstNestedItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,delete --> myContainerItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,delete --> myFirstNestedItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,delete --> myNextSiblingItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,delete --> myFirstNestedItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,delete --> myNextSiblingItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,delete --> myContainerItem,net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem,WRITE);
EndClass 288
StartClass 289
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant,N,N,Public);
Method(toArray,net.sourceforge.ganttproject.task.dependency.TaskDependency[],Public,N,N);
Method(<init>,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(<init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,);
SuperClass(net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl);
Generalization(net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant,toArray --> getDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant,toArray --> getTask,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant,toArray --> getDependenciesAsDependant,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant,<init> --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,);
EndClass 289
StartClass 290
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,N,N,Public);
Attribute(myTask,net.sourceforge.ganttproject.task.Task,Private,N,Y,);
Attribute(myDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(toArray,net.sourceforge.ganttproject.task.dependency.TaskDependency[],Public,N,N);
Method(clear,void,Public,N,N);
Method(getTask,net.sourceforge.ganttproject.task.Task,Protected,N,N);
Method(getDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,Protected,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(<init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,);
SubClass(net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant);
SubClass(net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee);
Realization(net.sourceforge.ganttproject.task.dependency.TaskDependencySlice);
Composition(net.sourceforge.ganttproject.task.Task);
Composition(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,clear --> toArray,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,<init> --> myTask,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,<init> --> myDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,toArray --> myDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,toArray --> myTask,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,getTask --> myTask,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,getDependencyCollection --> myDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,toArray --> getDependencies,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,clear --> delete,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
EndClass 290
StartClass 291
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,N,N,NA);
Attribute(myCommands,java.util.List,Private,N,Y,);
Attribute(this$0,net.sourceforge.ganttproject.task.TaskImpl,Public,N,Y,);
Method(<init>,void,Private,N,N);
Method(commit,void,Public,N,N);
Method(setName,void,Public,N,N);
Method(setMilestone,void,Public,N,N);
Method(setPriority,void,Public,N,N);
Method(setStart,void,Public,N,N);
Method(setEnd,void,Public,N,N);
Method(setDuration,void,Public,N,N);
Method(setExpand,void,Public,N,N);
Method(setCompletionPercentage,void,Public,N,N);
Method(setStartFixed,void,Public,N,N);
Method(setShape,void,Public,N,N);
Method(setColor,void,Public,N,N);
Method(setNotes,void,Public,N,N);
Method(addNotes,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(access$1,net.sourceforge.ganttproject.task.TaskImpl,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl,);
Parameter(setName,java.lang.String,);
Parameter(setMilestone,boolean,);
Parameter(setPriority,int,);
Parameter(setStart,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(setEnd,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(setDuration,net.sourceforge.ganttproject.task.TaskLength,);
Parameter(setExpand,boolean,);
Parameter(setCompletionPercentage,int,);
Parameter(setStartFixed,boolean,);
Parameter(setShape,net.sourceforge.ganttproject.shape.ShapePaint,);
Parameter(setColor,java.awt.Color,);
Parameter(setNotes,java.lang.String,);
Parameter(addNotes,java.lang.String,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.TaskImpl,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Realization(net.sourceforge.ganttproject.task.TaskMutator);
Composition(net.sourceforge.ganttproject.task.TaskImpl);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,<init>$2 --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,<init> --> this$0,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,<init> --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,commit --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setName --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setMilestone --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setPriority --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setStart --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setEnd --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setDuration --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setExpand --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setCompletionPercentage --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setStartFixed --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setShape --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setColor --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setNotes --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,addNotes --> myCommands,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,access$1 --> this$0,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setName --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setMilestone --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setPriority --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setStart --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setEnd --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setDuration --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setExpand --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setCompletionPercentage --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setStartFixed --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setShape --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setColor --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,setNotes --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,addNotes --> <init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,);
EndClass 291
StartClass 292
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee,N,N,Public);
Method(toArray,net.sourceforge.ganttproject.task.dependency.TaskDependency[],Public,N,N);
Method(<init>,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(<init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,);
SuperClass(net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl);
Generalization(net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee,toArray --> getDependencyCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee,toArray --> getTask,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee,toArray --> getDependenciesAsDependee,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee,<init> --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl,);
EndClass 292
StartClass 293
Class(net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel$1,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(paint,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,);
Parameter(paint,java.awt.Graphics,);
Composition(net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel$1,<init> --> this$1,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel$1,paint --> this$1,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel$1,paint --> textColor,net.sourceforge.ganttproject.gui.GanttStatusBar$MessagePanel,READ);
EndClass 293
StartClass 294
Class(net.sourceforge.ganttproject.shape.JPaintCombo,N,N,Public);
Attribute(myList,java.awt.Paint[],Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getSelectedPaint,java.awt.Paint,Public,N,N);
Parameter(<init>,java.awt.Paint[],);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.JPaintCombo,<init> --> myList,net.sourceforge.ganttproject.shape.JPaintCombo,WRITE);
Call(METHOD,net.sourceforge.ganttproject.shape.JPaintCombo,<init> --> <init>,net.sourceforge.ganttproject.shape.PaintCellRenderer,);
EndClass 294
StartClass 295
Class(net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,N,N,Public);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Protected,N,N,);
Attribute(gbc,java.awt.GridBagConstraints,Private,N,N,);
Attribute(predecessorsPanel,javax.swing.JPanel,Private,N,N,);
Attribute(predecessorsScrollPane,javax.swing.JScrollPane,Private,N,N,);
Attribute(predecessorsTable,javax.swing.JTable,Private,N,N,);
Attribute(myTaskManager,net.sourceforge.ganttproject.task.TaskManager,Private,N,Y,);
Attribute(myTableModel,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,Private,N,N,);
Attribute(CONSTRAINTS,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint[],Private,Y,N,);
Method(<clinit>,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(getComponent,javax.swing.JPanel,Public,N,N);
Method(getTableModel,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,Public,N,N);
Method(constructPredecessorsPanel,void,Protected,N,N);
Method(setUpPredecessorComboColumn,void,Protected,N,N);
Method(setUpTypeComboColumn,void,Protected,N,N);
Method(getTable,javax.swing.JTable,Public,N,N);
Method(durationChanged,void,Public,N,N);
Method(nameChanged,void,Public,N,N);
Method(access$2,javax.swing.JTable,Public,Y,N);
Method(access$3,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint[],Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(setUpPredecessorComboColumn,javax.swing.table.TableColumn,);
Parameter(setUpPredecessorComboColumn,javax.swing.JTable,);
Parameter(setUpTypeComboColumn,javax.swing.table.TableColumn,);
Parameter(durationChanged,int,);
Parameter(nameChanged,java.lang.String,);
Parameter(access$2,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
SuperClass(net.sourceforge.ganttproject.gui.taskproperties.CommonPanel);
Generalization(net.sourceforge.ganttproject.gui.taskproperties.CommonPanel);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.task.TaskManager);
Composition(net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,getComponent --> constructPredecessorsPanel,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> setUpPredecessorComboColumn,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> setUpTypeComboColumn,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,<clinit> --> CONSTRAINTS,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,<init> --> language,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,<init> --> gbc,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,<init> --> myTaskManager,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,getComponent --> predecessorsPanel,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,getTableModel --> myTableModel,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> myTableModel,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> predecessorsTable,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> language,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> predecessorsScrollPane,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> gbc,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> predecessorsPanel,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> predecessorsPanel,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> myTableModel,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> predecessorsTable,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> predecessorsScrollPane,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,setUpPredecessorComboColumn --> myTaskManager,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,setUpTypeComboColumn --> CONSTRAINTS,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,getTable --> predecessorsTable,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,access$2 --> predecessorsTable,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,access$3 --> CONSTRAINTS,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,<clinit> --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,<clinit> --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,<clinit> --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,<clinit> --> <init>,net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,<init> --> getManager,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> getTask,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> <init>,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> <init>$3,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> getToolTip,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> <init>,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> setupCommonFields,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,constructPredecessorsPanel --> addUsingGBL,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,setUpPredecessorComboColumn --> getAlgorithmCollection,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,setUpPredecessorComboColumn --> getFindPossibleDependeesAlgorithm,net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,setUpPredecessorComboColumn --> getTask,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,setUpPredecessorComboColumn --> run,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,setUpPredecessorComboColumn --> <init>,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,setUpPredecessorComboColumn --> <init>,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,durationChanged --> durationChanged,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,nameChanged --> nameChanged,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
EndClass 295
StartClass 296
Class(net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,N,N,Public);
Attribute(resourcesPanel,javax.swing.JPanel,Private,N,N,);
Attribute(myResourcesTableModel,net.sourceforge.ganttproject.gui.ResourcesTableModel,Private,N,N,);
Attribute(resourcesTable,javax.swing.JTable,Private,N,N,);
Attribute(myHRManager,net.sourceforge.ganttproject.resource.HumanResourceManager,Private,N,Y,);
Attribute(resourcesScrollPane,javax.swing.JScrollPane,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getComponent,javax.swing.JPanel,Public,N,N);
Method(constructResourcesPanel,void,Private,N,N);
Method(getTableModel,net.sourceforge.ganttproject.gui.ResourcesTableModel,Public,N,N);
Method(setUpResourcesComboColumn,void,Private,N,N);
Method(durationChanged,void,Public,N,N);
Method(nameChanged,void,Public,N,N);
Method(access$2,javax.swing.JTable,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(<init>,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Parameter(constructResourcesPanel,net.sourceforge.ganttproject.task.ResourceAssignmentCollection,);
Parameter(setUpResourcesComboColumn,javax.swing.JTable,);
Parameter(durationChanged,int,);
Parameter(nameChanged,java.lang.String,);
Parameter(access$2,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
SuperClass(net.sourceforge.ganttproject.gui.taskproperties.CommonPanel);
Generalization(net.sourceforge.ganttproject.gui.taskproperties.CommonPanel);
Composition(net.sourceforge.ganttproject.gui.ResourcesTableModel);
Composition(net.sourceforge.ganttproject.resource.HumanResourceManager);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,getComponent --> constructResourcesPanel,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> setUpResourcesComboColumn,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,<init> --> myHRManager,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,getComponent --> resourcesPanel,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> myResourcesTableModel,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> resourcesTable,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> resourcesScrollPane,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> resourcesPanel,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> resourcesPanel,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> myResourcesTableModel,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> resourcesTable,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> resourcesScrollPane,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,getTableModel --> myResourcesTableModel,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,setUpResourcesComboColumn --> myHRManager,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,access$2 --> resourcesTable,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,<init> --> <init>,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,getComponent --> getTask,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,getComponent --> getAssignmentCollection,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> <init>,net.sourceforge.ganttproject.gui.ResourcesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> getLanguage,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> correctLabel,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> <init>$3,net.sourceforge.ganttproject.gui.TestGanttRolloverButton,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> getToolTip,net.sourceforge.ganttproject.GanttProject,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> <init>,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> setupCommonFields,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,constructResourcesPanel --> addUsingGBL,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,setUpResourcesComboColumn --> getResources,net.sourceforge.ganttproject.resource.HumanResourceManager,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,durationChanged --> durationChanged,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,nameChanged --> nameChanged,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
EndClass 296
StartClass 297
Class(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$5,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(stateChanged,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Parameter(stateChanged,javax.swing.event.ChangeEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$5,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$5,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$5,stateChanged --> this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$5,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$5,stateChanged --> changeNameOfTask,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$5,stateChanged --> fireDurationChanged,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
EndClass 297
StartClass 298
Class(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,actionPerformed --> tfWebLink,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,actionPerformed --> ERROR,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,actionPerformed --> YES_OPTION,net.sourceforge.ganttproject.gui.GanttDialogInfo,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,actionPerformed --> displayURL,net.sourceforge.ganttproject.util.BrowserControl,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,actionPerformed --> access$1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,actionPerformed --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$3,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.GanttDialogInfo,);
EndClass 298
StartClass 299
Class(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$4,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$4,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$4,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$4,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$4,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$4,actionPerformed --> noteAreaNotes,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$4,actionPerformed --> getDateAndTime,net.sourceforge.ganttproject.GanttCalendar,);
EndClass 299
StartClass 300
Class(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,Public,N,Y,);
Attribute(val$colorChooserTitle,java.lang.String,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Parameter(<init>,java.lang.String,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Parameter(access$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,);
Composition(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,<init> --> val$colorChooserTitle,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,actionPerformed --> val$colorChooserTitle,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,access$0 --> this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,actionPerformed --> colorChooser,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,actionPerformed --> colorButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,actionPerformed --> access$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,actionPerformed --> <init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$2,);
EndClass 300
StartClass 301
Class(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$2,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$2,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$2,actionPerformed --> colorButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$2,actionPerformed --> taskDefaultColor,net.sourceforge.ganttproject.GanttGraphicArea,READ);
EndClass 301
StartClass 302
Class(net.sourceforge.ganttproject.gui.ResourcesTableModel,N,N,Public);
Attribute(columnNames,java.lang.String[],Public,N,Y,);
Attribute(myAssignmentCollection,net.sourceforge.ganttproject.task.ResourceAssignmentCollection,Private,N,Y,);
Attribute(myAssignments,java.util.List,Private,N,Y,);
Attribute(MAX_ROW_COUNT,int,Private,Y,Y,);
Attribute(myMutator,net.sourceforge.ganttproject.task.ResourceAssignmentMutator,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getColumnCount,int,Public,N,N);
Method(getRowCount,int,Public,N,N);
Method(getColumnName,java.lang.String,Public,N,N);
Method(getValueAt,java.lang.Object,Public,N,N);
Method(getColumnClass,java.lang.Class,Public,N,N);
Method(isCellEditable,boolean,Public,N,N);
Method(setValueAt,void,Public,N,N);
Method(updateAssignment,void,Private,N,N);
Method(createAssignment,void,Private,N,N);
Method(commit,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.ResourceAssignmentCollection,);
Parameter(getColumnName,int,);
Parameter(getValueAt,int,);
Parameter(getValueAt,int,);
Parameter(getColumnClass,int,);
Parameter(isCellEditable,int,);
Parameter(isCellEditable,int,);
Parameter(setValueAt,java.lang.Object,);
Parameter(setValueAt,int,);
Parameter(setValueAt,int,);
Parameter(updateAssignment,java.lang.Object,);
Parameter(updateAssignment,int,);
Parameter(updateAssignment,int,);
Parameter(createAssignment,java.lang.Object,);
Composition(net.sourceforge.ganttproject.task.ResourceAssignmentCollection);
Composition(net.sourceforge.ganttproject.task.ResourceAssignmentMutator);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,setValueAt --> createAssignment,net.sourceforge.ganttproject.gui.ResourcesTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,setValueAt --> updateAssignment,net.sourceforge.ganttproject.gui.ResourcesTableModel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,<init> --> columnNames,net.sourceforge.ganttproject.gui.ResourcesTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,<init> --> myAssignmentCollection,net.sourceforge.ganttproject.gui.ResourcesTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,<init> --> myAssignments,net.sourceforge.ganttproject.gui.ResourcesTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,<init> --> myMutator,net.sourceforge.ganttproject.gui.ResourcesTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,getColumnCount --> columnNames,net.sourceforge.ganttproject.gui.ResourcesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,getRowCount --> myAssignments,net.sourceforge.ganttproject.gui.ResourcesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,getColumnName --> columnNames,net.sourceforge.ganttproject.gui.ResourcesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,getValueAt --> myAssignments,net.sourceforge.ganttproject.gui.ResourcesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,isCellEditable --> myAssignments,net.sourceforge.ganttproject.gui.ResourcesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,setValueAt --> myAssignments,net.sourceforge.ganttproject.gui.ResourcesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,updateAssignment --> myAssignments,net.sourceforge.ganttproject.gui.ResourcesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,updateAssignment --> myMutator,net.sourceforge.ganttproject.gui.ResourcesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,createAssignment --> myMutator,net.sourceforge.ganttproject.gui.ResourcesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,createAssignment --> myAssignments,net.sourceforge.ganttproject.gui.ResourcesTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.ResourcesTableModel,commit --> myMutator,net.sourceforge.ganttproject.gui.ResourcesTableModel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,<init> --> getAssignments,net.sourceforge.ganttproject.task.ResourceAssignmentCollection,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,<init> --> createMutator,net.sourceforge.ganttproject.task.ResourceAssignmentCollection,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,getValueAt --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,getValueAt --> getId,net.sourceforge.ganttproject.resource.ProjectResource,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,getValueAt --> getLoad,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,updateAssignment --> setLoad,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,updateAssignment --> delete,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,updateAssignment --> getLoad,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,updateAssignment --> addAssignment,net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,createAssignment --> addAssignment,net.sourceforge.ganttproject.task.MutableResourceAssignmentCollection,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,createAssignment --> setLoad,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.gui.ResourcesTableModel,commit --> commit,net.sourceforge.ganttproject.task.ResourceAssignmentMutator,);
EndClass 302
StartClass 303
Class(net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,N,N,Public);
Attribute(columnNames,java.lang.String[],Public,N,Y,);
Attribute(myDependencies,java.util.List,Private,N,Y,);
Attribute(myMutator,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionMutator,Private,N,Y,);
Attribute(myTask,net.sourceforge.ganttproject.task.Task,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(commit,void,Public,N,N);
Method(getColumnCount,int,Public,N,N);
Method(getRowCount,int,Public,N,N);
Method(getColumnName,java.lang.String,Public,N,N);
Method(getValueAt,java.lang.Object,Public,N,N);
Method(isCellEditable,boolean,Public,N,N);
Method(setValueAt,void,Public,N,N);
Method(updateDependency,void,Private,N,N);
Method(createDependency,void,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(getColumnName,int,);
Parameter(getValueAt,int,);
Parameter(getValueAt,int,);
Parameter(isCellEditable,int,);
Parameter(isCellEditable,int,);
Parameter(setValueAt,java.lang.Object,);
Parameter(setValueAt,int,);
Parameter(setValueAt,int,);
Parameter(updateDependency,java.lang.Object,);
Parameter(updateDependency,int,);
Parameter(updateDependency,int,);
Parameter(createDependency,java.lang.Object,);
Composition(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionMutator);
Composition(net.sourceforge.ganttproject.task.Task);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,getValueAt --> getRowCount,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,setValueAt --> createDependency,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,setValueAt --> updateDependency,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,<init> --> columnNames,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,<init> --> myDependencies,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,<init> --> myMutator,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,<init> --> myTask,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,commit --> myMutator,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,getColumnCount --> columnNames,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,getRowCount --> myDependencies,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,getColumnName --> columnNames,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,getValueAt --> myDependencies,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,isCellEditable --> myDependencies,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,setValueAt --> myDependencies,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,updateDependency --> myDependencies,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,updateDependency --> myMutator,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,updateDependency --> myTask,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,createDependency --> myMutator,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,createDependency --> myTask,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,createDependency --> myDependencies,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,updateDependency --> myTask,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,createDependency --> myTask,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,<init> --> getDependenciesAsDependant,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,<init> --> toArray,net.sourceforge.ganttproject.task.dependency.TaskDependencySlice,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,<init> --> getManager,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,<init> --> getDependencyCollection,net.sourceforge.ganttproject.task.TaskManager,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,<init> --> createMutator,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollection,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,commit --> commit,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionMutator,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,getValueAt --> getDependee,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,getValueAt --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,getValueAt --> getConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,getValueAt --> getName,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,updateDependency --> setConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,updateDependency --> delete,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,updateDependency --> createDependency,net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel,createDependency --> createDependency,net.sourceforge.ganttproject.task.dependency.MutableTaskDependencyCollection,);
EndClass 303
StartClass 304
Class(net.sourceforge.ganttproject.gui.GanttDialogDate$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogDate,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogDate,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogDate);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate$1,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogDate$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttDialogDate$1,READ);
EndClass 304
StartClass 305
Class(net.sourceforge.ganttproject.gui.GanttDialogDate$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogDate,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogDate,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogDate);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate$2,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogDate$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate$2,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttDialogDate$2,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate$2,actionPerformed --> access$0,net.sourceforge.ganttproject.gui.GanttDialogDate,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate$2,actionPerformed --> cancel,net.sourceforge.ganttproject.gui.GanttPanelDate,);
EndClass 305
StartClass 306
Class(net.sourceforge.ganttproject.gui.GanttDialogDate$3,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttDialogDate,Public,N,Y,);
Attribute(val$fixedDate,javax.swing.JCheckBox,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(stateChanged,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttDialogDate,);
Parameter(<init>,javax.swing.JCheckBox,);
Parameter(stateChanged,javax.swing.event.ChangeEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttDialogDate);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate$3,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttDialogDate$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate$3,<init> --> val$fixedDate,net.sourceforge.ganttproject.gui.GanttDialogDate$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate$3,stateChanged --> this$0,net.sourceforge.ganttproject.gui.GanttDialogDate$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttDialogDate$3,stateChanged --> val$fixedDate,net.sourceforge.ganttproject.gui.GanttDialogDate$3,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttDialogDate$3,stateChanged --> access$1,net.sourceforge.ganttproject.gui.GanttDialogDate,);
EndClass 306
StartClass 307
Class(net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,N,N,Public);
Attribute(date,net.sourceforge.ganttproject.GanttCalendar,Public,N,N,);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttPanelDate,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getPreferredSize,java.awt.Dimension,Public,N,N);
Method(clickFunction,void,Public,N,N);
Method(paintComponent,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Parameter(<init>,net.sourceforge.ganttproject.GanttCalendar,);
Parameter(<init>,net.sourceforge.ganttproject.language.GanttLanguage,);
Parameter(clickFunction,int,);
Parameter(clickFunction,int,);
Parameter(paintComponent,java.awt.Graphics,);
Composition(net.sourceforge.ganttproject.GanttCalendar);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.gui.GanttPanelDate);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,<init> --> date,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,<init> --> language,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,clickFunction --> date,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,clickFunction --> language,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,clickFunction --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> date,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> language,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,<init> --> <init>,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay$1,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,clickFunction --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,clickFunction --> setDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,clickFunction --> getdayWeek,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,clickFunction --> go,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,clickFunction --> getDay,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,clickFunction --> access$0,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> getDayWeekLanguage,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> Clone,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> setDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> getdayWeek,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> go,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> getDay,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> getMonth,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> getDay,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> getDate,net.sourceforge.ganttproject.GanttCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,paintComponent --> add,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
EndClass 307
StartClass 308
Class(net.sourceforge.ganttproject.gui.GanttPanelDate$5,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttPanelDate,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttPanelDate);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$5,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$5,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$5,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$5,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$5,actionPerformed --> <init>,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$5,actionPerformed --> access$2,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$5,actionPerformed --> access$0,net.sourceforge.ganttproject.gui.GanttPanelDate,);
EndClass 308
StartClass 309
Class(net.sourceforge.ganttproject.gui.GanttPanelDate$3,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttPanelDate,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttPanelDate);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$3,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$3,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$3,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$3,actionPerformed --> access$1,net.sourceforge.ganttproject.gui.GanttPanelDate,);
EndClass 309
StartClass 310
Class(net.sourceforge.ganttproject.gui.GanttPanelDate$4,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttPanelDate,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttPanelDate);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$4,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$4,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$4,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$4,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$4,actionPerformed --> access$1,net.sourceforge.ganttproject.gui.GanttPanelDate,);
EndClass 310
StartClass 311
Class(net.sourceforge.ganttproject.gui.GanttPanelDate$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttPanelDate,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttPanelDate);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$1,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$1,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$1,actionPerformed --> access$1,net.sourceforge.ganttproject.gui.GanttPanelDate,);
EndClass 311
StartClass 312
Class(net.sourceforge.ganttproject.gui.GanttPanelDate$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.GanttPanelDate,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttPanelDate,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttPanelDate);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$2,<init> --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$2,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.GanttPanelDate$2,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$2,actionPerformed --> access$1,net.sourceforge.ganttproject.gui.GanttPanelDate,);
EndClass 312
StartClass 313
Class(net.sourceforge.ganttproject.task.event.TaskListenerAdapter,N,Y,Public);
Method(<init>,void,Public,N,N);
Method(taskScheduleChanged,void,Public,N,N);
Method(dependencyAdded,void,Public,N,N);
Method(dependencyRemoved,void,Public,N,N);
Method(taskAdded,void,Public,N,N);
Method(taskRemoved,void,Public,N,N);
Method(taskMoved,void,Public,N,N);
Parameter(taskScheduleChanged,net.sourceforge.ganttproject.task.event.TaskScheduleEvent,);
Parameter(dependencyAdded,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,);
Parameter(dependencyRemoved,net.sourceforge.ganttproject.task.event.TaskDependencyEvent,);
Parameter(taskAdded,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,);
Parameter(taskRemoved,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,);
Parameter(taskMoved,net.sourceforge.ganttproject.task.event.TaskHierarchyEvent,);
SubClass(net.sourceforge.ganttproject.GanttGraphicArea$1);
Realization(net.sourceforge.ganttproject.task.event.TaskListener);
EndClass 313
StartClass 314
Class(net.sourceforge.ganttproject.chart.ChartUIConfiguration,N,N,NA);
Attribute(mySpanningRowTextFont,java.awt.Font,Private,N,Y,);
Attribute(mySpanningHeaderBackgroundColor,java.awt.Color,Private,N,Y,);
Attribute(myHeaderBorderColor,java.awt.Color,Private,N,Y,);
Attribute(myHorizontalGutterColor1,java.awt.Color,Private,N,Y,);
Attribute(myHorizontalGutterColor2,java.awt.Color,Private,N,Y,);
Attribute(myBottomUnitGridColor,java.awt.Color,Private,N,Y,);
Attribute(myBottomUnitFont,java.awt.Font,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getSpanningHeaderFont,java.awt.Font,Public,N,N);
Method(getBottomUnitFont,java.awt.Font,Public,N,N);
Method(getSpanningHeaderHeight,int,Public,N,N);
Method(getSpanningHeaderBackgroundColor,java.awt.Color,Public,N,N);
Method(getHeaderBorderColor,java.awt.Color,Public,N,N);
Method(getHorizontalGutterColor1,java.awt.Color,Public,N,N);
Method(getHorizontalGutterColor2,java.awt.Color,Public,N,N);
Method(getBottomUnitGridColor,java.awt.Color,Public,N,N);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,<init> --> myHorizontalGutterColor1,net.sourceforge.ganttproject.chart.ChartUIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,<init> --> myHorizontalGutterColor2,net.sourceforge.ganttproject.chart.ChartUIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,<init> --> mySpanningRowTextFont,net.sourceforge.ganttproject.chart.ChartUIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,<init> --> myBottomUnitFont,net.sourceforge.ganttproject.chart.ChartUIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,<init> --> mySpanningHeaderBackgroundColor,net.sourceforge.ganttproject.chart.ChartUIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,<init> --> myHeaderBorderColor,net.sourceforge.ganttproject.chart.ChartUIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,<init> --> myBottomUnitGridColor,net.sourceforge.ganttproject.chart.ChartUIConfiguration,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,getSpanningHeaderFont --> mySpanningRowTextFont,net.sourceforge.ganttproject.chart.ChartUIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,getBottomUnitFont --> myBottomUnitFont,net.sourceforge.ganttproject.chart.ChartUIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,getSpanningHeaderBackgroundColor --> mySpanningHeaderBackgroundColor,net.sourceforge.ganttproject.chart.ChartUIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,getHeaderBorderColor --> myHeaderBorderColor,net.sourceforge.ganttproject.chart.ChartUIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,getHorizontalGutterColor1 --> myHorizontalGutterColor1,net.sourceforge.ganttproject.chart.ChartUIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,getHorizontalGutterColor2 --> myHorizontalGutterColor2,net.sourceforge.ganttproject.chart.ChartUIConfiguration,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartUIConfiguration,getBottomUnitGridColor --> myBottomUnitGridColor,net.sourceforge.ganttproject.chart.ChartUIConfiguration,READ);
EndClass 314
StartClass 315
Class(net.sourceforge.ganttproject.time.TimeFrame,Y,Y,Public);
Method(getStartDate,java.util.Date,Public,N,Y);
Method(getFinishDate,java.util.Date,Public,N,Y);
Method(getTopUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,Y);
Method(getBottomUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,Y);
Method(getUnitCount,int,Public,N,Y);
Method(getUnitText,java.lang.String,Public,N,Y);
Method(getUnitStart,java.util.Date,Public,N,Y);
Parameter(getUnitCount,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getUnitText,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getUnitText,int,);
Parameter(getUnitStart,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getUnitStart,int,);
EndClass 315
StartClass 316
Class(net.sourceforge.ganttproject.chart.ChartHeaderImpl,N,N,Public);
Attribute(myChartModel,net.sourceforge.ganttproject.chart.ChartModelImpl,Private,N,Y,);
Attribute(myPrimitiveContainer,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(paint,void,Public,N,N);
Method(preparePrimitives,void,Private,N,N);
Method(createGreyRectangleWithNiceBorders,void,Private,N,N);
Method(createFrames,void,Private,N,N);
Method(getHeight,int,Private,N,N);
Method(getWidth,int,Private,N,N);
Method(access$0,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.chart.ChartModelImpl,);
Parameter(paint,java.awt.Graphics,);
Parameter(access$0,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Realization(net.sourceforge.ganttproject.chart.ChartHeader);
Composition(net.sourceforge.ganttproject.chart.ChartModelImpl);
Composition(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,paint --> preparePrimitives,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,preparePrimitives --> createGreyRectangleWithNiceBorders,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,preparePrimitives --> createFrames,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> getWidth,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> getHeight,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createFrames --> getWidth,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl,<init> --> myChartModel,net.sourceforge.ganttproject.chart.ChartHeaderImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl,<init> --> myPrimitiveContainer,net.sourceforge.ganttproject.chart.ChartHeaderImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl,paint --> myPrimitiveContainer,net.sourceforge.ganttproject.chart.ChartHeaderImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> myChartModel,net.sourceforge.ganttproject.chart.ChartHeaderImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> myPrimitiveContainer,net.sourceforge.ganttproject.chart.ChartHeaderImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createFrames --> myChartModel,net.sourceforge.ganttproject.chart.ChartHeaderImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl,getHeight --> myChartModel,net.sourceforge.ganttproject.chart.ChartHeaderImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl,getWidth --> myChartModel,net.sourceforge.ganttproject.chart.ChartHeaderImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl,access$0 --> myPrimitiveContainer,net.sourceforge.ganttproject.chart.ChartHeaderImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,<init> --> <init>,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,paint --> paint,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> getChartUIConfiguration,net.sourceforge.ganttproject.chart.ChartModelImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> getSpanningHeaderHeight,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> createRectangle,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> getSpanningHeaderBackgroundColor,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> setBackgroundColor,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> getHeaderBorderColor,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> setForegroundColor,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> createLine,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> getHorizontalGutterColor1,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createGreyRectangleWithNiceBorders --> getHorizontalGutterColor2,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createFrames --> getChartUIConfiguration,net.sourceforge.ganttproject.chart.ChartModelImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createFrames --> getSpanningHeaderHeight,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createFrames --> getBottomUnitWidth,net.sourceforge.ganttproject.chart.ChartModelImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createFrames --> <init>,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createFrames --> <init>,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createFrames --> getTimeFrames,net.sourceforge.ganttproject.chart.ChartModelImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createFrames --> createTopUnitText,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createFrames --> createBottomUnitGrid,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,createFrames --> getWidth,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,getHeight --> getBounds,net.sourceforge.ganttproject.chart.ChartModelImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl,getWidth --> getBounds,net.sourceforge.ganttproject.chart.ChartModelImpl,);
EndClass 316
StartClass 317
Class(net.sourceforge.ganttproject.time.TimeUnitGraph,N,N,Public);
Attribute(myUnit2compositions,java.util.Map,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(createAtomTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,N);
Method(createTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,N);
Method(createDateFrameableTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,N);
Method(createTimeUnitFunctionOfDate,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate,Public,N,N);
Method(registerTimeUnit,void,Private,N,N);
Method(getComposition,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,Public,N,N);
Parameter(createAtomTimeUnit,java.lang.String,);
Parameter(createTimeUnit,java.lang.String,);
Parameter(createTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(createTimeUnit,int,);
Parameter(createDateFrameableTimeUnit,java.lang.String,);
Parameter(createDateFrameableTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(createDateFrameableTimeUnit,int,);
Parameter(createDateFrameableTimeUnit,net.sourceforge.ganttproject.time.DateFrameable,);
Parameter(createTimeUnitFunctionOfDate,java.lang.String,);
Parameter(createTimeUnitFunctionOfDate,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(createTimeUnitFunctionOfDate,net.sourceforge.ganttproject.time.DateFrameable,);
Parameter(registerTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(registerTimeUnit,int,);
Parameter(getComposition,net.sourceforge.ganttproject.time.TimeUnitImpl,);
Parameter(getComposition,net.sourceforge.ganttproject.time.TimeUnit,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitGraph,createTimeUnit --> registerTimeUnit,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitGraph,createDateFrameableTimeUnit --> registerTimeUnit,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitGraph,createTimeUnitFunctionOfDate --> registerTimeUnit,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph,<init> --> myUnit2compositions,net.sourceforge.ganttproject.time.TimeUnitGraph,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph,createAtomTimeUnit --> myUnit2compositions,net.sourceforge.ganttproject.time.TimeUnitGraph,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph,registerTimeUnit --> myUnit2compositions,net.sourceforge.ganttproject.time.TimeUnitGraph,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph,getComposition --> myUnit2compositions,net.sourceforge.ganttproject.time.TimeUnitGraph,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph,getComposition --> myAtom,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,READ);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitGraph,createAtomTimeUnit --> <init>,net.sourceforge.ganttproject.time.TimeUnitImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitGraph,createAtomTimeUnit --> <init>,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitGraph,createTimeUnit --> <init>,net.sourceforge.ganttproject.time.TimeUnitImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitGraph,createDateFrameableTimeUnit --> <init>,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitGraph,createTimeUnitFunctionOfDate --> <init>,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitGraph,registerTimeUnit --> getDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitGraph,registerTimeUnit --> <init>,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitGraph,registerTimeUnit --> <init>$2,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,);
EndClass 317
StartClass 318
Class(net.sourceforge.ganttproject.time.DateFrameable,Y,Y,Public);
Method(adjustRight,java.util.Date,Public,N,Y);
Method(adjustLeft,java.util.Date,Public,N,Y);
Method(jumpLeft,java.util.Date,Public,N,Y);
Parameter(adjustRight,java.util.Date,);
Parameter(adjustLeft,java.util.Date,);
Parameter(jumpLeft,java.util.Date,);
EndClass 318
StartClass 319
Class(net.sourceforge.ganttproject.time.gregorian.FramerImpl,N,N,NA);
Attribute(myCalendarField,int,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(adjustRight,java.util.Date,Public,N,N);
Method(clearFields,void,Private,N,N);
Method(adjustLeft,java.util.Date,Public,N,N);
Method(jumpLeft,java.util.Date,Public,N,N);
Parameter(<init>,int,);
Parameter(adjustRight,java.util.Date,);
Parameter(clearFields,java.util.Calendar,);
Parameter(adjustLeft,java.util.Date,);
Parameter(jumpLeft,java.util.Date,);
Realization(net.sourceforge.ganttproject.time.DateFrameable);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.FramerImpl,adjustRight --> clearFields,net.sourceforge.ganttproject.time.gregorian.FramerImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.FramerImpl,adjustLeft --> clearFields,net.sourceforge.ganttproject.time.gregorian.FramerImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.FramerImpl,<init> --> myCalendarField,net.sourceforge.ganttproject.time.gregorian.FramerImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.FramerImpl,adjustRight --> myCalendarField,net.sourceforge.ganttproject.time.gregorian.FramerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.FramerImpl,clearFields --> myCalendarField,net.sourceforge.ganttproject.time.gregorian.FramerImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.FramerImpl,jumpLeft --> myCalendarField,net.sourceforge.ganttproject.time.gregorian.FramerImpl,READ);
EndClass 319
StartClass 320
Class(net.sourceforge.ganttproject.time.gregorian.DayTextFormatter,N,N,Public);
Method(<init>,void,Public,N,N);
Method(format,java.lang.String,Public,N,N);
Parameter(format,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(format,java.util.Date,);
Realization(net.sourceforge.ganttproject.time.TextFormatter);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.DayTextFormatter,format --> adjustLeft,net.sourceforge.ganttproject.time.DateFrameable,);
EndClass 320
StartClass 321
Class(net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,N,N,NA);
Attribute(myBaseDate,java.util.Date,Private,N,Y,);
Attribute(myTopUnit,net.sourceforge.ganttproject.time.TimeUnit,Private,N,Y,);
Attribute(myBottomUnit,net.sourceforge.ganttproject.time.TimeUnit,Private,N,Y,);
Attribute(myNextFrameStartDate,java.util.Date,Private,N,N,);
Attribute(myCalendar,net.sourceforge.ganttproject.time.gregorian.GregorianCalendar,Private,N,N,);
Attribute(myLowestFrameable,net.sourceforge.ganttproject.time.DateFrameable,Private,N,N,);
Attribute(myStartDate,java.util.Date,Private,N,N,);
Attribute(myHighestFrameable,net.sourceforge.ganttproject.time.DateFrameable,Private,N,N,);
Attribute(myEndDate,java.util.Date,Private,N,N,);
Attribute(myLineHeader,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(calculateLowestFrameableUnit,net.sourceforge.ganttproject.time.DateFrameable,Private,N,N);
Method(calculateHighestFrameableUnit,net.sourceforge.ganttproject.time.DateFrameable,Private,N,N);
Method(calculateEndDate,java.util.Date,Private,N,N);
Method(calculateLines,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,Private,N,N);
Method(fillLine,void,Private,N,N);
Method(getUnitCount,int,Private,N,N);
Method(createLineItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,Private,N,N);
Method(createHeader,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,Private,N,N);
Method(getFinishDate,java.util.Date,Public,N,N);
Method(getUnitCount$2,int,Public,N,N);
Method(getLineHeader,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,Private,N,N);
Method(getStartDate,java.util.Date,Public,N,N);
Method(getTopUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,N);
Method(getBottomUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,N);
Method(getUnitText,java.lang.String,Public,N,N);
Method(getUnitText$2,java.lang.String,Private,N,N);
Method(getUnitStart,java.util.Date,Public,N,N);
Parameter(<init>,java.util.Date,);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(calculateLowestFrameableUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(calculateLowestFrameableUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(calculateHighestFrameableUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(calculateHighestFrameableUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(calculateLines,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Parameter(fillLine,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Parameter(fillLine,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Parameter(getUnitCount,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Parameter(getUnitCount,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Parameter(getUnitCount,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,);
Parameter(createLineItem,java.util.Date,);
Parameter(createLineItem,java.util.Date,);
Parameter(createHeader,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getUnitCount$2,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getLineHeader,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getUnitText,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getUnitText,int,);
Parameter(getUnitText$2,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getUnitText$2,java.util.Date,);
Parameter(getUnitStart,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getUnitStart,int,);
Realization(net.sourceforge.ganttproject.time.TimeFrame);
Composition(net.sourceforge.ganttproject.time.TimeUnit);
Composition(net.sourceforge.ganttproject.time.gregorian.GregorianCalendar);
Composition(net.sourceforge.ganttproject.time.DateFrameable);
Composition(net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> calculateHighestFrameableUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> calculateLowestFrameableUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> calculateLines,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateLines --> createHeader,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateLines --> fillLine,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateLines --> calculateLines,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> createLineItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> getUnitCount,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getFinishDate --> calculateEndDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getUnitCount$2 --> getLineHeader,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getUnitText --> getLineHeader,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getUnitText --> getUnitText$2,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myHighestFrameable,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myLowestFrameable,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myCalendar,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myBaseDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myStartDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myBaseDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myHighestFrameable,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myLowestFrameable,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myTopUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myBottomUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myCalendar,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myStartDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> myLineHeader,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateEndDate --> myTopUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateEndDate --> myHighestFrameable,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateEndDate --> myBaseDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateLines --> myTopUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateLines --> myBottomUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> myStartDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> myTopUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> myBaseDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getFinishDate --> myEndDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getFinishDate --> myStartDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getFinishDate --> myEndDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getLineHeader --> myLineHeader,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getStartDate --> myStartDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getTopUnit --> myTopUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getBottomUnit --> myBottomUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateLines --> myUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> myFirstItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> myStartDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> myUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> myEndDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> myNextItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> myFirstItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> myNextItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getUnitCount --> myUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getUnitCount --> myStartDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getLineHeader --> myUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getUnitText --> myStartDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,READ);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> isConstructedFrom,net.sourceforge.ganttproject.time.TimeUnit,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,<init> --> adjustLeft,net.sourceforge.ganttproject.time.DateFrameable,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateLowestFrameableUnit --> getDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateHighestFrameableUnit --> getDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateEndDate --> getAtomCount,net.sourceforge.ganttproject.time.TimeUnit,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateEndDate --> adjustRight,net.sourceforge.ganttproject.time.DateFrameable,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateLines --> getDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnit,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,calculateLines --> append,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> adjustRight,net.sourceforge.ganttproject.time.DateFrameable,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,fillLine --> fullDump,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getUnitCount --> createTimeUnit,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getUnitCount --> getAtomCount,net.sourceforge.ganttproject.time.TimeUnit,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,createLineItem --> <init>,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,createHeader --> <init>,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getUnitCount$2 --> getItemCount,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getLineHeader --> next,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getUnitText --> getLineItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl,getUnitText$2 --> format,net.sourceforge.ganttproject.time.TimeUnit,);
EndClass 321
StartClass 322
Class(net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter,N,N,Public);
Attribute(myFormat,java.text.SimpleDateFormat,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(format,java.lang.String,Public,N,N);
Parameter(format,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(format,java.util.Date,);
Realization(net.sourceforge.ganttproject.time.TextFormatter);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter,<init> --> myFormat,net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter,format --> myFormat,net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter,READ);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.MonthTextFormatter,format --> adjustLeft,net.sourceforge.ganttproject.time.DateFrameable,);
EndClass 322
StartClass 323
Class(net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,N,N,Public);
Attribute(myID,int,Private,N,Y,);
Attribute(myName,java.lang.String,Private,N,Y,);
Attribute(myDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,Protected,N,N);
Method(setTaskDependency,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(getID,int,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,int,);
Parameter(<init>,java.lang.String,);
Parameter(setTaskDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
SubClass(net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl);
SubClass(net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl);
SubClass(net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl);
SubClass(net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl);
Composition(net.sourceforge.ganttproject.task.dependency.TaskDependency);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,toString --> getName,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,<init> --> myID,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,<init> --> myName,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,getDependency --> myDependency,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,setTaskDependency --> myDependency,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,getName --> myName,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,getID --> myID,net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl,READ);
EndClass 323
StartClass 324
Class(net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,N,Y,Public);
Attribute(myContainmentFacade,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(run,net.sourceforge.ganttproject.task.Task[],Public,N,N);
Method(createContainmentFacade,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,Protected,N,Y);
Method(processTask,void,Private,N,N);
Parameter(run,net.sourceforge.ganttproject.task.Task,);
Parameter(processTask,net.sourceforge.ganttproject.task.Task[],);
Parameter(processTask,net.sourceforge.ganttproject.task.Task,);
Parameter(processTask,java.util.ArrayList,);
SubClass(net.sourceforge.ganttproject.task.TaskManagerImpl$2);
Realization(net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithm);
Composition(net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,run --> createContainmentFacade,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,run --> processTask,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,processTask --> processTask,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,run --> myContainmentFacade,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,run --> myContainmentFacade,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,processTask --> myContainmentFacade,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,run --> getRoot,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,run --> getNestedTasks,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
Call(METHOD,net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl,processTask --> getNestedTasks,net.sourceforge.ganttproject.task.TaskContainmentHierarchyFacade,);
EndClass 324
StartClass 325
Class(net.sourceforge.ganttproject.task.dependency.SearchKey,N,N,Public);
Attribute(DEPENDANT,int,Public,Y,Y,);
Attribute(DEPENDEE,int,Public,Y,Y,);
Attribute(myFirstTaskID,int,Public,N,Y,);
Attribute(myType,int,Public,N,Y,);
Attribute(mySecondTaskID,int,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Protected,N,N);
Method(compareTo,int,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>,int,);
Parameter(<init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(compareTo,java.lang.Object,);
Parameter(equals,java.lang.Object,);
SubClass(net.sourceforge.ganttproject.task.dependency.RangeSearchToKey);
SubClass(net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,<init> --> myType,net.sourceforge.ganttproject.task.dependency.SearchKey,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,<init> --> myFirstTaskID,net.sourceforge.ganttproject.task.dependency.SearchKey,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,<init> --> mySecondTaskID,net.sourceforge.ganttproject.task.dependency.SearchKey,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,<init>$2 --> myType,net.sourceforge.ganttproject.task.dependency.SearchKey,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,<init>$2 --> myFirstTaskID,net.sourceforge.ganttproject.task.dependency.SearchKey,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,<init>$2 --> mySecondTaskID,net.sourceforge.ganttproject.task.dependency.SearchKey,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,compareTo --> myFirstTaskID,net.sourceforge.ganttproject.task.dependency.SearchKey,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,compareTo --> myType,net.sourceforge.ganttproject.task.dependency.SearchKey,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,compareTo --> mySecondTaskID,net.sourceforge.ganttproject.task.dependency.SearchKey,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,equals --> myFirstTaskID,net.sourceforge.ganttproject.task.dependency.SearchKey,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,equals --> myType,net.sourceforge.ganttproject.task.dependency.SearchKey,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,equals --> mySecondTaskID,net.sourceforge.ganttproject.task.dependency.SearchKey,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,hashCode --> myFirstTaskID,net.sourceforge.ganttproject.task.dependency.SearchKey,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,hashCode --> myType,net.sourceforge.ganttproject.task.dependency.SearchKey,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.SearchKey,hashCode --> mySecondTaskID,net.sourceforge.ganttproject.task.dependency.SearchKey,READ);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.SearchKey,<init> --> getDependant,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.SearchKey,<init> --> getDependee,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.SearchKey,<init> --> getTaskID,net.sourceforge.ganttproject.task.Task,);
EndClass 325
StartClass 326
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,N,N,NA);
Attribute(myQueue,java.util.Map,Private,N,N,);
Attribute(myCleanupMutation,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,Private,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,Public,N,Y,);
Method(<init>,void,Private,N,N);
Method(commit,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(createDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,Public,N,N);
Method(deleteDependency,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Parameter(createDependency,net.sourceforge.ganttproject.task.Task,);
Parameter(createDependency,net.sourceforge.ganttproject.task.Task,);
Parameter(deleteDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,);
Realization(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionMutator);
Composition(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo);
Composition(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,<init>$2 --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,<init> --> this$0,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,<init> --> myQueue,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,commit --> myQueue,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,commit --> myCleanupMutation,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,commit --> this$0,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,clear --> myQueue,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,clear --> myCleanupMutation,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,createDependency --> this$0,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,createDependency --> myQueue,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,deleteDependency --> myQueue,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,commit --> myOperation,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,commit --> myDependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,deleteDependency --> myOperation,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,READ);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,commit --> addDependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,commit --> delete,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,commit --> doClear,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,clear --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,createDependency --> access$0,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,createDependency --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutatorImpl,deleteDependency --> <init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,);
EndClass 326
StartClass 327
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,N,N,Public);
Attribute(myConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,Private,N,N,);
Attribute(myDependant,net.sourceforge.ganttproject.task.Task,Private,N,Y,);
Attribute(myDependee,net.sourceforge.ganttproject.task.Task,Private,N,Y,);
Attribute(myCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getDependant,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(getDependee,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(setConstraint,void,Public,N,N);
Method(getConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,Public,N,N);
Method(delete,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(<init>,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Parameter(setConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,);
Parameter(equals,java.lang.Object,);
Realization(net.sourceforge.ganttproject.task.dependency.TaskDependency);
Composition(net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint);
Composition(net.sourceforge.ganttproject.task.Task);
Composition(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,<init> --> myDependant,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,<init> --> myDependee,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,<init> --> myCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,getDependant --> myDependant,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,getDependee --> myDependee,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,setConstraint --> myConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,getConstraint --> myConstraint,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,delete --> myCollection,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,equals --> myDependant,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,equals --> myDependee,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,hashCode --> myDependant,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,hashCode --> myDependee,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,setConstraint --> setTaskDependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,delete --> delete,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,equals --> getDependant,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl,equals --> getDependee,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
EndClass 327
StartClass 328
Class(net.sourceforge.ganttproject.task.dependency.RangeSearchToKey,N,N,Public);
Method(<init>,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
SuperClass(net.sourceforge.ganttproject.task.dependency.SearchKey);
Generalization(net.sourceforge.ganttproject.task.dependency.SearchKey);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.RangeSearchToKey,<init> --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.RangeSearchToKey,<init> --> <init>$2,net.sourceforge.ganttproject.task.dependency.SearchKey,);
EndClass 328
StartClass 329
Class(net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey,N,N,NA);
Method(<init>,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
SuperClass(net.sourceforge.ganttproject.task.dependency.SearchKey);
Generalization(net.sourceforge.ganttproject.task.dependency.SearchKey);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey,<init> --> getTaskID,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey,<init> --> <init>$2,net.sourceforge.ganttproject.task.dependency.SearchKey,);
EndClass 329
StartClass 330
Class(net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,N,N,NA);
Attribute(ADD,int,Public,Y,Y,);
Attribute(DELETE,int,Public,Y,Y,);
Attribute(CLEAR,int,Public,Y,Y,);
Attribute(myDependency,net.sourceforge.ganttproject.task.dependency.TaskDependency,Public,N,Y,);
Attribute(myOperation,int,Public,N,Y,);
Attribute(myOrder,int,Public,N,Y,);
Attribute(ourOrder,int,Public,Y,N,);
Method(<init>,void,Public,N,N);
Method(compareTo,int,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.dependency.TaskDependency,);
Parameter(<init>,int,);
Parameter(compareTo,java.lang.Object,);
Composition(net.sourceforge.ganttproject.task.dependency.TaskDependency);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,<init> --> ourOrder,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,<init> --> ourOrder,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,<init> --> myOrder,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,<init> --> myDependency,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,<init> --> myOperation,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,compareTo --> myOrder,net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl$MutationInfo,READ);
EndClass 330
StartClass 331
Class(net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction,N,N,Public);
Attribute(this$0,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.projectwizard.WizardImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction,<init> --> this$0,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$NextAction,actionPerformed --> nextPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
EndClass 331
StartClass 332
Class(net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction,N,N,Public);
Attribute(this$0,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.projectwizard.WizardImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction,<init> --> this$0,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$BackAction,actionPerformed --> backPage,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
EndClass 332
StartClass 333
Class(net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$OkAction,N,N,Public);
Attribute(this$0,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.projectwizard.WizardImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$OkAction,<init> --> this$0,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$OkAction,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$OkAction,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$OkAction,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$OkAction,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$OkAction,<init> --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$OkAction,actionPerformed --> access$0,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.WizardImpl$OkAction,actionPerformed --> setActive,net.sourceforge.ganttproject.gui.projectwizard.WizardPage,);
EndClass 333
StartClass 334
Class(net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,N,N,NA);
Attribute(myRoleSets,net.sourceforge.ganttproject.roles.RoleSet[],Private,N,Y,);
Attribute(myI18n,net.sourceforge.ganttproject.gui.projectwizard.I18N,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(toggle,void,Public,N,N);
Method(getSize,int,Public,N,N);
Method(getElementAt,java.lang.Object,Public,N,N);
Method(getCellRenderer,javax.swing.ListCellRenderer,Public,N,N);
Method(getListCellRendererComponent,java.awt.Component,Public,N,N);
Method(isTheOnlyEnabled,boolean,Private,N,N);
Method(createTooltipText,java.lang.String,Private,N,N);
Parameter(<init>,net.sourceforge.ganttproject.roles.RoleSet[],);
Parameter(<init>,net.sourceforge.ganttproject.gui.projectwizard.I18N,);
Parameter(toggle,int,);
Parameter(getElementAt,int,);
Parameter(getListCellRendererComponent,javax.swing.JList,);
Parameter(getListCellRendererComponent,java.lang.Object,);
Parameter(getListCellRendererComponent,int,);
Parameter(getListCellRendererComponent,boolean,);
Parameter(getListCellRendererComponent,boolean,);
Parameter(isTheOnlyEnabled,net.sourceforge.ganttproject.roles.RoleSet,);
Parameter(createTooltipText,net.sourceforge.ganttproject.roles.RoleSet,);
Composition(net.sourceforge.ganttproject.gui.projectwizard.I18N);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,getListCellRendererComponent --> isTheOnlyEnabled,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,getListCellRendererComponent --> createTooltipText,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,<init> --> myRoleSets,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,<init> --> myI18n,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,toggle --> myRoleSets,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,getSize --> myRoleSets,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,getElementAt --> myRoleSets,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,isTheOnlyEnabled --> myRoleSets,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,createTooltipText --> myI18n,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,toggle --> isEnabled,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,toggle --> setEnabled,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,getListCellRendererComponent --> getName,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,getListCellRendererComponent --> isEnabled,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,isTheOnlyEnabled --> isEnabled,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,createTooltipText --> getName,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,createTooltipText --> getRolesetTooltipHeader,net.sourceforge.ganttproject.gui.projectwizard.I18N,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,createTooltipText --> getRoles,net.sourceforge.ganttproject.roles.RoleSet,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,createTooltipText --> formatRoleForTooltip,net.sourceforge.ganttproject.gui.projectwizard.I18N,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,createTooltipText --> getRolesetTooltipFooter,net.sourceforge.ganttproject.gui.projectwizard.I18N,);
EndClass 334
StartClass 335
Class(net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,Public,N,Y,);
Attribute(val$roleSetsList,javax.swing.JList,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(mouseClicked,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,);
Parameter(<init>,javax.swing.JList,);
Parameter(mouseClicked,java.awt.event.MouseEvent,);
Composition(net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,<init> --> this$0,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,<init> --> val$roleSetsList,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,mouseClicked --> val$roleSetsList,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,mouseClicked --> this$0,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,mouseClicked --> access$0,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage,);
Call(METHOD,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$1,mouseClicked --> toggle,net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage$RoleSetListModel,);
EndClass 335
StartClass 336
Class(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$1,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$1,<init> --> this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$1,actionPerformed --> this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$1,actionPerformed --> bResourceOverloadColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$1,actionPerformed --> colorChooser,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$1,actionPerformed --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$1,actionPerformed --> access$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,);
EndClass 336
StartClass 337
Class(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$2,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$2,<init> --> this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$3$2,WRITE);
EndClass 337
StartClass 338
Class(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$2,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$2,<init> --> this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$2,WRITE);
EndClass 338
StartClass 339
Class(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$1,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$1,<init> --> this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$1,actionPerformed --> this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$1,actionPerformed --> bResourceColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$1,actionPerformed --> colorChooser,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$1,actionPerformed --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2$1,actionPerformed --> access$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$2,);
EndClass 339
StartClass 340
Class(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$2,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$2,<init> --> this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$2,WRITE);
EndClass 340
StartClass 341
Class(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$1,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$1,<init> --> this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$1,actionPerformed --> this$1,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$1,actionPerformed --> bTaskColor,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$1,actionPerformed --> colorChooser,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$1,actionPerformed --> bHasChange,net.sourceforge.ganttproject.gui.options.GeneralOptionPanel,WRITE);
Call(METHOD,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1$1,actionPerformed --> access$0,net.sourceforge.ganttproject.gui.options.ColorSettingsPanel$1,);
EndClass 341
StartClass 342
Class(net.sourceforge.ganttproject.filter.GanttXSLFileFilter,N,N,Public);
Method(<init>,void,Public,N,N);
Method(accept,boolean,Public,N,N);
Method(getDescription,java.lang.String,Public,N,N);
Parameter(accept,java.io.File,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttXSLFileFilter,getDescription --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.filter.GanttXSLFileFilter,getDescription --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
EndClass 342
StartClass 343
Class(net.sourceforge.ganttproject.export.JDKFontLocator$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.export.JDKFontLocator,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(accept,boolean,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.export.JDKFontLocator,);
Parameter(accept,java.io.File,);
Parameter(accept,java.lang.String,);
Composition(net.sourceforge.ganttproject.export.JDKFontLocator);
Call(ATTRIBUTE,net.sourceforge.ganttproject.export.JDKFontLocator$1,<init> --> this$0,net.sourceforge.ganttproject.export.JDKFontLocator$1,WRITE);
EndClass 343
StartClass 344
Class(net.sourceforge.ganttproject.roles.RoleImpl,N,N,Public);
Attribute(myName,java.lang.String,Private,N,Y,);
Attribute(myID,int,Private,N,Y,);
Attribute(myRoleSet,net.sourceforge.ganttproject.roles.RoleSet,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getID,int,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(getPersistentID,java.lang.String,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,int,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,net.sourceforge.ganttproject.roles.RoleSet,);
Realization(net.sourceforge.ganttproject.roles.Role);
Composition(net.sourceforge.ganttproject.roles.RoleSet);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleImpl,getPersistentID --> getID,net.sourceforge.ganttproject.roles.RoleImpl,);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleImpl,toString --> getName,net.sourceforge.ganttproject.roles.RoleImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleImpl,<init> --> myID,net.sourceforge.ganttproject.roles.RoleImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleImpl,<init> --> myName,net.sourceforge.ganttproject.roles.RoleImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleImpl,<init> --> myRoleSet,net.sourceforge.ganttproject.roles.RoleImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleImpl,getID --> myID,net.sourceforge.ganttproject.roles.RoleImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleImpl,getName --> myName,net.sourceforge.ganttproject.roles.RoleImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.roles.RoleImpl,getPersistentID --> myRoleSet,net.sourceforge.ganttproject.roles.RoleImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.roles.RoleImpl,getPersistentID --> getName,net.sourceforge.ganttproject.roles.RoleSet,);
EndClass 344
StartClass 345
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$color,java.awt.Color,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,java.awt.Color,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,<init> --> val$color,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,run --> val$color,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$11,run --> setColor,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 345
StartClass 346
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$notes,java.lang.String,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,java.lang.String,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,<init> --> val$notes,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,run --> val$notes,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$12,run --> setNotes,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 346
StartClass 347
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$shape,net.sourceforge.ganttproject.shape.ShapePaint,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,net.sourceforge.ganttproject.shape.ShapePaint,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Composition(net.sourceforge.ganttproject.shape.ShapePaint);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,<init> --> val$shape,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,run --> val$shape,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$10,run --> setShape,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 347
StartClass 348
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$notes,java.lang.String,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,java.lang.String,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,<init> --> val$notes,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,run --> val$notes,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$13,run --> addNotes,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 348
StartClass 349
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$expand,boolean,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,boolean,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,<init> --> val$expand,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,run --> val$expand,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$7,run --> setExpand,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 349
StartClass 350
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$length,net.sourceforge.ganttproject.task.TaskLength,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskLength,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Composition(net.sourceforge.ganttproject.task.TaskLength);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,<init> --> val$length,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,run --> val$length,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$6,run --> setDuration,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 350
StartClass 351
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$isFixed,boolean,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,boolean,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,<init> --> val$isFixed,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,run --> val$isFixed,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$9,run --> setStartFixed,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 351
StartClass 352
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$percentage,int,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,int,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,<init> --> val$percentage,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,run --> val$percentage,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$8,run --> setCompletionPercentage,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 352
StartClass 353
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$priority,int,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,int,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,<init> --> val$priority,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,run --> val$priority,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$3,run --> setPriority,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 353
StartClass 354
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$milestone,boolean,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,boolean,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,<init> --> val$milestone,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,run --> val$milestone,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$2,run --> setMilestone,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 354
StartClass 355
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$end,net.sourceforge.ganttproject.GanttCalendar,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,net.sourceforge.ganttproject.GanttCalendar,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Composition(net.sourceforge.ganttproject.GanttCalendar);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,<init> --> val$end,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,run --> val$end,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$5,run --> setEnd,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 355
StartClass 356
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$start,net.sourceforge.ganttproject.GanttCalendar,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,net.sourceforge.ganttproject.GanttCalendar,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Composition(net.sourceforge.ganttproject.GanttCalendar);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,<init> --> val$start,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,run --> val$start,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$4,run --> setStart,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 356
StartClass 357
Class(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,Public,N,Y,);
Attribute(val$name,java.lang.String,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Parameter(<init>,java.lang.String,);
Composition(net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,<init> --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,<init> --> val$name,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,run --> this$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,run --> val$name,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,READ);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,run --> access$1,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.TaskImpl$MutatorImpl$1,run --> setName,net.sourceforge.ganttproject.task.TaskImpl,);
EndClass 357
StartClass 358
Class(net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,N,N,NA);
Attribute(myQueue,java.util.Map,Private,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,Public,N,Y,);
Method(<init>,void,Private,N,N);
Method(addAssignment,net.sourceforge.ganttproject.task.ResourceAssignment,Public,N,N);
Method(deleteAssignment,void,Public,N,N);
Method(commit,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Parameter(addAssignment,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(deleteAssignment,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Parameter(<init>$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,);
Realization(net.sourceforge.ganttproject.task.ResourceAssignmentMutator);
Composition(net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,<init>$2 --> <init>,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,<init> --> this$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,<init> --> myQueue,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,addAssignment --> this$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,addAssignment --> myQueue,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,deleteAssignment --> myQueue,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,commit --> myQueue,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,commit --> this$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,addAssignment --> <init>,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,addAssignment --> <init>,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,deleteAssignment --> <init>$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,deleteAssignment --> access$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,commit --> access$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,commit --> access$1,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,commit --> access$1,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,commit --> access$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,commit --> access$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,commit --> getLoad,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentMutatorImpl,commit --> setLoad,net.sourceforge.ganttproject.task.ResourceAssignment,);
EndClass 358
StartClass 359
Class(net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,N,N,NA);
Attribute(myResource,net.sourceforge.ganttproject.resource.ProjectResource,Private,N,Y,);
Attribute(myLoad,float,Private,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getTask,net.sourceforge.ganttproject.task.Task,Public,N,N);
Method(getResource,net.sourceforge.ganttproject.resource.ProjectResource,Public,N,N);
Method(getLoad,float,Public,N,N);
Method(setLoad,void,Public,N,N);
Method(delete,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Parameter(<init>,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(setLoad,float,);
Realization(net.sourceforge.ganttproject.task.ResourceAssignment);
Composition(net.sourceforge.ganttproject.resource.ProjectResource);
Composition(net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,delete --> getResource,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,<init> --> this$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,<init> --> myResource,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,getTask --> this$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,getResource --> myResource,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,getLoad --> myLoad,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,setLoad --> myLoad,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,delete --> this$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,getTask --> access$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$ResourceAssignmentImpl,delete --> deleteAssignment,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl,);
EndClass 359
StartClass 360
Class(net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,N,N,NA);
Attribute(ADD,int,Public,Y,Y,);
Attribute(DELETE,int,Public,Y,Y,);
Attribute(myAssignment,net.sourceforge.ganttproject.task.ResourceAssignment,Private,N,Y,);
Attribute(myOrder,int,Private,N,Y,);
Attribute(ourOrder,int,Private,Y,N,);
Attribute(myOperation,int,Private,N,N,);
Attribute(myResource,net.sourceforge.ganttproject.resource.ProjectResource,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(compareTo,int,Public,N,N);
Method(access$0,int,Public,Y,N);
Method(access$1,net.sourceforge.ganttproject.resource.ProjectResource,Public,Y,N);
Method(access$2,net.sourceforge.ganttproject.task.ResourceAssignment,Public,Y,N);
Parameter(<init>,net.sourceforge.ganttproject.task.ResourceAssignment,);
Parameter(<init>,int,);
Parameter(<init>$2,net.sourceforge.ganttproject.resource.ProjectResource,);
Parameter(<init>$2,int,);
Parameter(equals,java.lang.Object,);
Parameter(compareTo,java.lang.Object,);
Parameter(access$0,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,);
Parameter(access$1,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,);
Parameter(access$2,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,);
Composition(net.sourceforge.ganttproject.task.ResourceAssignment);
Composition(net.sourceforge.ganttproject.resource.ProjectResource);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init> --> ourOrder,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init> --> myAssignment,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init> --> ourOrder,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init> --> myOrder,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init> --> myOperation,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init> --> myResource,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init>$2 --> ourOrder,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init>$2 --> myAssignment,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init>$2 --> ourOrder,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init>$2 --> myOrder,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init>$2 --> myOperation,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init>$2 --> myResource,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,equals --> myAssignment,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,compareTo --> myOrder,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,access$0 --> myOperation,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,access$1 --> myResource,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,access$2 --> myAssignment,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,READ);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,<init> --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
Call(METHOD,net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl$MutationInfo,equals --> getResource,net.sourceforge.ganttproject.task.ResourceAssignment,);
EndClass 360
StartClass 361
Class(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$1,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$1,<init> --> this$1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$1,actionPerformed --> this$1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$1,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$1,actionPerformed --> colorButton,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$1,actionPerformed --> colorChooser,net.sourceforge.ganttproject.gui.GanttDialogProperties,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$1,actionPerformed --> access$0,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,);
EndClass 361
StartClass 362
Class(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$2,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$2,<init> --> this$1,net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean$1$2,WRITE);
EndClass 362
StartClass 363
Class(net.sourceforge.ganttproject.shape.PaintCellRenderer,N,N,Public);
Attribute(normalBorder,javax.swing.border.Border,Protected,N,N,);
Attribute(selectBorder,javax.swing.border.Border,Protected,N,N,);
Attribute(focusBorder,javax.swing.border.Border,Protected,N,N,);
Attribute(paint,java.awt.Paint,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(paintComponent,void,Public,N,N);
Method(getListCellRendererComponent,java.awt.Component,Public,N,N);
Parameter(paintComponent,java.awt.Graphics,);
Parameter(getListCellRendererComponent,javax.swing.JList,);
Parameter(getListCellRendererComponent,java.lang.Object,);
Parameter(getListCellRendererComponent,int,);
Parameter(getListCellRendererComponent,boolean,);
Parameter(getListCellRendererComponent,boolean,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.PaintCellRenderer,<init> --> normalBorder,net.sourceforge.ganttproject.shape.PaintCellRenderer,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.PaintCellRenderer,<init> --> selectBorder,net.sourceforge.ganttproject.shape.PaintCellRenderer,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.PaintCellRenderer,<init> --> focusBorder,net.sourceforge.ganttproject.shape.PaintCellRenderer,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.PaintCellRenderer,paintComponent --> paint,net.sourceforge.ganttproject.shape.PaintCellRenderer,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.PaintCellRenderer,getListCellRendererComponent --> selectBorder,net.sourceforge.ganttproject.shape.PaintCellRenderer,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.PaintCellRenderer,getListCellRendererComponent --> normalBorder,net.sourceforge.ganttproject.shape.PaintCellRenderer,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.PaintCellRenderer,getListCellRendererComponent --> focusBorder,net.sourceforge.ganttproject.shape.PaintCellRenderer,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.shape.PaintCellRenderer,getListCellRendererComponent --> paint,net.sourceforge.ganttproject.shape.PaintCellRenderer,WRITE);
EndClass 363
StartClass 364
Class(net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,N,Y,NA);
Attribute(language,net.sourceforge.ganttproject.language.GanttLanguage,Private,N,Y,);
Attribute(nameLabel3,javax.swing.JLabel,Private,N,N,);
Attribute(durationLabel3,javax.swing.JLabel,Private,N,N,);
Attribute(nameField3,javax.swing.JTextField,Private,N,N,);
Attribute(durationField3,javax.swing.JTextField,Private,N,N,);
Attribute(firstRowPanel3,javax.swing.JPanel,Private,N,N,);
Attribute(flowL,java.awt.FlowLayout,Private,N,N,);
Attribute(gbc,java.awt.GridBagConstraints,Private,N,N,);
Attribute(myTask,net.sourceforge.ganttproject.task.Task,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(addUsingGBL,void,Protected,N,N);
Method(setFirstRow,void,Protected,N,N);
Method(nameChanged,void,Public,N,N);
Method(durationChanged,void,Public,N,N);
Method(setupCommonFields,javax.swing.JPanel,Protected,N,N);
Method(getLanguage,net.sourceforge.ganttproject.language.GanttLanguage,Protected,N,N);
Method(getTask,net.sourceforge.ganttproject.task.Task,Protected,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Parameter(addUsingGBL,java.awt.Container,);
Parameter(addUsingGBL,java.awt.Component,);
Parameter(addUsingGBL,java.awt.GridBagConstraints,);
Parameter(addUsingGBL,int,);
Parameter(addUsingGBL,int,);
Parameter(addUsingGBL,int,);
Parameter(addUsingGBL,int,);
Parameter(setFirstRow,java.awt.Container,);
Parameter(setFirstRow,java.awt.GridBagConstraints,);
Parameter(setFirstRow,javax.swing.JLabel,);
Parameter(setFirstRow,javax.swing.JTextField,);
Parameter(setFirstRow,javax.swing.JLabel,);
Parameter(setFirstRow,javax.swing.JTextField,);
Parameter(nameChanged,java.lang.String,);
Parameter(durationChanged,int,);
SubClass(net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel);
SubClass(net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel);
Realization(net.sourceforge.ganttproject.gui.taskproperties.InternalStateListener);
Composition(net.sourceforge.ganttproject.language.GanttLanguage);
Composition(net.sourceforge.ganttproject.task.Task);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setFirstRow --> addUsingGBL,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> getLanguage,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> getTask,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> setFirstRow,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,<init> --> flowL,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,<init> --> gbc,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,<init> --> language,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,<init> --> myTask,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,nameChanged --> nameField3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,durationChanged --> durationField3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> nameField3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> durationField3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> flowL,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> firstRowPanel3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> gbc,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> nameLabel3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> durationLabel3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> nameLabel3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> nameField3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> durationLabel3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> durationField3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> firstRowPanel3,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,getLanguage --> language,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,getTask --> myTask,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,<init> --> getInstance,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> getText,net.sourceforge.ganttproject.language.GanttLanguage,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> getName,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> getDuration,net.sourceforge.ganttproject.task.Task,);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.CommonPanel,setupCommonFields --> getLength$2,net.sourceforge.ganttproject.task.TaskLength,);
EndClass 364
StartClass 365
Class(net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem,N,N,NA);
Attribute(myText,java.lang.String,Public,N,Y,);
Attribute(myTask,net.sourceforge.ganttproject.task.Task,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.task.Task,);
Composition(net.sourceforge.ganttproject.task.Task);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem,<init> --> myTask,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem,<init> --> myText,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem,toString --> myText,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel$TaskComboItem,<init> --> getTaskID,net.sourceforge.ganttproject.task.Task,);
EndClass 365
StartClass 366
Class(net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,Public,N,Y,);
Attribute(val$predecessorTable,javax.swing.JTable,Private,N,Y,);
Attribute(val$comboBox,javax.swing.JComboBox,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
Parameter(<init>,javax.swing.JTable,);
Parameter(<init>,javax.swing.JComboBox,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,<init> --> this$0,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,<init> --> val$predecessorTable,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,<init> --> val$comboBox,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,actionPerformed --> val$predecessorTable,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,actionPerformed --> val$comboBox,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$2,actionPerformed --> access$3,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
EndClass 366
StartClass 367
Class(net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$1,<init> --> this$0,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$1,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel$1,actionPerformed --> access$2,net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel,);
EndClass 367
StartClass 368
Class(net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$1,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(actionPerformed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
Parameter(actionPerformed,java.awt.event.ActionEvent,);
Composition(net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$1,<init> --> this$0,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$1,actionPerformed --> this$0,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$1,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel$1,actionPerformed --> access$2,net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel,);
EndClass 368
StartClass 369
Class(net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay$1,N,N,NA);
Attribute(this$1,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(mousePressed,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,);
Parameter(mousePressed,java.awt.event.MouseEvent,);
Composition(net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay$1,<init> --> this$1,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay$1,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay$1,mousePressed --> this$1,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay$1,READ);
Call(METHOD,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay$1,mousePressed --> clickFunction,net.sourceforge.ganttproject.gui.GanttPanelDate$GanttDialogDateDay,);
EndClass 369
StartClass 370
Class(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,N,N,NA);
Attribute(myRectangles,java.util.ArrayList,Private,N,N,);
Attribute(myLines,java.util.ArrayList,Private,N,N,);
Attribute(myTexts,java.util.ArrayList,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(createRectangle,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,Public,N,N);
Method(createLine,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,Public,N,N);
Method(createText,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,Public,N,N);
Method(paint,void,Public,N,N);
Parameter(createRectangle,int,);
Parameter(createRectangle,int,);
Parameter(createRectangle,int,);
Parameter(createRectangle,int,);
Parameter(createLine,int,);
Parameter(createLine,int,);
Parameter(createLine,int,);
Parameter(createLine,int,);
Parameter(createText,int,);
Parameter(createText,int,);
Parameter(createText,java.lang.String,);
Parameter(paint,java.awt.Graphics,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,<init> --> myRectangles,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,<init> --> myLines,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,<init> --> myTexts,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,createRectangle --> myRectangles,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,createLine --> myLines,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,createText --> myTexts,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> myRectangles,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> myLines,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> myTexts,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,READ);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,createRectangle --> <init>$2,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,createLine --> <init>$2,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,createText --> <init>,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> getBackgroundColor,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> getForegroundColor,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$1,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$2,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$3,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$4,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$1,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$2,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$3,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$4,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$0,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$1,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$2,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,paint --> access$3,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,);
EndClass 370
StartClass 371
Class(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,N,N,NA);
Attribute(myLeftX,int,Private,N,Y,);
Attribute(myTopY,int,Private,N,Y,);
Attribute(myWidth,int,Private,N,Y,);
Attribute(myHeight,int,Private,N,Y,);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Public,N,N);
Method(access$1,int,Public,Y,N);
Method(access$2,int,Public,Y,N);
Method(access$3,int,Public,Y,N);
Method(access$4,int,Public,Y,N);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,);
Parameter(access$1,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,);
Parameter(access$2,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,);
Parameter(access$3,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,);
Parameter(access$4,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,);
SuperClass(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive);
Generalization(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,<init>$2 --> <init>,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,<init> --> myLeftX,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,<init> --> myTopY,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,<init> --> myWidth,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,<init> --> myHeight,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,access$1 --> myLeftX,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,access$2 --> myTopY,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,access$3 --> myWidth,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,access$4 --> myHeight,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,READ);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle,<init> --> <init>,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,);
EndClass 371
StartClass 372
Class(net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,N,N,NA);
Attribute(myWidth,int,Public,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.chart.ChartHeaderImpl,Public,N,Y,);
Attribute(val$totalWidth,int,Private,N,Y,);
Attribute(val$topUnitHeight,int,Private,N,Y,);
Attribute(val$bottomY,int,Private,N,Y,);
Attribute(val$config,net.sourceforge.ganttproject.chart.ChartUIConfiguration,Private,N,Y,);
Attribute(val$bottomUnitWidth,int,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(createBottomUnitGrid,void,Public,N,N);
Method(getWidth,int,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Parameter(<init>,int,);
Parameter(createBottomUnitGrid,int,);
Parameter(createBottomUnitGrid,net.sourceforge.ganttproject.time.TimeFrame,);
Composition(net.sourceforge.ganttproject.chart.ChartHeaderImpl);
Composition(net.sourceforge.ganttproject.chart.ChartUIConfiguration);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,<init> --> this$0,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,<init> --> val$totalWidth,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,<init> --> val$topUnitHeight,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,<init> --> val$bottomY,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,<init> --> val$config,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,<init> --> val$bottomUnitWidth,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,<init> --> myWidth,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> val$totalWidth,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> this$0,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> val$topUnitHeight,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> val$bottomY,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> val$config,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> val$bottomUnitWidth,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> myWidth,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,getWidth --> myWidth,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,READ);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> access$0,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> createLine,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> getBottomUnitGridColor,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> setForegroundColor,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> getBottomUnit,net.sourceforge.ganttproject.time.TimeFrame,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> getUnitText,net.sourceforge.ganttproject.time.TimeFrame,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> createText,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> getBottomUnitFont,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> setFont,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1BottomUnitGridBuilder,createBottomUnitGrid --> getUnitCount,net.sourceforge.ganttproject.time.TimeFrame,);
EndClass 372
StartClass 373
Class(net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,N,N,NA);
Attribute(this$0,net.sourceforge.ganttproject.chart.ChartHeaderImpl,Public,N,Y,);
Attribute(val$topUnitHeight,int,Private,N,Y,);
Attribute(val$config,net.sourceforge.ganttproject.chart.ChartUIConfiguration,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(createTopUnitText,void,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Parameter(<init>,int,);
Parameter(<init>,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Parameter(createTopUnitText,int,);
Parameter(createTopUnitText,net.sourceforge.ganttproject.time.TimeFrame,);
Composition(net.sourceforge.ganttproject.chart.ChartHeaderImpl);
Composition(net.sourceforge.ganttproject.chart.ChartUIConfiguration);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,<init> --> this$0,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,<init> --> val$topUnitHeight,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,<init> --> val$config,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,createTopUnitText --> val$topUnitHeight,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,createTopUnitText --> this$0,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,createTopUnitText --> val$config,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,READ);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,createTopUnitText --> getTopUnit,net.sourceforge.ganttproject.time.TimeFrame,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,createTopUnitText --> getUnitText,net.sourceforge.ganttproject.time.TimeFrame,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,createTopUnitText --> access$0,net.sourceforge.ganttproject.chart.ChartHeaderImpl,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,createTopUnitText --> createText,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,createTopUnitText --> getSpanningHeaderFont,net.sourceforge.ganttproject.chart.ChartUIConfiguration,);
Call(METHOD,net.sourceforge.ganttproject.chart.ChartHeaderImpl$1TopUnitTextBuilder,createTopUnitText --> setFont,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,);
EndClass 373
StartClass 374
Class(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,N,N,NA);
Attribute(myStartX,int,Private,N,Y,);
Attribute(myStartY,int,Private,N,Y,);
Attribute(myFinishX,int,Private,N,Y,);
Attribute(myFinishY,int,Private,N,Y,);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Public,N,N);
Method(access$1,int,Public,Y,N);
Method(access$2,int,Public,Y,N);
Method(access$3,int,Public,Y,N);
Method(access$4,int,Public,Y,N);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,);
Parameter(access$1,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,);
Parameter(access$2,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,);
Parameter(access$3,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,);
Parameter(access$4,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,);
SuperClass(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive);
Generalization(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,<init>$2 --> <init>,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,<init> --> myStartX,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,<init> --> myStartY,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,<init> --> myFinishX,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,<init> --> myFinishY,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,access$1 --> myStartX,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,access$2 --> myStartY,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,access$3 --> myFinishX,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,access$4 --> myFinishY,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,READ);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line,<init> --> <init>,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,);
EndClass 374
StartClass 375
Class(net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,N,N,NA);
Attribute(myUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,Y,);
Attribute(myFirstItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,Public,N,N,);
Attribute(myNextHeader,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,Private,N,N,);
Attribute(myItemCount,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(fullDump,java.lang.String,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(append,void,Public,N,N);
Method(next,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,Public,N,N);
Method(getItemCount,int,Public,N,N);
Method(getLineItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(append,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Parameter(getLineItem,int,);
Composition(net.sourceforge.ganttproject.time.TimeUnit);
Composition(net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem);
Composition(net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,fullDump --> toString,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,fullDump --> getLineItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Call(METHOD,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,fullDump --> getItemCount,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,<init> --> myItemCount,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,<init> --> myUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,toString --> myUnit,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,append --> myNextHeader,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,next --> myNextHeader,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,getItemCount --> myItemCount,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,getItemCount --> myFirstItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,getItemCount --> myItemCount,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,getLineItem --> myFirstItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,getItemCount --> myNextItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineHeader,getLineItem --> myNextItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,READ);
EndClass 375
StartClass 376
Class(net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,N,N,NA);
Attribute(myNextItem,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,Public,N,N,);
Attribute(myStartDate,java.util.Date,Public,N,Y,);
Attribute(myEndDate,java.util.Date,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,java.util.Date,);
Parameter(<init>,java.util.Date,);
Composition(net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,<init> --> myStartDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,<init> --> myEndDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,toString --> myStartDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,toString --> myEndDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$LineItem,READ);
EndClass 376
StartClass 377
Class(net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$UnitInfo,N,N,NA);
Attribute(myTruncatedCount,int,Public,N,Y,);
Attribute(myRoundedCount,int,Public,N,Y,);
Attribute(lastDate,java.util.Date,Private,N,Y,);
Method(<init>,void,Public,N,N);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,java.util.Date,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$UnitInfo,<init> --> myTruncatedCount,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$UnitInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$UnitInfo,<init> --> myRoundedCount,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$UnitInfo,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$UnitInfo,<init> --> lastDate,net.sourceforge.ganttproject.time.gregorian.GregorianTimeUnitStack$TimeFrameImpl$UnitInfo,WRITE);
EndClass 377
StartClass 378
Class(net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,N,N,NA);
Attribute(myAtom,net.sourceforge.ganttproject.time.TimeUnit,Public,N,Y,);
Attribute(myAtomCount,int,Public,N,Y,);
Attribute(this$0,net.sourceforge.ganttproject.time.TimeUnitGraph,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getAtomCount,int,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(<init>,int,);
Parameter(<init>$2,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Parameter(<init>$2,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,);
Parameter(<init>$2,int,);
Composition(net.sourceforge.ganttproject.time.TimeUnit);
Composition(net.sourceforge.ganttproject.time.TimeUnitGraph);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,<init> --> this$0,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,<init> --> myAtom,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,<init> --> myAtomCount,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,<init>$2 --> myAtomCount,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,<init>$2 --> myAtom,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,<init>$2 --> this$0,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,<init>$2 --> myAtomCount,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,<init>$2 --> myAtom,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,getAtomCount --> myAtomCount,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,READ);
EndClass 378
StartClass 379
Class(net.sourceforge.ganttproject.time.TimeUnitImpl,N,N,Public);
Attribute(myName,java.lang.String,Private,N,Y,);
Attribute(myGraph,net.sourceforge.ganttproject.time.TimeUnitGraph,Private,N,Y,);
Attribute(myDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnit,Private,N,Y,);
Attribute(myTextFormatter,net.sourceforge.ganttproject.time.TextFormatter,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(isConstructedFrom,boolean,Public,N,N);
Method(getAtomCount,int,Public,N,N);
Method(getDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(setTextFormatter,void,Public,N,N);
Method(format,java.lang.String,Public,N,N);
Method(getTextFormatter,net.sourceforge.ganttproject.time.TextFormatter,Protected,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(isConstructedFrom,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getAtomCount,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(setTextFormatter,net.sourceforge.ganttproject.time.TextFormatter,);
Parameter(format,java.util.Date,);
SubClass(net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl);
SubClass(net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl);
Realization(net.sourceforge.ganttproject.time.TimeUnit);
Composition(net.sourceforge.ganttproject.time.TimeUnitGraph);
Composition(net.sourceforge.ganttproject.time.TimeUnit);
Composition(net.sourceforge.ganttproject.time.TextFormatter);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitImpl,toString --> getName,net.sourceforge.ganttproject.time.TimeUnitImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitImpl,<init> --> myName,net.sourceforge.ganttproject.time.TimeUnitImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitImpl,<init> --> myGraph,net.sourceforge.ganttproject.time.TimeUnitImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitImpl,<init> --> myDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnitImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitImpl,getName --> myName,net.sourceforge.ganttproject.time.TimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitImpl,isConstructedFrom --> myGraph,net.sourceforge.ganttproject.time.TimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitImpl,getAtomCount --> myGraph,net.sourceforge.ganttproject.time.TimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitImpl,getDirectAtomUnit --> myDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitImpl,setTextFormatter --> myTextFormatter,net.sourceforge.ganttproject.time.TimeUnitImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitImpl,format --> myTextFormatter,net.sourceforge.ganttproject.time.TimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitImpl,getTextFormatter --> myTextFormatter,net.sourceforge.ganttproject.time.TimeUnitImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitImpl,isConstructedFrom --> getComposition,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitImpl,getAtomCount --> getComposition,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitImpl,getAtomCount --> getAtomCount,net.sourceforge.ganttproject.time.TimeUnitGraph$Composition,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitImpl,format --> format,net.sourceforge.ganttproject.time.TextFormatter,);
EndClass 379
StartClass 380
Class(net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,N,N,Public);
Attribute(myDirectFrameable,net.sourceforge.ganttproject.time.DateFrameable,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(createTimeUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,N);
Method(getAtomCount,int,Public,N,N);
Method(access$0,net.sourceforge.ganttproject.time.DateFrameable,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(<init>,net.sourceforge.ganttproject.time.DateFrameable,);
Parameter(createTimeUnit,java.util.Date,);
Parameter(getAtomCount,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(access$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,);
SuperClass(net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl);
SuperClass(net.sourceforge.ganttproject.time.TimeUnitImpl);
Generalization(net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl);
Realization(net.sourceforge.ganttproject.time.TimeUnitFunctionOfDate);
Composition(net.sourceforge.ganttproject.time.DateFrameable);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,<init> --> myDirectFrameable,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,access$0 --> myDirectFrameable,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,<init> --> <init>,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,createTimeUnit --> <init>,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,);
EndClass 380
StartClass 381
Class(net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,N,N,Public);
Attribute(myFramer,net.sourceforge.ganttproject.time.DateFrameable,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(adjustRight,java.util.Date,Public,N,N);
Method(adjustLeft,java.util.Date,Public,N,N);
Method(jumpLeft,java.util.Date,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnitGraph,);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(<init>,net.sourceforge.ganttproject.time.DateFrameable,);
Parameter(adjustRight,java.util.Date,);
Parameter(adjustLeft,java.util.Date,);
Parameter(jumpLeft,java.util.Date,);
SuperClass(net.sourceforge.ganttproject.time.TimeUnitImpl);
SubClass(net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl);
Generalization(net.sourceforge.ganttproject.time.TimeUnitImpl);
Realization(net.sourceforge.ganttproject.time.TimeUnit);
Realization(net.sourceforge.ganttproject.time.DateFrameable);
Composition(net.sourceforge.ganttproject.time.DateFrameable);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,<init> --> myFramer,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,adjustRight --> myFramer,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,adjustLeft --> myFramer,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,jumpLeft --> myFramer,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,<init> --> <init>,net.sourceforge.ganttproject.time.TimeUnitImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,adjustRight --> adjustRight,net.sourceforge.ganttproject.time.DateFrameable,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,adjustLeft --> adjustLeft,net.sourceforge.ganttproject.time.DateFrameable,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,jumpLeft --> jumpLeft,net.sourceforge.ganttproject.time.DateFrameable,);
EndClass 381
StartClass 382
Class(net.sourceforge.ganttproject.gui.taskproperties.InternalStateListener,Y,Y,Public);
Method(nameChanged,void,Public,N,Y);
Method(durationChanged,void,Public,N,Y);
Parameter(nameChanged,java.lang.String,);
Parameter(durationChanged,int,);
EndClass 382
StartClass 383
Class(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,N,N,NA);
Attribute(myBackgroundColor,java.awt.Color,Private,N,N,);
Attribute(myForegroundColor,java.awt.Color,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getBackgroundColor,java.awt.Color,Public,N,N);
Method(setBackgroundColor,void,Public,N,N);
Method(getForegroundColor,java.awt.Color,Public,N,N);
Method(setForegroundColor,void,Public,N,N);
Parameter(setBackgroundColor,java.awt.Color,);
Parameter(setForegroundColor,java.awt.Color,);
SubClass(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Rectangle);
SubClass(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Line);
SubClass(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,getBackgroundColor --> myBackgroundColor,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,setBackgroundColor --> myBackgroundColor,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,getForegroundColor --> myForegroundColor,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,setForegroundColor --> myForegroundColor,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,WRITE);
EndClass 383
StartClass 384
Class(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,N,N,NA);
Attribute(myLeftX,int,Private,N,Y,);
Attribute(myBottomY,int,Private,N,Y,);
Attribute(myText,java.lang.String,Private,N,Y,);
Attribute(myFont,java.awt.Font,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(setFont,void,Public,N,N);
Method(access$0,java.awt.Font,Public,Y,N);
Method(access$1,java.lang.String,Public,Y,N);
Method(access$2,int,Public,Y,N);
Method(access$3,int,Public,Y,N);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,java.lang.String,);
Parameter(setFont,java.awt.Font,);
Parameter(access$0,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,);
Parameter(access$1,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,);
Parameter(access$2,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,);
Parameter(access$3,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,);
SuperClass(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive);
Generalization(net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,<init> --> myLeftX,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,<init> --> myBottomY,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,<init> --> myText,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,setFont --> myFont,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,access$0 --> myFont,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,access$1 --> myText,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,access$2 --> myLeftX,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,access$3 --> myBottomY,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,READ);
Call(METHOD,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$Text,<init> --> <init>,net.sourceforge.ganttproject.chart.GraphicPrimitiveContainer$GraphicPrimitive,);
EndClass 384
StartClass 385
Class(net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,N,N,NA);
Attribute(myBaseDate,java.util.Date,Private,N,Y,);
Attribute(myRightDate,java.util.Date,Private,N,Y,);
Attribute(myLeftDate,java.util.Date,Private,N,Y,);
Attribute(myAtomCount,int,Private,N,N,);
Attribute(myTextFormatter,net.sourceforge.ganttproject.time.TextFormatter,Private,N,N,);
Attribute(this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(isConstructedFrom,boolean,Public,N,N);
Method(getAtomCount,int,Public,N,N);
Method(getDirectAtomCount,int,Private,N,N);
Method(getDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnit,Public,N,N);
Method(adjustRight,java.util.Date,Public,N,N);
Method(adjustLeft,java.util.Date,Public,N,N);
Method(jumpLeft,java.util.Date,Public,N,N);
Method(setTextFormatter,void,Public,N,N);
Method(format,java.lang.String,Public,N,N);
Parameter(<init>,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,);
Parameter(<init>,java.util.Date,);
Parameter(isConstructedFrom,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(getAtomCount,net.sourceforge.ganttproject.time.TimeUnit,);
Parameter(adjustRight,java.util.Date,);
Parameter(adjustLeft,java.util.Date,);
Parameter(jumpLeft,java.util.Date,);
Parameter(setTextFormatter,net.sourceforge.ganttproject.time.TextFormatter,);
Parameter(format,java.util.Date,);
Realization(net.sourceforge.ganttproject.time.TimeUnit);
Realization(net.sourceforge.ganttproject.time.DateFrameable);
Composition(net.sourceforge.ganttproject.time.TextFormatter);
Composition(net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getAtomCount --> getDirectAtomCount,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getAtomCount --> getDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,<init> --> this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,<init> --> myAtomCount,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,<init> --> myBaseDate,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,<init> --> myRightDate,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,<init> --> myLeftDate,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getName --> this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,isConstructedFrom --> this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getAtomCount --> this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getDirectAtomCount --> myAtomCount,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getDirectAtomCount --> this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getDirectAtomCount --> myRightDate,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getDirectAtomCount --> myLeftDate,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getDirectAtomCount --> myAtomCount,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,WRITE);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getDirectAtomUnit --> this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,adjustRight --> this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,adjustLeft --> this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,jumpLeft --> this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,setTextFormatter --> this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(ATTRIBUTE,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,format --> this$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,READ);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,<init> --> adjustRight,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,<init> --> adjustLeft,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getName --> getName,net.sourceforge.ganttproject.time.TimeUnitImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,isConstructedFrom --> isConstructedFrom,net.sourceforge.ganttproject.time.TimeUnitImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getAtomCount --> getAtomCount,net.sourceforge.ganttproject.time.TimeUnit,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getDirectAtomCount --> access$0,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getDirectAtomCount --> jumpLeft,net.sourceforge.ganttproject.time.DateFrameable,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,getDirectAtomUnit --> getDirectAtomUnit,net.sourceforge.ganttproject.time.TimeUnitImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,adjustRight --> adjustRight,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,adjustLeft --> adjustLeft,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,jumpLeft --> jumpLeft,net.sourceforge.ganttproject.time.TimeUnitDateFrameableImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,setTextFormatter --> setTextFormatter,net.sourceforge.ganttproject.time.TimeUnitImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,format --> getTextFormatter,net.sourceforge.ganttproject.time.TimeUnitImpl,);
Call(METHOD,net.sourceforge.ganttproject.time.TimeUnitFunctionOfDateImpl$ParameterizedTimeUnitImpl,format --> format,net.sourceforge.ganttproject.time.TextFormatter,);
EndClass 385