StartClass 1
Class(org.mozilla.javascript.tools.shell.Main,N,N,Public);
Attribute(shellContextFactory,org.mozilla.javascript.tools.shell.ShellContextFactory,Public,Y,N,);
Attribute(global,org.mozilla.javascript.tools.shell.Global,Public,Y,N,);
Attribute(errorReporter,org.mozilla.javascript.tools.ToolErrorReporter,Protected,Y,N,);
Attribute(exitCode,int,Protected,Y,N,);
Attribute(EXITCODE_RUNTIME_ERROR,int,Private,Y,Y,);
Attribute(EXITCODE_FILE_NOT_FOUND,int,Private,Y,Y,);
Attribute(processStdin,boolean,Public,Y,N,);
Attribute(fileList,java.util.List,Public,Y,N,java.lang.String);
Attribute(modulePath,java.util.List,Public,Y,N,java.lang.String);
Attribute(mainModule,java.lang.String,Public,Y,N,);
Attribute(sandboxed,boolean,Public,Y,N,);
Attribute(useRequire,boolean,Public,Y,N,);
Attribute(require,org.mozilla.javascript.commonjs.module.Require,Public,Y,N,);
Attribute(securityImpl,org.mozilla.javascript.tools.shell.SecurityProxy,Private,Y,N,);
Attribute(scriptCache,org.mozilla.javascript.tools.shell.Main$ScriptCache,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(main,void,Public,Y,N);
Method(exec,int,Public,Y,N);
Method(processFiles,void,Public,Y,N);
Method(evalInlineScript,void,Public,Y,N);
Method(getGlobal,org.mozilla.javascript.tools.shell.Global,Public,Y,N);
Method(getShellScope,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(getScope,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(processOptions,java.lang.String[],Public,Y,N);
Method(initJavaPolicySecuritySupport,void,Private,Y,N);
Method(processSource,void,Public,Y,N);
Method(processFileNoThrow,void,Public,Y,N);
Method(processFile,void,Public,Y,N);
Method(processFileSecure,void,Public,Y,N);
Method(getDigest,byte[],Private,Y,N);
Method(loadCompiledScript,org.mozilla.javascript.Script,Private,Y,N);
Method(getIn,java.io.InputStream,Public,Y,N);
Method(setIn,void,Public,Y,N);
Method(getOut,java.io.PrintStream,Public,Y,N);
Method(setOut,void,Public,Y,N);
Method(getErr,java.io.PrintStream,Public,Y,N);
Method(setErr,void,Public,Y,N);
Method(readFileOrUrl,java.lang.Object,Private,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(main,java.lang.String[],);
Parameter(exec,java.lang.String[],);
Parameter(processFiles,org.mozilla.javascript.Context,);
Parameter(processFiles,java.lang.String[],);
Parameter(evalInlineScript,org.mozilla.javascript.Context,);
Parameter(evalInlineScript,java.lang.String,);
Parameter(getScope,java.lang.String,);
Parameter(processOptions,java.lang.String[],);
Parameter(processSource,org.mozilla.javascript.Context,);
Parameter(processSource,java.lang.String,);
Parameter(processFileNoThrow,org.mozilla.javascript.Context,);
Parameter(processFileNoThrow,org.mozilla.javascript.Scriptable,);
Parameter(processFileNoThrow,java.lang.String,);
Parameter(processFile,org.mozilla.javascript.Context,);
Parameter(processFile,org.mozilla.javascript.Scriptable,);
Parameter(processFile,java.lang.String,);
Parameter(processFileSecure,org.mozilla.javascript.Context,);
Parameter(processFileSecure,org.mozilla.javascript.Scriptable,);
Parameter(processFileSecure,java.lang.String,);
Parameter(processFileSecure,java.lang.Object,);
Parameter(getDigest,java.lang.Object,);
Parameter(loadCompiledScript,org.mozilla.javascript.Context,);
Parameter(loadCompiledScript,java.lang.String,);
Parameter(loadCompiledScript,byte[],);
Parameter(loadCompiledScript,java.lang.Object,);
Parameter(setIn,java.io.InputStream,);
Parameter(setOut,java.io.PrintStream,);
Parameter(setErr,java.io.PrintStream,);
Parameter(readFileOrUrl,java.lang.String,);
Parameter(readFileOrUrl,boolean,);
Composition(org.mozilla.javascript.tools.shell.ShellContextFactory);
Composition(org.mozilla.javascript.tools.shell.Global);
Composition(org.mozilla.javascript.tools.ToolErrorReporter);
Composition(org.mozilla.javascript.commonjs.module.Require);
Composition(org.mozilla.javascript.tools.shell.SecurityProxy);
Composition(org.mozilla.javascript.tools.shell.Main$ScriptCache);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,main --> initJavaPolicySecuritySupport,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,main --> exec,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,exec --> processOptions,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFiles --> processSource,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,evalInlineScript --> getShellScope,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,getShellScope --> getScope,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> getShellScope,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> getScope,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> processFile,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileNoThrow --> processFile,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFile --> processFileSecure,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileSecure --> readFileOrUrl,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileSecure --> getDigest,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileSecure --> loadCompiledScript,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,getIn --> getGlobal,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,setIn --> getGlobal,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,getOut --> getGlobal,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,setOut --> getGlobal,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,getErr --> getGlobal,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,setErr --> getGlobal,org.mozilla.javascript.tools.shell.Main,);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,exec --> global,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,exec --> shellContextFactory,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,exec --> errorReporter,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,exec --> processStdin,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,exec --> fileList,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,exec --> exitCode,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,exec --> errorReporter,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processFiles --> global,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processFiles --> fileList,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processFiles --> exitCode,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,evalInlineScript --> exitCode,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,getGlobal --> global,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,getScope --> useRequire,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,getScope --> global,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> fileList,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> shellContextFactory,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> errorReporter,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> global,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> modulePath,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> processStdin,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> mainModule,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> useRequire,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> sandboxed,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> modulePath,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,initJavaPolicySecuritySupport --> securityImpl,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,initJavaPolicySecuritySupport --> securityImpl,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processSource --> shellContextFactory,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processSource --> global,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processSource --> useRequire,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processSource --> mainModule,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processSource --> require,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processSource --> exitCode,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processFileNoThrow --> exitCode,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processFile --> securityImpl,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processFileSecure --> scriptCache,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,readFileOrUrl --> shellContextFactory,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,<clinit> --> global,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,<clinit> --> shellContextFactory,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,<clinit> --> global,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,<clinit> --> exitCode,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,<clinit> --> processStdin,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,<clinit> --> fileList,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,<clinit> --> sandboxed,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,<clinit> --> useRequire,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,<clinit> --> scriptCache,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,exec --> initialized,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,exec --> args,org.mozilla.javascript.tools.shell.Main$IProxy,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> initialized,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processOptions --> scriptText,org.mozilla.javascript.tools.shell.Main$IProxy,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main,processSource --> history,org.mozilla.javascript.tools.shell.Global,READ);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,exec --> getErr,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,exec --> <init>$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,exec --> setErrorReporter,org.mozilla.javascript.tools.shell.ShellContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,exec --> init,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,exec --> <init>,org.mozilla.javascript.tools.shell.Main$IProxy,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,exec --> call,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFiles --> newArray$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFiles --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFiles --> getMessage$3,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFiles --> reportError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFiles --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFiles --> reportException,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFiles --> getMessage$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,evalInlineScript --> compileString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,evalInlineScript --> exec,org.mozilla.javascript.Script,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,evalInlineScript --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,evalInlineScript --> reportException,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,evalInlineScript --> getMessage$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,evalInlineScript --> reportError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,getScope --> toUrl,org.mozilla.javascript.tools.SourceReader,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,getScope --> <init>,org.mozilla.javascript.commonjs.module.ModuleScope,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> isValidLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> setLanguageVersion,org.mozilla.javascript.tools.shell.ShellContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> isValidOptimizationLevel,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> setOptimizationLevel,org.mozilla.javascript.tools.shell.ShellContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> setCharacterEncoding,org.mozilla.javascript.tools.shell.ShellContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> setStrictMode,org.mozilla.javascript.tools.shell.ShellContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> setAllowReservedKeywords,org.mozilla.javascript.tools.shell.ShellContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> setIsReportingWarnings,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> setWarningAsError,org.mozilla.javascript.tools.shell.ShellContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> init,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> <init>,org.mozilla.javascript.tools.shell.Main$IProxy,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> call,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> setSealedStdLib,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> setGeneratingDebug,org.mozilla.javascript.tools.shell.ShellContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> getOut,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processOptions --> getMessage$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,initJavaPolicySecuritySupport --> initGlobal,org.mozilla.javascript.SecurityController,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,initJavaPolicySecuritySupport --> initCause,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> getCharacterEncoding,org.mozilla.javascript.tools.shell.ShellContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> getConsole,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> getImplementationVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> println$2,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> getPrompts,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> flush,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> readLine$2,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> stringIsCompilableUnit,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> compileString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> exec,org.mozilla.javascript.Script,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> getUndefinedValue,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> reportException,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> getLength,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> put$2,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> getMessage$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> reportError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> println,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processSource --> requireMain,org.mozilla.javascript.commonjs.module.Require,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileNoThrow --> getMessage$3,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileNoThrow --> reportError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileNoThrow --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileNoThrow --> reportException,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileNoThrow --> getMessage$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFile --> callProcessFileSecure,org.mozilla.javascript.tools.shell.SecurityProxy,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileSecure --> getOptimizationLevel,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileSecure --> get,org.mozilla.javascript.tools.shell.Main$ScriptCache,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileSecure --> compileString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileSecure --> put,org.mozilla.javascript.tools.shell.Main$ScriptCache,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,processFileSecure --> exec,org.mozilla.javascript.Script,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,loadCompiledScript --> getApplicationClassLoader,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,loadCompiledScript --> createLoader,org.mozilla.javascript.SecurityController,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,loadCompiledScript --> defineClass,org.mozilla.javascript.GeneratedClassLoader,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,loadCompiledScript --> linkClass,org.mozilla.javascript.GeneratedClassLoader,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,loadCompiledScript --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,loadCompiledScript --> reportError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,getIn --> getIn,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,setIn --> setIn,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,getOut --> getOut,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,setOut --> setOut,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,getErr --> getErr,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,setErr --> setErr,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,readFileOrUrl --> getCharacterEncoding,org.mozilla.javascript.tools.shell.ShellContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,readFileOrUrl --> readFileOrUrl,org.mozilla.javascript.tools.SourceReader,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,<clinit> --> <init>,org.mozilla.javascript.tools.shell.ShellContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,<clinit> --> <init>,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,<clinit> --> <init>,org.mozilla.javascript.tools.shell.Main$ScriptCache,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,<clinit> --> <init>,org.mozilla.javascript.tools.shell.Main$IProxy,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main,<clinit> --> initQuitAction,org.mozilla.javascript.tools.shell.Global,);
EndClass 1
StartClass 2
Class(org.mozilla.javascript.tools.shell.ShellContextFactory,N,N,Public);
Attribute(strictMode,boolean,Private,N,N,);
Attribute(warningAsError,boolean,Private,N,N,);
Attribute(languageVersion,int,Private,N,N,);
Attribute(optimizationLevel,int,Private,N,N,);
Attribute(generatingDebug,boolean,Private,N,N,);
Attribute(allowReservedKeywords,boolean,Private,N,N,);
Attribute(errorReporter,org.mozilla.javascript.ErrorReporter,Private,N,N,);
Attribute(characterEncoding,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(hasFeature,boolean,Protected,N,N);
Method(onContextCreated,void,Protected,N,N);
Method(setStrictMode,void,Public,N,N);
Method(setWarningAsError,void,Public,N,N);
Method(setLanguageVersion,void,Public,N,N);
Method(setOptimizationLevel,void,Public,N,N);
Method(setErrorReporter,void,Public,N,N);
Method(setGeneratingDebug,void,Public,N,N);
Method(getCharacterEncoding,java.lang.String,Public,N,N);
Method(setCharacterEncoding,void,Public,N,N);
Method(setAllowReservedKeywords,void,Public,N,N);
Parameter(hasFeature,org.mozilla.javascript.Context,);
Parameter(hasFeature,int,);
Parameter(onContextCreated,org.mozilla.javascript.Context,);
Parameter(setStrictMode,boolean,);
Parameter(setWarningAsError,boolean,);
Parameter(setLanguageVersion,int,);
Parameter(setOptimizationLevel,int,);
Parameter(setErrorReporter,org.mozilla.javascript.ErrorReporter,);
Parameter(setGeneratingDebug,boolean,);
Parameter(setCharacterEncoding,java.lang.String,);
Parameter(setAllowReservedKeywords,boolean,);
SuperClass(org.mozilla.javascript.ContextFactory);
Generalization(org.mozilla.javascript.ContextFactory);
Composition(org.mozilla.javascript.ErrorReporter);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,<init> --> languageVersion,org.mozilla.javascript.tools.shell.ShellContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,<init> --> allowReservedKeywords,org.mozilla.javascript.tools.shell.ShellContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,hasFeature --> strictMode,org.mozilla.javascript.tools.shell.ShellContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,hasFeature --> allowReservedKeywords,org.mozilla.javascript.tools.shell.ShellContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,hasFeature --> warningAsError,org.mozilla.javascript.tools.shell.ShellContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,hasFeature --> generatingDebug,org.mozilla.javascript.tools.shell.ShellContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,onContextCreated --> languageVersion,org.mozilla.javascript.tools.shell.ShellContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,onContextCreated --> optimizationLevel,org.mozilla.javascript.tools.shell.ShellContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,onContextCreated --> errorReporter,org.mozilla.javascript.tools.shell.ShellContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,onContextCreated --> generatingDebug,org.mozilla.javascript.tools.shell.ShellContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,setStrictMode --> strictMode,org.mozilla.javascript.tools.shell.ShellContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,setWarningAsError --> warningAsError,org.mozilla.javascript.tools.shell.ShellContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,setLanguageVersion --> languageVersion,org.mozilla.javascript.tools.shell.ShellContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,setOptimizationLevel --> optimizationLevel,org.mozilla.javascript.tools.shell.ShellContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,setErrorReporter --> errorReporter,org.mozilla.javascript.tools.shell.ShellContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,setGeneratingDebug --> generatingDebug,org.mozilla.javascript.tools.shell.ShellContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,getCharacterEncoding --> characterEncoding,org.mozilla.javascript.tools.shell.ShellContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,setCharacterEncoding --> characterEncoding,org.mozilla.javascript.tools.shell.ShellContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellContextFactory,setAllowReservedKeywords --> allowReservedKeywords,org.mozilla.javascript.tools.shell.ShellContextFactory,WRITE);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,<init> --> <init>,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,hasFeature --> hasFeature,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,onContextCreated --> setLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,onContextCreated --> setOptimizationLevel,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,onContextCreated --> setErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,onContextCreated --> setGeneratingDebug,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,onContextCreated --> onContextCreated,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,setStrictMode --> checkNotSealed,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,setWarningAsError --> checkNotSealed,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,setLanguageVersion --> checkLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,setLanguageVersion --> checkNotSealed,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,setOptimizationLevel --> checkOptimizationLevel,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellContextFactory,setOptimizationLevel --> checkNotSealed,org.mozilla.javascript.ContextFactory,);
EndClass 2
StartClass 3
Class(org.mozilla.javascript.tools.shell.Global,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(history,org.mozilla.javascript.NativeArray,Public,N,N,);
Attribute(attemptedJLineLoad,boolean,Public,N,N,);
Attribute(console,org.mozilla.javascript.tools.shell.ShellConsole,Private,N,N,);
Attribute(inStream,java.io.InputStream,Private,N,N,);
Attribute(outStream,java.io.PrintStream,Private,N,N,);
Attribute(errStream,java.io.PrintStream,Private,N,N,);
Attribute(sealedStdLib,boolean,Private,N,N,);
Attribute(initialized,boolean,Public,N,N,);
Attribute(quitAction,org.mozilla.javascript.tools.shell.QuitAction,Private,N,N,);
Attribute(prompts,java.lang.String[],Private,N,N,);
Attribute(doctestCanonicalizations,java.util.HashMap,Private,N,N,java.lang.String;java.lang.String);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(isInitialized,boolean,Public,N,N);
Method(initQuitAction,void,Public,N,N);
Method(init,void,Public,N,N);
Method(init$2,void,Public,N,N);
Method(installRequire,org.mozilla.javascript.commonjs.module.Require,Public,N,N);
Method(help,void,Public,Y,N);
Method(gc,void,Public,Y,N);
Method(print,java.lang.Object,Public,Y,N);
Method(quit,void,Public,Y,N);
Method(version,double,Public,Y,N);
Method(load,void,Public,Y,N);
Method(defineClass,void,Public,Y,N);
Method(loadClass,void,Public,Y,N);
Method(getClass,java.lang.Class,Private,Y,N);
Method(serialize,void,Public,Y,N);
Method(deserialize,java.lang.Object,Public,Y,N);
Method(getPrompts,java.lang.String[],Public,N,N);
Method(doctest,java.lang.Object,Public,Y,N);
Method(runDoctest,int,Public,N,N);
Method(doctestOutputMatches,boolean,Private,N,N);
Method(spawn,java.lang.Object,Public,Y,N);
Method(sync,java.lang.Object,Public,Y,N);
Method(runCommand,java.lang.Object,Public,Y,N);
Method(seal,void,Public,Y,N);
Method(readFile,java.lang.Object,Public,Y,N);
Method(readUrl,java.lang.Object,Public,Y,N);
Method(toint32,java.lang.Object,Public,Y,N);
Method(loadJLine,boolean,Private,N,N);
Method(getConsole,org.mozilla.javascript.tools.shell.ShellConsole,Public,N,N);
Method(getIn,java.io.InputStream,Public,N,N);
Method(setIn,void,Public,N,N);
Method(getOut,java.io.PrintStream,Public,N,N);
Method(setOut,void,Public,N,N);
Method(getErr,java.io.PrintStream,Public,N,N);
Method(setErr,void,Public,N,N);
Method(setSealedStdLib,void,Public,N,N);
Method(getInstance,org.mozilla.javascript.tools.shell.Global,Private,Y,N);
Method(runProcess,int,Private,Y,N);
Method(pipe,void,Public,Y,N);
Method(toInputStream,java.io.InputStream,Private,Y,N);
Method(toOutputStream,java.io.OutputStream,Private,Y,N);
Method(readUrl$2,java.lang.String,Private,Y,N);
Method(getCharCodingFromType,java.lang.String,Private,Y,N);
Method(readReader,java.lang.String,Private,Y,N);
Method(readReader$2,java.lang.String,Private,Y,N);
Method(reportRuntimeError,java.lang.RuntimeException,Public,Y,N);
Method(reportRuntimeError$2,java.lang.RuntimeException,Public,Y,N);
Parameter(<init>$2,org.mozilla.javascript.Context,);
Parameter(initQuitAction,org.mozilla.javascript.tools.shell.QuitAction,);
Parameter(init,org.mozilla.javascript.ContextFactory,);
Parameter(init$2,org.mozilla.javascript.Context,);
Parameter(installRequire,org.mozilla.javascript.Context,java.lang.String);
Parameter(installRequire,java.util.List,);
Parameter(installRequire,boolean,);
Parameter(help,org.mozilla.javascript.Context,);
Parameter(help,org.mozilla.javascript.Scriptable,);
Parameter(help,java.lang.Object[],);
Parameter(help,org.mozilla.javascript.Function,);
Parameter(gc,org.mozilla.javascript.Context,);
Parameter(gc,org.mozilla.javascript.Scriptable,);
Parameter(gc,java.lang.Object[],);
Parameter(gc,org.mozilla.javascript.Function,);
Parameter(print,org.mozilla.javascript.Context,);
Parameter(print,org.mozilla.javascript.Scriptable,);
Parameter(print,java.lang.Object[],);
Parameter(print,org.mozilla.javascript.Function,);
Parameter(quit,org.mozilla.javascript.Context,);
Parameter(quit,org.mozilla.javascript.Scriptable,);
Parameter(quit,java.lang.Object[],);
Parameter(quit,org.mozilla.javascript.Function,);
Parameter(version,org.mozilla.javascript.Context,);
Parameter(version,org.mozilla.javascript.Scriptable,);
Parameter(version,java.lang.Object[],);
Parameter(version,org.mozilla.javascript.Function,);
Parameter(load,org.mozilla.javascript.Context,);
Parameter(load,org.mozilla.javascript.Scriptable,);
Parameter(load,java.lang.Object[],);
Parameter(load,org.mozilla.javascript.Function,);
Parameter(defineClass,org.mozilla.javascript.Context,);
Parameter(defineClass,org.mozilla.javascript.Scriptable,);
Parameter(defineClass,java.lang.Object[],);
Parameter(defineClass,org.mozilla.javascript.Function,);
Parameter(loadClass,org.mozilla.javascript.Context,);
Parameter(loadClass,org.mozilla.javascript.Scriptable,);
Parameter(loadClass,java.lang.Object[],);
Parameter(loadClass,org.mozilla.javascript.Function,);
Parameter(getClass,java.lang.Object[],);
Parameter(serialize,org.mozilla.javascript.Context,);
Parameter(serialize,org.mozilla.javascript.Scriptable,);
Parameter(serialize,java.lang.Object[],);
Parameter(serialize,org.mozilla.javascript.Function,);
Parameter(deserialize,org.mozilla.javascript.Context,);
Parameter(deserialize,org.mozilla.javascript.Scriptable,);
Parameter(deserialize,java.lang.Object[],);
Parameter(deserialize,org.mozilla.javascript.Function,);
Parameter(getPrompts,org.mozilla.javascript.Context,);
Parameter(doctest,org.mozilla.javascript.Context,);
Parameter(doctest,org.mozilla.javascript.Scriptable,);
Parameter(doctest,java.lang.Object[],);
Parameter(doctest,org.mozilla.javascript.Function,);
Parameter(runDoctest,org.mozilla.javascript.Context,);
Parameter(runDoctest,org.mozilla.javascript.Scriptable,);
Parameter(runDoctest,java.lang.String,);
Parameter(runDoctest,java.lang.String,);
Parameter(runDoctest,int,);
Parameter(doctestOutputMatches,java.lang.String,);
Parameter(doctestOutputMatches,java.lang.String,);
Parameter(spawn,org.mozilla.javascript.Context,);
Parameter(spawn,org.mozilla.javascript.Scriptable,);
Parameter(spawn,java.lang.Object[],);
Parameter(spawn,org.mozilla.javascript.Function,);
Parameter(sync,org.mozilla.javascript.Context,);
Parameter(sync,org.mozilla.javascript.Scriptable,);
Parameter(sync,java.lang.Object[],);
Parameter(sync,org.mozilla.javascript.Function,);
Parameter(runCommand,org.mozilla.javascript.Context,);
Parameter(runCommand,org.mozilla.javascript.Scriptable,);
Parameter(runCommand,java.lang.Object[],);
Parameter(runCommand,org.mozilla.javascript.Function,);
Parameter(seal,org.mozilla.javascript.Context,);
Parameter(seal,org.mozilla.javascript.Scriptable,);
Parameter(seal,java.lang.Object[],);
Parameter(seal,org.mozilla.javascript.Function,);
Parameter(readFile,org.mozilla.javascript.Context,);
Parameter(readFile,org.mozilla.javascript.Scriptable,);
Parameter(readFile,java.lang.Object[],);
Parameter(readFile,org.mozilla.javascript.Function,);
Parameter(readUrl,org.mozilla.javascript.Context,);
Parameter(readUrl,org.mozilla.javascript.Scriptable,);
Parameter(readUrl,java.lang.Object[],);
Parameter(readUrl,org.mozilla.javascript.Function,);
Parameter(toint32,org.mozilla.javascript.Context,);
Parameter(toint32,org.mozilla.javascript.Scriptable,);
Parameter(toint32,java.lang.Object[],);
Parameter(toint32,org.mozilla.javascript.Function,);
Parameter(loadJLine,java.nio.charset.Charset,);
Parameter(getConsole,java.nio.charset.Charset,);
Parameter(setIn,java.io.InputStream,);
Parameter(setOut,java.io.PrintStream,);
Parameter(setErr,java.io.PrintStream,);
Parameter(setSealedStdLib,boolean,);
Parameter(getInstance,org.mozilla.javascript.Function,);
Parameter(runProcess,java.lang.String[],);
Parameter(runProcess,java.lang.String[],);
Parameter(runProcess,java.io.InputStream,);
Parameter(runProcess,java.io.OutputStream,);
Parameter(runProcess,java.io.OutputStream,);
Parameter(pipe,boolean,);
Parameter(pipe,java.io.InputStream,);
Parameter(pipe,java.io.OutputStream,);
Parameter(toInputStream,java.lang.Object,);
Parameter(toOutputStream,java.lang.Object,);
Parameter(readUrl$2,java.lang.String,);
Parameter(readUrl$2,java.lang.String,);
Parameter(readUrl$2,boolean,);
Parameter(getCharCodingFromType,java.lang.String,);
Parameter(readReader,java.io.Reader,);
Parameter(readReader$2,java.io.Reader,);
Parameter(readReader$2,int,);
Parameter(reportRuntimeError,java.lang.String,);
Parameter(reportRuntimeError$2,java.lang.String,);
Parameter(reportRuntimeError$2,java.lang.String,);
SuperClass(org.mozilla.javascript.ImporterTopLevel);
SuperClass(org.mozilla.javascript.TopLevel);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.ImporterTopLevel);
Composition(org.mozilla.javascript.NativeArray);
Composition(org.mozilla.javascript.tools.shell.ShellConsole);
Composition(org.mozilla.javascript.tools.shell.QuitAction);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,<init>$2 --> init$2,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,help --> getInstance,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,help --> getOut,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,print --> getInstance,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,print --> getOut,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,quit --> getInstance,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,defineClass --> getClass,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,defineClass --> reportRuntimeError,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,loadClass --> getClass,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,loadClass --> reportRuntimeError,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getClass --> reportRuntimeError,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getClass --> reportRuntimeError$2,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,doctest --> getInstance,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,doctest --> runDoctest,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> getOut,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> getErr,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> setOut,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> setErr,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> doctestOutputMatches,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,spawn --> reportRuntimeError,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,sync --> reportRuntimeError,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> reportRuntimeError,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> toInputStream,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> toOutputStream,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> getInstance,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> getOut,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> getErr,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> runProcess,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,seal --> reportRuntimeError,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,readFile --> reportRuntimeError,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,readFile --> readUrl$2,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,readUrl --> reportRuntimeError,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,readUrl --> readUrl$2,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getConsole --> loadJLine,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getConsole --> getIn,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getConsole --> getErr,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getIn --> loadJLine,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getInstance --> reportRuntimeError$2,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,toInputStream --> readReader,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,readUrl$2 --> getCharCodingFromType,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,readUrl$2 --> readReader$2,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,readReader --> readReader$2,org.mozilla.javascript.tools.shell.Global,);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,<init> --> sealedStdLib,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,<init> --> prompts,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,<init>$2 --> sealedStdLib,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,<init>$2 --> prompts,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,isInitialized --> initialized,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,initQuitAction --> quitAction,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,initQuitAction --> quitAction,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,init$2 --> sealedStdLib,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,init$2 --> history,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,init$2 --> history,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,init$2 --> initialized,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,quit --> quitAction,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,getPrompts --> prompts,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,runDoctest --> prompts,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,runDoctest --> doctestCanonicalizations,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,doctestOutputMatches --> doctestCanonicalizations,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,loadJLine --> attemptedJLineLoad,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,loadJLine --> console,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,loadJLine --> attemptedJLineLoad,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,loadJLine --> console,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,getConsole --> console,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,getConsole --> console,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,getIn --> inStream,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,getIn --> attemptedJLineLoad,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,getIn --> console,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,getIn --> inStream,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,setIn --> inStream,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,getOut --> outStream,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,setOut --> outStream,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,getErr --> errStream,org.mozilla.javascript.tools.shell.Global,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,setErr --> errStream,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,setSealedStdLib --> sealedStdLib,org.mozilla.javascript.tools.shell.Global,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,spawn --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,spawn --> factory,org.mozilla.javascript.tools.shell.Runner,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,sync --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,runCommand --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,runCommand --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,seal --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global,toint32 --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,<init> --> <init>,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,<init>$2 --> <init>,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,init --> <init>,org.mozilla.javascript.tools.shell.Global$1,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,init --> call,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,init$2 --> initStandardObjects,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,init$2 --> defineFunctionProperties,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,init$2 --> defineClass,org.mozilla.javascript.tools.shell.Environment,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,init$2 --> <init>$2,org.mozilla.javascript.tools.shell.Environment,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,init$2 --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,init$2 --> newArray,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,installRequire --> <init>,org.mozilla.javascript.commonjs.module.RequireBuilder,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,installRequire --> setSandboxed,org.mozilla.javascript.commonjs.module.RequireBuilder,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,installRequire --> <init>,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,installRequire --> <init>,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,installRequire --> setModuleScriptProvider,org.mozilla.javascript.commonjs.module.RequireBuilder,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,installRequire --> createRequire,org.mozilla.javascript.commonjs.module.RequireBuilder,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,installRequire --> install,org.mozilla.javascript.commonjs.module.Require,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,help --> getMessage,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,print --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,print --> getUndefinedValue,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,quit --> toInt32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,quit --> quit,org.mozilla.javascript.tools.shell.QuitAction,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,version --> getLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,version --> toNumber,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,version --> setLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,load --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,load --> processFile,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,load --> getMessage$3,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,load --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,load --> getMessage$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,defineClass --> defineClass,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,loadClass --> exec,org.mozilla.javascript.Script,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getClass --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getClass --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,serialize --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,serialize --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,serialize --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,serialize --> <init>,org.mozilla.javascript.serialize.ScriptableOutputStream,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,deserialize --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,deserialize --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,deserialize --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,deserialize --> <init>,org.mozilla.javascript.serialize.ScriptableInputStream,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,deserialize --> toObject,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getPrompts --> hasProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getPrompts --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getPrompts --> hasProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getPrompts --> getProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getPrompts --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getPrompts --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,doctest --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> <init>$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> setErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> evaluateString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> getUndefinedValue,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> reportException,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> reportRuntimeError,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runDoctest --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,spawn --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,spawn --> getElements,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,spawn --> <init>,org.mozilla.javascript.tools.shell.Runner,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,spawn --> <init>$2,org.mozilla.javascript.tools.shell.Runner,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,spawn --> getFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,sync --> <init>$2,org.mozilla.javascript.Synchronizer,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> getPropertyIds,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> getProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> toObject,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> getElements,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runCommand --> putProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,seal --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,readFile --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,readUrl --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,toint32 --> toInt32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,toint32 --> wrapInt,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,loadJLine --> getConsole$2,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getConsole --> getConsole,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getIn --> getIn,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,getInstance --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,runProcess --> <init>,org.mozilla.javascript.tools.shell.PipeThread,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,toInputStream --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,toInputStream --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,toOutputStream --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,reportRuntimeError --> getMessage,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,reportRuntimeError --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,reportRuntimeError$2 --> getMessage$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.shell.Global,reportRuntimeError$2 --> reportRuntimeError$2,org.mozilla.javascript.Context,);
EndClass 3
StartClass 4
Class(org.mozilla.javascript.tools.ToolErrorReporter,N,N,Public);
Attribute(messagePrefix,java.lang.String,Private,Y,Y,);
Attribute(hasReportedErrorFlag,boolean,Private,N,N,);
Attribute(reportWarnings,boolean,Private,N,N,);
Attribute(err,java.io.PrintStream,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getMessage,java.lang.String,Public,Y,N);
Method(getMessage$2,java.lang.String,Public,Y,N);
Method(getMessage$3,java.lang.String,Public,Y,N);
Method(getMessage$4,java.lang.String,Public,Y,N);
Method(getExceptionMessage,java.lang.String,Private,Y,N);
Method(warning,void,Public,N,N);
Method(error,void,Public,N,N);
Method(runtimeError,org.mozilla.javascript.EvaluatorException,Public,N,N);
Method(hasReportedError,boolean,Public,N,N);
Method(isReportingWarnings,boolean,Public,N,N);
Method(setIsReportingWarnings,void,Public,N,N);
Method(reportException,void,Public,Y,N);
Method(reportException$2,void,Public,N,N);
Method(reportErrorMessage,void,Private,N,N);
Method(buildIndicator,java.lang.String,Private,N,N);
Parameter(<init>,boolean,);
Parameter(<init>$2,boolean,);
Parameter(<init>$2,java.io.PrintStream,);
Parameter(getMessage,java.lang.String,);
Parameter(getMessage$2,java.lang.String,);
Parameter(getMessage$2,java.lang.String,);
Parameter(getMessage$3,java.lang.String,);
Parameter(getMessage$3,java.lang.Object,);
Parameter(getMessage$3,java.lang.Object,);
Parameter(getMessage$4,java.lang.String,);
Parameter(getMessage$4,java.lang.Object[],);
Parameter(getExceptionMessage,org.mozilla.javascript.RhinoException,);
Parameter(warning,java.lang.String,);
Parameter(warning,java.lang.String,);
Parameter(warning,int,);
Parameter(warning,java.lang.String,);
Parameter(warning,int,);
Parameter(error,java.lang.String,);
Parameter(error,java.lang.String,);
Parameter(error,int,);
Parameter(error,java.lang.String,);
Parameter(error,int,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,int,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,int,);
Parameter(setIsReportingWarnings,boolean,);
Parameter(reportException,org.mozilla.javascript.ErrorReporter,);
Parameter(reportException,org.mozilla.javascript.RhinoException,);
Parameter(reportException$2,org.mozilla.javascript.RhinoException,);
Parameter(reportErrorMessage,java.lang.String,);
Parameter(reportErrorMessage,java.lang.String,);
Parameter(reportErrorMessage,int,);
Parameter(reportErrorMessage,java.lang.String,);
Parameter(reportErrorMessage,int,);
Parameter(reportErrorMessage,boolean,);
Parameter(buildIndicator,int,);
Realization(org.mozilla.javascript.ErrorReporter);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,<init> --> <init>$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,getMessage --> getMessage$4,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,getMessage$2 --> getMessage$4,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,getMessage$3 --> getMessage$4,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,getExceptionMessage --> getMessage$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,warning --> reportErrorMessage,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,error --> reportErrorMessage,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException --> reportException$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException --> getExceptionMessage,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException$2 --> getExceptionMessage,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException$2 --> reportErrorMessage,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportErrorMessage --> getMessage$4,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportErrorMessage --> getMessage$2,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportErrorMessage --> buildIndicator,org.mozilla.javascript.tools.ToolErrorReporter,);
Call(ATTRIBUTE,org.mozilla.javascript.tools.ToolErrorReporter,<init>$2 --> reportWarnings,org.mozilla.javascript.tools.ToolErrorReporter,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.ToolErrorReporter,<init>$2 --> err,org.mozilla.javascript.tools.ToolErrorReporter,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.ToolErrorReporter,warning --> reportWarnings,org.mozilla.javascript.tools.ToolErrorReporter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.ToolErrorReporter,error --> hasReportedErrorFlag,org.mozilla.javascript.tools.ToolErrorReporter,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.ToolErrorReporter,hasReportedError --> hasReportedErrorFlag,org.mozilla.javascript.tools.ToolErrorReporter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.ToolErrorReporter,isReportingWarnings --> reportWarnings,org.mozilla.javascript.tools.ToolErrorReporter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.ToolErrorReporter,setIsReportingWarnings --> reportWarnings,org.mozilla.javascript.tools.ToolErrorReporter,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.ToolErrorReporter,reportException$2 --> err,org.mozilla.javascript.tools.ToolErrorReporter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.ToolErrorReporter,reportErrorMessage --> err,org.mozilla.javascript.tools.ToolErrorReporter,READ);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,getMessage$4 --> getCurrentContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,getMessage$4 --> getLocale,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,getExceptionMessage --> details,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,runtimeError --> <init>$3,org.mozilla.javascript.EvaluatorException,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException --> sourceName,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException --> lineNumber,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException --> lineSource,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException --> columnNumber,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException --> error,org.mozilla.javascript.ErrorReporter,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException$2 --> printStackTrace$2,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException$2 --> getSystemProperty,org.mozilla.javascript.SecurityUtilities,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException$2 --> getScriptStackTrace,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException$2 --> sourceName,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException$2 --> lineNumber,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException$2 --> lineSource,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.tools.ToolErrorReporter,reportException$2 --> columnNumber,org.mozilla.javascript.RhinoException,);
EndClass 4
StartClass 5
Class(org.mozilla.javascript.commonjs.module.Require,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(moduleScriptProvider,org.mozilla.javascript.commonjs.module.ModuleScriptProvider,Private,N,Y,);
Attribute(nativeScope,org.mozilla.javascript.Scriptable,Private,N,Y,);
Attribute(paths,org.mozilla.javascript.Scriptable,Private,N,Y,);
Attribute(sandboxed,boolean,Private,N,Y,);
Attribute(preExec,org.mozilla.javascript.Script,Private,N,Y,);
Attribute(postExec,org.mozilla.javascript.Script,Private,N,Y,);
Attribute(mainModuleId,java.lang.String,Private,N,N,);
Attribute(mainExports,org.mozilla.javascript.Scriptable,Private,N,N,);
Attribute(exportedModuleInterfaces,java.util.Map,Private,N,Y,java.lang.String;org.mozilla.javascript.Scriptable);
Attribute(loadLock,java.lang.Object,Private,N,Y,);
Attribute(loadingModuleInterfaces,java.lang.ThreadLocal,Private,Y,Y,java.util.Map<Ljava.lang.String;org.mozilla.javascript.Scriptable;>);
Method(<init>,void,Public,N,N);
Method(requireMain,org.mozilla.javascript.Scriptable,Public,N,N);
Method(install,void,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(construct,org.mozilla.javascript.Scriptable,Public,N,N);
Method(getExportedModuleInterface,org.mozilla.javascript.Scriptable,Private,N,N);
Method(executeModuleScript,org.mozilla.javascript.Scriptable,Private,N,N);
Method(executeOptionalScript,void,Private,Y,N);
Method(defineReadOnlyProperty,void,Private,Y,N);
Method(getModule,org.mozilla.javascript.commonjs.module.ModuleScript,Private,N,N);
Method(getFunctionName,java.lang.String,Public,N,N);
Method(getArity,int,Public,N,N);
Method(getLength,int,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,org.mozilla.javascript.Context,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,org.mozilla.javascript.commonjs.module.ModuleScriptProvider,);
Parameter(<init>,org.mozilla.javascript.Script,);
Parameter(<init>,org.mozilla.javascript.Script,);
Parameter(<init>,boolean,);
Parameter(requireMain,org.mozilla.javascript.Context,);
Parameter(requireMain,java.lang.String,);
Parameter(install,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(construct,org.mozilla.javascript.Context,);
Parameter(construct,org.mozilla.javascript.Scriptable,);
Parameter(construct,java.lang.Object[],);
Parameter(getExportedModuleInterface,org.mozilla.javascript.Context,);
Parameter(getExportedModuleInterface,java.lang.String,);
Parameter(getExportedModuleInterface,java.net.URI,);
Parameter(getExportedModuleInterface,java.net.URI,);
Parameter(getExportedModuleInterface,boolean,);
Parameter(executeModuleScript,org.mozilla.javascript.Context,);
Parameter(executeModuleScript,java.lang.String,);
Parameter(executeModuleScript,org.mozilla.javascript.Scriptable,);
Parameter(executeModuleScript,org.mozilla.javascript.commonjs.module.ModuleScript,);
Parameter(executeModuleScript,boolean,);
Parameter(executeOptionalScript,org.mozilla.javascript.Script,);
Parameter(executeOptionalScript,org.mozilla.javascript.Context,);
Parameter(executeOptionalScript,org.mozilla.javascript.Scriptable,);
Parameter(defineReadOnlyProperty,org.mozilla.javascript.ScriptableObject,);
Parameter(defineReadOnlyProperty,java.lang.String,);
Parameter(defineReadOnlyProperty,java.lang.Object,);
Parameter(getModule,org.mozilla.javascript.Context,);
Parameter(getModule,java.lang.String,);
Parameter(getModule,java.net.URI,);
Parameter(getModule,java.net.URI,);
SuperClass(org.mozilla.javascript.BaseFunction);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.BaseFunction);
Composition(org.mozilla.javascript.commonjs.module.ModuleScriptProvider);
Composition(org.mozilla.javascript.Scriptable);
Composition(org.mozilla.javascript.Script);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,<init> --> defineReadOnlyProperty,org.mozilla.javascript.commonjs.module.Require,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,requireMain --> getExportedModuleInterface,org.mozilla.javascript.commonjs.module.Require,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,call --> getExportedModuleInterface,org.mozilla.javascript.commonjs.module.Require,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,getExportedModuleInterface --> getModule,org.mozilla.javascript.commonjs.module.Require,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,getExportedModuleInterface --> executeModuleScript,org.mozilla.javascript.commonjs.module.Require,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> defineReadOnlyProperty,org.mozilla.javascript.commonjs.module.Require,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> install,org.mozilla.javascript.commonjs.module.Require,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> executeOptionalScript,org.mozilla.javascript.commonjs.module.Require,);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,<init> --> paths,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,<init> --> mainModuleId,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,<init> --> exportedModuleInterfaces,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,<init> --> loadLock,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,<init> --> moduleScriptProvider,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,<init> --> nativeScope,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,<init> --> sandboxed,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,<init> --> preExec,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,<init> --> postExec,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,<init> --> paths,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,requireMain --> mainModuleId,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,requireMain --> mainExports,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,requireMain --> moduleScriptProvider,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,requireMain --> paths,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,requireMain --> sandboxed,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,requireMain --> nativeScope,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,requireMain --> mainExports,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,requireMain --> mainModuleId,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,call --> sandboxed,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,getExportedModuleInterface --> exportedModuleInterfaces,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,getExportedModuleInterface --> loadingModuleInterfaces,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,getExportedModuleInterface --> loadLock,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,getExportedModuleInterface --> sandboxed,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,getExportedModuleInterface --> nativeScope,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> nativeScope,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> sandboxed,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> preExec,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> postExec,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,getModule --> moduleScriptProvider,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,getModule --> paths,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,getModule --> nativeScope,org.mozilla.javascript.commonjs.module.Require,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.Require,<clinit> --> loadingModuleInterfaces,org.mozilla.javascript.commonjs.module.Require,WRITE);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,<init> --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,<init> --> getFunctionPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,<init> --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,<init> --> newArray,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,requireMain --> getModuleScript,org.mozilla.javascript.commonjs.module.ModuleScriptProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,requireMain --> throwError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,install --> putProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,call --> throwError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,call --> jsToJava,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,call --> getBase,org.mozilla.javascript.commonjs.module.ModuleScope,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,call --> getUri,org.mozilla.javascript.commonjs.module.ModuleScope,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,construct --> throwError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,getExportedModuleInterface --> isSandboxed,org.mozilla.javascript.commonjs.module.ModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,getExportedModuleInterface --> throwError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,getExportedModuleInterface --> newObject,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> newObject,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> getUri,org.mozilla.javascript.commonjs.module.ModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> getBase,org.mozilla.javascript.commonjs.module.ModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> <init>,org.mozilla.javascript.commonjs.module.ModuleScope,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> put,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> getScript,org.mozilla.javascript.commonjs.module.ModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> exec,org.mozilla.javascript.Script,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeModuleScript --> toObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,executeOptionalScript --> exec,org.mozilla.javascript.Script,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,defineReadOnlyProperty --> putProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,defineReadOnlyProperty --> setAttributes$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,getModule --> getModuleScript,org.mozilla.javascript.commonjs.module.ModuleScriptProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,getModule --> throwError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.commonjs.module.Require,getModule --> throwAsScriptRuntimeEx,org.mozilla.javascript.Context,);
EndClass 5
StartClass 6
Class(org.mozilla.javascript.tools.shell.SecurityProxy,N,Y,Public);
Method(<init>,void,Public,N,N);
Method(callProcessFileSecure,void,Protected,N,Y);
Parameter(callProcessFileSecure,org.mozilla.javascript.Context,);
Parameter(callProcessFileSecure,org.mozilla.javascript.Scriptable,);
Parameter(callProcessFileSecure,java.lang.String,);
SuperClass(org.mozilla.javascript.SecurityController);
Generalization(org.mozilla.javascript.SecurityController);
Call(METHOD,org.mozilla.javascript.tools.shell.SecurityProxy,<init> --> <init>,org.mozilla.javascript.SecurityController,);
EndClass 6
StartClass 7
Class(org.mozilla.javascript.tools.shell.Main$ScriptCache,N,N,NA);
Attribute(queue,java.lang.ref.ReferenceQueue,Public,N,N,org.mozilla.javascript.Script);
Attribute(capacity,int,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(removeEldestEntry,boolean,Protected,N,N);
Method(get,org.mozilla.javascript.tools.shell.Main$ScriptReference,Public,N,N);
Method(put,void,Public,N,N);
Parameter(<init>,int,);
Parameter(removeEldestEntry,java.util.Map$Entry,java.lang.String;org.mozilla.javascript.tools.shell.Main$ScriptReference);
Parameter(get,java.lang.String,);
Parameter(get,byte[],);
Parameter(put,java.lang.String,);
Parameter(put,byte[],);
Parameter(put,org.mozilla.javascript.Script,);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$ScriptCache,<init> --> capacity,org.mozilla.javascript.tools.shell.Main$ScriptCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$ScriptCache,<init> --> queue,org.mozilla.javascript.tools.shell.Main$ScriptCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$ScriptCache,removeEldestEntry --> capacity,org.mozilla.javascript.tools.shell.Main$ScriptCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$ScriptCache,get --> queue,org.mozilla.javascript.tools.shell.Main$ScriptCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$ScriptCache,put --> queue,org.mozilla.javascript.tools.shell.Main$ScriptCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$ScriptCache,get --> path,org.mozilla.javascript.tools.shell.Main$ScriptReference,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$ScriptCache,get --> digest,org.mozilla.javascript.tools.shell.Main$ScriptReference,READ);
Call(METHOD,org.mozilla.javascript.tools.shell.Main$ScriptCache,put --> <init>,org.mozilla.javascript.tools.shell.Main$ScriptReference,);
EndClass 7
StartClass 8
Class(org.mozilla.javascript.Context,N,N,Public);
Attribute(VERSION_UNKNOWN,int,Public,Y,Y,);
Attribute(VERSION_DEFAULT,int,Public,Y,Y,);
Attribute(VERSION_1_0,int,Public,Y,Y,);
Attribute(VERSION_1_1,int,Public,Y,Y,);
Attribute(VERSION_1_2,int,Public,Y,Y,);
Attribute(VERSION_1_3,int,Public,Y,Y,);
Attribute(VERSION_1_4,int,Public,Y,Y,);
Attribute(VERSION_1_5,int,Public,Y,Y,);
Attribute(VERSION_1_6,int,Public,Y,Y,);
Attribute(VERSION_1_7,int,Public,Y,Y,);
Attribute(VERSION_1_8,int,Public,Y,Y,);
Attribute(FEATURE_NON_ECMA_GET_YEAR,int,Public,Y,Y,);
Attribute(FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME,int,Public,Y,Y,);
Attribute(FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER,int,Public,Y,Y,);
Attribute(FEATURE_TO_STRING_AS_SOURCE,int,Public,Y,Y,);
Attribute(FEATURE_PARENT_PROTO_PROPERTIES,int,Public,Y,Y,);
Attribute(FEATURE_PARENT_PROTO_PROPRTIES,int,Public,Y,Y,);
Attribute(FEATURE_E4X,int,Public,Y,Y,);
Attribute(FEATURE_DYNAMIC_SCOPE,int,Public,Y,Y,);
Attribute(FEATURE_STRICT_VARS,int,Public,Y,Y,);
Attribute(FEATURE_STRICT_EVAL,int,Public,Y,Y,);
Attribute(FEATURE_LOCATION_INFORMATION_IN_ERROR,int,Public,Y,Y,);
Attribute(FEATURE_STRICT_MODE,int,Public,Y,Y,);
Attribute(FEATURE_WARNING_AS_ERROR,int,Public,Y,Y,);
Attribute(FEATURE_ENHANCED_JAVA_ACCESS,int,Public,Y,Y,);
Attribute(languageVersionProperty,java.lang.String,Public,Y,Y,);
Attribute(errorReporterProperty,java.lang.String,Public,Y,Y,);
Attribute(emptyArgs,java.lang.Object[],Public,Y,Y,);
Attribute(codegenClass,java.lang.Class,Private,Y,N,);
Attribute(interpreterClass,java.lang.Class,Private,Y,N,);
Attribute(implementationVersion,java.lang.String,Private,Y,N,);
Attribute(factory,org.mozilla.javascript.ContextFactory,Private,N,Y,);
Attribute(sealed,boolean,Private,N,N,);
Attribute(sealKey,java.lang.Object,Private,N,N,);
Attribute(topCallScope,org.mozilla.javascript.Scriptable,Public,N,N,);
Attribute(isContinuationsTopCall,boolean,Public,N,N,);
Attribute(currentActivationCall,org.mozilla.javascript.NativeCall,Public,N,N,);
Attribute(cachedXMLLib,org.mozilla.javascript.xml.XMLLib,Public,N,N,);
Attribute(iterating,org.mozilla.javascript.ObjToIntMap,Public,N,N,);
Attribute(interpreterSecurityDomain,java.lang.Object,Public,N,N,);
Attribute(version,int,Public,N,N,);
Attribute(securityController,org.mozilla.javascript.SecurityController,Private,N,N,);
Attribute(hasClassShutter,boolean,Private,N,N,);
Attribute(classShutter,org.mozilla.javascript.ClassShutter,Private,N,N,);
Attribute(errorReporter,org.mozilla.javascript.ErrorReporter,Private,N,N,);
Attribute(regExpProxy,org.mozilla.javascript.RegExpProxy,Public,N,N,);
Attribute(locale,java.util.Locale,Private,N,N,);
Attribute(generatingDebug,boolean,Private,N,N,);
Attribute(generatingDebugChanged,boolean,Private,N,N,);
Attribute(generatingSource,boolean,Private,N,N,);
Attribute(useDynamicScope,boolean,Public,N,N,);
Attribute(optimizationLevel,int,Private,N,N,);
Attribute(maximumInterpreterStackDepth,int,Private,N,N,);
Attribute(wrapFactory,org.mozilla.javascript.WrapFactory,Private,N,N,);
Attribute(debugger,org.mozilla.javascript.debug.Debugger,Public,N,N,);
Attribute(debuggerData,java.lang.Object,Private,N,N,);
Attribute(enterCount,int,Private,N,N,);
Attribute(propertyListeners,java.lang.Object,Private,N,N,);
Attribute(threadLocalMap,java.util.Map,Private,N,N,java.lang.Object;java.lang.Object);
Attribute(applicationClassLoader,java.lang.ClassLoader,Private,N,N,);
Attribute(activationNames,java.util.Set,Public,N,N,java.lang.String);
Attribute(lastInterpreterFrame,java.lang.Object,Public,N,N,);
Attribute(previousInterpreterInvocations,org.mozilla.javascript.ObjArray,Public,N,N,);
Attribute(instructionCount,int,Public,N,N,);
Attribute(instructionThreshold,int,Public,N,N,);
Attribute(scratchIndex,int,Public,N,N,);
Attribute(scratchUint32,long,Public,N,N,);
Attribute(scratchScriptable,org.mozilla.javascript.Scriptable,Public,N,N,);
Attribute(generateObserverCount,boolean,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Protected,N,N);
Method(getCurrentContext,org.mozilla.javascript.Context,Public,Y,N);
Method(enter,org.mozilla.javascript.Context,Public,Y,N);
Method(enter$2,org.mozilla.javascript.Context,Public,Y,N);
Method(enter$3,org.mozilla.javascript.Context,Public,Y,N);
Method(exit,void,Public,Y,N);
Method(call,java.lang.Object,Public,Y,N);
Method(call$2,java.lang.Object,Public,Y,N);
Method(call$3,java.lang.Object,Public,Y,N);
Method(addContextListener,void,Public,Y,N);
Method(removeContextListener,void,Public,Y,N);
Method(getFactory,org.mozilla.javascript.ContextFactory,Public,N,N);
Method(isSealed,boolean,Public,N,N);
Method(seal,void,Public,N,N);
Method(unseal,void,Public,N,N);
Method(onSealedMutation,void,Public,Y,N);
Method(getLanguageVersion,int,Public,N,N);
Method(setLanguageVersion,void,Public,N,N);
Method(isValidLanguageVersion,boolean,Public,Y,N);
Method(checkLanguageVersion,void,Public,Y,N);
Method(getImplementationVersion,java.lang.String,Public,N,N);
Method(getErrorReporter,org.mozilla.javascript.ErrorReporter,Public,N,N);
Method(setErrorReporter,org.mozilla.javascript.ErrorReporter,Public,N,N);
Method(getLocale,java.util.Locale,Public,N,N);
Method(setLocale,java.util.Locale,Public,N,N);
Method(addPropertyChangeListener,void,Public,N,N);
Method(removePropertyChangeListener,void,Public,N,N);
Method(firePropertyChange,void,Public,N,N);
Method(firePropertyChangeImpl,void,Private,N,N);
Method(reportWarning,void,Public,Y,N);
Method(reportWarning$2,void,Public,Y,N);
Method(reportWarning$3,void,Public,Y,N);
Method(reportError,void,Public,Y,N);
Method(reportError$2,void,Public,Y,N);
Method(reportRuntimeError,org.mozilla.javascript.EvaluatorException,Public,Y,N);
Method(reportRuntimeError0,org.mozilla.javascript.EvaluatorException,Public,Y,N);
Method(reportRuntimeError1,org.mozilla.javascript.EvaluatorException,Public,Y,N);
Method(reportRuntimeError2,org.mozilla.javascript.EvaluatorException,Public,Y,N);
Method(reportRuntimeError3,org.mozilla.javascript.EvaluatorException,Public,Y,N);
Method(reportRuntimeError4,org.mozilla.javascript.EvaluatorException,Public,Y,N);
Method(reportRuntimeError$2,org.mozilla.javascript.EvaluatorException,Public,Y,N);
Method(initStandardObjects,org.mozilla.javascript.ScriptableObject,Public,N,N);
Method(initStandardObjects$2,org.mozilla.javascript.Scriptable,Public,N,N);
Method(initStandardObjects$3,org.mozilla.javascript.ScriptableObject,Public,N,N);
Method(getUndefinedValue,java.lang.Object,Public,Y,N);
Method(evaluateString,java.lang.Object,Public,N,N);
Method(evaluateReader,java.lang.Object,Public,N,N);
Method(executeScriptWithContinuations,java.lang.Object,Public,N,N);
Method(callFunctionWithContinuations,java.lang.Object,Public,N,N);
Method(captureContinuation,org.mozilla.javascript.ContinuationPending,Public,N,N);
Method(resumeContinuation,java.lang.Object,Public,N,N);
Method(stringIsCompilableUnit,boolean,Public,N,N);
Method(compileReader,org.mozilla.javascript.Script,Public,N,N);
Method(compileReader$2,org.mozilla.javascript.Script,Public,N,N);
Method(compileString,org.mozilla.javascript.Script,Public,N,N);
Method(compileString$2,org.mozilla.javascript.Script,Public,N,N);
Method(compileFunction,org.mozilla.javascript.Function,Public,N,N);
Method(compileFunction$2,org.mozilla.javascript.Function,Public,N,N);
Method(decompileScript,java.lang.String,Public,N,N);
Method(decompileFunction,java.lang.String,Public,N,N);
Method(decompileFunctionBody,java.lang.String,Public,N,N);
Method(newObject,org.mozilla.javascript.Scriptable,Public,N,N);
Method(newObject$2,org.mozilla.javascript.Scriptable,Public,N,N);
Method(newObject$3,org.mozilla.javascript.Scriptable,Public,N,N);
Method(newArray,org.mozilla.javascript.Scriptable,Public,N,N);
Method(newArray$2,org.mozilla.javascript.Scriptable,Public,N,N);
Method(getElements,java.lang.Object[],Public,N,N);
Method(toBoolean,boolean,Public,Y,N);
Method(toNumber,double,Public,Y,N);
Method(toString,java.lang.String,Public,Y,N);
Method(toObject,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(toObject$2,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(javaToJS,java.lang.Object,Public,Y,N);
Method(jsToJava,java.lang.Object,Public,Y,N);
Method(toType,java.lang.Object,Public,Y,N);
Method(throwAsScriptRuntimeEx,java.lang.RuntimeException,Public,Y,N);
Method(isGeneratingDebug,boolean,Public,N,N);
Method(setGeneratingDebug,void,Public,N,N);
Method(isGeneratingSource,boolean,Public,N,N);
Method(setGeneratingSource,void,Public,N,N);
Method(getOptimizationLevel,int,Public,N,N);
Method(setOptimizationLevel,void,Public,N,N);
Method(isValidOptimizationLevel,boolean,Public,Y,N);
Method(checkOptimizationLevel,void,Public,Y,N);
Method(getMaximumInterpreterStackDepth,int,Public,N,N);
Method(setMaximumInterpreterStackDepth,void,Public,N,N);
Method(setSecurityController,void,Public,N,N);
Method(setClassShutter,void,Public,N,N);
Method(getClassShutter,org.mozilla.javascript.ClassShutter,Public,N,N);
Method(getClassShutterSetter,org.mozilla.javascript.Context$ClassShutterSetter,Public,N,N);
Method(getThreadLocal,java.lang.Object,Public,N,N);
Method(putThreadLocal,void,Public,N,N);
Method(removeThreadLocal,void,Public,N,N);
Method(setCachingEnabled,void,Public,Y,N);
Method(setWrapFactory,void,Public,N,N);
Method(getWrapFactory,org.mozilla.javascript.WrapFactory,Public,N,N);
Method(getDebugger,org.mozilla.javascript.debug.Debugger,Public,N,N);
Method(getDebuggerContextData,java.lang.Object,Public,N,N);
Method(setDebugger,void,Public,N,N);
Method(getDebuggableView,org.mozilla.javascript.debug.DebuggableScript,Public,Y,N);
Method(hasFeature,boolean,Public,N,N);
Method(getE4xImplementationFactory,org.mozilla.javascript.xml.XMLLib$Factory,Public,N,N);
Method(getInstructionObserverThreshold,int,Public,N,N);
Method(setInstructionObserverThreshold,void,Public,N,N);
Method(setGenerateObserverCount,void,Public,N,N);
Method(observeInstructionCount,void,Protected,N,N);
Method(createClassLoader,org.mozilla.javascript.GeneratedClassLoader,Public,N,N);
Method(getApplicationClassLoader,java.lang.ClassLoader,Public,N,N);
Method(setApplicationClassLoader,void,Public,N,N);
Method(getContext,org.mozilla.javascript.Context,Public,Y,N);
Method(compileImpl,java.lang.Object,Private,N,N);
Method(notifyDebugger_r,void,Private,Y,N);
Method(createCompiler,org.mozilla.javascript.Evaluator,Private,N,N);
Method(createInterpreter,org.mozilla.javascript.Evaluator,Public,Y,N);
Method(getSourcePositionFromStack,java.lang.String,Public,Y,N);
Method(getRegExpProxy,org.mozilla.javascript.RegExpProxy,Public,N,N);
Method(isVersionECMA1,boolean,Public,N,N);
Method(getSecurityController,org.mozilla.javascript.SecurityController,Public,N,N);
Method(isGeneratingDebugChanged,boolean,Public,N,N);
Method(addActivationName,void,Public,N,N);
Method(isActivationNeeded,boolean,Public,N,N);
Method(removeActivationName,void,Public,N,N);
Method(access$002,org.mozilla.javascript.ClassShutter,Public,Y,N);
Method(access$000,org.mozilla.javascript.ClassShutter,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,org.mozilla.javascript.ContextFactory,);
Parameter(enter$2,org.mozilla.javascript.Context,);
Parameter(enter$3,org.mozilla.javascript.Context,);
Parameter(enter$3,org.mozilla.javascript.ContextFactory,);
Parameter(call,org.mozilla.javascript.ContextAction,);
Parameter(call$2,org.mozilla.javascript.ContextFactory,);
Parameter(call$2,org.mozilla.javascript.Callable,);
Parameter(call$2,org.mozilla.javascript.Scriptable,);
Parameter(call$2,org.mozilla.javascript.Scriptable,);
Parameter(call$2,java.lang.Object[],);
Parameter(call$3,org.mozilla.javascript.ContextFactory,);
Parameter(call$3,org.mozilla.javascript.ContextAction,);
Parameter(addContextListener,org.mozilla.javascript.ContextListener,);
Parameter(removeContextListener,org.mozilla.javascript.ContextListener,);
Parameter(seal,java.lang.Object,);
Parameter(unseal,java.lang.Object,);
Parameter(setLanguageVersion,int,);
Parameter(isValidLanguageVersion,int,);
Parameter(checkLanguageVersion,int,);
Parameter(setErrorReporter,org.mozilla.javascript.ErrorReporter,);
Parameter(setLocale,java.util.Locale,);
Parameter(addPropertyChangeListener,java.beans.PropertyChangeListener,);
Parameter(removePropertyChangeListener,java.beans.PropertyChangeListener,);
Parameter(firePropertyChange,java.lang.String,);
Parameter(firePropertyChange,java.lang.Object,);
Parameter(firePropertyChange,java.lang.Object,);
Parameter(firePropertyChangeImpl,java.lang.Object,);
Parameter(firePropertyChangeImpl,java.lang.String,);
Parameter(firePropertyChangeImpl,java.lang.Object,);
Parameter(firePropertyChangeImpl,java.lang.Object,);
Parameter(reportWarning,java.lang.String,);
Parameter(reportWarning,java.lang.String,);
Parameter(reportWarning,int,);
Parameter(reportWarning,java.lang.String,);
Parameter(reportWarning,int,);
Parameter(reportWarning$2,java.lang.String,);
Parameter(reportWarning$3,java.lang.String,);
Parameter(reportWarning$3,java.lang.Throwable,);
Parameter(reportError,java.lang.String,);
Parameter(reportError,java.lang.String,);
Parameter(reportError,int,);
Parameter(reportError,java.lang.String,);
Parameter(reportError,int,);
Parameter(reportError$2,java.lang.String,);
Parameter(reportRuntimeError,java.lang.String,);
Parameter(reportRuntimeError,java.lang.String,);
Parameter(reportRuntimeError,int,);
Parameter(reportRuntimeError,java.lang.String,);
Parameter(reportRuntimeError,int,);
Parameter(reportRuntimeError0,java.lang.String,);
Parameter(reportRuntimeError1,java.lang.String,);
Parameter(reportRuntimeError1,java.lang.Object,);
Parameter(reportRuntimeError2,java.lang.String,);
Parameter(reportRuntimeError2,java.lang.Object,);
Parameter(reportRuntimeError2,java.lang.Object,);
Parameter(reportRuntimeError3,java.lang.String,);
Parameter(reportRuntimeError3,java.lang.Object,);
Parameter(reportRuntimeError3,java.lang.Object,);
Parameter(reportRuntimeError3,java.lang.Object,);
Parameter(reportRuntimeError4,java.lang.String,);
Parameter(reportRuntimeError4,java.lang.Object,);
Parameter(reportRuntimeError4,java.lang.Object,);
Parameter(reportRuntimeError4,java.lang.Object,);
Parameter(reportRuntimeError4,java.lang.Object,);
Parameter(reportRuntimeError$2,java.lang.String,);
Parameter(initStandardObjects$2,org.mozilla.javascript.ScriptableObject,);
Parameter(initStandardObjects$3,org.mozilla.javascript.ScriptableObject,);
Parameter(initStandardObjects$3,boolean,);
Parameter(evaluateString,org.mozilla.javascript.Scriptable,);
Parameter(evaluateString,java.lang.String,);
Parameter(evaluateString,java.lang.String,);
Parameter(evaluateString,int,);
Parameter(evaluateString,java.lang.Object,);
Parameter(evaluateReader,org.mozilla.javascript.Scriptable,);
Parameter(evaluateReader,java.io.Reader,);
Parameter(evaluateReader,java.lang.String,);
Parameter(evaluateReader,int,);
Parameter(evaluateReader,java.lang.Object,);
Parameter(executeScriptWithContinuations,org.mozilla.javascript.Script,);
Parameter(executeScriptWithContinuations,org.mozilla.javascript.Scriptable,);
Parameter(callFunctionWithContinuations,org.mozilla.javascript.Callable,);
Parameter(callFunctionWithContinuations,org.mozilla.javascript.Scriptable,);
Parameter(callFunctionWithContinuations,java.lang.Object[],);
Parameter(resumeContinuation,java.lang.Object,);
Parameter(resumeContinuation,org.mozilla.javascript.Scriptable,);
Parameter(resumeContinuation,java.lang.Object,);
Parameter(stringIsCompilableUnit,java.lang.String,);
Parameter(compileReader,org.mozilla.javascript.Scriptable,);
Parameter(compileReader,java.io.Reader,);
Parameter(compileReader,java.lang.String,);
Parameter(compileReader,int,);
Parameter(compileReader,java.lang.Object,);
Parameter(compileReader$2,java.io.Reader,);
Parameter(compileReader$2,java.lang.String,);
Parameter(compileReader$2,int,);
Parameter(compileReader$2,java.lang.Object,);
Parameter(compileString,java.lang.String,);
Parameter(compileString,java.lang.String,);
Parameter(compileString,int,);
Parameter(compileString,java.lang.Object,);
Parameter(compileString$2,java.lang.String,);
Parameter(compileString$2,org.mozilla.javascript.Evaluator,);
Parameter(compileString$2,org.mozilla.javascript.ErrorReporter,);
Parameter(compileString$2,java.lang.String,);
Parameter(compileString$2,int,);
Parameter(compileString$2,java.lang.Object,);
Parameter(compileFunction,org.mozilla.javascript.Scriptable,);
Parameter(compileFunction,java.lang.String,);
Parameter(compileFunction,java.lang.String,);
Parameter(compileFunction,int,);
Parameter(compileFunction,java.lang.Object,);
Parameter(compileFunction$2,org.mozilla.javascript.Scriptable,);
Parameter(compileFunction$2,java.lang.String,);
Parameter(compileFunction$2,org.mozilla.javascript.Evaluator,);
Parameter(compileFunction$2,org.mozilla.javascript.ErrorReporter,);
Parameter(compileFunction$2,java.lang.String,);
Parameter(compileFunction$2,int,);
Parameter(compileFunction$2,java.lang.Object,);
Parameter(decompileScript,org.mozilla.javascript.Script,);
Parameter(decompileScript,int,);
Parameter(decompileFunction,org.mozilla.javascript.Function,);
Parameter(decompileFunction,int,);
Parameter(decompileFunctionBody,org.mozilla.javascript.Function,);
Parameter(decompileFunctionBody,int,);
Parameter(newObject,org.mozilla.javascript.Scriptable,);
Parameter(newObject$2,org.mozilla.javascript.Scriptable,);
Parameter(newObject$2,java.lang.String,);
Parameter(newObject$3,org.mozilla.javascript.Scriptable,);
Parameter(newObject$3,java.lang.String,);
Parameter(newObject$3,java.lang.Object[],);
Parameter(newArray,org.mozilla.javascript.Scriptable,);
Parameter(newArray,int,);
Parameter(newArray$2,org.mozilla.javascript.Scriptable,);
Parameter(newArray$2,java.lang.Object[],);
Parameter(getElements,org.mozilla.javascript.Scriptable,);
Parameter(toBoolean,java.lang.Object,);
Parameter(toNumber,java.lang.Object,);
Parameter(toString,java.lang.Object,);
Parameter(toObject,java.lang.Object,);
Parameter(toObject,org.mozilla.javascript.Scriptable,);
Parameter(toObject$2,java.lang.Object,);
Parameter(toObject$2,org.mozilla.javascript.Scriptable,);
Parameter(toObject$2,java.lang.Class,);
Parameter(javaToJS,java.lang.Object,);
Parameter(javaToJS,org.mozilla.javascript.Scriptable,);
Parameter(jsToJava,java.lang.Object,);
Parameter(jsToJava,java.lang.Class,);
Parameter(toType,java.lang.Object,);
Parameter(toType,java.lang.Class,);
Parameter(throwAsScriptRuntimeEx,java.lang.Throwable,);
Parameter(setGeneratingDebug,boolean,);
Parameter(setGeneratingSource,boolean,);
Parameter(setOptimizationLevel,int,);
Parameter(isValidOptimizationLevel,int,);
Parameter(checkOptimizationLevel,int,);
Parameter(setMaximumInterpreterStackDepth,int,);
Parameter(setSecurityController,org.mozilla.javascript.SecurityController,);
Parameter(setClassShutter,org.mozilla.javascript.ClassShutter,);
Parameter(getThreadLocal,java.lang.Object,);
Parameter(putThreadLocal,java.lang.Object,);
Parameter(putThreadLocal,java.lang.Object,);
Parameter(removeThreadLocal,java.lang.Object,);
Parameter(setCachingEnabled,boolean,);
Parameter(setWrapFactory,org.mozilla.javascript.WrapFactory,);
Parameter(setDebugger,org.mozilla.javascript.debug.Debugger,);
Parameter(setDebugger,java.lang.Object,);
Parameter(getDebuggableView,org.mozilla.javascript.Script,);
Parameter(hasFeature,int,);
Parameter(setInstructionObserverThreshold,int,);
Parameter(setGenerateObserverCount,boolean,);
Parameter(observeInstructionCount,int,);
Parameter(createClassLoader,java.lang.ClassLoader,);
Parameter(setApplicationClassLoader,java.lang.ClassLoader,);
Parameter(compileImpl,org.mozilla.javascript.Scriptable,);
Parameter(compileImpl,java.io.Reader,);
Parameter(compileImpl,java.lang.String,);
Parameter(compileImpl,java.lang.String,);
Parameter(compileImpl,int,);
Parameter(compileImpl,java.lang.Object,);
Parameter(compileImpl,boolean,);
Parameter(compileImpl,org.mozilla.javascript.Evaluator,);
Parameter(compileImpl,org.mozilla.javascript.ErrorReporter,);
Parameter(notifyDebugger_r,org.mozilla.javascript.Context,);
Parameter(notifyDebugger_r,org.mozilla.javascript.debug.DebuggableScript,);
Parameter(notifyDebugger_r,java.lang.String,);
Parameter(getSourcePositionFromStack,int[],);
Parameter(addActivationName,java.lang.String,);
Parameter(isActivationNeeded,java.lang.String,);
Parameter(removeActivationName,java.lang.String,);
Parameter(access$002,org.mozilla.javascript.Context,);
Parameter(access$002,org.mozilla.javascript.ClassShutter,);
Parameter(access$000,org.mozilla.javascript.Context,);
Composition(org.mozilla.javascript.ContextFactory);
Composition(org.mozilla.javascript.Scriptable);
Composition(org.mozilla.javascript.NativeCall);
Composition(org.mozilla.javascript.xml.XMLLib);
Composition(org.mozilla.javascript.ObjToIntMap);
Composition(org.mozilla.javascript.SecurityController);
Composition(org.mozilla.javascript.ClassShutter);
Composition(org.mozilla.javascript.ErrorReporter);
Composition(org.mozilla.javascript.RegExpProxy);
Composition(org.mozilla.javascript.WrapFactory);
Composition(org.mozilla.javascript.debug.Debugger);
Composition(org.mozilla.javascript.ObjArray);
Call(METHOD,org.mozilla.javascript.Context,<init> --> <init>$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,enter --> enter$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,enter$2 --> enter$3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,enter$3 --> isSealed,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,enter$3 --> seal,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,call --> call$3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,call$2 --> call$3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,call$3 --> enter$3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,call$3 --> exit,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,seal --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setLanguageVersion --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setLanguageVersion --> checkLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setLanguageVersion --> firePropertyChangeImpl,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,checkLanguageVersion --> isValidLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setErrorReporter --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setErrorReporter --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setErrorReporter --> firePropertyChangeImpl,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setLocale --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,addPropertyChangeListener --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,removePropertyChangeListener --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,firePropertyChange --> firePropertyChangeImpl,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportWarning --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportWarning --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportWarning --> reportError,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportWarning --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportWarning$2 --> getSourcePositionFromStack,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportWarning$2 --> reportWarning,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportWarning$3 --> getSourcePositionFromStack,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportWarning$3 --> reportWarning,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportError --> getCurrentContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportError --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportError$2 --> getSourcePositionFromStack,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportError$2 --> reportError,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError --> getCurrentContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError0 --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError1 --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError2 --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError3 --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError4 --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError$2 --> getSourcePositionFromStack,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError$2 --> reportRuntimeError,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,initStandardObjects --> initStandardObjects$3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,initStandardObjects$2 --> initStandardObjects$3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,evaluateString --> compileString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,evaluateReader --> compileReader,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,executeScriptWithContinuations --> callFunctionWithContinuations,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,compileReader --> compileReader$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,compileReader$2 --> compileImpl,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,compileString --> compileString$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,compileString$2 --> compileImpl,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,compileFunction --> compileFunction$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,compileFunction$2 --> compileImpl,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,newObject$2 --> newObject$3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,javaToJS --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,javaToJS --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,toType --> jsToJava,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,throwAsScriptRuntimeEx --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,throwAsScriptRuntimeEx --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setGeneratingDebug --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setGeneratingDebug --> getOptimizationLevel,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setGeneratingDebug --> setOptimizationLevel,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setGeneratingSource --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setOptimizationLevel --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setOptimizationLevel --> checkOptimizationLevel,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,checkOptimizationLevel --> isValidOptimizationLevel,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setMaximumInterpreterStackDepth --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setSecurityController --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setClassShutter --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,putThreadLocal --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,removeThreadLocal --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setWrapFactory --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setDebugger --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,hasFeature --> getFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,getE4xImplementationFactory --> getFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setInstructionObserverThreshold --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setInstructionObserverThreshold --> setGenerateObserverCount,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,observeInstructionCount --> getFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,createClassLoader --> getFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,getApplicationClassLoader --> getFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,setApplicationClassLoader --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,getContext --> getCurrentContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> getSecurityController,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> createCompiler,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> notifyDebugger_r,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,notifyDebugger_r --> notifyDebugger_r,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,createCompiler --> createInterpreter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,getSourcePositionFromStack --> getCurrentContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,getSourcePositionFromStack --> createInterpreter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,addActivationName --> onSealedMutation,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context,removeActivationName --> onSealedMutation,org.mozilla.javascript.Context,);
Call(ATTRIBUTE,org.mozilla.javascript.Context,<init>$2 --> codegenClass,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,<init>$2 --> generatingSource,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,<init>$2 --> generateObserverCount,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,<init>$2 --> factory,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,<init>$2 --> version,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,<init>$2 --> optimizationLevel,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,<init>$2 --> maximumInterpreterStackDepth,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,enter$3 --> enterCount,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,enter$3 --> enterCount,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,exit --> enterCount,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,exit --> factory,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,exit --> enterCount,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getFactory --> factory,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,isSealed --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,seal --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,seal --> sealed,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,seal --> sealKey,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,unseal --> sealKey,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,unseal --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,unseal --> sealed,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,unseal --> sealKey,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getLanguageVersion --> version,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setLanguageVersion --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setLanguageVersion --> propertyListeners,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setLanguageVersion --> version,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setLanguageVersion --> version,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getImplementationVersion --> implementationVersion,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getImplementationVersion --> implementationVersion,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getErrorReporter --> errorReporter,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setErrorReporter --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setErrorReporter --> propertyListeners,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setErrorReporter --> errorReporter,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getLocale --> locale,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getLocale --> locale,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setLocale --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setLocale --> locale,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setLocale --> locale,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,addPropertyChangeListener --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,addPropertyChangeListener --> propertyListeners,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,addPropertyChangeListener --> propertyListeners,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,removePropertyChangeListener --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,removePropertyChangeListener --> propertyListeners,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,removePropertyChangeListener --> propertyListeners,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,firePropertyChange --> propertyListeners,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,callFunctionWithContinuations --> isContinuationsTopCall,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,isGeneratingDebug --> generatingDebug,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setGeneratingDebug --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setGeneratingDebug --> generatingDebugChanged,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setGeneratingDebug --> generatingDebug,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,isGeneratingSource --> generatingSource,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setGeneratingSource --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setGeneratingSource --> generatingSource,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getOptimizationLevel --> optimizationLevel,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setOptimizationLevel --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setOptimizationLevel --> codegenClass,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setOptimizationLevel --> optimizationLevel,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getMaximumInterpreterStackDepth --> maximumInterpreterStackDepth,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setMaximumInterpreterStackDepth --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setMaximumInterpreterStackDepth --> optimizationLevel,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setMaximumInterpreterStackDepth --> maximumInterpreterStackDepth,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setSecurityController --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setSecurityController --> securityController,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setSecurityController --> securityController,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setClassShutter --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setClassShutter --> hasClassShutter,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setClassShutter --> classShutter,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setClassShutter --> hasClassShutter,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getClassShutter --> classShutter,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getClassShutterSetter --> hasClassShutter,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getClassShutterSetter --> hasClassShutter,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getThreadLocal --> threadLocalMap,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,putThreadLocal --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,putThreadLocal --> threadLocalMap,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,putThreadLocal --> threadLocalMap,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,removeThreadLocal --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,removeThreadLocal --> threadLocalMap,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setWrapFactory --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setWrapFactory --> wrapFactory,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getWrapFactory --> wrapFactory,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getWrapFactory --> wrapFactory,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getDebugger --> debugger,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getDebuggerContextData --> debuggerData,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setDebugger --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setDebugger --> debugger,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setDebugger --> debuggerData,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getInstructionObserverThreshold --> instructionThreshold,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setInstructionObserverThreshold --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setInstructionObserverThreshold --> instructionThreshold,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setGenerateObserverCount --> generateObserverCount,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getApplicationClassLoader --> applicationClassLoader,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getApplicationClassLoader --> applicationClassLoader,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setApplicationClassLoader --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,setApplicationClassLoader --> applicationClassLoader,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,compileImpl --> debugger,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,notifyDebugger_r --> debugger,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,createCompiler --> optimizationLevel,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,createCompiler --> codegenClass,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,createInterpreter --> interpreterClass,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getSourcePositionFromStack --> lastInterpreterFrame,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getRegExpProxy --> regExpProxy,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getRegExpProxy --> regExpProxy,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,isVersionECMA1 --> version,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getSecurityController --> securityController,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,isGeneratingDebugChanged --> generatingDebugChanged,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,addActivationName --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,addActivationName --> activationNames,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,addActivationName --> activationNames,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,isActivationNeeded --> activationNames,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,removeActivationName --> sealed,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,removeActivationName --> activationNames,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,access$002 --> classShutter,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,access$000 --> classShutter,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,<clinit> --> emptyArgs,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,<clinit> --> codegenClass,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,<clinit> --> interpreterClass,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getCurrentContext --> instance,org.mozilla.javascript.VMBridge,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,enter$3 --> instance,org.mozilla.javascript.VMBridge,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,exit --> instance,org.mozilla.javascript.VMBridge,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getErrorReporter --> instance,org.mozilla.javascript.DefaultErrorReporter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getUndefinedValue --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,executeScriptWithContinuations --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,stringIsCompilableUnit --> instance,org.mozilla.javascript.DefaultErrorReporter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,newObject --> Object,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,newObject$2 --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,newObject$3 --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,newArray --> Array,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,newArray$2 --> ObjectClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,newArray$2 --> Array,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getApplicationClassLoader --> instance,org.mozilla.javascript.VMBridge,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,getApplicationClassLoader --> ContextFactoryClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context,compileImpl --> calledByCompileFunction,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context,<clinit> --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(METHOD,org.mozilla.javascript.Context,<init> --> getGlobal,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,getCurrentContext --> getThreadContextHelper,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.Context,getCurrentContext --> getContext,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.Context,enter$2 --> getGlobal,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,enter$3 --> getThreadContextHelper,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.Context,enter$3 --> getContext,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.Context,enter$3 --> makeContext,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,enter$3 --> onContextCreated,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,enter$3 --> isSealed,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,enter$3 --> setContext,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.Context,exit --> getThreadContextHelper,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.Context,exit --> getContext,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.Context,exit --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,exit --> setContext,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.Context,exit --> onContextReleased,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,call --> getGlobal,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,call$2 --> getGlobal,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,call$2 --> <init>,org.mozilla.javascript.Context$1,);
Call(METHOD,org.mozilla.javascript.Context,call$3 --> run,org.mozilla.javascript.ContextAction,);
Call(METHOD,org.mozilla.javascript.Context,addContextListener --> classOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,addContextListener --> getGlobal,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,addContextListener --> initCause,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,addContextListener --> addListener,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,removeContextListener --> getGlobal,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,removeContextListener --> addListener,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,getImplementationVersion --> getMessage0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,addPropertyChangeListener --> addListener,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,removePropertyChangeListener --> removeListener,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,firePropertyChangeImpl --> getListener,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,reportWarning --> warning,org.mozilla.javascript.ErrorReporter,);
Call(METHOD,org.mozilla.javascript.Context,reportError --> error,org.mozilla.javascript.ErrorReporter,);
Call(METHOD,org.mozilla.javascript.Context,reportError --> <init>$3,org.mozilla.javascript.EvaluatorException,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError --> runtimeError,org.mozilla.javascript.ErrorReporter,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError --> <init>$3,org.mozilla.javascript.EvaluatorException,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError0 --> getMessage0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError1 --> getMessage1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError2 --> getMessage2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError3 --> getMessage3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,reportRuntimeError4 --> getMessage4,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,initStandardObjects$3 --> initStandardObjects,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,evaluateString --> exec,org.mozilla.javascript.Script,);
Call(METHOD,org.mozilla.javascript.Context,evaluateReader --> exec,org.mozilla.javascript.Script,);
Call(METHOD,org.mozilla.javascript.Context,executeScriptWithContinuations --> isScript,org.mozilla.javascript.InterpretedFunction,);
Call(METHOD,org.mozilla.javascript.Context,callFunctionWithContinuations --> hasTopCall,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,callFunctionWithContinuations --> doTopCall,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,captureContinuation --> captureContinuation,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Context,captureContinuation --> <init>,org.mozilla.javascript.ContinuationPending,);
Call(METHOD,org.mozilla.javascript.Context,resumeContinuation --> restartContinuation,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Context,stringIsCompilableUnit --> <init>,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Context,stringIsCompilableUnit --> initFromContext,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Context,stringIsCompilableUnit --> setGeneratingSource,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Context,stringIsCompilableUnit --> <init>$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Context,stringIsCompilableUnit --> parse,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Context,stringIsCompilableUnit --> eof,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Context,decompileScript --> decompile,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.Context,decompileFunction --> decompile,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.Context,decompileFunction --> getClassName,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Context,decompileFunctionBody --> decompile,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.Context,newObject --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.Context,newObject --> setBuiltinProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,newObject$3 --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Context,newObject$3 --> getExistingCtor,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,newObject$3 --> construct,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.Context,newArray --> <init>,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.Context,newArray --> setBuiltinProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,newArray$2 --> <init>$2,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.Context,newArray$2 --> setBuiltinProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,getElements --> getArrayElements,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,toBoolean --> toBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,toNumber --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,toString --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,toObject --> toObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,toObject$2 --> toObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Context,javaToJS --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.Context,jsToJava --> coerceTypeImpl,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.Context,toType --> getMessage,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.Context,toType --> initCause,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,throwAsScriptRuntimeEx --> <init>,org.mozilla.javascript.WrappedException,);
Call(METHOD,org.mozilla.javascript.Context,setSecurityController --> hasGlobal,org.mozilla.javascript.SecurityController,);
Call(METHOD,org.mozilla.javascript.Context,getClassShutterSetter --> <init>,org.mozilla.javascript.Context$2,);
Call(METHOD,org.mozilla.javascript.Context,getWrapFactory --> <init>,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.Context,getDebuggableView --> getDebuggableView,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.Context,hasFeature --> hasFeature,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,getE4xImplementationFactory --> getE4xImplementationFactory,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,observeInstructionCount --> observeInstructionCount,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,createClassLoader --> createClassLoader,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,getApplicationClassLoader --> getApplicationClassLoader,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.Context,getApplicationClassLoader --> getCurrentThreadClassLoader,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.Context,getApplicationClassLoader --> testIfCanLoadRhinoClasses,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,setApplicationClassLoader --> testIfCanLoadRhinoClasses,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> <init>,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> initFromContext,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> getErrorReporter,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> readReader,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> <init>$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> parse,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> parse$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> <init>$3,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> transformTree,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> getEncodedSource,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> compile,org.mozilla.javascript.Evaluator,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> createFunctionObject,org.mozilla.javascript.Evaluator,);
Call(METHOD,org.mozilla.javascript.Context,compileImpl --> createScriptObject,org.mozilla.javascript.Evaluator,);
Call(METHOD,org.mozilla.javascript.Context,notifyDebugger_r --> handleCompilationDone,org.mozilla.javascript.debug.Debugger,);
Call(METHOD,org.mozilla.javascript.Context,notifyDebugger_r --> getFunctionCount,org.mozilla.javascript.debug.DebuggableScript,);
Call(METHOD,org.mozilla.javascript.Context,notifyDebugger_r --> getFunction,org.mozilla.javascript.debug.DebuggableScript,);
Call(METHOD,org.mozilla.javascript.Context,createCompiler --> newInstanceOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,createInterpreter --> newInstanceOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,getSourcePositionFromStack --> getSourcePositionFromStack,org.mozilla.javascript.Evaluator,);
Call(METHOD,org.mozilla.javascript.Context,getRegExpProxy --> classOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,getRegExpProxy --> newInstanceOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Context,getSecurityController --> global,org.mozilla.javascript.SecurityController,);
Call(METHOD,org.mozilla.javascript.Context,<clinit> --> classOrNull,org.mozilla.javascript.Kit,);
EndClass 8
StartClass 9
Class(org.mozilla.javascript.Scriptable,Y,Y,Public);
Attribute(NOT_FOUND,java.lang.Object,Public,Y,Y,);
Method(getClassName,java.lang.String,Public,N,Y);
Method(get,java.lang.Object,Public,N,Y);
Method(get$2,java.lang.Object,Public,N,Y);
Method(has,boolean,Public,N,Y);
Method(has$2,boolean,Public,N,Y);
Method(put,void,Public,N,Y);
Method(put$2,void,Public,N,Y);
Method(delete,void,Public,N,Y);
Method(delete$2,void,Public,N,Y);
Method(getPrototype,org.mozilla.javascript.Scriptable,Public,N,Y);
Method(setPrototype,void,Public,N,Y);
Method(getParentScope,org.mozilla.javascript.Scriptable,Public,N,Y);
Method(setParentScope,void,Public,N,Y);
Method(getIds,java.lang.Object[],Public,N,Y);
Method(getDefaultValue,java.lang.Object,Public,N,Y);
Method(hasInstance,boolean,Public,N,Y);
Method(<clinit>,void,Public,Y,N);
Parameter(get,java.lang.String,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(get$2,int,);
Parameter(get$2,org.mozilla.javascript.Scriptable,);
Parameter(has,java.lang.String,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(has$2,int,);
Parameter(has$2,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.String,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(put$2,int,);
Parameter(put$2,org.mozilla.javascript.Scriptable,);
Parameter(put$2,java.lang.Object,);
Parameter(delete,java.lang.String,);
Parameter(delete$2,int,);
Parameter(setPrototype,org.mozilla.javascript.Scriptable,);
Parameter(setParentScope,org.mozilla.javascript.Scriptable,);
Parameter(getDefaultValue,java.lang.Class,);
Parameter(hasInstance,org.mozilla.javascript.Scriptable,);
Call(ATTRIBUTE,org.mozilla.javascript.Scriptable,<clinit> --> NOT_FOUND,org.mozilla.javascript.Scriptable,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Scriptable,<clinit> --> NOT_FOUND,org.mozilla.javascript.UniqueTag,READ);
EndClass 9
StartClass 10
Class(org.mozilla.javascript.Script,Y,Y,Public);
Method(exec,java.lang.Object,Public,N,Y);
Parameter(exec,org.mozilla.javascript.Context,);
Parameter(exec,org.mozilla.javascript.Scriptable,);
EndClass 10
StartClass 11
Class(org.mozilla.javascript.Kit,N,N,Public);
Attribute(Throwable_initCause,java.lang.reflect.Method,Private,Y,N,);
Method(<init>,void,Public,N,N);
Method(classOrNull,java.lang.Class,Public,Y,N);
Method(classOrNull$2,java.lang.Class,Public,Y,N);
Method(newInstanceOrNull,java.lang.Object,Public,Y,N);
Method(testIfCanLoadRhinoClasses,boolean,Public,Y,N);
Method(initCause,java.lang.RuntimeException,Public,Y,N);
Method(xDigitToInt,int,Public,Y,N);
Method(addListener,java.lang.Object,Public,Y,N);
Method(removeListener,java.lang.Object,Public,Y,N);
Method(getListener,java.lang.Object,Public,Y,N);
Method(initHash,java.lang.Object,Public,Y,N);
Method(makeHashKeyFromPair,java.lang.Object,Public,Y,N);
Method(readReader,java.lang.String,Public,Y,N);
Method(readStream,byte[],Public,Y,N);
Method(codeBug,java.lang.RuntimeException,Public,Y,N);
Method(codeBug$2,java.lang.RuntimeException,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(classOrNull,java.lang.String,);
Parameter(classOrNull$2,java.lang.ClassLoader,);
Parameter(classOrNull$2,java.lang.String,);
Parameter(newInstanceOrNull,java.lang.Class,);
Parameter(testIfCanLoadRhinoClasses,java.lang.ClassLoader,);
Parameter(initCause,java.lang.RuntimeException,);
Parameter(initCause,java.lang.Throwable,);
Parameter(xDigitToInt,int,);
Parameter(xDigitToInt,int,);
Parameter(addListener,java.lang.Object,);
Parameter(addListener,java.lang.Object,);
Parameter(removeListener,java.lang.Object,);
Parameter(removeListener,java.lang.Object,);
Parameter(getListener,java.lang.Object,);
Parameter(getListener,int,);
Parameter(initHash,java.util.Map,java.lang.Object;java.lang.Object);
Parameter(initHash,java.lang.Object,);
Parameter(initHash,java.lang.Object,);
Parameter(makeHashKeyFromPair,java.lang.Object,);
Parameter(makeHashKeyFromPair,java.lang.Object,);
Parameter(readReader,java.io.Reader,);
Parameter(readStream,java.io.InputStream,);
Parameter(readStream,int,);
Parameter(codeBug$2,java.lang.String,);
Call(METHOD,org.mozilla.javascript.Kit,testIfCanLoadRhinoClasses --> classOrNull$2,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Kit,<clinit> --> classOrNull,org.mozilla.javascript.Kit,);
Call(ATTRIBUTE,org.mozilla.javascript.Kit,initCause --> Throwable_initCause,org.mozilla.javascript.Kit,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Kit,<clinit> --> Throwable_initCause,org.mozilla.javascript.Kit,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Kit,testIfCanLoadRhinoClasses --> ContextFactoryClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(METHOD,org.mozilla.javascript.Kit,makeHashKeyFromPair --> <init>,org.mozilla.javascript.Kit$ComplexKey,);
EndClass 11
StartClass 12
Class(org.mozilla.javascript.commonjs.module.ModuleScope,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(uri,java.net.URI,Private,N,Y,);
Attribute(base,java.net.URI,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getUri,java.net.URI,Public,N,N);
Method(getBase,java.net.URI,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,java.net.URI,);
Parameter(<init>,java.net.URI,);
SuperClass(org.mozilla.javascript.TopLevel);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.TopLevel);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScope,<init> --> uri,org.mozilla.javascript.commonjs.module.ModuleScope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScope,<init> --> base,org.mozilla.javascript.commonjs.module.ModuleScope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScope,getUri --> uri,org.mozilla.javascript.commonjs.module.ModuleScope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScope,getBase --> base,org.mozilla.javascript.commonjs.module.ModuleScope,READ);
Call(METHOD,org.mozilla.javascript.commonjs.module.ModuleScope,<init> --> <init>,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.commonjs.module.ModuleScope,<init> --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.commonjs.module.ModuleScope,<init> --> cacheBuiltins,org.mozilla.javascript.TopLevel,);
EndClass 12
StartClass 13
Class(org.mozilla.javascript.RhinoException,N,Y,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(useMozillaStackStyle,boolean,Private,Y,N,);
Attribute(sourceName,java.lang.String,Private,N,N,);
Attribute(lineNumber,int,Private,N,N,);
Attribute(lineSource,java.lang.String,Private,N,N,);
Attribute(columnNumber,int,Private,N,N,);
Attribute(interpreterStackInfo,java.lang.Object,Public,N,N,);
Attribute(interpreterLineData,int[],Public,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getMessage,java.lang.String,Public,N,N);
Method(details,java.lang.String,Public,N,N);
Method(sourceName,java.lang.String,Public,N,N);
Method(initSourceName,void,Public,N,N);
Method(lineNumber,int,Public,N,N);
Method(initLineNumber,void,Public,N,N);
Method(columnNumber,int,Public,N,N);
Method(initColumnNumber,void,Public,N,N);
Method(lineSource,java.lang.String,Public,N,N);
Method(initLineSource,void,Public,N,N);
Method(recordErrorOrigin,void,Public,N,N);
Method(generateStackTrace,java.lang.String,Private,N,N);
Method(getScriptStackTrace,java.lang.String,Public,N,N);
Method(getScriptStackTrace$2,java.lang.String,Public,N,N);
Method(getScriptStack,org.mozilla.javascript.ScriptStackElement[],Public,N,N);
Method(printStackTrace,void,Public,N,N);
Method(printStackTrace$2,void,Public,N,N);
Method(usesMozillaStackStyle,boolean,Public,Y,N);
Method(useMozillaStackStyle,void,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,java.lang.String,);
Parameter(initSourceName,java.lang.String,);
Parameter(initLineNumber,int,);
Parameter(initColumnNumber,int,);
Parameter(initLineSource,java.lang.String,);
Parameter(recordErrorOrigin,java.lang.String,);
Parameter(recordErrorOrigin,int,);
Parameter(recordErrorOrigin,java.lang.String,);
Parameter(recordErrorOrigin,int,);
Parameter(getScriptStackTrace$2,java.io.FilenameFilter,);
Parameter(printStackTrace,java.io.PrintWriter,);
Parameter(printStackTrace$2,java.io.PrintStream,);
Parameter(useMozillaStackStyle,boolean,);
SubClass(org.mozilla.javascript.WrappedException);
SubClass(org.mozilla.javascript.EvaluatorException);
SubClass(org.mozilla.javascript.EcmaError);
SubClass(org.mozilla.javascript.JavaScriptException);
Call(METHOD,org.mozilla.javascript.RhinoException,getMessage --> details,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.RhinoException,recordErrorOrigin --> initSourceName,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.RhinoException,recordErrorOrigin --> initLineNumber,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.RhinoException,recordErrorOrigin --> initLineSource,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.RhinoException,recordErrorOrigin --> initColumnNumber,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.RhinoException,getScriptStackTrace --> getScriptStack,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.RhinoException,getScriptStackTrace$2 --> getScriptStackTrace,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.RhinoException,printStackTrace --> generateStackTrace,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.RhinoException,printStackTrace$2 --> generateStackTrace,org.mozilla.javascript.RhinoException,);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,getMessage --> sourceName,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,getMessage --> lineNumber,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,sourceName --> sourceName,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,initSourceName --> sourceName,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,initSourceName --> sourceName,org.mozilla.javascript.RhinoException,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,lineNumber --> lineNumber,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,initLineNumber --> lineNumber,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,initLineNumber --> lineNumber,org.mozilla.javascript.RhinoException,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,columnNumber --> columnNumber,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,initColumnNumber --> columnNumber,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,initColumnNumber --> columnNumber,org.mozilla.javascript.RhinoException,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,lineSource --> lineSource,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,initLineSource --> lineSource,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,initLineSource --> lineSource,org.mozilla.javascript.RhinoException,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,getScriptStackTrace --> useMozillaStackStyle,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,getScriptStack --> interpreterStackInfo,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,printStackTrace --> interpreterStackInfo,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,printStackTrace$2 --> interpreterStackInfo,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,usesMozillaStackStyle --> useMozillaStackStyle,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,useMozillaStackStyle --> useMozillaStackStyle,org.mozilla.javascript.RhinoException,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.RhinoException,<clinit> --> useMozillaStackStyle,org.mozilla.javascript.RhinoException,WRITE);
Call(METHOD,org.mozilla.javascript.RhinoException,<init> --> createInterpreter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.RhinoException,<init> --> captureStackInfo,org.mozilla.javascript.Evaluator,);
Call(METHOD,org.mozilla.javascript.RhinoException,<init>$2 --> createInterpreter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.RhinoException,<init>$2 --> captureStackInfo,org.mozilla.javascript.Evaluator,);
Call(METHOD,org.mozilla.javascript.RhinoException,generateStackTrace --> createInterpreter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.RhinoException,generateStackTrace --> getPatchedStack,org.mozilla.javascript.Evaluator,);
Call(METHOD,org.mozilla.javascript.RhinoException,getScriptStackTrace --> getSystemProperty,org.mozilla.javascript.SecurityUtilities,);
Call(METHOD,org.mozilla.javascript.RhinoException,getScriptStackTrace --> renderMozillaStyle,org.mozilla.javascript.ScriptStackElement,);
Call(METHOD,org.mozilla.javascript.RhinoException,getScriptStackTrace --> renderJavaStyle,org.mozilla.javascript.ScriptStackElement,);
Call(METHOD,org.mozilla.javascript.RhinoException,getScriptStack --> createInterpreter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.RhinoException,getScriptStack --> getScriptStackElements,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.RhinoException,getScriptStack --> <init>,org.mozilla.javascript.ScriptStackElement,);
EndClass 13
StartClass 14
Class(org.mozilla.javascript.ContextFactory,N,N,Public);
Attribute(hasCustomGlobal,boolean,Private,Y,N,);
Attribute(global,org.mozilla.javascript.ContextFactory,Private,Y,N,);
Attribute(sealed,boolean,Private,N,N,);
Attribute(listenersLock,java.lang.Object,Private,N,Y,);
Attribute(listeners,java.lang.Object,Private,N,N,);
Attribute(disabledListening,boolean,Private,N,N,);
Attribute(applicationClassLoader,java.lang.ClassLoader,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getGlobal,org.mozilla.javascript.ContextFactory,Public,Y,N);
Method(hasExplicitGlobal,boolean,Public,Y,N);
Method(initGlobal,void,Public,Y,N);
Method(getGlobalSetter,org.mozilla.javascript.ContextFactory$GlobalSetter,Public,Y,N);
Method(makeContext,org.mozilla.javascript.Context,Protected,N,N);
Method(hasFeature,boolean,Protected,N,N);
Method(isDom3Present,boolean,Private,N,N);
Method(getE4xImplementationFactory,org.mozilla.javascript.xml.XMLLib$Factory,Protected,N,N);
Method(createClassLoader,org.mozilla.javascript.GeneratedClassLoader,Protected,N,N);
Method(getApplicationClassLoader,java.lang.ClassLoader,Public,N,N);
Method(initApplicationClassLoader,void,Public,N,N);
Method(doTopCall,java.lang.Object,Protected,N,N);
Method(observeInstructionCount,void,Protected,N,N);
Method(onContextCreated,void,Protected,N,N);
Method(onContextReleased,void,Protected,N,N);
Method(addListener,void,Public,N,N);
Method(removeListener,void,Public,N,N);
Method(disableContextListening,void,Public,N,N);
Method(isSealed,boolean,Public,N,N);
Method(seal,void,Public,N,N);
Method(checkNotSealed,void,Protected,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(enterContext,org.mozilla.javascript.Context,Public,N,N);
Method(enter,org.mozilla.javascript.Context,Public,N,N);
Method(exit,void,Public,N,N);
Method(enterContext$2,org.mozilla.javascript.Context,Public,N,N);
Method(access$002,org.mozilla.javascript.ContextFactory,Public,Y,N);
Method(access$000,org.mozilla.javascript.ContextFactory,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(initGlobal,org.mozilla.javascript.ContextFactory,);
Parameter(hasFeature,org.mozilla.javascript.Context,);
Parameter(hasFeature,int,);
Parameter(createClassLoader,java.lang.ClassLoader,);
Parameter(initApplicationClassLoader,java.lang.ClassLoader,);
Parameter(doTopCall,org.mozilla.javascript.Callable,);
Parameter(doTopCall,org.mozilla.javascript.Context,);
Parameter(doTopCall,org.mozilla.javascript.Scriptable,);
Parameter(doTopCall,org.mozilla.javascript.Scriptable,);
Parameter(doTopCall,java.lang.Object[],);
Parameter(observeInstructionCount,org.mozilla.javascript.Context,);
Parameter(observeInstructionCount,int,);
Parameter(onContextCreated,org.mozilla.javascript.Context,);
Parameter(onContextReleased,org.mozilla.javascript.Context,);
Parameter(addListener,org.mozilla.javascript.ContextFactory$Listener,);
Parameter(removeListener,org.mozilla.javascript.ContextFactory$Listener,);
Parameter(call,org.mozilla.javascript.ContextAction,);
Parameter(enterContext$2,org.mozilla.javascript.Context,);
Parameter(access$002,org.mozilla.javascript.ContextFactory,);
SubClass(org.mozilla.javascript.tools.shell.ShellContextFactory);
Composition(org.mozilla.javascript.ContextFactory);
Call(METHOD,org.mozilla.javascript.ContextFactory,getE4xImplementationFactory --> isDom3Present,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.ContextFactory,initApplicationClassLoader --> checkNotSealed,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.ContextFactory,addListener --> checkNotSealed,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.ContextFactory,removeListener --> checkNotSealed,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.ContextFactory,disableContextListening --> checkNotSealed,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.ContextFactory,seal --> checkNotSealed,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.ContextFactory,enterContext --> enterContext$2,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.ContextFactory,enter --> enterContext$2,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.ContextFactory,<clinit> --> <init>,org.mozilla.javascript.ContextFactory,);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,<init> --> listenersLock,org.mozilla.javascript.ContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,getGlobal --> global,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,hasExplicitGlobal --> hasCustomGlobal,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,initGlobal --> hasCustomGlobal,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,initGlobal --> hasCustomGlobal,org.mozilla.javascript.ContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,initGlobal --> global,org.mozilla.javascript.ContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,getGlobalSetter --> hasCustomGlobal,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,getGlobalSetter --> hasCustomGlobal,org.mozilla.javascript.ContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,getApplicationClassLoader --> applicationClassLoader,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,initApplicationClassLoader --> applicationClassLoader,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,initApplicationClassLoader --> applicationClassLoader,org.mozilla.javascript.ContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,onContextCreated --> listeners,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,onContextReleased --> listeners,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,addListener --> listenersLock,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,addListener --> disabledListening,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,addListener --> listeners,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,addListener --> listeners,org.mozilla.javascript.ContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,removeListener --> listenersLock,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,removeListener --> disabledListening,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,removeListener --> listeners,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,removeListener --> listeners,org.mozilla.javascript.ContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,disableContextListening --> listenersLock,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,disableContextListening --> disabledListening,org.mozilla.javascript.ContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,disableContextListening --> listeners,org.mozilla.javascript.ContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,isSealed --> sealed,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,seal --> sealed,org.mozilla.javascript.ContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,checkNotSealed --> sealed,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,access$002 --> global,org.mozilla.javascript.ContextFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,access$000 --> global,org.mozilla.javascript.ContextFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory,<clinit> --> global,org.mozilla.javascript.ContextFactory,WRITE);
Call(METHOD,org.mozilla.javascript.ContextFactory,getGlobalSetter --> <init>,org.mozilla.javascript.ContextFactory$1GlobalSetterImpl,);
Call(METHOD,org.mozilla.javascript.ContextFactory,makeContext --> <init>$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ContextFactory,hasFeature --> getLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ContextFactory,isDom3Present --> classOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ContextFactory,getE4xImplementationFactory --> create,org.mozilla.javascript.xml.XMLLib$Factory,);
Call(METHOD,org.mozilla.javascript.ContextFactory,getE4xImplementationFactory --> classOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ContextFactory,createClassLoader --> <init>,org.mozilla.javascript.ContextFactory$1,);
Call(METHOD,org.mozilla.javascript.ContextFactory,initApplicationClassLoader --> testIfCanLoadRhinoClasses,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ContextFactory,doTopCall --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.ContextFactory,onContextCreated --> getListener,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ContextFactory,onContextCreated --> contextCreated,org.mozilla.javascript.ContextFactory$Listener,);
Call(METHOD,org.mozilla.javascript.ContextFactory,onContextReleased --> getListener,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ContextFactory,onContextReleased --> contextReleased,org.mozilla.javascript.ContextFactory$Listener,);
Call(METHOD,org.mozilla.javascript.ContextFactory,addListener --> addListener,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ContextFactory,removeListener --> removeListener,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ContextFactory,call --> call$3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ContextFactory,exit --> exit,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ContextFactory,enterContext$2 --> enter$3,org.mozilla.javascript.Context,);
EndClass 14
StartClass 15
Class(org.mozilla.javascript.NativeArray,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(ARRAY_TAG,java.lang.Object,Private,Y,Y,);
Attribute(NEGATIVE_ONE,java.lang.Integer,Private,Y,Y,);
Attribute(Id_length,int,Private,Y,Y,);
Attribute(MAX_INSTANCE_ID,int,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(Id_toString,int,Private,Y,Y,);
Attribute(Id_toLocaleString,int,Private,Y,Y,);
Attribute(Id_toSource,int,Private,Y,Y,);
Attribute(Id_join,int,Private,Y,Y,);
Attribute(Id_reverse,int,Private,Y,Y,);
Attribute(Id_sort,int,Private,Y,Y,);
Attribute(Id_push,int,Private,Y,Y,);
Attribute(Id_pop,int,Private,Y,Y,);
Attribute(Id_shift,int,Private,Y,Y,);
Attribute(Id_unshift,int,Private,Y,Y,);
Attribute(Id_splice,int,Private,Y,Y,);
Attribute(Id_concat,int,Private,Y,Y,);
Attribute(Id_slice,int,Private,Y,Y,);
Attribute(Id_indexOf,int,Private,Y,Y,);
Attribute(Id_lastIndexOf,int,Private,Y,Y,);
Attribute(Id_every,int,Private,Y,Y,);
Attribute(Id_filter,int,Private,Y,Y,);
Attribute(Id_forEach,int,Private,Y,Y,);
Attribute(Id_map,int,Private,Y,Y,);
Attribute(Id_some,int,Private,Y,Y,);
Attribute(Id_reduce,int,Private,Y,Y,);
Attribute(Id_reduceRight,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Attribute(ConstructorId_join,int,Private,Y,Y,);
Attribute(ConstructorId_reverse,int,Private,Y,Y,);
Attribute(ConstructorId_sort,int,Private,Y,Y,);
Attribute(ConstructorId_push,int,Private,Y,Y,);
Attribute(ConstructorId_pop,int,Private,Y,Y,);
Attribute(ConstructorId_shift,int,Private,Y,Y,);
Attribute(ConstructorId_unshift,int,Private,Y,Y,);
Attribute(ConstructorId_splice,int,Private,Y,Y,);
Attribute(ConstructorId_concat,int,Private,Y,Y,);
Attribute(ConstructorId_slice,int,Private,Y,Y,);
Attribute(ConstructorId_indexOf,int,Private,Y,Y,);
Attribute(ConstructorId_lastIndexOf,int,Private,Y,Y,);
Attribute(ConstructorId_every,int,Private,Y,Y,);
Attribute(ConstructorId_filter,int,Private,Y,Y,);
Attribute(ConstructorId_forEach,int,Private,Y,Y,);
Attribute(ConstructorId_map,int,Private,Y,Y,);
Attribute(ConstructorId_some,int,Private,Y,Y,);
Attribute(ConstructorId_reduce,int,Private,Y,Y,);
Attribute(ConstructorId_reduceRight,int,Private,Y,Y,);
Attribute(ConstructorId_isArray,int,Private,Y,Y,);
Attribute(length,long,Private,N,N,);
Attribute(lengthAttr,int,Private,N,N,);
Attribute(dense,java.lang.Object[],Private,N,N,);
Attribute(denseOnly,boolean,Private,N,N,);
Attribute(maximumInitialCapacity,int,Private,Y,N,);
Attribute(DEFAULT_INITIAL_CAPACITY,int,Private,Y,Y,);
Attribute(GROW_FACTOR,double,Private,Y,Y,);
Attribute(MAX_PRE_GROW_SIZE,int,Private,Y,Y,);
Method(init,void,Public,Y,N);
Method(getMaximumInitialCapacity,int,Public,Y,N);
Method(setMaximumInitialCapacity,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(getMaxInstanceId,int,Protected,N,N);
Method(setInstanceIdAttributes,void,Protected,N,N);
Method(findInstanceIdInfo,int,Protected,N,N);
Method(getInstanceIdName,java.lang.String,Protected,N,N);
Method(getInstanceIdValue,java.lang.Object,Protected,N,N);
Method(setInstanceIdValue,void,Protected,N,N);
Method(fillConstructorProperties,void,Protected,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(has,boolean,Public,N,N);
Method(toArrayIndex,long,Private,Y,N);
Method(toArrayIndex$2,long,Private,Y,N);
Method(toArrayIndex$3,long,Private,Y,N);
Method(toDenseIndex,int,Private,Y,N);
Method(put,void,Public,N,N);
Method(ensureCapacity,boolean,Private,N,N);
Method(put$2,void,Public,N,N);
Method(delete,void,Public,N,N);
Method(getIds,java.lang.Object[],Public,N,N);
Method(getAllIds,java.lang.Object[],Public,N,N);
Method(getIndexIds,java.lang.Integer[],Public,N,N);
Method(getDefaultValue,java.lang.Object,Public,N,N);
Method(defaultIndexPropertyDescriptor,org.mozilla.javascript.ScriptableObject,Private,N,N);
Method(getAttributes,int,Public,N,N);
Method(getOwnPropertyDescriptor,org.mozilla.javascript.ScriptableObject,Protected,N,N);
Method(defineOwnProperty,void,Protected,N,N);
Method(jsConstructor,java.lang.Object,Private,Y,N);
Method(getLength,long,Public,N,N);
Method(jsGet_length,long,Public,N,N);
Method(setDenseOnly,void,Public,N,N);
Method(setLength,void,Private,N,N);
Method(getLengthProperty,long,Public,Y,N);
Method(setLengthProperty,java.lang.Object,Private,Y,N);
Method(deleteElem,void,Private,Y,N);
Method(getElem,java.lang.Object,Private,Y,N);
Method(getRawElem,java.lang.Object,Private,Y,N);
Method(setElem,void,Private,Y,N);
Method(setRawElem,void,Private,Y,N);
Method(toStringHelper,java.lang.String,Private,Y,N);
Method(js_join,java.lang.String,Private,Y,N);
Method(js_reverse,org.mozilla.javascript.Scriptable,Private,Y,N);
Method(js_sort,org.mozilla.javascript.Scriptable,Private,Y,N);
Method(js_push,java.lang.Object,Private,Y,N);
Method(js_pop,java.lang.Object,Private,Y,N);
Method(js_shift,java.lang.Object,Private,Y,N);
Method(js_unshift,java.lang.Object,Private,Y,N);
Method(js_splice,java.lang.Object,Private,Y,N);
Method(js_concat,org.mozilla.javascript.Scriptable,Private,Y,N);
Method(js_slice,org.mozilla.javascript.Scriptable,Private,N,N);
Method(toSliceIndex,long,Private,Y,N);
Method(indexOfHelper,java.lang.Object,Private,N,N);
Method(iterativeMethod,java.lang.Object,Private,N,N);
Method(reduceMethod,java.lang.Object,Private,N,N);
Method(contains,boolean,Public,N,N);
Method(toArray,java.lang.Object[],Public,N,N);
Method(toArray$2,java.lang.Object[],Public,N,N);
Method(containsAll,boolean,Public,N,N);
Method(size,int,Public,N,N);
Method(isEmpty,boolean,Public,N,N);
Method(get$2,java.lang.Object,Public,N,N);
Method(get$3,java.lang.Object,Public,N,N);
Method(indexOf,int,Public,N,N);
Method(lastIndexOf,int,Public,N,N);
Method(iterator,java.util.Iterator,Public,N,N);
Method(listIterator,java.util.ListIterator,Public,N,N);
Method(listIterator$2,java.util.ListIterator,Public,N,N);
Method(add,boolean,Public,N,N);
Method(remove,boolean,Public,N,N);
Method(addAll,boolean,Public,N,N);
Method(removeAll,boolean,Public,N,N);
Method(retainAll,boolean,Public,N,N);
Method(clear,void,Public,N,N);
Method(add$2,void,Public,N,N);
Method(addAll$2,boolean,Public,N,N);
Method(set,java.lang.Object,Public,N,N);
Method(remove$2,java.lang.Object,Public,N,N);
Method(subList,java.util.List,Public,N,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(setMaximumInitialCapacity,int,);
Parameter(<init>,long,);
Parameter(<init>$2,java.lang.Object[],);
Parameter(setInstanceIdAttributes,int,);
Parameter(setInstanceIdAttributes,int,);
Parameter(findInstanceIdInfo,java.lang.String,);
Parameter(getInstanceIdName,int,);
Parameter(getInstanceIdValue,int,);
Parameter(setInstanceIdValue,int,);
Parameter(setInstanceIdValue,java.lang.Object,);
Parameter(fillConstructorProperties,org.mozilla.javascript.IdFunctionObject,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(get,int,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(has,int,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(toArrayIndex,java.lang.Object,);
Parameter(toArrayIndex$2,java.lang.String,);
Parameter(toArrayIndex$3,double,);
Parameter(toDenseIndex,java.lang.Object,);
Parameter(put,java.lang.String,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(ensureCapacity,int,);
Parameter(put$2,int,);
Parameter(put$2,org.mozilla.javascript.Scriptable,);
Parameter(put$2,java.lang.Object,);
Parameter(delete,int,);
Parameter(getDefaultValue,java.lang.Class,);
Parameter(defaultIndexPropertyDescriptor,java.lang.Object,);
Parameter(getAttributes,int,);
Parameter(getOwnPropertyDescriptor,org.mozilla.javascript.Context,);
Parameter(getOwnPropertyDescriptor,java.lang.Object,);
Parameter(defineOwnProperty,org.mozilla.javascript.Context,);
Parameter(defineOwnProperty,java.lang.Object,);
Parameter(defineOwnProperty,org.mozilla.javascript.ScriptableObject,);
Parameter(defineOwnProperty,boolean,);
Parameter(jsConstructor,org.mozilla.javascript.Context,);
Parameter(jsConstructor,org.mozilla.javascript.Scriptable,);
Parameter(jsConstructor,java.lang.Object[],);
Parameter(setDenseOnly,boolean,);
Parameter(setLength,java.lang.Object,);
Parameter(getLengthProperty,org.mozilla.javascript.Context,);
Parameter(getLengthProperty,org.mozilla.javascript.Scriptable,);
Parameter(setLengthProperty,org.mozilla.javascript.Context,);
Parameter(setLengthProperty,org.mozilla.javascript.Scriptable,);
Parameter(setLengthProperty,long,);
Parameter(deleteElem,org.mozilla.javascript.Scriptable,);
Parameter(deleteElem,long,);
Parameter(getElem,org.mozilla.javascript.Context,);
Parameter(getElem,org.mozilla.javascript.Scriptable,);
Parameter(getElem,long,);
Parameter(getRawElem,org.mozilla.javascript.Scriptable,);
Parameter(getRawElem,long,);
Parameter(setElem,org.mozilla.javascript.Context,);
Parameter(setElem,org.mozilla.javascript.Scriptable,);
Parameter(setElem,long,);
Parameter(setElem,java.lang.Object,);
Parameter(setRawElem,org.mozilla.javascript.Context,);
Parameter(setRawElem,org.mozilla.javascript.Scriptable,);
Parameter(setRawElem,long,);
Parameter(setRawElem,java.lang.Object,);
Parameter(toStringHelper,org.mozilla.javascript.Context,);
Parameter(toStringHelper,org.mozilla.javascript.Scriptable,);
Parameter(toStringHelper,org.mozilla.javascript.Scriptable,);
Parameter(toStringHelper,boolean,);
Parameter(toStringHelper,boolean,);
Parameter(js_join,org.mozilla.javascript.Context,);
Parameter(js_join,org.mozilla.javascript.Scriptable,);
Parameter(js_join,java.lang.Object[],);
Parameter(js_reverse,org.mozilla.javascript.Context,);
Parameter(js_reverse,org.mozilla.javascript.Scriptable,);
Parameter(js_reverse,java.lang.Object[],);
Parameter(js_sort,org.mozilla.javascript.Context,);
Parameter(js_sort,org.mozilla.javascript.Scriptable,);
Parameter(js_sort,org.mozilla.javascript.Scriptable,);
Parameter(js_sort,java.lang.Object[],);
Parameter(js_push,org.mozilla.javascript.Context,);
Parameter(js_push,org.mozilla.javascript.Scriptable,);
Parameter(js_push,java.lang.Object[],);
Parameter(js_pop,org.mozilla.javascript.Context,);
Parameter(js_pop,org.mozilla.javascript.Scriptable,);
Parameter(js_pop,java.lang.Object[],);
Parameter(js_shift,org.mozilla.javascript.Context,);
Parameter(js_shift,org.mozilla.javascript.Scriptable,);
Parameter(js_shift,java.lang.Object[],);
Parameter(js_unshift,org.mozilla.javascript.Context,);
Parameter(js_unshift,org.mozilla.javascript.Scriptable,);
Parameter(js_unshift,java.lang.Object[],);
Parameter(js_splice,org.mozilla.javascript.Context,);
Parameter(js_splice,org.mozilla.javascript.Scriptable,);
Parameter(js_splice,org.mozilla.javascript.Scriptable,);
Parameter(js_splice,java.lang.Object[],);
Parameter(js_concat,org.mozilla.javascript.Context,);
Parameter(js_concat,org.mozilla.javascript.Scriptable,);
Parameter(js_concat,org.mozilla.javascript.Scriptable,);
Parameter(js_concat,java.lang.Object[],);
Parameter(js_slice,org.mozilla.javascript.Context,);
Parameter(js_slice,org.mozilla.javascript.Scriptable,);
Parameter(js_slice,java.lang.Object[],);
Parameter(toSliceIndex,double,);
Parameter(toSliceIndex,long,);
Parameter(indexOfHelper,org.mozilla.javascript.Context,);
Parameter(indexOfHelper,org.mozilla.javascript.Scriptable,);
Parameter(indexOfHelper,java.lang.Object[],);
Parameter(indexOfHelper,boolean,);
Parameter(iterativeMethod,org.mozilla.javascript.Context,);
Parameter(iterativeMethod,int,);
Parameter(iterativeMethod,org.mozilla.javascript.Scriptable,);
Parameter(iterativeMethod,org.mozilla.javascript.Scriptable,);
Parameter(iterativeMethod,java.lang.Object[],);
Parameter(reduceMethod,org.mozilla.javascript.Context,);
Parameter(reduceMethod,int,);
Parameter(reduceMethod,org.mozilla.javascript.Scriptable,);
Parameter(reduceMethod,org.mozilla.javascript.Scriptable,);
Parameter(reduceMethod,java.lang.Object[],);
Parameter(contains,java.lang.Object,);
Parameter(toArray$2,java.lang.Object[],);
Parameter(containsAll,java.util.Collection,);
Parameter(get$2,long,);
Parameter(get$3,int,);
Parameter(indexOf,java.lang.Object,);
Parameter(lastIndexOf,java.lang.Object,);
Parameter(listIterator$2,int,);
Parameter(add,java.lang.Object,);
Parameter(remove,java.lang.Object,);
Parameter(addAll,java.util.Collection,);
Parameter(removeAll,java.util.Collection,);
Parameter(retainAll,java.util.Collection,);
Parameter(add$2,int,);
Parameter(add$2,java.lang.Object,);
Parameter(addAll$2,int,);
Parameter(addAll$2,java.util.Collection,);
Parameter(set,int,);
Parameter(set,java.lang.Object,);
Parameter(remove$2,int,);
Parameter(subList,int,);
Parameter(subList,int,);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Call(METHOD,org.mozilla.javascript.NativeArray,init --> <init>,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,setInstanceIdValue --> setLength,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> jsConstructor,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> toStringHelper,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> js_join,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> js_reverse,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> js_sort,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> js_push,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> js_pop,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> js_shift,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> js_unshift,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> js_splice,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> js_concat,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> js_slice,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> indexOfHelper,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> iterativeMethod,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> reduceMethod,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,toArrayIndex --> toArrayIndex$2,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,toArrayIndex --> toArrayIndex$3,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,toArrayIndex$2 --> toArrayIndex$3,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,toDenseIndex --> toArrayIndex,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,put --> toArrayIndex$2,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,put$2 --> ensureCapacity,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,getAllIds --> getIds,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,getIndexIds --> getIds,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,getOwnPropertyDescriptor --> toDenseIndex,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,getOwnPropertyDescriptor --> defaultIndexPropertyDescriptor,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,defineOwnProperty --> put$2,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,defineOwnProperty --> toArrayIndex,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,jsConstructor --> <init>,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,jsConstructor --> <init>$2,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,jsGet_length --> getLength,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLength --> ensureCapacity,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLength --> getIds,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLength --> toArrayIndex$2,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLength --> delete,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLength --> deleteElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,getLengthProperty --> getLength,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,setRawElem --> deleteElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,setRawElem --> setElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_join --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_join --> getElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_reverse --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_reverse --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_reverse --> setRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_sort --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_sort --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_sort --> setRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_push --> ensureCapacity,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_push --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_push --> setElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_push --> setLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_pop --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_pop --> getElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_pop --> setLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_shift --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_shift --> getElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_shift --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_shift --> setRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_shift --> setLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_unshift --> ensureCapacity,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_unshift --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_unshift --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_unshift --> setRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_unshift --> setElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_unshift --> setLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> toSliceIndex,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> getElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> setElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> setLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> ensureCapacity,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> setRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_concat --> ensureCapacity,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_concat --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_concat --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_concat --> setElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_concat --> setLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_slice --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_slice --> toSliceIndex,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_slice --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_slice --> setElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_slice --> setLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,indexOfHelper --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,indexOfHelper --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,iterativeMethod --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,iterativeMethod --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,iterativeMethod --> setElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,reduceMethod --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,reduceMethod --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,contains --> indexOf,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,toArray --> toArray$2,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,toArray$2 --> get$3,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,containsAll --> contains,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,get$2 --> getRawElem,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,get$3 --> get$2,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,indexOf --> get$3,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,lastIndexOf --> get$3,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,iterator --> listIterator$2,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray,listIterator --> listIterator$2,org.mozilla.javascript.NativeArray,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getMaximumInitialCapacity --> maximumInitialCapacity,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setMaximumInitialCapacity --> maximumInitialCapacity,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init> --> maximumInitialCapacity,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init> --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init> --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init> --> lengthAttr,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init> --> denseOnly,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init> --> dense,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init> --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init>$2 --> lengthAttr,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init>$2 --> denseOnly,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init>$2 --> dense,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init>$2 --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setInstanceIdAttributes --> lengthAttr,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,findInstanceIdInfo --> lengthAttr,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getInstanceIdValue --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,fillConstructorProperties --> ARRAY_TAG,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,initPrototypeId --> ARRAY_TAG,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,execIdCall --> ARRAY_TAG,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,get --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,get --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,has --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,has --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,put --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,put --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,put --> denseOnly,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,ensureCapacity --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,ensureCapacity --> denseOnly,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,ensureCapacity --> dense,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,put$2 --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,put$2 --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,put$2 --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,put$2 --> lengthAttr,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,put$2 --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,put$2 --> denseOnly,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,delete --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,delete --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getIds --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getIds --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getDefaultValue --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getAttributes --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getOwnPropertyDescriptor --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,defineOwnProperty --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,defineOwnProperty --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,defineOwnProperty --> dense,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,defineOwnProperty --> denseOnly,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,defineOwnProperty --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getLength --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setDenseOnly --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setDenseOnly --> denseOnly,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setLength --> lengthAttr,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setLength --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setLength --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setLength --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setLength --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setLength --> denseOnly,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_join --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_join --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_reverse --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_reverse --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_reverse --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_push --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_push --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_push --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_push --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_pop --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_pop --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_pop --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_pop --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_shift --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_shift --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_shift --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_shift --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_unshift --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_unshift --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_unshift --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_unshift --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_splice --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_splice --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_splice --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_concat --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_concat --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_concat --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_concat --> length,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,indexOfHelper --> NEGATIVE_ONE,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,indexOfHelper --> denseOnly,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,indexOfHelper --> dense,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,toArray$2 --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,size --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,isEmpty --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,get$2 --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,indexOf --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,lastIndexOf --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,listIterator$2 --> length,org.mozilla.javascript.NativeArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<clinit> --> ARRAY_TAG,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<clinit> --> NEGATIVE_ONE,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<clinit> --> maximumInitialCapacity,org.mozilla.javascript.NativeArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,<init> --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,has --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,ensureCapacity --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,delete --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getIds --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getDefaultValue --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,defaultIndexPropertyDescriptor --> Object,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getAttributes --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,getOwnPropertyDescriptor --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,defineOwnProperty --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setLength --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,setRawElem --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,toStringHelper --> iterating,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,toStringHelper --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,toStringHelper --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,toStringHelper --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,toStringHelper --> iterating,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_join --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_join --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_sort --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_push --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_pop --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_pop --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_shift --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_shift --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_splice --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_splice --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_concat --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_concat --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,js_slice --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,indexOfHelper --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,indexOfHelper --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,iterativeMethod --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,iterativeMethod --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,reduceMethod --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,reduceMethod --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,toArray --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,get$2 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray,get$2 --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.NativeArray,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,<init>$2 --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,findInstanceIdInfo --> instanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,findInstanceIdInfo --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,getInstanceIdName --> getInstanceIdName,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,getInstanceIdValue --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,getInstanceIdValue --> getInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,setInstanceIdValue --> setInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,fillConstructorProperties --> addIdFunctionProperty,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,fillConstructorProperties --> fillConstructorProperties,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> toObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> construct,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeArray,execIdCall --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,get --> isGetterOrSetter,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,get --> get$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,has --> isGetterOrSetter,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,has --> has$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,toArrayIndex$2 --> toNumber$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,toArrayIndex$3 --> toUint32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,put --> put,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,put$2 --> isSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,put$2 --> isGetterOrSetter,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,put$2 --> put$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,delete --> isSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,delete --> isGetterOrSetter,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,delete --> delete$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,getIds --> getIds,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,getAllIds --> getAllIds,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,getIndexIds --> toInt32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,getIndexIds --> toString$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,getIndexIds --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,getDefaultValue --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,getDefaultValue --> getLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,getDefaultValue --> getDefaultValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,defaultIndexPropertyDescriptor --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,defaultIndexPropertyDescriptor --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,defaultIndexPropertyDescriptor --> setBuiltinProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,defaultIndexPropertyDescriptor --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,getAttributes --> getAttributes$4,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,getOwnPropertyDescriptor --> getOwnPropertyDescriptor,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,defineOwnProperty --> defineOwnProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,jsConstructor --> getLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,jsConstructor --> toUint32$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,jsConstructor --> getMessage0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,jsConstructor --> constructError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLength --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLength --> toUint32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLength --> getMessage0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLength --> constructError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLength --> delete,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,getLengthProperty --> getLength,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.NativeArray,getLengthProperty --> getObjectProp$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,getLengthProperty --> toUint32$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLengthProperty --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,setLengthProperty --> setObjectProp$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,deleteElem --> delete$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeArray,deleteElem --> delete,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeArray,getElem --> getObjectProp$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,getElem --> getObjectIndex$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,getRawElem --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,getRawElem --> getProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,setElem --> setObjectProp$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,setElem --> setObjectIndex$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> <init>$2,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> has,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> put,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> getLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> uneval,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> escapeString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> getPropFunctionAndThis,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> lastStoredScriptable,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.NativeArray,toStringHelper --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_join --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_join --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_sort --> getValueFunctionAndThis,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_sort --> lastStoredScriptable,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_sort --> <init>,org.mozilla.javascript.NativeArray$1,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_sort --> <init>,org.mozilla.javascript.NativeArray$2,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_sort --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_push --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_push --> getLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_unshift --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> newArray,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> toInteger,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> getLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_splice --> newArray$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_concat --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_concat --> getExistingCtor,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_concat --> construct,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_concat --> instanceOf,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_slice --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_slice --> newArray,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,js_slice --> toInteger,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,indexOfHelper --> toInteger,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,indexOfHelper --> shallowEq,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,iterativeMethod --> notFunctionError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,iterativeMethod --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,iterativeMethod --> toObject$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,iterativeMethod --> newArray,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeArray,iterativeMethod --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.NativeArray,iterativeMethod --> toBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,reduceMethod --> notFunctionError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,reduceMethod --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeArray,reduceMethod --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.NativeArray,reduceMethod --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeArray,get$2 --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.NativeArray,listIterator$2 --> <init>,org.mozilla.javascript.NativeArray$3,);
EndClass 15
StartClass 16
Class(org.mozilla.javascript.GeneratedClassLoader,Y,Y,Public);
Method(defineClass,java.lang.Class,Public,N,Y);
Method(linkClass,void,Public,N,Y);
Parameter(defineClass,java.lang.String,);
Parameter(defineClass,byte[],);
Parameter(linkClass,java.lang.Class,);
EndClass 16
StartClass 17
Class(org.mozilla.javascript.tools.SourceReader,N,N,Public);
Method(<init>,void,Public,N,N);
Method(toUrl,java.net.URL,Public,Y,N);
Method(readFileOrUrl,java.lang.Object,Public,Y,N);
Parameter(toUrl,java.lang.String,);
Parameter(readFileOrUrl,java.lang.String,);
Parameter(readFileOrUrl,boolean,);
Parameter(readFileOrUrl,java.lang.String,);
Call(METHOD,org.mozilla.javascript.tools.SourceReader,readFileOrUrl --> toUrl,org.mozilla.javascript.tools.SourceReader,);
Call(METHOD,org.mozilla.javascript.tools.SourceReader,readFileOrUrl --> <init>,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,);
Call(METHOD,org.mozilla.javascript.tools.SourceReader,readFileOrUrl --> getContentType,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,);
Call(METHOD,org.mozilla.javascript.tools.SourceReader,readFileOrUrl --> getEncoding,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,);
Call(METHOD,org.mozilla.javascript.tools.SourceReader,readFileOrUrl --> readStream,org.mozilla.javascript.Kit,);
EndClass 17
StartClass 18
Class(org.mozilla.javascript.tools.shell.Main$ScriptReference,N,N,NA);
Attribute(path,java.lang.String,Public,N,N,);
Attribute(digest,byte[],Public,N,N,);
Method(<init>,void,Public,N,N);
Parameter(<init>,java.lang.String,org.mozilla.javascript.Script);
Parameter(<init>,byte[],);
Parameter(<init>,org.mozilla.javascript.Script,);
Parameter(<init>,java.lang.ref.ReferenceQueue,);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$ScriptReference,<init> --> path,org.mozilla.javascript.tools.shell.Main$ScriptReference,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$ScriptReference,<init> --> digest,org.mozilla.javascript.tools.shell.Main$ScriptReference,WRITE);
EndClass 18
StartClass 19
Class(org.mozilla.javascript.tools.shell.ShellConsole,N,Y,Public);
Attribute(NO_ARG,java.lang.Class[],Private,Y,Y,);
Attribute(BOOLEAN_ARG,java.lang.Class[],Private,Y,Y,);
Attribute(STRING_ARG,java.lang.Class[],Private,Y,Y,);
Attribute(CHARSEQ_ARG,java.lang.Class[],Private,Y,Y,);
Method(<init>,void,Protected,N,N);
Method(getIn,java.io.InputStream,Public,N,Y);
Method(readLine,java.lang.String,Public,N,Y);
Method(readLine$2,java.lang.String,Public,N,Y);
Method(flush,void,Public,N,Y);
Method(print,void,Public,N,Y);
Method(println,void,Public,N,Y);
Method(println$2,void,Public,N,Y);
Method(tryInvoke,java.lang.Object,Private,Y,N);
Method(getConsole,org.mozilla.javascript.tools.shell.ShellConsole,Public,Y,N);
Method(getConsole$2,org.mozilla.javascript.tools.shell.ShellConsole,Public,Y,N);
Method(getJLineShellConsoleV1,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,Private,Y,N);
Method(getJLineShellConsoleV2,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,Private,Y,N);
Method(access$000,java.lang.Class[],Public,Y,N);
Method(access$100,java.lang.Object,Public,Y,N);
Method(access$200,java.lang.Class[],Public,Y,N);
Method(access$300,java.lang.Class[],Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(readLine$2,java.lang.String,);
Parameter(print,java.lang.String,);
Parameter(println$2,java.lang.String,);
Parameter(tryInvoke,java.lang.Object,);
Parameter(tryInvoke,java.lang.String,);
Parameter(tryInvoke,java.lang.Class[],);
Parameter(tryInvoke,java.lang.Object[],);
Parameter(getConsole,java.io.InputStream,);
Parameter(getConsole,java.io.PrintStream,);
Parameter(getConsole,java.nio.charset.Charset,);
Parameter(getConsole$2,org.mozilla.javascript.Scriptable,);
Parameter(getConsole$2,java.nio.charset.Charset,);
Parameter(getJLineShellConsoleV1,java.lang.ClassLoader,);
Parameter(getJLineShellConsoleV1,java.lang.Class,);
Parameter(getJLineShellConsoleV1,org.mozilla.javascript.Scriptable,);
Parameter(getJLineShellConsoleV1,java.nio.charset.Charset,);
Parameter(getJLineShellConsoleV2,java.lang.ClassLoader,);
Parameter(getJLineShellConsoleV2,java.lang.Class,);
Parameter(getJLineShellConsoleV2,org.mozilla.javascript.Scriptable,);
Parameter(getJLineShellConsoleV2,java.nio.charset.Charset,);
Parameter(access$100,java.lang.Object,);
Parameter(access$100,java.lang.String,);
Parameter(access$100,java.lang.Class[],);
Parameter(access$100,java.lang.Object[],);
SubClass(org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1);
SubClass(org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2);
SubClass(org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getConsole$2 --> getJLineShellConsoleV2,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getConsole$2 --> getJLineShellConsoleV1,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getJLineShellConsoleV1 --> tryInvoke,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getJLineShellConsoleV2 --> tryInvoke,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,access$100 --> tryInvoke,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole,getJLineShellConsoleV1 --> BOOLEAN_ARG,org.mozilla.javascript.tools.shell.ShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole,getJLineShellConsoleV2 --> BOOLEAN_ARG,org.mozilla.javascript.tools.shell.ShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole,access$000 --> NO_ARG,org.mozilla.javascript.tools.shell.ShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole,access$200 --> STRING_ARG,org.mozilla.javascript.tools.shell.ShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole,access$300 --> CHARSEQ_ARG,org.mozilla.javascript.tools.shell.ShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole,<clinit> --> NO_ARG,org.mozilla.javascript.tools.shell.ShellConsole,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole,<clinit> --> BOOLEAN_ARG,org.mozilla.javascript.tools.shell.ShellConsole,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole,<clinit> --> STRING_ARG,org.mozilla.javascript.tools.shell.ShellConsole,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole,<clinit> --> CHARSEQ_ARG,org.mozilla.javascript.tools.shell.ShellConsole,WRITE);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getConsole --> <init>,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getConsole$2 --> classOrNull$2,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getJLineShellConsoleV1 --> classOrNull$2,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getJLineShellConsoleV1 --> <init>,org.mozilla.javascript.tools.shell.FlexibleCompletor,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getJLineShellConsoleV1 --> <init>,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getJLineShellConsoleV2 --> classOrNull$2,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getJLineShellConsoleV2 --> <init>,org.mozilla.javascript.tools.shell.FlexibleCompletor,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole,getJLineShellConsoleV2 --> <init>,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,);
EndClass 19
StartClass 20
Class(org.mozilla.javascript.Function,Y,Y,Public);
Method(call,java.lang.Object,Public,N,Y);
Method(construct,org.mozilla.javascript.Scriptable,Public,N,Y);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(construct,org.mozilla.javascript.Context,);
Parameter(construct,org.mozilla.javascript.Scriptable,);
Parameter(construct,java.lang.Object[],);
Realization(org.mozilla.javascript.Scriptable);
Realization(org.mozilla.javascript.Callable);
EndClass 20
StartClass 21
Class(org.mozilla.javascript.tools.shell.Main$IProxy,N,N,NA);
Attribute(PROCESS_FILES,int,Private,Y,Y,);
Attribute(EVAL_INLINE_SCRIPT,int,Private,Y,Y,);
Attribute(SYSTEM_EXIT,int,Private,Y,Y,);
Attribute(type,int,Private,N,N,);
Attribute(args,java.lang.String[],Public,N,N,);
Attribute(scriptText,java.lang.String,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(run,java.lang.Object,Public,N,N);
Method(quit,void,Public,N,N);
Parameter(<init>,int,);
Parameter(run,org.mozilla.javascript.Context,);
Parameter(quit,org.mozilla.javascript.Context,);
Parameter(quit,int,);
Realization(org.mozilla.javascript.ContextAction);
Realization(org.mozilla.javascript.tools.shell.QuitAction);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$IProxy,<init> --> type,org.mozilla.javascript.tools.shell.Main$IProxy,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$IProxy,run --> type,org.mozilla.javascript.tools.shell.Main$IProxy,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$IProxy,run --> args,org.mozilla.javascript.tools.shell.Main$IProxy,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$IProxy,run --> scriptText,org.mozilla.javascript.tools.shell.Main$IProxy,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$IProxy,quit --> type,org.mozilla.javascript.tools.shell.Main$IProxy,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$IProxy,run --> useRequire,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$IProxy,run --> global,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$IProxy,run --> modulePath,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$IProxy,run --> sandboxed,org.mozilla.javascript.tools.shell.Main,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Main$IProxy,run --> require,org.mozilla.javascript.tools.shell.Main,WRITE);
Call(METHOD,org.mozilla.javascript.tools.shell.Main$IProxy,run --> installRequire,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main$IProxy,run --> processFiles,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main$IProxy,run --> evalInlineScript,org.mozilla.javascript.tools.shell.Main,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main$IProxy,run --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.tools.shell.Main$IProxy,quit --> codeBug,org.mozilla.javascript.Kit,);
EndClass 21
StartClass 22
Class(org.mozilla.javascript.SecurityController,N,Y,Public);
Attribute(global,org.mozilla.javascript.SecurityController,Private,Y,N,);
Method(<init>,void,Public,N,N);
Method(global,org.mozilla.javascript.SecurityController,Public,Y,N);
Method(hasGlobal,boolean,Public,Y,N);
Method(initGlobal,void,Public,Y,N);
Method(createClassLoader,org.mozilla.javascript.GeneratedClassLoader,Public,N,Y);
Method(createLoader,org.mozilla.javascript.GeneratedClassLoader,Public,Y,N);
Method(getStaticSecurityDomainClass,java.lang.Class,Public,Y,N);
Method(getStaticSecurityDomainClassInternal,java.lang.Class,Public,N,N);
Method(getDynamicSecurityDomain,java.lang.Object,Public,N,Y);
Method(callWithDomain,java.lang.Object,Public,N,N);
Method(execWithDomain,java.lang.Object,Public,N,N);
Parameter(initGlobal,org.mozilla.javascript.SecurityController,);
Parameter(createClassLoader,java.lang.ClassLoader,);
Parameter(createClassLoader,java.lang.Object,);
Parameter(createLoader,java.lang.ClassLoader,);
Parameter(createLoader,java.lang.Object,);
Parameter(getDynamicSecurityDomain,java.lang.Object,);
Parameter(callWithDomain,java.lang.Object,);
Parameter(callWithDomain,org.mozilla.javascript.Context,);
Parameter(callWithDomain,org.mozilla.javascript.Callable,);
Parameter(callWithDomain,org.mozilla.javascript.Scriptable,);
Parameter(callWithDomain,org.mozilla.javascript.Scriptable,);
Parameter(callWithDomain,java.lang.Object[],);
Parameter(execWithDomain,org.mozilla.javascript.Context,);
Parameter(execWithDomain,org.mozilla.javascript.Scriptable,);
Parameter(execWithDomain,org.mozilla.javascript.Script,);
Parameter(execWithDomain,java.lang.Object,);
SubClass(org.mozilla.javascript.tools.shell.SecurityProxy);
Composition(org.mozilla.javascript.SecurityController);
Call(METHOD,org.mozilla.javascript.SecurityController,createLoader --> getDynamicSecurityDomain,org.mozilla.javascript.SecurityController,);
Call(METHOD,org.mozilla.javascript.SecurityController,createLoader --> createClassLoader,org.mozilla.javascript.SecurityController,);
Call(METHOD,org.mozilla.javascript.SecurityController,getStaticSecurityDomainClass --> getStaticSecurityDomainClassInternal,org.mozilla.javascript.SecurityController,);
Call(METHOD,org.mozilla.javascript.SecurityController,callWithDomain --> execWithDomain,org.mozilla.javascript.SecurityController,);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityController,global --> global,org.mozilla.javascript.SecurityController,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityController,hasGlobal --> global,org.mozilla.javascript.SecurityController,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityController,initGlobal --> global,org.mozilla.javascript.SecurityController,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityController,initGlobal --> global,org.mozilla.javascript.SecurityController,WRITE);
Call(METHOD,org.mozilla.javascript.SecurityController,createLoader --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.SecurityController,createLoader --> getApplicationClassLoader,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.SecurityController,createLoader --> getSecurityController,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.SecurityController,createLoader --> createClassLoader,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.SecurityController,getStaticSecurityDomainClass --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.SecurityController,getStaticSecurityDomainClass --> getSecurityController,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.SecurityController,callWithDomain --> <init>,org.mozilla.javascript.SecurityController$1,);
EndClass 22
StartClass 23
Class(org.mozilla.javascript.EvaluatorException,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getSourceName,java.lang.String,Public,N,N);
Method(getLineNumber,int,Public,N,N);
Method(getColumnNumber,int,Public,N,N);
Method(getLineSource,java.lang.String,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,int,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,int,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$3,int,);
SuperClass(org.mozilla.javascript.RhinoException);
SubClass(org.mozilla.javascript.WrappedException);
Generalization(org.mozilla.javascript.RhinoException);
Call(METHOD,org.mozilla.javascript.EvaluatorException,<init>$2 --> <init>$3,org.mozilla.javascript.EvaluatorException,);
Call(METHOD,org.mozilla.javascript.EvaluatorException,<init> --> <init>$2,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.EvaluatorException,<init>$3 --> <init>$2,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.EvaluatorException,<init>$3 --> recordErrorOrigin,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.EvaluatorException,getSourceName --> sourceName,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.EvaluatorException,getLineNumber --> lineNumber,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.EvaluatorException,getColumnNumber --> columnNumber,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.EvaluatorException,getLineSource --> lineSource,org.mozilla.javascript.RhinoException,);
EndClass 23
StartClass 24
Class(org.mozilla.javascript.tools.shell.QuitAction,Y,Y,Public);
Method(quit,void,Public,N,Y);
Parameter(quit,org.mozilla.javascript.Context,);
Parameter(quit,int,);
EndClass 24
StartClass 25
Class(org.mozilla.javascript.ErrorReporter,Y,Y,Public);
Method(warning,void,Public,N,Y);
Method(error,void,Public,N,Y);
Method(runtimeError,org.mozilla.javascript.EvaluatorException,Public,N,Y);
Parameter(warning,java.lang.String,);
Parameter(warning,java.lang.String,);
Parameter(warning,int,);
Parameter(warning,java.lang.String,);
Parameter(warning,int,);
Parameter(error,java.lang.String,);
Parameter(error,java.lang.String,);
Parameter(error,int,);
Parameter(error,java.lang.String,);
Parameter(error,int,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,int,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,int,);
EndClass 25
StartClass 26
Class(org.mozilla.javascript.ContextAction,Y,Y,Public);
Method(run,java.lang.Object,Public,N,Y);
Parameter(run,org.mozilla.javascript.Context,);
EndClass 26
StartClass 27
Class(org.mozilla.javascript.Kit$ComplexKey,N,N,NA);
Attribute(key1,java.lang.Object,Private,N,N,);
Attribute(key2,java.lang.Object,Private,N,N,);
Attribute(hash,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,java.lang.Object,);
Parameter(equals,java.lang.Object,);
Call(ATTRIBUTE,org.mozilla.javascript.Kit$ComplexKey,<init> --> key1,org.mozilla.javascript.Kit$ComplexKey,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Kit$ComplexKey,<init> --> key2,org.mozilla.javascript.Kit$ComplexKey,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Kit$ComplexKey,equals --> key1,org.mozilla.javascript.Kit$ComplexKey,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Kit$ComplexKey,equals --> key2,org.mozilla.javascript.Kit$ComplexKey,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Kit$ComplexKey,hashCode --> hash,org.mozilla.javascript.Kit$ComplexKey,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Kit$ComplexKey,hashCode --> key1,org.mozilla.javascript.Kit$ComplexKey,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Kit$ComplexKey,hashCode --> key2,org.mozilla.javascript.Kit$ComplexKey,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Kit$ComplexKey,hashCode --> hash,org.mozilla.javascript.Kit$ComplexKey,WRITE);
EndClass 27
StartClass 28
Class(org.mozilla.javascript.ScriptRuntime,N,N,Public);
Attribute(THROW_TYPE_ERROR,org.mozilla.javascript.BaseFunction,Private,Y,N,);
Attribute(BooleanClass,java.lang.Class,Public,Y,Y,);
Attribute(ByteClass,java.lang.Class,Public,Y,Y,);
Attribute(CharacterClass,java.lang.Class,Public,Y,Y,);
Attribute(ClassClass,java.lang.Class,Public,Y,Y,);
Attribute(DoubleClass,java.lang.Class,Public,Y,Y,);
Attribute(FloatClass,java.lang.Class,Public,Y,Y,);
Attribute(IntegerClass,java.lang.Class,Public,Y,Y,);
Attribute(LongClass,java.lang.Class,Public,Y,Y,);
Attribute(NumberClass,java.lang.Class,Public,Y,Y,);
Attribute(ObjectClass,java.lang.Class,Public,Y,Y,);
Attribute(ShortClass,java.lang.Class,Public,Y,Y,);
Attribute(StringClass,java.lang.Class,Public,Y,Y,);
Attribute(DateClass,java.lang.Class,Public,Y,Y,);
Attribute(ContextClass,java.lang.Class,Public,Y,Y,);
Attribute(ContextFactoryClass,java.lang.Class,Public,Y,Y,);
Attribute(FunctionClass,java.lang.Class,Public,Y,Y,);
Attribute(ScriptableObjectClass,java.lang.Class,Public,Y,Y,);
Attribute(ScriptableClass,java.lang.Class,Public,Y,Y,org.mozilla.javascript.Scriptable);
Attribute(ROOT_LOCALE,java.util.Locale,Public,Y,N,);
Attribute(LIBRARY_SCOPE_KEY,java.lang.Object,Private,Y,Y,);
Attribute(NaN,double,Public,Y,Y,);
Attribute(negativeZero,double,Public,Y,Y,);
Attribute(NaNobj,java.lang.Double,Public,Y,Y,);
Attribute(DEFAULT_NS_TAG,java.lang.String,Private,Y,Y,);
Attribute(ENUMERATE_KEYS,int,Public,Y,Y,);
Attribute(ENUMERATE_VALUES,int,Public,Y,Y,);
Attribute(ENUMERATE_ARRAY,int,Public,Y,Y,);
Attribute(ENUMERATE_KEYS_NO_ITERATOR,int,Public,Y,Y,);
Attribute(ENUMERATE_VALUES_NO_ITERATOR,int,Public,Y,Y,);
Attribute(ENUMERATE_ARRAY_NO_ITERATOR,int,Public,Y,Y,);
Attribute(messageProvider,org.mozilla.javascript.ScriptRuntime$MessageProvider,Public,Y,N,);
Attribute(emptyArgs,java.lang.Object[],Public,Y,Y,);
Attribute(emptyStrings,java.lang.String[],Public,Y,Y,);
Method(<init>,void,Protected,N,N);
Method(typeErrorThrower,org.mozilla.javascript.BaseFunction,Public,Y,N);
Method(isRhinoRuntimeType,boolean,Public,Y,N);
Method(initStandardObjects,org.mozilla.javascript.ScriptableObject,Public,Y,N);
Method(getTopPackageNames,java.lang.String[],Public,Y,N);
Method(getLibraryScopeOrNull,org.mozilla.javascript.ScriptableObject,Public,Y,N);
Method(isJSLineTerminator,boolean,Public,Y,N);
Method(isJSWhitespaceOrLineTerminator,boolean,Public,Y,N);
Method(isStrWhiteSpaceChar,boolean,Public,Y,N);
Method(wrapBoolean,java.lang.Boolean,Public,Y,N);
Method(wrapInt,java.lang.Integer,Public,Y,N);
Method(wrapNumber,java.lang.Number,Public,Y,N);
Method(toBoolean,boolean,Public,Y,N);
Method(toNumber,double,Public,Y,N);
Method(toNumber$2,double,Public,Y,N);
Method(stringToNumber,double,Public,Y,N);
Method(toNumber$3,double,Public,Y,N);
Method(padArguments,java.lang.Object[],Public,Y,N);
Method(escapeString,java.lang.String,Public,Y,N);
Method(escapeString$2,java.lang.String,Public,Y,N);
Method(isValidIdentifierName,boolean,Public,Y,N);
Method(toCharSequence,java.lang.CharSequence,Public,Y,N);
Method(toString,java.lang.String,Public,Y,N);
Method(defaultObjectToString,java.lang.String,Public,Y,N);
Method(toString$2,java.lang.String,Public,Y,N);
Method(toString$3,java.lang.String,Public,Y,N);
Method(numberToString,java.lang.String,Public,Y,N);
Method(uneval,java.lang.String,Public,Y,N);
Method(defaultObjectToSource,java.lang.String,Public,Y,N);
Method(toObject,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(toObjectOrNull,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(toObjectOrNull$2,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(toObject$2,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(toObject$3,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(toObject$4,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(call,java.lang.Object,Public,Y,N);
Method(newObject,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(newBuiltinObject,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(toInteger,double,Public,Y,N);
Method(toInteger$2,double,Public,Y,N);
Method(toInteger$3,double,Public,Y,N);
Method(toInt32,int,Public,Y,N);
Method(toInt32$2,int,Public,Y,N);
Method(toInt32$3,int,Public,Y,N);
Method(toUint32,long,Public,Y,N);
Method(toUint32$2,long,Public,Y,N);
Method(toUint16,char,Public,Y,N);
Method(setDefaultNamespace,java.lang.Object,Public,Y,N);
Method(searchDefaultNamespace,java.lang.Object,Public,Y,N);
Method(getTopLevelProp,java.lang.Object,Public,Y,N);
Method(getExistingCtor,org.mozilla.javascript.Function,Public,Y,N);
Method(indexFromString,long,Public,Y,N);
Method(testUint32String,long,Public,Y,N);
Method(getIndexObject,java.lang.Object,Public,Y,N);
Method(getIndexObject$2,java.lang.Object,Public,Y,N);
Method(toStringIdOrIndex,java.lang.String,Public,Y,N);
Method(getObjectElem,java.lang.Object,Public,Y,N);
Method(getObjectElem$2,java.lang.Object,Public,Y,N);
Method(getObjectElem$3,java.lang.Object,Public,Y,N);
Method(getObjectProp,java.lang.Object,Public,Y,N);
Method(getObjectProp$2,java.lang.Object,Public,Y,N);
Method(getObjectProp$3,java.lang.Object,Public,Y,N);
Method(getObjectPropNoWarn,java.lang.Object,Public,Y,N);
Method(getObjectIndex,java.lang.Object,Public,Y,N);
Method(getObjectIndex$2,java.lang.Object,Public,Y,N);
Method(setObjectElem,java.lang.Object,Public,Y,N);
Method(setObjectElem$2,java.lang.Object,Public,Y,N);
Method(setObjectProp,java.lang.Object,Public,Y,N);
Method(setObjectProp$2,java.lang.Object,Public,Y,N);
Method(setObjectIndex,java.lang.Object,Public,Y,N);
Method(setObjectIndex$2,java.lang.Object,Public,Y,N);
Method(deleteObjectElem,boolean,Public,Y,N);
Method(hasObjectElem,boolean,Public,Y,N);
Method(refGet,java.lang.Object,Public,Y,N);
Method(refSet,java.lang.Object,Public,Y,N);
Method(refDel,java.lang.Object,Public,Y,N);
Method(isSpecialProperty,boolean,Public,Y,N);
Method(specialRef,org.mozilla.javascript.Ref,Public,Y,N);
Method(delete,java.lang.Object,Public,Y,N);
Method(delete$2,java.lang.Object,Public,Y,N);
Method(name,java.lang.Object,Public,Y,N);
Method(nameOrFunction,java.lang.Object,Private,Y,N);
Method(topScopeName,java.lang.Object,Private,Y,N);
Method(bind,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(setName,java.lang.Object,Public,Y,N);
Method(strictSetName,java.lang.Object,Public,Y,N);
Method(setConst,java.lang.Object,Public,Y,N);
Method(toIterator,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(enumInit,java.lang.Object,Public,Y,N);
Method(enumInit$2,java.lang.Object,Public,Y,N);
Method(setEnumNumbers,void,Public,Y,N);
Method(enumNext,java.lang.Boolean,Public,Y,N);
Method(enumId,java.lang.Object,Public,Y,N);
Method(enumValue,java.lang.Object,Public,Y,N);
Method(enumChangeObject,void,Private,Y,N);
Method(getNameFunctionAndThis,org.mozilla.javascript.Callable,Public,Y,N);
Method(getElemFunctionAndThis,org.mozilla.javascript.Callable,Public,Y,N);
Method(getPropFunctionAndThis,org.mozilla.javascript.Callable,Public,Y,N);
Method(getPropFunctionAndThis$2,org.mozilla.javascript.Callable,Public,Y,N);
Method(getPropFunctionAndThisHelper,org.mozilla.javascript.Callable,Private,Y,N);
Method(getValueFunctionAndThis,org.mozilla.javascript.Callable,Public,Y,N);
Method(callRef,org.mozilla.javascript.Ref,Public,Y,N);
Method(newObject$2,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(callSpecial,java.lang.Object,Public,Y,N);
Method(newSpecial,java.lang.Object,Public,Y,N);
Method(applyOrCall,java.lang.Object,Public,Y,N);
Method(getApplyArguments,java.lang.Object[],Public,Y,N);
Method(getCallable,org.mozilla.javascript.Callable,Public,Y,N);
Method(evalSpecial,java.lang.Object,Public,Y,N);
Method(typeof,java.lang.String,Public,Y,N);
Method(typeofName,java.lang.String,Public,Y,N);
Method(add,java.lang.Object,Public,Y,N);
Method(add$2,java.lang.CharSequence,Public,Y,N);
Method(add$3,java.lang.CharSequence,Public,Y,N);
Method(nameIncrDecr,java.lang.Object,Public,Y,N);
Method(nameIncrDecr$2,java.lang.Object,Public,Y,N);
Method(propIncrDecr,java.lang.Object,Public,Y,N);
Method(doScriptableIncrDecr,java.lang.Object,Private,Y,N);
Method(elemIncrDecr,java.lang.Object,Public,Y,N);
Method(refIncrDecr,java.lang.Object,Public,Y,N);
Method(toPrimitive,java.lang.Object,Public,Y,N);
Method(toPrimitive$2,java.lang.Object,Public,Y,N);
Method(eq,boolean,Public,Y,N);
Method(isPrimitive,boolean,Public,Y,N);
Method(eqNumber,boolean,Public,Y,N);
Method(eqString,boolean,Private,Y,N);
Method(shallowEq,boolean,Public,Y,N);
Method(instanceOf,boolean,Public,Y,N);
Method(jsDelegatesTo,boolean,Public,Y,N);
Method(in,boolean,Public,Y,N);
Method(cmp_LT,boolean,Public,Y,N);
Method(cmp_LE,boolean,Public,Y,N);
Method(getGlobal,org.mozilla.javascript.ScriptableObject,Public,Y,N);
Method(hasTopCall,boolean,Public,Y,N);
Method(getTopCallScope,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(doTopCall,java.lang.Object,Public,Y,N);
Method(checkDynamicScope,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(addInstructionCount,void,Public,Y,N);
Method(initScript,void,Public,Y,N);
Method(createFunctionActivation,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(enterActivationFunction,void,Public,Y,N);
Method(exitActivationFunction,void,Public,Y,N);
Method(findFunctionActivation,org.mozilla.javascript.NativeCall,Public,Y,N);
Method(newCatchScope,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(wrapException,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(isVisible,boolean,Private,Y,N);
Method(enterWith,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(leaveWith,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(enterDotQuery,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(updateDotQuery,java.lang.Object,Public,Y,N);
Method(leaveDotQuery,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(setFunctionProtoAndParent,void,Public,Y,N);
Method(setObjectProtoAndParent,void,Public,Y,N);
Method(setBuiltinProtoAndParent,void,Public,Y,N);
Method(initFunction,void,Public,Y,N);
Method(newArrayLiteral,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(newObjectLiteral,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(newObjectLiteral$2,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(isArrayObject,boolean,Public,Y,N);
Method(getArrayElements,java.lang.Object[],Public,Y,N);
Method(checkDeprecated,void,Public,Y,N);
Method(getMessage0,java.lang.String,Public,Y,N);
Method(getMessage1,java.lang.String,Public,Y,N);
Method(getMessage2,java.lang.String,Public,Y,N);
Method(getMessage3,java.lang.String,Public,Y,N);
Method(getMessage4,java.lang.String,Public,Y,N);
Method(getMessage,java.lang.String,Public,Y,N);
Method(constructError,org.mozilla.javascript.EcmaError,Public,Y,N);
Method(constructError$2,org.mozilla.javascript.EcmaError,Public,Y,N);
Method(constructError$3,org.mozilla.javascript.EcmaError,Public,Y,N);
Method(typeError,org.mozilla.javascript.EcmaError,Public,Y,N);
Method(typeError0,org.mozilla.javascript.EcmaError,Public,Y,N);
Method(typeError1,org.mozilla.javascript.EcmaError,Public,Y,N);
Method(typeError2,org.mozilla.javascript.EcmaError,Public,Y,N);
Method(typeError3,org.mozilla.javascript.EcmaError,Public,Y,N);
Method(undefReadError,java.lang.RuntimeException,Public,Y,N);
Method(undefCallError,java.lang.RuntimeException,Public,Y,N);
Method(undefWriteError,java.lang.RuntimeException,Public,Y,N);
Method(undefDeleteError,java.lang.RuntimeException,Private,Y,N);
Method(notFoundError,java.lang.RuntimeException,Public,Y,N);
Method(notFunctionError,java.lang.RuntimeException,Public,Y,N);
Method(notFunctionError$2,java.lang.RuntimeException,Public,Y,N);
Method(notFunctionError$3,java.lang.RuntimeException,Public,Y,N);
Method(notXmlError,java.lang.RuntimeException,Private,Y,N);
Method(warnAboutNonJSObject,void,Private,Y,N);
Method(getRegExpProxy,org.mozilla.javascript.RegExpProxy,Public,Y,N);
Method(setRegExpProxy,void,Public,Y,N);
Method(checkRegExpProxy,org.mozilla.javascript.RegExpProxy,Public,Y,N);
Method(wrapRegExp,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(currentXMLLib,org.mozilla.javascript.xml.XMLLib,Private,Y,N);
Method(escapeAttributeValue,java.lang.String,Public,Y,N);
Method(escapeTextValue,java.lang.String,Public,Y,N);
Method(memberRef,org.mozilla.javascript.Ref,Public,Y,N);
Method(memberRef$2,org.mozilla.javascript.Ref,Public,Y,N);
Method(nameRef,org.mozilla.javascript.Ref,Public,Y,N);
Method(nameRef$2,org.mozilla.javascript.Ref,Public,Y,N);
Method(storeIndexResult,void,Private,Y,N);
Method(lastIndexResult,int,Public,Y,N);
Method(storeUint32Result,void,Public,Y,N);
Method(lastUint32Result,long,Public,Y,N);
Method(storeScriptable,void,Private,Y,N);
Method(lastStoredScriptable,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(makeUrlForGeneratedScript,java.lang.String,Public,Y,N);
Method(isGeneratedScript,boolean,Public,Y,N);
Method(errorWithClassName,java.lang.RuntimeException,Private,Y,N);
Method(throwError,org.mozilla.javascript.JavaScriptException,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(isRhinoRuntimeType,java.lang.Class,);
Parameter(initStandardObjects,org.mozilla.javascript.Context,);
Parameter(initStandardObjects,org.mozilla.javascript.ScriptableObject,);
Parameter(initStandardObjects,boolean,);
Parameter(getLibraryScopeOrNull,org.mozilla.javascript.Scriptable,);
Parameter(isJSLineTerminator,int,);
Parameter(isJSWhitespaceOrLineTerminator,int,);
Parameter(isStrWhiteSpaceChar,int,);
Parameter(wrapBoolean,boolean,);
Parameter(wrapInt,int,);
Parameter(wrapNumber,double,);
Parameter(toBoolean,java.lang.Object,);
Parameter(toNumber,java.lang.Object,);
Parameter(toNumber$2,java.lang.Object[],);
Parameter(toNumber$2,int,);
Parameter(stringToNumber,java.lang.String,);
Parameter(stringToNumber,int,);
Parameter(stringToNumber,int,);
Parameter(toNumber$3,java.lang.String,);
Parameter(padArguments,java.lang.Object[],);
Parameter(padArguments,int,);
Parameter(escapeString,java.lang.String,);
Parameter(escapeString$2,java.lang.String,);
Parameter(escapeString$2,char,);
Parameter(isValidIdentifierName,java.lang.String,);
Parameter(toCharSequence,java.lang.Object,);
Parameter(toString,java.lang.Object,);
Parameter(defaultObjectToString,org.mozilla.javascript.Scriptable,);
Parameter(toString$2,java.lang.Object[],);
Parameter(toString$2,int,);
Parameter(toString$3,double,);
Parameter(numberToString,double,);
Parameter(numberToString,int,);
Parameter(uneval,org.mozilla.javascript.Context,);
Parameter(uneval,org.mozilla.javascript.Scriptable,);
Parameter(uneval,java.lang.Object,);
Parameter(defaultObjectToSource,org.mozilla.javascript.Context,);
Parameter(defaultObjectToSource,org.mozilla.javascript.Scriptable,);
Parameter(defaultObjectToSource,org.mozilla.javascript.Scriptable,);
Parameter(defaultObjectToSource,java.lang.Object[],);
Parameter(toObject,org.mozilla.javascript.Scriptable,);
Parameter(toObject,java.lang.Object,);
Parameter(toObjectOrNull,org.mozilla.javascript.Context,);
Parameter(toObjectOrNull,java.lang.Object,);
Parameter(toObjectOrNull$2,org.mozilla.javascript.Context,);
Parameter(toObjectOrNull$2,java.lang.Object,);
Parameter(toObjectOrNull$2,org.mozilla.javascript.Scriptable,);
Parameter(toObject$2,org.mozilla.javascript.Scriptable,);
Parameter(toObject$2,java.lang.Object,);
Parameter(toObject$2,java.lang.Class,);
Parameter(toObject$3,org.mozilla.javascript.Context,);
Parameter(toObject$3,org.mozilla.javascript.Scriptable,);
Parameter(toObject$3,java.lang.Object,);
Parameter(toObject$4,org.mozilla.javascript.Context,);
Parameter(toObject$4,org.mozilla.javascript.Scriptable,);
Parameter(toObject$4,java.lang.Object,);
Parameter(toObject$4,java.lang.Class,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,java.lang.Object,);
Parameter(call,java.lang.Object,);
Parameter(call,java.lang.Object[],);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(newObject,org.mozilla.javascript.Context,);
Parameter(newObject,org.mozilla.javascript.Scriptable,);
Parameter(newObject,java.lang.String,);
Parameter(newObject,java.lang.Object[],);
Parameter(newBuiltinObject,org.mozilla.javascript.Context,);
Parameter(newBuiltinObject,org.mozilla.javascript.Scriptable,);
Parameter(newBuiltinObject,org.mozilla.javascript.TopLevel$Builtins,);
Parameter(newBuiltinObject,java.lang.Object[],);
Parameter(toInteger,java.lang.Object,);
Parameter(toInteger$2,double,);
Parameter(toInteger$3,java.lang.Object[],);
Parameter(toInteger$3,int,);
Parameter(toInt32,java.lang.Object,);
Parameter(toInt32$2,java.lang.Object[],);
Parameter(toInt32$2,int,);
Parameter(toInt32$3,double,);
Parameter(toUint32,double,);
Parameter(toUint32$2,java.lang.Object,);
Parameter(toUint16,java.lang.Object,);
Parameter(setDefaultNamespace,java.lang.Object,);
Parameter(setDefaultNamespace,org.mozilla.javascript.Context,);
Parameter(searchDefaultNamespace,org.mozilla.javascript.Context,);
Parameter(getTopLevelProp,org.mozilla.javascript.Scriptable,);
Parameter(getTopLevelProp,java.lang.String,);
Parameter(getExistingCtor,org.mozilla.javascript.Context,);
Parameter(getExistingCtor,org.mozilla.javascript.Scriptable,);
Parameter(getExistingCtor,java.lang.String,);
Parameter(indexFromString,java.lang.String,);
Parameter(testUint32String,java.lang.String,);
Parameter(getIndexObject,java.lang.String,);
Parameter(getIndexObject$2,double,);
Parameter(toStringIdOrIndex,org.mozilla.javascript.Context,);
Parameter(toStringIdOrIndex,java.lang.Object,);
Parameter(getObjectElem,java.lang.Object,);
Parameter(getObjectElem,java.lang.Object,);
Parameter(getObjectElem,org.mozilla.javascript.Context,);
Parameter(getObjectElem$2,java.lang.Object,);
Parameter(getObjectElem$2,java.lang.Object,);
Parameter(getObjectElem$2,org.mozilla.javascript.Context,);
Parameter(getObjectElem$2,org.mozilla.javascript.Scriptable,);
Parameter(getObjectElem$3,org.mozilla.javascript.Scriptable,);
Parameter(getObjectElem$3,java.lang.Object,);
Parameter(getObjectElem$3,org.mozilla.javascript.Context,);
Parameter(getObjectProp,java.lang.Object,);
Parameter(getObjectProp,java.lang.String,);
Parameter(getObjectProp,org.mozilla.javascript.Context,);
Parameter(getObjectProp$2,java.lang.Object,);
Parameter(getObjectProp$2,java.lang.String,);
Parameter(getObjectProp$2,org.mozilla.javascript.Context,);
Parameter(getObjectProp$2,org.mozilla.javascript.Scriptable,);
Parameter(getObjectProp$3,org.mozilla.javascript.Scriptable,);
Parameter(getObjectProp$3,java.lang.String,);
Parameter(getObjectProp$3,org.mozilla.javascript.Context,);
Parameter(getObjectPropNoWarn,java.lang.Object,);
Parameter(getObjectPropNoWarn,java.lang.String,);
Parameter(getObjectPropNoWarn,org.mozilla.javascript.Context,);
Parameter(getObjectIndex,java.lang.Object,);
Parameter(getObjectIndex,double,);
Parameter(getObjectIndex,org.mozilla.javascript.Context,);
Parameter(getObjectIndex$2,org.mozilla.javascript.Scriptable,);
Parameter(getObjectIndex$2,int,);
Parameter(getObjectIndex$2,org.mozilla.javascript.Context,);
Parameter(setObjectElem,java.lang.Object,);
Parameter(setObjectElem,java.lang.Object,);
Parameter(setObjectElem,java.lang.Object,);
Parameter(setObjectElem,org.mozilla.javascript.Context,);
Parameter(setObjectElem$2,org.mozilla.javascript.Scriptable,);
Parameter(setObjectElem$2,java.lang.Object,);
Parameter(setObjectElem$2,java.lang.Object,);
Parameter(setObjectElem$2,org.mozilla.javascript.Context,);
Parameter(setObjectProp,java.lang.Object,);
Parameter(setObjectProp,java.lang.String,);
Parameter(setObjectProp,java.lang.Object,);
Parameter(setObjectProp,org.mozilla.javascript.Context,);
Parameter(setObjectProp$2,org.mozilla.javascript.Scriptable,);
Parameter(setObjectProp$2,java.lang.String,);
Parameter(setObjectProp$2,java.lang.Object,);
Parameter(setObjectProp$2,org.mozilla.javascript.Context,);
Parameter(setObjectIndex,java.lang.Object,);
Parameter(setObjectIndex,double,);
Parameter(setObjectIndex,java.lang.Object,);
Parameter(setObjectIndex,org.mozilla.javascript.Context,);
Parameter(setObjectIndex$2,org.mozilla.javascript.Scriptable,);
Parameter(setObjectIndex$2,int,);
Parameter(setObjectIndex$2,java.lang.Object,);
Parameter(setObjectIndex$2,org.mozilla.javascript.Context,);
Parameter(deleteObjectElem,org.mozilla.javascript.Scriptable,);
Parameter(deleteObjectElem,java.lang.Object,);
Parameter(deleteObjectElem,org.mozilla.javascript.Context,);
Parameter(hasObjectElem,org.mozilla.javascript.Scriptable,);
Parameter(hasObjectElem,java.lang.Object,);
Parameter(hasObjectElem,org.mozilla.javascript.Context,);
Parameter(refGet,org.mozilla.javascript.Ref,);
Parameter(refGet,org.mozilla.javascript.Context,);
Parameter(refSet,org.mozilla.javascript.Ref,);
Parameter(refSet,java.lang.Object,);
Parameter(refSet,org.mozilla.javascript.Context,);
Parameter(refDel,org.mozilla.javascript.Ref,);
Parameter(refDel,org.mozilla.javascript.Context,);
Parameter(isSpecialProperty,java.lang.String,);
Parameter(specialRef,java.lang.Object,);
Parameter(specialRef,java.lang.String,);
Parameter(specialRef,org.mozilla.javascript.Context,);
Parameter(delete,java.lang.Object,);
Parameter(delete,java.lang.Object,);
Parameter(delete,org.mozilla.javascript.Context,);
Parameter(delete$2,java.lang.Object,);
Parameter(delete$2,java.lang.Object,);
Parameter(delete$2,org.mozilla.javascript.Context,);
Parameter(delete$2,boolean,);
Parameter(name,org.mozilla.javascript.Context,);
Parameter(name,org.mozilla.javascript.Scriptable,);
Parameter(name,java.lang.String,);
Parameter(nameOrFunction,org.mozilla.javascript.Context,);
Parameter(nameOrFunction,org.mozilla.javascript.Scriptable,);
Parameter(nameOrFunction,org.mozilla.javascript.Scriptable,);
Parameter(nameOrFunction,java.lang.String,);
Parameter(nameOrFunction,boolean,);
Parameter(topScopeName,org.mozilla.javascript.Context,);
Parameter(topScopeName,org.mozilla.javascript.Scriptable,);
Parameter(topScopeName,java.lang.String,);
Parameter(bind,org.mozilla.javascript.Context,);
Parameter(bind,org.mozilla.javascript.Scriptable,);
Parameter(bind,java.lang.String,);
Parameter(setName,org.mozilla.javascript.Scriptable,);
Parameter(setName,java.lang.Object,);
Parameter(setName,org.mozilla.javascript.Context,);
Parameter(setName,org.mozilla.javascript.Scriptable,);
Parameter(setName,java.lang.String,);
Parameter(strictSetName,org.mozilla.javascript.Scriptable,);
Parameter(strictSetName,java.lang.Object,);
Parameter(strictSetName,org.mozilla.javascript.Context,);
Parameter(strictSetName,org.mozilla.javascript.Scriptable,);
Parameter(strictSetName,java.lang.String,);
Parameter(setConst,org.mozilla.javascript.Scriptable,);
Parameter(setConst,java.lang.Object,);
Parameter(setConst,org.mozilla.javascript.Context,);
Parameter(setConst,java.lang.String,);
Parameter(toIterator,org.mozilla.javascript.Context,);
Parameter(toIterator,org.mozilla.javascript.Scriptable,);
Parameter(toIterator,org.mozilla.javascript.Scriptable,);
Parameter(toIterator,boolean,);
Parameter(enumInit,java.lang.Object,);
Parameter(enumInit,org.mozilla.javascript.Context,);
Parameter(enumInit,boolean,);
Parameter(enumInit$2,java.lang.Object,);
Parameter(enumInit$2,org.mozilla.javascript.Context,);
Parameter(enumInit$2,int,);
Parameter(setEnumNumbers,java.lang.Object,);
Parameter(setEnumNumbers,boolean,);
Parameter(enumNext,java.lang.Object,);
Parameter(enumId,java.lang.Object,);
Parameter(enumId,org.mozilla.javascript.Context,);
Parameter(enumValue,java.lang.Object,);
Parameter(enumValue,org.mozilla.javascript.Context,);
Parameter(enumChangeObject,org.mozilla.javascript.ScriptRuntime$IdEnumeration,);
Parameter(getNameFunctionAndThis,java.lang.String,);
Parameter(getNameFunctionAndThis,org.mozilla.javascript.Context,);
Parameter(getNameFunctionAndThis,org.mozilla.javascript.Scriptable,);
Parameter(getElemFunctionAndThis,java.lang.Object,);
Parameter(getElemFunctionAndThis,java.lang.Object,);
Parameter(getElemFunctionAndThis,org.mozilla.javascript.Context,);
Parameter(getPropFunctionAndThis,java.lang.Object,);
Parameter(getPropFunctionAndThis,java.lang.String,);
Parameter(getPropFunctionAndThis,org.mozilla.javascript.Context,);
Parameter(getPropFunctionAndThis$2,java.lang.Object,);
Parameter(getPropFunctionAndThis$2,java.lang.String,);
Parameter(getPropFunctionAndThis$2,org.mozilla.javascript.Context,);
Parameter(getPropFunctionAndThis$2,org.mozilla.javascript.Scriptable,);
Parameter(getPropFunctionAndThisHelper,java.lang.Object,);
Parameter(getPropFunctionAndThisHelper,java.lang.String,);
Parameter(getPropFunctionAndThisHelper,org.mozilla.javascript.Context,);
Parameter(getPropFunctionAndThisHelper,org.mozilla.javascript.Scriptable,);
Parameter(getValueFunctionAndThis,java.lang.Object,);
Parameter(getValueFunctionAndThis,org.mozilla.javascript.Context,);
Parameter(callRef,org.mozilla.javascript.Callable,);
Parameter(callRef,org.mozilla.javascript.Scriptable,);
Parameter(callRef,java.lang.Object[],);
Parameter(callRef,org.mozilla.javascript.Context,);
Parameter(newObject$2,java.lang.Object,);
Parameter(newObject$2,org.mozilla.javascript.Context,);
Parameter(newObject$2,org.mozilla.javascript.Scriptable,);
Parameter(newObject$2,java.lang.Object[],);
Parameter(callSpecial,org.mozilla.javascript.Context,);
Parameter(callSpecial,org.mozilla.javascript.Callable,);
Parameter(callSpecial,org.mozilla.javascript.Scriptable,);
Parameter(callSpecial,java.lang.Object[],);
Parameter(callSpecial,org.mozilla.javascript.Scriptable,);
Parameter(callSpecial,org.mozilla.javascript.Scriptable,);
Parameter(callSpecial,int,);
Parameter(callSpecial,java.lang.String,);
Parameter(callSpecial,int,);
Parameter(newSpecial,org.mozilla.javascript.Context,);
Parameter(newSpecial,java.lang.Object,);
Parameter(newSpecial,java.lang.Object[],);
Parameter(newSpecial,org.mozilla.javascript.Scriptable,);
Parameter(newSpecial,int,);
Parameter(applyOrCall,boolean,);
Parameter(applyOrCall,org.mozilla.javascript.Context,);
Parameter(applyOrCall,org.mozilla.javascript.Scriptable,);
Parameter(applyOrCall,org.mozilla.javascript.Scriptable,);
Parameter(applyOrCall,java.lang.Object[],);
Parameter(getApplyArguments,org.mozilla.javascript.Context,);
Parameter(getApplyArguments,java.lang.Object,);
Parameter(getCallable,org.mozilla.javascript.Scriptable,);
Parameter(evalSpecial,org.mozilla.javascript.Context,);
Parameter(evalSpecial,org.mozilla.javascript.Scriptable,);
Parameter(evalSpecial,java.lang.Object,);
Parameter(evalSpecial,java.lang.Object[],);
Parameter(evalSpecial,java.lang.String,);
Parameter(evalSpecial,int,);
Parameter(typeof,java.lang.Object,);
Parameter(typeofName,org.mozilla.javascript.Scriptable,);
Parameter(typeofName,java.lang.String,);
Parameter(add,java.lang.Object,);
Parameter(add,java.lang.Object,);
Parameter(add,org.mozilla.javascript.Context,);
Parameter(add$2,java.lang.CharSequence,);
Parameter(add$2,java.lang.Object,);
Parameter(add$3,java.lang.Object,);
Parameter(add$3,java.lang.CharSequence,);
Parameter(nameIncrDecr,org.mozilla.javascript.Scriptable,);
Parameter(nameIncrDecr,java.lang.String,);
Parameter(nameIncrDecr,int,);
Parameter(nameIncrDecr$2,org.mozilla.javascript.Scriptable,);
Parameter(nameIncrDecr$2,java.lang.String,);
Parameter(nameIncrDecr$2,org.mozilla.javascript.Context,);
Parameter(nameIncrDecr$2,int,);
Parameter(propIncrDecr,java.lang.Object,);
Parameter(propIncrDecr,java.lang.String,);
Parameter(propIncrDecr,org.mozilla.javascript.Context,);
Parameter(propIncrDecr,int,);
Parameter(doScriptableIncrDecr,org.mozilla.javascript.Scriptable,);
Parameter(doScriptableIncrDecr,java.lang.String,);
Parameter(doScriptableIncrDecr,org.mozilla.javascript.Scriptable,);
Parameter(doScriptableIncrDecr,java.lang.Object,);
Parameter(doScriptableIncrDecr,int,);
Parameter(elemIncrDecr,java.lang.Object,);
Parameter(elemIncrDecr,java.lang.Object,);
Parameter(elemIncrDecr,org.mozilla.javascript.Context,);
Parameter(elemIncrDecr,int,);
Parameter(refIncrDecr,org.mozilla.javascript.Ref,);
Parameter(refIncrDecr,org.mozilla.javascript.Context,);
Parameter(refIncrDecr,int,);
Parameter(toPrimitive,java.lang.Object,);
Parameter(toPrimitive$2,java.lang.Object,);
Parameter(toPrimitive$2,java.lang.Class,);
Parameter(eq,java.lang.Object,);
Parameter(eq,java.lang.Object,);
Parameter(isPrimitive,java.lang.Object,);
Parameter(eqNumber,double,);
Parameter(eqNumber,java.lang.Object,);
Parameter(eqString,java.lang.CharSequence,);
Parameter(eqString,java.lang.Object,);
Parameter(shallowEq,java.lang.Object,);
Parameter(shallowEq,java.lang.Object,);
Parameter(instanceOf,java.lang.Object,);
Parameter(instanceOf,java.lang.Object,);
Parameter(instanceOf,org.mozilla.javascript.Context,);
Parameter(jsDelegatesTo,org.mozilla.javascript.Scriptable,);
Parameter(jsDelegatesTo,org.mozilla.javascript.Scriptable,);
Parameter(in,java.lang.Object,);
Parameter(in,java.lang.Object,);
Parameter(in,org.mozilla.javascript.Context,);
Parameter(cmp_LT,java.lang.Object,);
Parameter(cmp_LT,java.lang.Object,);
Parameter(cmp_LE,java.lang.Object,);
Parameter(cmp_LE,java.lang.Object,);
Parameter(getGlobal,org.mozilla.javascript.Context,);
Parameter(hasTopCall,org.mozilla.javascript.Context,);
Parameter(getTopCallScope,org.mozilla.javascript.Context,);
Parameter(doTopCall,org.mozilla.javascript.Callable,);
Parameter(doTopCall,org.mozilla.javascript.Context,);
Parameter(doTopCall,org.mozilla.javascript.Scriptable,);
Parameter(doTopCall,org.mozilla.javascript.Scriptable,);
Parameter(doTopCall,java.lang.Object[],);
Parameter(checkDynamicScope,org.mozilla.javascript.Scriptable,);
Parameter(checkDynamicScope,org.mozilla.javascript.Scriptable,);
Parameter(addInstructionCount,org.mozilla.javascript.Context,);
Parameter(addInstructionCount,int,);
Parameter(initScript,org.mozilla.javascript.NativeFunction,);
Parameter(initScript,org.mozilla.javascript.Scriptable,);
Parameter(initScript,org.mozilla.javascript.Context,);
Parameter(initScript,org.mozilla.javascript.Scriptable,);
Parameter(initScript,boolean,);
Parameter(createFunctionActivation,org.mozilla.javascript.NativeFunction,);
Parameter(createFunctionActivation,org.mozilla.javascript.Scriptable,);
Parameter(createFunctionActivation,java.lang.Object[],);
Parameter(enterActivationFunction,org.mozilla.javascript.Context,);
Parameter(enterActivationFunction,org.mozilla.javascript.Scriptable,);
Parameter(exitActivationFunction,org.mozilla.javascript.Context,);
Parameter(findFunctionActivation,org.mozilla.javascript.Context,);
Parameter(findFunctionActivation,org.mozilla.javascript.Function,);
Parameter(newCatchScope,java.lang.Throwable,);
Parameter(newCatchScope,org.mozilla.javascript.Scriptable,);
Parameter(newCatchScope,java.lang.String,);
Parameter(newCatchScope,org.mozilla.javascript.Context,);
Parameter(newCatchScope,org.mozilla.javascript.Scriptable,);
Parameter(wrapException,java.lang.Throwable,);
Parameter(wrapException,org.mozilla.javascript.Scriptable,);
Parameter(wrapException,org.mozilla.javascript.Context,);
Parameter(isVisible,org.mozilla.javascript.Context,);
Parameter(isVisible,java.lang.Object,);
Parameter(enterWith,java.lang.Object,);
Parameter(enterWith,org.mozilla.javascript.Context,);
Parameter(enterWith,org.mozilla.javascript.Scriptable,);
Parameter(leaveWith,org.mozilla.javascript.Scriptable,);
Parameter(enterDotQuery,java.lang.Object,);
Parameter(enterDotQuery,org.mozilla.javascript.Scriptable,);
Parameter(updateDotQuery,boolean,);
Parameter(updateDotQuery,org.mozilla.javascript.Scriptable,);
Parameter(leaveDotQuery,org.mozilla.javascript.Scriptable,);
Parameter(setFunctionProtoAndParent,org.mozilla.javascript.BaseFunction,);
Parameter(setFunctionProtoAndParent,org.mozilla.javascript.Scriptable,);
Parameter(setObjectProtoAndParent,org.mozilla.javascript.ScriptableObject,);
Parameter(setObjectProtoAndParent,org.mozilla.javascript.Scriptable,);
Parameter(setBuiltinProtoAndParent,org.mozilla.javascript.ScriptableObject,);
Parameter(setBuiltinProtoAndParent,org.mozilla.javascript.Scriptable,);
Parameter(setBuiltinProtoAndParent,org.mozilla.javascript.TopLevel$Builtins,);
Parameter(initFunction,org.mozilla.javascript.Context,);
Parameter(initFunction,org.mozilla.javascript.Scriptable,);
Parameter(initFunction,org.mozilla.javascript.NativeFunction,);
Parameter(initFunction,int,);
Parameter(initFunction,boolean,);
Parameter(newArrayLiteral,java.lang.Object[],);
Parameter(newArrayLiteral,int[],);
Parameter(newArrayLiteral,org.mozilla.javascript.Context,);
Parameter(newArrayLiteral,org.mozilla.javascript.Scriptable,);
Parameter(newObjectLiteral,java.lang.Object[],);
Parameter(newObjectLiteral,java.lang.Object[],);
Parameter(newObjectLiteral,org.mozilla.javascript.Context,);
Parameter(newObjectLiteral,org.mozilla.javascript.Scriptable,);
Parameter(newObjectLiteral$2,java.lang.Object[],);
Parameter(newObjectLiteral$2,java.lang.Object[],);
Parameter(newObjectLiteral$2,int[],);
Parameter(newObjectLiteral$2,org.mozilla.javascript.Context,);
Parameter(newObjectLiteral$2,org.mozilla.javascript.Scriptable,);
Parameter(isArrayObject,java.lang.Object,);
Parameter(getArrayElements,org.mozilla.javascript.Scriptable,);
Parameter(checkDeprecated,org.mozilla.javascript.Context,);
Parameter(checkDeprecated,java.lang.String,);
Parameter(getMessage0,java.lang.String,);
Parameter(getMessage1,java.lang.String,);
Parameter(getMessage1,java.lang.Object,);
Parameter(getMessage2,java.lang.String,);
Parameter(getMessage2,java.lang.Object,);
Parameter(getMessage2,java.lang.Object,);
Parameter(getMessage3,java.lang.String,);
Parameter(getMessage3,java.lang.Object,);
Parameter(getMessage3,java.lang.Object,);
Parameter(getMessage3,java.lang.Object,);
Parameter(getMessage4,java.lang.String,);
Parameter(getMessage4,java.lang.Object,);
Parameter(getMessage4,java.lang.Object,);
Parameter(getMessage4,java.lang.Object,);
Parameter(getMessage4,java.lang.Object,);
Parameter(getMessage,java.lang.String,);
Parameter(getMessage,java.lang.Object[],);
Parameter(constructError,java.lang.String,);
Parameter(constructError,java.lang.String,);
Parameter(constructError$2,java.lang.String,);
Parameter(constructError$2,java.lang.String,);
Parameter(constructError$2,int,);
Parameter(constructError$3,java.lang.String,);
Parameter(constructError$3,java.lang.String,);
Parameter(constructError$3,java.lang.String,);
Parameter(constructError$3,int,);
Parameter(constructError$3,java.lang.String,);
Parameter(constructError$3,int,);
Parameter(typeError,java.lang.String,);
Parameter(typeError0,java.lang.String,);
Parameter(typeError1,java.lang.String,);
Parameter(typeError1,java.lang.String,);
Parameter(typeError2,java.lang.String,);
Parameter(typeError2,java.lang.String,);
Parameter(typeError2,java.lang.String,);
Parameter(typeError3,java.lang.String,);
Parameter(typeError3,java.lang.String,);
Parameter(typeError3,java.lang.String,);
Parameter(typeError3,java.lang.String,);
Parameter(undefReadError,java.lang.Object,);
Parameter(undefReadError,java.lang.Object,);
Parameter(undefCallError,java.lang.Object,);
Parameter(undefCallError,java.lang.Object,);
Parameter(undefWriteError,java.lang.Object,);
Parameter(undefWriteError,java.lang.Object,);
Parameter(undefWriteError,java.lang.Object,);
Parameter(undefDeleteError,java.lang.Object,);
Parameter(undefDeleteError,java.lang.Object,);
Parameter(notFoundError,org.mozilla.javascript.Scriptable,);
Parameter(notFoundError,java.lang.String,);
Parameter(notFunctionError,java.lang.Object,);
Parameter(notFunctionError$2,java.lang.Object,);
Parameter(notFunctionError$2,java.lang.Object,);
Parameter(notFunctionError$3,java.lang.Object,);
Parameter(notFunctionError$3,java.lang.Object,);
Parameter(notFunctionError$3,java.lang.String,);
Parameter(notXmlError,java.lang.Object,);
Parameter(warnAboutNonJSObject,java.lang.Object,);
Parameter(getRegExpProxy,org.mozilla.javascript.Context,);
Parameter(setRegExpProxy,org.mozilla.javascript.Context,);
Parameter(setRegExpProxy,org.mozilla.javascript.RegExpProxy,);
Parameter(checkRegExpProxy,org.mozilla.javascript.Context,);
Parameter(wrapRegExp,org.mozilla.javascript.Context,);
Parameter(wrapRegExp,org.mozilla.javascript.Scriptable,);
Parameter(wrapRegExp,java.lang.Object,);
Parameter(currentXMLLib,org.mozilla.javascript.Context,);
Parameter(escapeAttributeValue,java.lang.Object,);
Parameter(escapeAttributeValue,org.mozilla.javascript.Context,);
Parameter(escapeTextValue,java.lang.Object,);
Parameter(escapeTextValue,org.mozilla.javascript.Context,);
Parameter(memberRef,java.lang.Object,);
Parameter(memberRef,java.lang.Object,);
Parameter(memberRef,org.mozilla.javascript.Context,);
Parameter(memberRef,int,);
Parameter(memberRef$2,java.lang.Object,);
Parameter(memberRef$2,java.lang.Object,);
Parameter(memberRef$2,java.lang.Object,);
Parameter(memberRef$2,org.mozilla.javascript.Context,);
Parameter(memberRef$2,int,);
Parameter(nameRef,java.lang.Object,);
Parameter(nameRef,org.mozilla.javascript.Context,);
Parameter(nameRef,org.mozilla.javascript.Scriptable,);
Parameter(nameRef,int,);
Parameter(nameRef$2,java.lang.Object,);
Parameter(nameRef$2,java.lang.Object,);
Parameter(nameRef$2,org.mozilla.javascript.Context,);
Parameter(nameRef$2,org.mozilla.javascript.Scriptable,);
Parameter(nameRef$2,int,);
Parameter(storeIndexResult,org.mozilla.javascript.Context,);
Parameter(storeIndexResult,int,);
Parameter(lastIndexResult,org.mozilla.javascript.Context,);
Parameter(storeUint32Result,org.mozilla.javascript.Context,);
Parameter(storeUint32Result,long,);
Parameter(lastUint32Result,org.mozilla.javascript.Context,);
Parameter(storeScriptable,org.mozilla.javascript.Context,);
Parameter(storeScriptable,org.mozilla.javascript.Scriptable,);
Parameter(lastStoredScriptable,org.mozilla.javascript.Context,);
Parameter(makeUrlForGeneratedScript,boolean,);
Parameter(makeUrlForGeneratedScript,java.lang.String,);
Parameter(makeUrlForGeneratedScript,int,);
Parameter(isGeneratedScript,java.lang.String,);
Parameter(errorWithClassName,java.lang.String,);
Parameter(errorWithClassName,java.lang.Object,);
Parameter(throwError,org.mozilla.javascript.Context,);
Parameter(throwError,org.mozilla.javascript.Scriptable,);
Parameter(throwError,java.lang.String,);
Composition(org.mozilla.javascript.BaseFunction);
Composition(org.mozilla.javascript.ScriptRuntime$MessageProvider);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> getTopPackageNames,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,isJSWhitespaceOrLineTerminator --> isStrWhiteSpaceChar,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,isJSWhitespaceOrLineTerminator --> isJSLineTerminator,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toBoolean --> errorWithClassName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toBoolean --> warnAboutNonJSObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toNumber --> toNumber$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toNumber --> errorWithClassName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toNumber --> warnAboutNonJSObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toNumber$2 --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toNumber$3 --> isStrWhiteSpaceChar,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toNumber$3 --> stringToNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,escapeString --> escapeString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toCharSequence --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toString --> numberToString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toString --> errorWithClassName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toString$2 --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toString$3 --> numberToString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,uneval --> escapeString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,uneval --> toString$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,uneval --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,uneval --> warnAboutNonJSObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> isValidIdentifierName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> escapeString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> uneval,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject --> toObject$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObjectOrNull --> getTopCallScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObjectOrNull --> toObject$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObjectOrNull$2 --> toObject$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject$2 --> toObject$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject$3 --> setBuiltinProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject$3 --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject$3 --> errorWithClassName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject$4 --> toObject$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,call --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,call --> notFunctionError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,call --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,call --> undefCallError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObject --> getExistingCtor,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toInteger --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toInteger --> toInteger$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toInteger$3 --> toInteger,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toInt32 --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toInt32 --> toInt32$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toInt32$2 --> toInt32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toUint32$2 --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toUint32$2 --> toUint32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toUint16 --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setDefaultNamespace --> getTopCallScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setDefaultNamespace --> currentXMLLib,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,searchDefaultNamespace --> getTopCallScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getIndexObject --> indexFromString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getIndexObject$2 --> toString$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toStringIdOrIndex --> storeIndexResult,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toStringIdOrIndex --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toStringIdOrIndex --> indexFromString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectElem --> getTopCallScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectElem --> getObjectElem$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectElem$2 --> toObjectOrNull$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectElem$2 --> undefReadError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectElem$2 --> getObjectElem$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectElem$3 --> toStringIdOrIndex,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectElem$3 --> lastIndexResult,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectProp --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectProp --> undefReadError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectProp --> getObjectProp$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectProp$2 --> toObjectOrNull$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectProp$2 --> undefReadError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectProp$2 --> getObjectProp$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectProp$3 --> getMessage1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectPropNoWarn --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectPropNoWarn --> undefReadError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectIndex --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectIndex --> toString$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectIndex --> undefReadError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectIndex --> getObjectIndex$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectIndex --> getObjectProp$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectElem --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectElem --> undefWriteError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectElem --> setObjectElem$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectElem$2 --> toStringIdOrIndex,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectElem$2 --> lastIndexResult,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectProp --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectProp --> undefWriteError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectProp --> setObjectProp$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectIndex --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectIndex --> undefWriteError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectIndex --> setObjectIndex$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectIndex --> toString$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectIndex --> setObjectProp$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,deleteObjectElem --> toStringIdOrIndex,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,deleteObjectElem --> lastIndexResult,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,hasObjectElem --> toStringIdOrIndex,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,hasObjectElem --> lastIndexResult,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,refDel --> wrapBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,delete --> delete$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,delete$2 --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,delete$2 --> undefDeleteError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,delete$2 --> deleteObjectElem,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,delete$2 --> wrapBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,name --> topScopeName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,name --> notFoundError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,name --> nameOrFunction,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> topScopeName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> notFoundError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> notFunctionError$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> storeScriptable,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,topScopeName --> checkDynamicScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,bind --> checkDynamicScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setName --> getMessage1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setName --> checkDynamicScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,strictSetName --> constructError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toIterator --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumInit --> enumInit$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumInit$2 --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumInit$2 --> toIterator,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumInit$2 --> enumChangeObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumNext --> enumChangeObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumId --> enumValue,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumValue --> toStringIdOrIndex,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumValue --> lastIndexResult,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getNameFunctionAndThis --> topScopeName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getNameFunctionAndThis --> notFoundError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getNameFunctionAndThis --> notFunctionError$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getNameFunctionAndThis --> storeScriptable,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getNameFunctionAndThis --> nameOrFunction,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getElemFunctionAndThis --> toStringIdOrIndex,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getElemFunctionAndThis --> getPropFunctionAndThis,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getElemFunctionAndThis --> lastIndexResult,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getElemFunctionAndThis --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getElemFunctionAndThis --> undefCallError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getElemFunctionAndThis --> notFunctionError$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getElemFunctionAndThis --> storeScriptable,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getPropFunctionAndThis --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getPropFunctionAndThis --> getPropFunctionAndThisHelper,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getPropFunctionAndThis$2 --> toObjectOrNull$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getPropFunctionAndThis$2 --> getPropFunctionAndThisHelper,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getPropFunctionAndThisHelper --> undefCallError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getPropFunctionAndThisHelper --> notFunctionError$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getPropFunctionAndThisHelper --> storeScriptable,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getValueFunctionAndThis --> notFunctionError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getValueFunctionAndThis --> storeScriptable,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,callRef --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,callRef --> getMessage1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,callRef --> constructError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObject$2 --> notFunctionError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,callSpecial --> evalSpecial,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newSpecial --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newSpecial --> newObject$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,applyOrCall --> getCallable,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,applyOrCall --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,applyOrCall --> getTopCallScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,applyOrCall --> getApplyArguments,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getApplyArguments --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getCallable --> notFunctionError$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> getMessage0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> makeUrlForGeneratedScript,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeof --> errorWithClassName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeofName --> bind,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeofName --> getObjectProp$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeofName --> typeof,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,add --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,add --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,add --> toCharSequence,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,add$2 --> toCharSequence,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,add$3 --> toCharSequence,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameIncrDecr --> nameIncrDecr$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameIncrDecr$2 --> checkDynamicScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameIncrDecr$2 --> notFoundError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameIncrDecr$2 --> doScriptableIncrDecr,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,propIncrDecr --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,propIncrDecr --> undefReadError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,propIncrDecr --> doScriptableIncrDecr,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,doScriptableIncrDecr --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,doScriptableIncrDecr --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,elemIncrDecr --> getObjectElem,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,elemIncrDecr --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,elemIncrDecr --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,elemIncrDecr --> setObjectElem,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,refIncrDecr --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,refIncrDecr --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toPrimitive --> toPrimitive$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toPrimitive$2 --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eq --> eqNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eq --> eqString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eq --> isPrimitive,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eq --> eq,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eq --> warnAboutNonJSObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eqNumber --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eqNumber --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eqNumber --> toPrimitive,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eqNumber --> warnAboutNonJSObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eqString --> toNumber$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eqString --> toPrimitive,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eqString --> warnAboutNonJSObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,shallowEq --> warnAboutNonJSObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,instanceOf --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,in --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,in --> hasObjectElem,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,cmp_LT --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,cmp_LE --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newCatchScope --> wrapException,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newCatchScope --> isVisible,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> isVisible,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enterWith --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enterWith --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enterWith --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enterDotQuery --> notXmlError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObjectLiteral --> newObjectLiteral$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObjectLiteral$2 --> isSpecialProperty,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObjectLiteral$2 --> specialRef,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,checkDeprecated --> getMessage1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getMessage0 --> getMessage,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getMessage1 --> getMessage,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getMessage2 --> getMessage,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getMessage3 --> getMessage,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getMessage4 --> getMessage,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,constructError --> constructError$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,constructError$2 --> constructError$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeError --> constructError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeError0 --> getMessage0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeError0 --> typeError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeError1 --> getMessage1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeError1 --> typeError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeError2 --> getMessage2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeError2 --> typeError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeError3 --> getMessage3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeError3 --> typeError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,undefReadError --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,undefReadError --> typeError2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,undefCallError --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,undefCallError --> typeError2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,undefWriteError --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,undefWriteError --> typeError3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,undefDeleteError --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,undefDeleteError --> typeError2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notFoundError --> getMessage1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notFoundError --> constructError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notFunctionError --> notFunctionError$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notFunctionError$2 --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notFunctionError$2 --> typeof,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notFunctionError$2 --> typeError2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notFunctionError$3 --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notFunctionError$3 --> typeError2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notFunctionError$3 --> typeof,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notFunctionError$3 --> typeError3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notXmlError --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,notXmlError --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,checkRegExpProxy --> getRegExpProxy,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,escapeAttributeValue --> currentXMLLib,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,escapeTextValue --> currentXMLLib,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,memberRef --> notXmlError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,memberRef$2 --> notXmlError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameRef --> currentXMLLib,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameRef$2 --> currentXMLLib,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,throwError --> newBuiltinObject,org.mozilla.javascript.ScriptRuntime,);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,typeErrorThrower --> THROW_TYPE_ERROR,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,typeErrorThrower --> THROW_TYPE_ERROR,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,isRhinoRuntimeType --> StringClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,isRhinoRuntimeType --> BooleanClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,isRhinoRuntimeType --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,isRhinoRuntimeType --> ScriptableClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> LIBRARY_SCOPE_KEY,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getLibraryScopeOrNull --> LIBRARY_SCOPE_KEY,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,wrapNumber --> NaNobj,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toBoolean --> BooleanClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toNumber --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toNumber --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toNumber$2 --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,stringToNumber --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toNumber$3 --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toString --> StringClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,uneval --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,newObject --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,newBuiltinObject --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumNext --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,applyOrCall --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getApplyArguments --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getCallable --> FunctionClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,evalSpecial --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,propIncrDecr --> NaNobj,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,cmp_LT --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,cmp_LE --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getGlobal --> ContextClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getArrayElements --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getMessage --> messageProvider,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> THROW_TYPE_ERROR,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> BooleanClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> ByteClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> CharacterClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> ClassClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> DoubleClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> FloatClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> IntegerClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> LongClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> NumberClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> ObjectClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> ShortClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> StringClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> DateClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> ContextClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> ContextFactoryClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> FunctionClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> ScriptableObjectClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> ScriptableClass,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> ROOT_LOCALE,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> LIBRARY_SCOPE_KEY,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> NaN,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> negativeZero,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> NaNobj,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> messageProvider,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> emptyArgs,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,<clinit> --> emptyStrings,org.mozilla.javascript.ScriptRuntime,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toBoolean --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toNumber --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,padArguments --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toString --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,uneval --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> iterating,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> iterating,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toObjectOrNull --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toObjectOrNull$2 --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toObject$3 --> String,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toObject$3 --> Number,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toObject$3 --> Boolean,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,toObject$3 --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,setDefaultNamespace --> currentActivationCall,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,setDefaultNamespace --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,searchDefaultNamespace --> currentActivationCall,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,searchDefaultNamespace --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getExistingCtor --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getObjectElem$3 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getObjectElem$3 --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getObjectProp$3 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getObjectProp$3 --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getObjectPropNoWarn --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getObjectPropNoWarn --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getObjectIndex$2 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getObjectIndex$2 --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,name --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,topScopeName --> useDynamicScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,topScopeName --> topCallScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,bind --> useDynamicScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,bind --> topCallScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,setName --> useDynamicScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,setName --> topCallScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumInit$2 --> obj,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumInit$2 --> iterator,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumInit$2 --> obj,org.mozilla.javascript.ScriptRuntime$IdEnumeration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumInit$2 --> enumType,org.mozilla.javascript.ScriptRuntime$IdEnumeration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumInit$2 --> iterator,org.mozilla.javascript.ScriptRuntime$IdEnumeration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,setEnumNumbers --> enumNumbers,org.mozilla.javascript.ScriptRuntime$IdEnumeration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumNext --> iterator,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumNext --> obj,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumNext --> index,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumNext --> ids,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumNext --> used,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumNext --> enumNumbers,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumNext --> currentId,org.mozilla.javascript.ScriptRuntime$IdEnumeration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumNext --> obj,org.mozilla.javascript.ScriptRuntime$IdEnumeration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumNext --> index,org.mozilla.javascript.ScriptRuntime$IdEnumeration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumId --> iterator,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumId --> currentId,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumId --> enumType,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumId --> obj,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumValue --> currentId,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumValue --> obj,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumChangeObject --> obj,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumChangeObject --> ids,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumChangeObject --> used,org.mozilla.javascript.ScriptRuntime$IdEnumeration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumChangeObject --> obj,org.mozilla.javascript.ScriptRuntime$IdEnumeration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumChangeObject --> used,org.mozilla.javascript.ScriptRuntime$IdEnumeration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumChangeObject --> ids,org.mozilla.javascript.ScriptRuntime$IdEnumeration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enumChangeObject --> index,org.mozilla.javascript.ScriptRuntime$IdEnumeration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getNameFunctionAndThis --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getValueFunctionAndThis --> topCallScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getApplyArguments --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,evalSpecial --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,typeof --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,add --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,nameIncrDecr$2 --> useDynamicScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,nameIncrDecr$2 --> topCallScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,nameIncrDecr$2 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,propIncrDecr --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,eq --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,eq --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,isPrimitive --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,eqNumber --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,eqNumber --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,eqString --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,eqString --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,shallowEq --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,hasTopCall --> topCallScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getTopCallScope --> topCallScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,doTopCall --> topCallScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,doTopCall --> currentActivationCall,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,doTopCall --> topCallScope,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,doTopCall --> useDynamicScope,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,doTopCall --> cachedXMLLib,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,addInstructionCount --> instructionCount,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,addInstructionCount --> instructionThreshold,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,addInstructionCount --> instructionCount,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,initScript --> topCallScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,initScript --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enterActivationFunction --> topCallScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enterActivationFunction --> currentActivationCall,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enterActivationFunction --> parentActivationCall,org.mozilla.javascript.NativeCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,enterActivationFunction --> currentActivationCall,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,exitActivationFunction --> currentActivationCall,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,exitActivationFunction --> parentActivationCall,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,exitActivationFunction --> currentActivationCall,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,exitActivationFunction --> parentActivationCall,org.mozilla.javascript.NativeCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,findFunctionActivation --> currentActivationCall,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,findFunctionActivation --> function,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,findFunctionActivation --> parentActivationCall,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,newArrayLiteral --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getArrayElements --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,getArrayElements --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,notFunctionError$2 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,notFunctionError$3 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,setRegExpProxy --> regExpProxy,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,currentXMLLib --> topCallScope,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,currentXMLLib --> cachedXMLLib,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,currentXMLLib --> cachedXMLLib,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,storeIndexResult --> scratchIndex,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,lastIndexResult --> scratchIndex,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,storeUint32Result --> scratchUint32,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,lastUint32Result --> scratchUint32,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,storeScriptable --> scratchScriptable,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,storeScriptable --> scratchScriptable,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,lastStoredScriptable --> scratchScriptable,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,lastStoredScriptable --> scratchScriptable,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime,throwError --> Error,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeErrorThrower --> <init>,org.mozilla.javascript.ScriptRuntime$1,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeErrorThrower --> preventExtensions,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> associateValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> <init>,org.mozilla.javascript.ClassCache,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> associate,org.mozilla.javascript.ClassCache,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> getClassPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> setPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> getPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeError,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> getOptimizationLevel,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> setMaximumInitialCapacity,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeBoolean,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeNumber,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeMath,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeCall,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeScript,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> init,org.mozilla.javascript.NativeIterator,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> getE4xImplementationFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> <init>$2,org.mozilla.javascript.LazilyLoadedCtor,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> getImplementationClassName,org.mozilla.javascript.xml.XMLLib$Factory,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initStandardObjects --> cacheBuiltins,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getLibraryScopeOrNull --> getTopScopeValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toBoolean --> avoidObjectDetection,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toBoolean --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toBoolean --> isVersionECMA1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toBoolean --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toNumber --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,escapeString$2 --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,isValidIdentifierName --> isKeyword,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toCharSequence --> toCharSequence,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toString --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,defaultObjectToString --> getClassName,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,numberToString --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,numberToString --> JS_dtobasestr,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,numberToString --> numberToString,org.mozilla.javascript.v8dtoa.FastDtoa,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,numberToString --> JS_dtostr,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,uneval --> hasProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,uneval --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,uneval --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> <init>$2,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> has,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> intern,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> getIds,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> get$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,defaultObjectToSource --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject$2 --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject$3 --> <init>,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject$3 --> <init>,org.mozilla.javascript.NativeNumber,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject$3 --> <init>,org.mozilla.javascript.NativeBoolean,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject$3 --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toObject$3 --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,call --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObject --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObject --> construct,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newBuiltinObject --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newBuiltinObject --> getBuiltinCtor,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newBuiltinObject --> construct,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setDefaultNamespace --> toDefaultXmlNamespace,org.mozilla.javascript.xml.XMLLib,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setDefaultNamespace --> has,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setDefaultNamespace --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setDefaultNamespace --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,searchDefaultNamespace --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,searchDefaultNamespace --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,searchDefaultNamespace --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getTopLevelProp --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getTopLevelProp --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getExistingCtor --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getExistingCtor --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectElem$3 --> get,org.mozilla.javascript.xml.XMLObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectElem$3 --> getProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectElem$3 --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectProp$3 --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectProp$3 --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectProp$3 --> reportWarning$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectPropNoWarn --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getObjectIndex$2 --> getProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectElem$2 --> put,org.mozilla.javascript.xml.XMLObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectElem$2 --> putProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectElem$2 --> putProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectProp$2 --> putProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectIndex$2 --> putProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,deleteObjectElem --> delete$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,deleteObjectElem --> has$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,deleteObjectElem --> delete,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,deleteObjectElem --> has,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,hasObjectElem --> hasProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,hasObjectElem --> hasProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,refGet --> get,org.mozilla.javascript.Ref,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,refSet --> set,org.mozilla.javascript.Ref,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,refDel --> delete,org.mozilla.javascript.Ref,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,specialRef --> createSpecial,org.mozilla.javascript.SpecialRef,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,name --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> has,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> get,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameOrFunction --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,topScopeName --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,bind --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,bind --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,bind --> has,org.mozilla.javascript.xml.XMLObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,bind --> hasProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setName --> putProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setName --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setName --> reportWarning$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setName --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setName --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,strictSetName --> putProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setConst --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setConst --> putConstProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toIterator --> hasProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toIterator --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toIterator --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumInit$2 --> <init>$2,org.mozilla.javascript.ScriptRuntime$IdEnumeration,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumInit$2 --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumNext --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumNext --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumNext --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumNext --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumNext --> getValue,org.mozilla.javascript.JavaScriptException,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumNext --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumNext --> has,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumNext --> has,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumNext --> has$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumId --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumId --> newArray$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumId --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumValue --> get$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumValue --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumChangeObject --> getIds,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumChangeObject --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumChangeObject --> <init>$2,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enumChangeObject --> intern,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getNameFunctionAndThis --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getElemFunctionAndThis --> getProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getPropFunctionAndThisHelper --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getPropFunctionAndThisHelper --> <init>,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getValueFunctionAndThis --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getValueFunctionAndThis --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,callRef --> refCall,org.mozilla.javascript.RefCallable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObject$2 --> construct,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,callSpecial --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,callSpecial --> isEvalFunction,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,callSpecial --> isWithFunction,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,callSpecial --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,callSpecial --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,callSpecial --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newSpecial --> isEvalFunction,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newSpecial --> isWithFunction,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newSpecial --> newWithSpecial,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newSpecial --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,applyOrCall --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getApplyArguments --> getElements,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getCallable --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> reportRuntimeError0,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> reportWarning$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> getSourcePositionFromStack,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> forEval,org.mozilla.javascript.DefaultErrorReporter,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> createInterpreter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> <init>$2,org.mozilla.javascript.JavaScriptException,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> compileString$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> setEvalScriptFlag,org.mozilla.javascript.Evaluator,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,evalSpecial --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeof --> getTypeOf,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,typeofName --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,add --> addValues,org.mozilla.javascript.xml.XMLObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,add --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,add --> <init>,org.mozilla.javascript.ConsString,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,add$2 --> <init>,org.mozilla.javascript.ConsString,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,add$3 --> <init>,org.mozilla.javascript.ConsString,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameIncrDecr --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameIncrDecr$2 --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameIncrDecr$2 --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameIncrDecr$2 --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,propIncrDecr --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,propIncrDecr --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,propIncrDecr --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,doScriptableIncrDecr --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,refIncrDecr --> get,org.mozilla.javascript.Ref,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,refIncrDecr --> set,org.mozilla.javascript.Ref,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,toPrimitive$2 --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eq --> equivalentValues,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eq --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eqNumber --> equivalentValues,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,eqString --> equivalentValues,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,shallowEq --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,instanceOf --> hasInstance,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,jsDelegatesTo --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,cmp_LT --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,cmp_LE --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getGlobal --> classOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getGlobal --> <init>$2,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,doTopCall --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,doTopCall --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,doTopCall --> getFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,doTopCall --> doTopCall,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,checkDynamicScope --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,addInstructionCount --> observeInstructionCount,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initScript --> getParamAndVarCount,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initScript --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initScript --> getParamOrVarName,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initScript --> getParamOrVarConst,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initScript --> hasProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initScript --> defineConstProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initScript --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initScript --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initScript --> redefineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,createFunctionActivation --> <init>$2,org.mozilla.javascript.NativeCall,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newCatchScope --> getValue,org.mozilla.javascript.JavaScriptException,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newCatchScope --> getAssociatedValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newCatchScope --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newCatchScope --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newCatchScope --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newCatchScope --> javaToJS,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newCatchScope --> associateValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> getName,org.mozilla.javascript.EcmaError,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> getErrorMessage,org.mozilla.javascript.EcmaError,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> getWrappedException,org.mozilla.javascript.WrappedException,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> getMessage,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> <init>,org.mozilla.javascript.WrappedException,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> sourceName,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> lineNumber,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> newObject$3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> putProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> setStackProvider,org.mozilla.javascript.NativeError,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapException --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,isVisible --> getClassShutter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,isVisible --> visibleToScripts,org.mozilla.javascript.ClassShutter,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enterWith --> enterWith,org.mozilla.javascript.xml.XMLObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enterWith --> <init>$2,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,leaveWith --> getParentScope,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,enterDotQuery --> enterDotQuery,org.mozilla.javascript.xml.XMLObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,updateDotQuery --> updateDotQuery,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,leaveDotQuery --> getParentScope,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setFunctionProtoAndParent --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setFunctionProtoAndParent --> getFunctionPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setFunctionProtoAndParent --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectProtoAndParent --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectProtoAndParent --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectProtoAndParent --> getClassName,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectProtoAndParent --> getClassPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setObjectProtoAndParent --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setBuiltinProtoAndParent --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setBuiltinProtoAndParent --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setBuiltinProtoAndParent --> getBuiltinPrototype,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,setBuiltinProtoAndParent --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initFunction --> getFunctionName,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initFunction --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initFunction --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initFunction --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,initFunction --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newArrayLiteral --> newArray$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newArrayLiteral --> newArray,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newArrayLiteral --> putProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObjectLiteral$2 --> newObject,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObjectLiteral$2 --> set,org.mozilla.javascript.Ref,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObjectLiteral$2 --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObjectLiteral$2 --> setGetterOrSetter,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,newObjectLiteral$2 --> put$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getArrayElements --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getArrayElements --> getLengthProperty,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getArrayElements --> getProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,checkDeprecated --> getLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,checkDeprecated --> reportWarning$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,checkDeprecated --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getMessage --> getMessage,org.mozilla.javascript.ScriptRuntime$MessageProvider,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,constructError --> getSourcePositionFromStack,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,constructError$2 --> getSourcePositionFromStack,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,constructError$3 --> <init>,org.mozilla.javascript.EcmaError,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,warnAboutNonJSObject --> reportWarning$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,getRegExpProxy --> getRegExpProxy,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,checkRegExpProxy --> reportRuntimeError0,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapRegExp --> getRegExpProxy,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,wrapRegExp --> wrapRegExp,org.mozilla.javascript.RegExpProxy,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,currentXMLLib --> extractFromScope,org.mozilla.javascript.xml.XMLLib,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,escapeAttributeValue --> escapeAttributeValue,org.mozilla.javascript.xml.XMLLib,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,escapeTextValue --> escapeTextValue,org.mozilla.javascript.xml.XMLLib,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,memberRef --> memberRef,org.mozilla.javascript.xml.XMLObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,memberRef$2 --> memberRef$2,org.mozilla.javascript.xml.XMLObject,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameRef --> nameRef,org.mozilla.javascript.xml.XMLLib,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,nameRef$2 --> nameRef$2,org.mozilla.javascript.xml.XMLLib,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,errorWithClassName --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,throwError --> getSourcePositionFromStack,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,throwError --> <init>$2,org.mozilla.javascript.JavaScriptException,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,<clinit> --> classOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime,<clinit> --> <init>$2,org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider,);
EndClass 28
StartClass 29
Class(org.mozilla.javascript.TopLevel,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(ctors,java.util.EnumMap,Private,N,N,org.mozilla.javascript.TopLevel$Builtins;org.mozilla.javascript.BaseFunction);
Attribute($assertionsDisabled,boolean,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(cacheBuiltins,void,Public,N,N);
Method(getBuiltinCtor,org.mozilla.javascript.Function,Public,Y,N);
Method(getBuiltinPrototype,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(getBuiltinCtor$2,org.mozilla.javascript.BaseFunction,Public,N,N);
Method(getBuiltinPrototype$2,org.mozilla.javascript.Scriptable,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(getBuiltinCtor,org.mozilla.javascript.Context,);
Parameter(getBuiltinCtor,org.mozilla.javascript.Scriptable,);
Parameter(getBuiltinCtor,org.mozilla.javascript.TopLevel$Builtins,);
Parameter(getBuiltinPrototype,org.mozilla.javascript.Scriptable,);
Parameter(getBuiltinPrototype,org.mozilla.javascript.TopLevel$Builtins,);
Parameter(getBuiltinCtor$2,org.mozilla.javascript.TopLevel$Builtins,);
Parameter(getBuiltinPrototype$2,org.mozilla.javascript.TopLevel$Builtins,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
SubClass(org.mozilla.javascript.commonjs.module.ModuleScope);
SubClass(org.mozilla.javascript.tools.shell.Global);
SubClass(org.mozilla.javascript.ImporterTopLevel);
Generalization(org.mozilla.javascript.IdScriptableObject);
Call(METHOD,org.mozilla.javascript.TopLevel,getBuiltinCtor --> getBuiltinCtor$2,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.TopLevel,getBuiltinPrototype --> getBuiltinPrototype$2,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.TopLevel,getBuiltinPrototype$2 --> getBuiltinCtor$2,org.mozilla.javascript.TopLevel,);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel,cacheBuiltins --> ctors,org.mozilla.javascript.TopLevel,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel,cacheBuiltins --> ctors,org.mozilla.javascript.TopLevel,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel,getBuiltinCtor --> $assertionsDisabled,org.mozilla.javascript.TopLevel,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel,getBuiltinPrototype --> $assertionsDisabled,org.mozilla.javascript.TopLevel,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel,getBuiltinCtor$2 --> ctors,org.mozilla.javascript.TopLevel,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel,<clinit> --> $assertionsDisabled,org.mozilla.javascript.TopLevel,WRITE);
Call(METHOD,org.mozilla.javascript.TopLevel,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.TopLevel,cacheBuiltins --> values,org.mozilla.javascript.TopLevel$Builtins,);
Call(METHOD,org.mozilla.javascript.TopLevel,cacheBuiltins --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.TopLevel,getBuiltinCtor --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.TopLevel,getBuiltinCtor --> getExistingCtor,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.TopLevel,getBuiltinPrototype --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.TopLevel,getBuiltinPrototype --> getClassPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.TopLevel,getBuiltinPrototype$2 --> getPrototypeProperty,org.mozilla.javascript.BaseFunction,);
EndClass 29
StartClass 30
Class(org.mozilla.javascript.ScriptStackElement,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(fileName,java.lang.String,Public,N,Y,);
Attribute(functionName,java.lang.String,Public,N,Y,);
Attribute(lineNumber,int,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(renderJavaStyle,void,Public,N,N);
Method(renderMozillaStyle,void,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Parameter(renderJavaStyle,java.lang.StringBuilder,);
Parameter(renderMozillaStyle,java.lang.StringBuilder,);
Call(METHOD,org.mozilla.javascript.ScriptStackElement,toString --> renderMozillaStyle,org.mozilla.javascript.ScriptStackElement,);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptStackElement,<init> --> fileName,org.mozilla.javascript.ScriptStackElement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptStackElement,<init> --> functionName,org.mozilla.javascript.ScriptStackElement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptStackElement,<init> --> lineNumber,org.mozilla.javascript.ScriptStackElement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptStackElement,renderJavaStyle --> fileName,org.mozilla.javascript.ScriptStackElement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptStackElement,renderJavaStyle --> lineNumber,org.mozilla.javascript.ScriptStackElement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptStackElement,renderJavaStyle --> functionName,org.mozilla.javascript.ScriptStackElement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptStackElement,renderMozillaStyle --> functionName,org.mozilla.javascript.ScriptStackElement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptStackElement,renderMozillaStyle --> fileName,org.mozilla.javascript.ScriptStackElement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptStackElement,renderMozillaStyle --> lineNumber,org.mozilla.javascript.ScriptStackElement,READ);
EndClass 30
StartClass 31
Class(org.mozilla.javascript.Interpreter,N,N,Public);
Attribute(itsData,org.mozilla.javascript.InterpreterData,Public,N,N,);
Attribute(EXCEPTION_TRY_START_SLOT,int,Public,Y,Y,);
Attribute(EXCEPTION_TRY_END_SLOT,int,Public,Y,Y,);
Attribute(EXCEPTION_HANDLER_SLOT,int,Public,Y,Y,);
Attribute(EXCEPTION_TYPE_SLOT,int,Public,Y,Y,);
Attribute(EXCEPTION_LOCAL_SLOT,int,Public,Y,Y,);
Attribute(EXCEPTION_SCOPE_SLOT,int,Public,Y,Y,);
Attribute(EXCEPTION_SLOT_SIZE,int,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(captureFrameForGenerator,org.mozilla.javascript.Interpreter$CallFrame,Private,Y,N);
Method(compile,java.lang.Object,Public,N,N);
Method(createScriptObject,org.mozilla.javascript.Script,Public,N,N);
Method(setEvalScriptFlag,void,Public,N,N);
Method(createFunctionObject,org.mozilla.javascript.Function,Public,N,N);
Method(getShort,int,Private,Y,N);
Method(getIndex,int,Private,Y,N);
Method(getInt,int,Private,Y,N);
Method(getExceptionHandler,int,Private,Y,N);
Method(dumpICode,void,Public,Y,N);
Method(bytecodeSpan,int,Private,Y,N);
Method(getLineNumbers,int[],Public,Y,N);
Method(captureStackInfo,void,Public,N,N);
Method(getSourcePositionFromStack,java.lang.String,Public,N,N);
Method(getPatchedStack,java.lang.String,Public,N,N);
Method(getScriptStack,java.util.List,Public,N,N);
Method(getScriptStackElements,org.mozilla.javascript.ScriptStackElement[][],Public,N,N);
Method(getEncodedSource,java.lang.String,Public,Y,N);
Method(initFunction,void,Private,Y,N);
Method(interpret,java.lang.Object,Public,Y,N);
Method(resumeGenerator,java.lang.Object,Public,Y,N);
Method(restartContinuation,java.lang.Object,Public,Y,N);
Method(interpretLoop,java.lang.Object,Private,Y,N);
Method(doInOrInstanceof,int,Private,Y,N);
Method(doCompare,int,Private,Y,N);
Method(doBitOp,int,Private,Y,N);
Method(doDelName,int,Private,Y,N);
Method(doGetElem,int,Private,Y,N);
Method(doSetElem,int,Private,Y,N);
Method(doElemIncDec,int,Private,Y,N);
Method(doCallSpecial,int,Private,Y,N);
Method(doSetConstVar,int,Private,Y,N);
Method(doSetVar,int,Private,Y,N);
Method(doGetVar,int,Private,Y,N);
Method(doVarIncDec,int,Private,Y,N);
Method(doRefMember,int,Private,Y,N);
Method(doRefNsMember,int,Private,Y,N);
Method(doRefNsName,int,Private,Y,N);
Method(initFrameForNoSuchMethod,org.mozilla.javascript.Interpreter$CallFrame,Private,Y,N);
Method(doEquals,boolean,Private,Y,N);
Method(doShallowEquals,boolean,Private,Y,N);
Method(processThrowable,org.mozilla.javascript.Interpreter$CallFrame,Private,Y,N);
Method(freezeGenerator,java.lang.Object,Private,Y,N);
Method(thawGenerator,java.lang.Object,Private,Y,N);
Method(initFrameForApplyOrCall,org.mozilla.javascript.Interpreter$CallFrame,Private,Y,N);
Method(initFrame,void,Private,Y,N);
Method(isFrameEnterExitRequired,boolean,Private,Y,N);
Method(enterFrame,void,Private,Y,N);
Method(exitFrame,void,Private,Y,N);
Method(setCallResult,void,Private,Y,N);
Method(captureContinuation,org.mozilla.javascript.NativeContinuation,Public,Y,N);
Method(captureContinuation$2,org.mozilla.javascript.NativeContinuation,Private,Y,N);
Method(stack_int32,int,Private,Y,N);
Method(stack_double,double,Private,Y,N);
Method(stack_boolean,boolean,Private,Y,N);
Method(doAdd,void,Private,Y,N);
Method(doArithmetic,int,Private,Y,N);
Method(getArgsArray,java.lang.Object[],Private,Y,N);
Method(addInstructionCount,void,Private,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(captureFrameForGenerator,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(compile,org.mozilla.javascript.CompilerEnvirons,);
Parameter(compile,org.mozilla.javascript.ast.ScriptNode,);
Parameter(compile,java.lang.String,);
Parameter(compile,boolean,);
Parameter(createScriptObject,java.lang.Object,);
Parameter(createScriptObject,java.lang.Object,);
Parameter(setEvalScriptFlag,org.mozilla.javascript.Script,);
Parameter(createFunctionObject,org.mozilla.javascript.Context,);
Parameter(createFunctionObject,org.mozilla.javascript.Scriptable,);
Parameter(createFunctionObject,java.lang.Object,);
Parameter(createFunctionObject,java.lang.Object,);
Parameter(getShort,byte[],);
Parameter(getShort,int,);
Parameter(getIndex,byte[],);
Parameter(getIndex,int,);
Parameter(getInt,byte[],);
Parameter(getInt,int,);
Parameter(getExceptionHandler,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(getExceptionHandler,boolean,);
Parameter(dumpICode,org.mozilla.javascript.InterpreterData,);
Parameter(bytecodeSpan,int,);
Parameter(getLineNumbers,org.mozilla.javascript.InterpreterData,);
Parameter(captureStackInfo,org.mozilla.javascript.RhinoException,);
Parameter(getSourcePositionFromStack,org.mozilla.javascript.Context,);
Parameter(getSourcePositionFromStack,int[],);
Parameter(getPatchedStack,org.mozilla.javascript.RhinoException,);
Parameter(getPatchedStack,java.lang.String,);
Parameter(getScriptStack,org.mozilla.javascript.RhinoException,java.lang.String);
Parameter(getScriptStackElements,org.mozilla.javascript.RhinoException,);
Parameter(getEncodedSource,org.mozilla.javascript.InterpreterData,);
Parameter(initFunction,org.mozilla.javascript.Context,);
Parameter(initFunction,org.mozilla.javascript.Scriptable,);
Parameter(initFunction,org.mozilla.javascript.InterpretedFunction,);
Parameter(initFunction,int,);
Parameter(interpret,org.mozilla.javascript.InterpretedFunction,);
Parameter(interpret,org.mozilla.javascript.Context,);
Parameter(interpret,org.mozilla.javascript.Scriptable,);
Parameter(interpret,org.mozilla.javascript.Scriptable,);
Parameter(interpret,java.lang.Object[],);
Parameter(resumeGenerator,org.mozilla.javascript.Context,);
Parameter(resumeGenerator,org.mozilla.javascript.Scriptable,);
Parameter(resumeGenerator,int,);
Parameter(resumeGenerator,java.lang.Object,);
Parameter(resumeGenerator,java.lang.Object,);
Parameter(restartContinuation,org.mozilla.javascript.NativeContinuation,);
Parameter(restartContinuation,org.mozilla.javascript.Context,);
Parameter(restartContinuation,org.mozilla.javascript.Scriptable,);
Parameter(restartContinuation,java.lang.Object[],);
Parameter(interpretLoop,org.mozilla.javascript.Context,);
Parameter(interpretLoop,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(interpretLoop,java.lang.Object,);
Parameter(doInOrInstanceof,org.mozilla.javascript.Context,);
Parameter(doInOrInstanceof,int,);
Parameter(doInOrInstanceof,java.lang.Object[],);
Parameter(doInOrInstanceof,double[],);
Parameter(doInOrInstanceof,int,);
Parameter(doCompare,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(doCompare,int,);
Parameter(doCompare,java.lang.Object[],);
Parameter(doCompare,double[],);
Parameter(doCompare,int,);
Parameter(doBitOp,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(doBitOp,int,);
Parameter(doBitOp,java.lang.Object[],);
Parameter(doBitOp,double[],);
Parameter(doBitOp,int,);
Parameter(doDelName,org.mozilla.javascript.Context,);
Parameter(doDelName,int,);
Parameter(doDelName,java.lang.Object[],);
Parameter(doDelName,double[],);
Parameter(doDelName,int,);
Parameter(doGetElem,org.mozilla.javascript.Context,);
Parameter(doGetElem,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(doGetElem,java.lang.Object[],);
Parameter(doGetElem,double[],);
Parameter(doGetElem,int,);
Parameter(doSetElem,org.mozilla.javascript.Context,);
Parameter(doSetElem,java.lang.Object[],);
Parameter(doSetElem,double[],);
Parameter(doSetElem,int,);
Parameter(doElemIncDec,org.mozilla.javascript.Context,);
Parameter(doElemIncDec,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(doElemIncDec,byte[],);
Parameter(doElemIncDec,java.lang.Object[],);
Parameter(doElemIncDec,double[],);
Parameter(doElemIncDec,int,);
Parameter(doCallSpecial,org.mozilla.javascript.Context,);
Parameter(doCallSpecial,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(doCallSpecial,java.lang.Object[],);
Parameter(doCallSpecial,double[],);
Parameter(doCallSpecial,int,);
Parameter(doCallSpecial,byte[],);
Parameter(doCallSpecial,int,);
Parameter(doSetConstVar,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(doSetConstVar,java.lang.Object[],);
Parameter(doSetConstVar,double[],);
Parameter(doSetConstVar,int,);
Parameter(doSetConstVar,java.lang.Object[],);
Parameter(doSetConstVar,double[],);
Parameter(doSetConstVar,int[],);
Parameter(doSetConstVar,int,);
Parameter(doSetVar,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(doSetVar,java.lang.Object[],);
Parameter(doSetVar,double[],);
Parameter(doSetVar,int,);
Parameter(doSetVar,java.lang.Object[],);
Parameter(doSetVar,double[],);
Parameter(doSetVar,int[],);
Parameter(doSetVar,int,);
Parameter(doGetVar,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(doGetVar,java.lang.Object[],);
Parameter(doGetVar,double[],);
Parameter(doGetVar,int,);
Parameter(doGetVar,java.lang.Object[],);
Parameter(doGetVar,double[],);
Parameter(doGetVar,int,);
Parameter(doVarIncDec,org.mozilla.javascript.Context,);
Parameter(doVarIncDec,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(doVarIncDec,java.lang.Object[],);
Parameter(doVarIncDec,double[],);
Parameter(doVarIncDec,int,);
Parameter(doVarIncDec,java.lang.Object[],);
Parameter(doVarIncDec,double[],);
Parameter(doVarIncDec,int,);
Parameter(doRefMember,org.mozilla.javascript.Context,);
Parameter(doRefMember,java.lang.Object[],);
Parameter(doRefMember,double[],);
Parameter(doRefMember,int,);
Parameter(doRefMember,int,);
Parameter(doRefNsMember,org.mozilla.javascript.Context,);
Parameter(doRefNsMember,java.lang.Object[],);
Parameter(doRefNsMember,double[],);
Parameter(doRefNsMember,int,);
Parameter(doRefNsMember,int,);
Parameter(doRefNsName,org.mozilla.javascript.Context,);
Parameter(doRefNsName,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(doRefNsName,java.lang.Object[],);
Parameter(doRefNsName,double[],);
Parameter(doRefNsName,int,);
Parameter(doRefNsName,int,);
Parameter(initFrameForNoSuchMethod,org.mozilla.javascript.Context,);
Parameter(initFrameForNoSuchMethod,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(initFrameForNoSuchMethod,int,);
Parameter(initFrameForNoSuchMethod,java.lang.Object[],);
Parameter(initFrameForNoSuchMethod,double[],);
Parameter(initFrameForNoSuchMethod,int,);
Parameter(initFrameForNoSuchMethod,int,);
Parameter(initFrameForNoSuchMethod,org.mozilla.javascript.Scriptable,);
Parameter(initFrameForNoSuchMethod,org.mozilla.javascript.Scriptable,);
Parameter(initFrameForNoSuchMethod,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,);
Parameter(initFrameForNoSuchMethod,org.mozilla.javascript.InterpretedFunction,);
Parameter(doEquals,java.lang.Object[],);
Parameter(doEquals,double[],);
Parameter(doEquals,int,);
Parameter(doShallowEquals,java.lang.Object[],);
Parameter(doShallowEquals,double[],);
Parameter(doShallowEquals,int,);
Parameter(processThrowable,org.mozilla.javascript.Context,);
Parameter(processThrowable,java.lang.Object,);
Parameter(processThrowable,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(processThrowable,int,);
Parameter(processThrowable,boolean,);
Parameter(freezeGenerator,org.mozilla.javascript.Context,);
Parameter(freezeGenerator,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(freezeGenerator,int,);
Parameter(freezeGenerator,org.mozilla.javascript.Interpreter$GeneratorState,);
Parameter(thawGenerator,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(thawGenerator,int,);
Parameter(thawGenerator,org.mozilla.javascript.Interpreter$GeneratorState,);
Parameter(thawGenerator,int,);
Parameter(initFrameForApplyOrCall,org.mozilla.javascript.Context,);
Parameter(initFrameForApplyOrCall,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(initFrameForApplyOrCall,int,);
Parameter(initFrameForApplyOrCall,java.lang.Object[],);
Parameter(initFrameForApplyOrCall,double[],);
Parameter(initFrameForApplyOrCall,int,);
Parameter(initFrameForApplyOrCall,int,);
Parameter(initFrameForApplyOrCall,org.mozilla.javascript.Scriptable,);
Parameter(initFrameForApplyOrCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(initFrameForApplyOrCall,org.mozilla.javascript.InterpretedFunction,);
Parameter(initFrame,org.mozilla.javascript.Context,);
Parameter(initFrame,org.mozilla.javascript.Scriptable,);
Parameter(initFrame,org.mozilla.javascript.Scriptable,);
Parameter(initFrame,java.lang.Object[],);
Parameter(initFrame,double[],);
Parameter(initFrame,int,);
Parameter(initFrame,int,);
Parameter(initFrame,org.mozilla.javascript.InterpretedFunction,);
Parameter(initFrame,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(initFrame,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(isFrameEnterExitRequired,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(enterFrame,org.mozilla.javascript.Context,);
Parameter(enterFrame,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(enterFrame,java.lang.Object[],);
Parameter(enterFrame,boolean,);
Parameter(exitFrame,org.mozilla.javascript.Context,);
Parameter(exitFrame,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(exitFrame,java.lang.Object,);
Parameter(setCallResult,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(setCallResult,java.lang.Object,);
Parameter(setCallResult,double,);
Parameter(captureContinuation,org.mozilla.javascript.Context,);
Parameter(captureContinuation$2,org.mozilla.javascript.Context,);
Parameter(captureContinuation$2,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(captureContinuation$2,boolean,);
Parameter(stack_int32,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(stack_int32,int,);
Parameter(stack_double,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(stack_double,int,);
Parameter(stack_boolean,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(stack_boolean,int,);
Parameter(doAdd,java.lang.Object[],);
Parameter(doAdd,double[],);
Parameter(doAdd,int,);
Parameter(doAdd,org.mozilla.javascript.Context,);
Parameter(doArithmetic,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(doArithmetic,int,);
Parameter(doArithmetic,java.lang.Object[],);
Parameter(doArithmetic,double[],);
Parameter(doArithmetic,int,);
Parameter(getArgsArray,java.lang.Object[],);
Parameter(getArgsArray,double[],);
Parameter(getArgsArray,int,);
Parameter(getArgsArray,int,);
Parameter(addInstructionCount,org.mozilla.javascript.Context,);
Parameter(addInstructionCount,org.mozilla.javascript.Interpreter$CallFrame,);
Parameter(addInstructionCount,int,);
SuperClass(org.mozilla.javascript.Icode);
Generalization(org.mozilla.javascript.Icode);
Realization(org.mozilla.javascript.Evaluator);
Composition(org.mozilla.javascript.InterpreterData);
Call(METHOD,org.mozilla.javascript.Interpreter,getLineNumbers --> bytecodeSpan,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,getLineNumbers --> getIndex,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,getSourcePositionFromStack --> getIndex,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,getPatchedStack --> getIndex,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,getScriptStack --> getScriptStackElements,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,getScriptStackElements --> getIndex,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpret --> initFrame,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpret --> interpretLoop,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,resumeGenerator --> interpretLoop,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,restartContinuation --> interpretLoop,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> enterFrame,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> processThrowable,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> captureFrameForGenerator,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> freezeGenerator,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> thawGenerator,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getIndex,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doCompare,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doInOrInstanceof,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doEquals,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doShallowEquals,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> stack_boolean,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> addInstructionCount,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> stack_int32,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doBitOp,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> stack_double,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doAdd,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doArithmetic,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doDelName,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doGetElem,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doSetElem,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doElemIncDec,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doCallSpecial,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getArgsArray,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> exitFrame,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> initFrame,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> captureContinuation$2,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> initFrameForApplyOrCall,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> initFrameForNoSuchMethod,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getShort,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getInt,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doSetConstVar,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doSetVar,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doGetVar,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doVarIncDec,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doRefMember,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doRefNsMember,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> doRefNsName,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> initFunction,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> dumpICode,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> setCallResult,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getExceptionHandler,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,doCompare --> stack_double,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,doBitOp --> stack_int32,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,doCallSpecial --> getIndex,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,doCallSpecial --> getArgsArray,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForNoSuchMethod --> exitFrame,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForNoSuchMethod --> initFrame,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,processThrowable --> isFrameEnterExitRequired,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,processThrowable --> enterFrame,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,processThrowable --> setCallResult,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,thawGenerator --> getIndex,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> exitFrame,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> initFrame,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> getArgsArray,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> initFunction,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> enterFrame,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureContinuation --> captureContinuation$2,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.Interpreter,doArithmetic --> stack_double,org.mozilla.javascript.Interpreter,);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,compile --> itsData,org.mozilla.javascript.Interpreter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,compile --> itsData,org.mozilla.javascript.Interpreter,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,createScriptObject --> itsData,org.mozilla.javascript.Interpreter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,createFunctionObject --> itsData,org.mozilla.javascript.Interpreter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureFrameForGenerator --> frozen,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureFrameForGenerator --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureFrameForGenerator --> frameIndex,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,setEvalScriptFlag --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,setEvalScriptFlag --> evalScriptFlag,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getExceptionHandler --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getExceptionHandler --> itsExceptionTable,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getExceptionHandler --> pc,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getLineNumbers --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureStackInfo --> lastInterpreterFrame,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureStackInfo --> previousInterpreterInvocations,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureStackInfo --> frameIndex,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureStackInfo --> pcSourceLineStart,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureStackInfo --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureStackInfo --> interpreterStackInfo,org.mozilla.javascript.RhinoException,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureStackInfo --> interpreterLineData,org.mozilla.javascript.RhinoException,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getSourcePositionFromStack --> lastInterpreterFrame,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getSourcePositionFromStack --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getSourcePositionFromStack --> pcSourceLineStart,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getSourcePositionFromStack --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getSourcePositionFromStack --> itsSourceFile,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getPatchedStack --> interpreterStackInfo,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getPatchedStack --> interpreterLineData,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getPatchedStack --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getPatchedStack --> itsName,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getPatchedStack --> itsSourceFile,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getPatchedStack --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getPatchedStack --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getScriptStackElements --> interpreterStackInfo,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getScriptStackElements --> interpreterLineData,org.mozilla.javascript.RhinoException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getScriptStackElements --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getScriptStackElements --> itsSourceFile,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getScriptStackElements --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getScriptStackElements --> itsName,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getScriptStackElements --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getEncodedSource --> encodedSource,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getEncodedSource --> encodedSourceStart,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getEncodedSource --> encodedSourceEnd,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFunction --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFunction --> itsFunctionType,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFunction --> evalScriptFlag,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpret --> interpreterSecurityDomain,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpret --> securityDomain,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpret --> securityController,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpret --> isContinuationsTopCall,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpret --> interpreterSecurityDomain,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpret --> isContinuationsTopFrame,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpret --> isContinuationsTopCall,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,resumeGenerator --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,resumeGenerator --> returnedException,org.mozilla.javascript.Interpreter$GeneratorState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,restartContinuation --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,restartContinuation --> result,org.mozilla.javascript.Interpreter$ContinuationJump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> instructionThreshold,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> lastInterpreterFrame,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> previousInterpreterInvocations,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> throwable,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> frozen,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> stack,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> sDbl,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> varSource,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> stackAttributes,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> itsStringTable,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> savedStackTop,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> pc,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> scope,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> fnOrScript,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> itsSourceFile,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> localShift,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> emptyStackTop,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> instructionCount,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> useActivation,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> securityDomain,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> noSuchMethodMethod,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> itsDoubleTable,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> thisObj,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> itsRegExpLiterals,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> literalIds,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> debuggerFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> longJumps,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> result,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> resultDbl,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> operation,org.mozilla.javascript.Interpreter$GeneratorState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> value,org.mozilla.javascript.Interpreter$GeneratorState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> branchFrame,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> capturedFrame,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> result,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> resultDbl,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> previousInterpreterInvocations,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> throwable,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> lastInterpreterFrame,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> pc,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> frozen,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> result,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> returnedException,org.mozilla.javascript.Interpreter$GeneratorState,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> pcPrevBranch,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> resultDbl,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> instructionCount,org.mozilla.javascript.Context,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> savedStackTop,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> savedCallOp,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> result,org.mozilla.javascript.Interpreter$ContinuationJump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> resultDbl,org.mozilla.javascript.Interpreter$ContinuationJump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> scope,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,interpretLoop --> pcSourceLineStart,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doInOrInstanceof --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doCompare --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doBitOp --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doDelName --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doGetElem --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doGetElem --> scope,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doSetElem --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doElemIncDec --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doElemIncDec --> pc,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doElemIncDec --> pc,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doCallSpecial --> pc,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doCallSpecial --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doCallSpecial --> scope,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doCallSpecial --> thisObj,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doCallSpecial --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doCallSpecial --> itsSourceFile,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doCallSpecial --> pc,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doSetConstVar --> useActivation,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doSetConstVar --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doSetConstVar --> argNames,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doSetConstVar --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doSetConstVar --> scope,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doSetVar --> useActivation,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doSetVar --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doSetVar --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doSetVar --> argNames,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doSetVar --> scope,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doGetVar --> useActivation,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doGetVar --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doGetVar --> argNames,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doGetVar --> scope,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doVarIncDec --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doVarIncDec --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doVarIncDec --> pc,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doVarIncDec --> useActivation,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doVarIncDec --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doVarIncDec --> argNames,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doVarIncDec --> scope,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doVarIncDec --> pc,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doRefMember --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doRefNsMember --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doRefNsName --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doRefNsName --> scope,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrameForNoSuchMethod --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrameForNoSuchMethod --> methodName,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrameForNoSuchMethod --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrameForNoSuchMethod --> savedStackTop,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrameForNoSuchMethod --> savedCallOp,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doEquals --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doShallowEquals --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> frozen,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> itsExceptionTable,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> pc,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> emptyStackTop,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> localShift,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> stack,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> branchFrame,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> capturedFrame,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> frameIndex,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> result,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> resultDbl,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> pc,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> pcPrevBranch,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> savedStackTop,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> scope,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,processThrowable --> throwable,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> operation,org.mozilla.javascript.Interpreter$GeneratorState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> stack,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> sDbl,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> pc,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> result,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> resultDbl,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> frozen,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> result,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> resultDbl,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> savedStackTop,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,freezeGenerator --> pc,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,thawGenerator --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,thawGenerator --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,thawGenerator --> pc,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,thawGenerator --> operation,org.mozilla.javascript.Interpreter$GeneratorState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,thawGenerator --> value,org.mozilla.javascript.Interpreter$GeneratorState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,thawGenerator --> itsSourceFile,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,thawGenerator --> stack,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,thawGenerator --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,thawGenerator --> frozen,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,thawGenerator --> pc,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> savedStackTop,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> savedCallOp,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> itsNeedsActivation,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> debugger,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> itsFunctionType,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> evalScriptFlag,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> itsNestedFunctions,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> itsMaxVars,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> itsMaxLocals,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> itsMaxFrameArray,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> itsMaxStack,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> stack,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> stackAttributes,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> sDbl,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> argCount,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> frameIndex,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> firstLinePC,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> frameIndex,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> frozen,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> fnOrScript,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> idata,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> stack,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> stackAttributes,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> sDbl,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> varSource,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> localShift,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> emptyStackTop,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> debuggerFrame,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> useActivation,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> thisObj,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> result,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> pc,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> pcPrevBranch,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> pcSourceLineStart,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> scope,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> savedStackTop,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,initFrame --> savedCallOp,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,isFrameEnterExitRequired --> debuggerFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,isFrameEnterExitRequired --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,isFrameEnterExitRequired --> itsNeedsActivation,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,enterFrame --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,enterFrame --> itsNeedsActivation,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,enterFrame --> debuggerFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,enterFrame --> scope,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,enterFrame --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,enterFrame --> thisObj,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,exitFrame --> idata,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,exitFrame --> itsNeedsActivation,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,exitFrame --> debuggerFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,exitFrame --> result,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,exitFrame --> result,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,exitFrame --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,exitFrame --> resultDbl,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,exitFrame --> resultDbl,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,setCallResult --> savedCallOp,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,setCallResult --> stack,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,setCallResult --> savedStackTop,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,setCallResult --> sDbl,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,setCallResult --> savedCallOp,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureContinuation --> lastInterpreterFrame,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureContinuation$2 --> frozen,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureContinuation$2 --> savedStackTop,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureContinuation$2 --> stack,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureContinuation$2 --> stackAttributes,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureContinuation$2 --> savedCallOp,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureContinuation$2 --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureContinuation$2 --> isContinuationsTopFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,captureContinuation$2 --> frozen,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,stack_int32 --> stack,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,stack_int32 --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,stack_int32 --> sDbl,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,stack_double --> stack,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,stack_double --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,stack_double --> sDbl,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,stack_boolean --> stack,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,stack_boolean --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,stack_boolean --> sDbl,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,stack_boolean --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doAdd --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,doArithmetic --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getArgsArray --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,getArgsArray --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,addInstructionCount --> instructionCount,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,addInstructionCount --> pc,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,addInstructionCount --> pcPrevBranch,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,addInstructionCount --> instructionThreshold,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter,addInstructionCount --> instructionCount,org.mozilla.javascript.Context,WRITE);
Call(METHOD,org.mozilla.javascript.Interpreter,<init> --> <init>,org.mozilla.javascript.Icode,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureFrameForGenerator --> cloneFrozen,org.mozilla.javascript.Interpreter$CallFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,compile --> <init>,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.Interpreter,compile --> compile,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.Interpreter,createScriptObject --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,createScriptObject --> createScript,org.mozilla.javascript.InterpretedFunction,);
Call(METHOD,org.mozilla.javascript.Interpreter,createFunctionObject --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,createFunctionObject --> createFunction,org.mozilla.javascript.InterpretedFunction,);
Call(METHOD,org.mozilla.javascript.Interpreter,getExceptionHandler --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,bytecodeSpan --> validBytecode,org.mozilla.javascript.Icode,);
Call(METHOD,org.mozilla.javascript.Interpreter,bytecodeSpan --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,getLineNumbers --> <init>,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.Interpreter,getLineNumbers --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,getLineNumbers --> put$2,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.Interpreter,getLineNumbers --> getKeys,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureStackInfo --> getCurrentContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureStackInfo --> size,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureStackInfo --> peek,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureStackInfo --> toArray$2,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureStackInfo --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,getPatchedStack --> getSystemProperty,org.mozilla.javascript.SecurityUtilities,);
Call(METHOD,org.mozilla.javascript.Interpreter,getPatchedStack --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,getScriptStack --> getSystemProperty,org.mozilla.javascript.SecurityUtilities,);
Call(METHOD,org.mozilla.javascript.Interpreter,getScriptStack --> renderJavaStyle,org.mozilla.javascript.ScriptStackElement,);
Call(METHOD,org.mozilla.javascript.Interpreter,getScriptStackElements --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,getScriptStackElements --> <init>,org.mozilla.javascript.ScriptStackElement,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFunction --> createFunction$2,org.mozilla.javascript.InterpretedFunction,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFunction --> initFunction,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpret --> hasTopCall,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpret --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpret --> callWithDomain,org.mozilla.javascript.SecurityController,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpret --> <init>$2,org.mozilla.javascript.Interpreter$CallFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,resumeGenerator --> <init>,org.mozilla.javascript.Interpreter$GeneratorState,);
Call(METHOD,org.mozilla.javascript.Interpreter,restartContinuation --> hasTopCall,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,restartContinuation --> doTopCall,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,restartContinuation --> getImplementation,org.mozilla.javascript.NativeContinuation,);
Call(METHOD,org.mozilla.javascript.Interpreter,restartContinuation --> <init>,org.mozilla.javascript.Interpreter$ContinuationJump,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> <init>,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> push,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> <init>$2,org.mozilla.javascript.NativeGenerator,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getStopIterationObject,org.mozilla.javascript.NativeIterator,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> <init>$2,org.mozilla.javascript.JavaScriptException,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> wrapBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> toUint32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> bind,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> setName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> strictSetName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> setConst,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getObjectPropNoWarn,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getObjectProp$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> setObjectProp,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> propIncrDecr,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> refGet,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> refSet,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> refDel,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> refIncrDecr,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getNameFunctionAndThis,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> lastStoredScriptable,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getPropFunctionAndThis$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getElemFunctionAndThis,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getValueFunctionAndThis,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> callRef,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> <init>$2,org.mozilla.javascript.Interpreter$CallFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> <init>,org.mozilla.javascript.Interpreter$ContinuationJump,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> isContinuationConstructor,org.mozilla.javascript.NativeContinuation,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> isApplyOrCall,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getCallable,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> createObject,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> notFunctionError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> construct,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> typeof,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> typeofName,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> name,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> nameIncrDecr$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> enterWith,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> leaveWith,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> newCatchScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> enumInit$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> enumNext,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> enumId,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> specialRef,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> nameRef,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> createFunction$2,org.mozilla.javascript.InterpretedFunction,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> wrapRegExp,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> newObjectLiteral$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> newArrayLiteral,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> enterDotQuery,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> updateDotQuery,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> leaveDotQuery,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> setDefaultNamespace,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> escapeAttributeValue,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> escapeTextValue,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> onDebuggerStatement,org.mozilla.javascript.debug.DebugFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> onLineChange,org.mozilla.javascript.debug.DebugFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> getExistingInt,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> cloneFrozen,org.mozilla.javascript.Interpreter$CallFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> onExceptionThrown,org.mozilla.javascript.debug.DebugFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> size,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.Interpreter,interpretLoop --> pop,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.Interpreter,doInOrInstanceof --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doInOrInstanceof --> in,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doInOrInstanceof --> instanceOf,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doInOrInstanceof --> wrapBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doCompare --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doCompare --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,doCompare --> cmp_LE,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doCompare --> cmp_LT,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doCompare --> wrapBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doDelName --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doDelName --> delete$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doGetElem --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doGetElem --> getObjectElem$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doGetElem --> getObjectIndex,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doSetElem --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doSetElem --> setObjectElem,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doSetElem --> setObjectIndex,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doElemIncDec --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doElemIncDec --> elemIncrDecr,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doCallSpecial --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doCallSpecial --> newSpecial,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doCallSpecial --> callSpecial,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doSetConstVar --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Interpreter,doSetConstVar --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doSetConstVar --> putConst,org.mozilla.javascript.ConstProperties,);
Call(METHOD,org.mozilla.javascript.Interpreter,doSetConstVar --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,doSetVar --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doSetVar --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Interpreter,doGetVar --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Interpreter,doVarIncDec --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doVarIncDec --> nameIncrDecr$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doRefMember --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doRefMember --> memberRef,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doRefNsMember --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doRefNsMember --> memberRef$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doRefNsName --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doRefNsName --> nameRef$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForNoSuchMethod --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForNoSuchMethod --> newArray$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForNoSuchMethod --> <init>$2,org.mozilla.javascript.Interpreter$CallFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,doEquals --> eqNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doEquals --> eq,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doShallowEquals --> shallowEq,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,processThrowable --> cloneFrozen,org.mozilla.javascript.Interpreter$CallFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,processThrowable --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,freezeGenerator --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,freezeGenerator --> exitActivationFunction,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,freezeGenerator --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,thawGenerator --> <init>$2,org.mozilla.javascript.JavaScriptException,);
Call(METHOD,org.mozilla.javascript.Interpreter,thawGenerator --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> getTopCallScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> <init>$2,org.mozilla.javascript.Interpreter$CallFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> isApply,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrameForApplyOrCall --> getApplyArguments,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> getFrame,org.mozilla.javascript.debug.Debugger,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> createFunctionActivation,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> initScript,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> getParamAndVarCount,org.mozilla.javascript.InterpreterData,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> getParamOrVarConst,org.mozilla.javascript.InterpreterData,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> getMaximumInterpreterStackDepth,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Interpreter,initFrame --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Interpreter,enterFrame --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,enterFrame --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Interpreter,enterFrame --> onEnter,org.mozilla.javascript.debug.DebugFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,enterFrame --> enterActivationFunction,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,exitFrame --> exitActivationFunction,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,exitFrame --> onExit,org.mozilla.javascript.debug.DebugFrame,);
Call(METHOD,org.mozilla.javascript.Interpreter,exitFrame --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,setCallResult --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureContinuation$2 --> <init>,org.mozilla.javascript.NativeContinuation,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureContinuation$2 --> getTopCallScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureContinuation$2 --> setObjectProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureContinuation$2 --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Interpreter,captureContinuation$2 --> initImplementation,org.mozilla.javascript.NativeContinuation,);
Call(METHOD,org.mozilla.javascript.Interpreter,stack_int32 --> toInt32$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,stack_int32 --> toInt32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,stack_double --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,stack_boolean --> toBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doAdd --> add,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doAdd --> toCharSequence,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doAdd --> <init>,org.mozilla.javascript.ConsString,);
Call(METHOD,org.mozilla.javascript.Interpreter,doAdd --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,doAdd --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,getArgsArray --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Interpreter,addInstructionCount --> observeInstructionCount,org.mozilla.javascript.Context,);
EndClass 31
StartClass 32
Class(org.mozilla.javascript.SecurityUtilities,N,N,Public);
Method(<init>,void,Public,N,N);
Method(getSystemProperty,java.lang.String,Public,Y,N);
Method(getProtectionDomain,java.security.ProtectionDomain,Public,Y,N);
Method(getScriptProtectionDomain,java.security.ProtectionDomain,Public,Y,N);
Parameter(getSystemProperty,java.lang.String,);
Parameter(getProtectionDomain,java.lang.Class,);
Call(METHOD,org.mozilla.javascript.SecurityUtilities,getSystemProperty --> <init>,org.mozilla.javascript.SecurityUtilities$1,);
Call(METHOD,org.mozilla.javascript.SecurityUtilities,getProtectionDomain --> <init>,org.mozilla.javascript.SecurityUtilities$2,);
Call(METHOD,org.mozilla.javascript.SecurityUtilities,getScriptProtectionDomain --> <init>,org.mozilla.javascript.SecurityUtilities$3,);
EndClass 32
StartClass 33
Class(org.mozilla.javascript.Evaluator,Y,Y,Public);
Method(compile,java.lang.Object,Public,N,Y);
Method(createFunctionObject,org.mozilla.javascript.Function,Public,N,Y);
Method(createScriptObject,org.mozilla.javascript.Script,Public,N,Y);
Method(captureStackInfo,void,Public,N,Y);
Method(getSourcePositionFromStack,java.lang.String,Public,N,Y);
Method(getPatchedStack,java.lang.String,Public,N,Y);
Method(getScriptStack,java.util.List,Public,N,Y);
Method(setEvalScriptFlag,void,Public,N,Y);
Parameter(compile,org.mozilla.javascript.CompilerEnvirons,);
Parameter(compile,org.mozilla.javascript.ast.ScriptNode,);
Parameter(compile,java.lang.String,);
Parameter(compile,boolean,);
Parameter(createFunctionObject,org.mozilla.javascript.Context,);
Parameter(createFunctionObject,org.mozilla.javascript.Scriptable,);
Parameter(createFunctionObject,java.lang.Object,);
Parameter(createFunctionObject,java.lang.Object,);
Parameter(createScriptObject,java.lang.Object,);
Parameter(createScriptObject,java.lang.Object,);
Parameter(captureStackInfo,org.mozilla.javascript.RhinoException,);
Parameter(getSourcePositionFromStack,org.mozilla.javascript.Context,);
Parameter(getSourcePositionFromStack,int[],);
Parameter(getPatchedStack,org.mozilla.javascript.RhinoException,);
Parameter(getPatchedStack,java.lang.String,);
Parameter(getScriptStack,org.mozilla.javascript.RhinoException,java.lang.String);
Parameter(setEvalScriptFlag,org.mozilla.javascript.Script,);
EndClass 33
StartClass 34
Class(org.mozilla.javascript.EcmaError,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(errorName,java.lang.String,Private,N,N,);
Attribute(errorMessage,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(details,java.lang.String,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(getErrorMessage,java.lang.String,Public,N,N);
Method(getSourceName,java.lang.String,Public,N,N);
Method(getLineNumber,int,Public,N,N);
Method(getColumnNumber,int,Public,N,N);
Method(getLineSource,java.lang.String,Public,N,N);
Method(getErrorObject,org.mozilla.javascript.Scriptable,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,java.lang.String,);
SuperClass(org.mozilla.javascript.RhinoException);
Generalization(org.mozilla.javascript.RhinoException);
Call(METHOD,org.mozilla.javascript.EcmaError,<init>$2 --> <init>,org.mozilla.javascript.EcmaError,);
Call(ATTRIBUTE,org.mozilla.javascript.EcmaError,<init> --> errorName,org.mozilla.javascript.EcmaError,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.EcmaError,<init> --> errorMessage,org.mozilla.javascript.EcmaError,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.EcmaError,details --> errorName,org.mozilla.javascript.EcmaError,READ);
Call(ATTRIBUTE,org.mozilla.javascript.EcmaError,details --> errorMessage,org.mozilla.javascript.EcmaError,READ);
Call(ATTRIBUTE,org.mozilla.javascript.EcmaError,getName --> errorName,org.mozilla.javascript.EcmaError,READ);
Call(ATTRIBUTE,org.mozilla.javascript.EcmaError,getErrorMessage --> errorMessage,org.mozilla.javascript.EcmaError,READ);
Call(METHOD,org.mozilla.javascript.EcmaError,<init> --> <init>,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.EcmaError,<init> --> recordErrorOrigin,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.EcmaError,<init>$2 --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.EcmaError,getSourceName --> sourceName,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.EcmaError,getLineNumber --> lineNumber,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.EcmaError,getColumnNumber --> columnNumber,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.EcmaError,getLineSource --> lineSource,org.mozilla.javascript.RhinoException,);
EndClass 34
StartClass 35
Class(org.mozilla.javascript.WrappedException,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(exception,java.lang.Throwable,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getWrappedException,java.lang.Throwable,Public,N,N);
Method(unwrap,java.lang.Object,Public,N,N);
Parameter(<init>,java.lang.Throwable,);
SuperClass(org.mozilla.javascript.EvaluatorException);
SuperClass(org.mozilla.javascript.RhinoException);
Generalization(org.mozilla.javascript.EvaluatorException);
Call(METHOD,org.mozilla.javascript.WrappedException,unwrap --> getWrappedException,org.mozilla.javascript.WrappedException,);
Call(ATTRIBUTE,org.mozilla.javascript.WrappedException,<init> --> exception,org.mozilla.javascript.WrappedException,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.WrappedException,getWrappedException --> exception,org.mozilla.javascript.WrappedException,READ);
Call(METHOD,org.mozilla.javascript.WrappedException,<init> --> <init>,org.mozilla.javascript.EvaluatorException,);
Call(METHOD,org.mozilla.javascript.WrappedException,<init> --> initCause,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.WrappedException,<init> --> getSourcePositionFromStack,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.WrappedException,<init> --> initSourceName,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.WrappedException,<init> --> initLineNumber,org.mozilla.javascript.RhinoException,);
EndClass 35
StartClass 36
Class(org.mozilla.javascript.JavaScriptException,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(value,java.lang.Object,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(details,java.lang.String,Public,N,N);
Method(getValue,java.lang.Object,Public,N,N);
Method(getSourceName,java.lang.String,Public,N,N);
Method(getLineNumber,int,Public,N,N);
Parameter(<init>,java.lang.Object,);
Parameter(<init>$2,java.lang.Object,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,int,);
SuperClass(org.mozilla.javascript.RhinoException);
Generalization(org.mozilla.javascript.RhinoException);
Call(METHOD,org.mozilla.javascript.JavaScriptException,<init> --> <init>$2,org.mozilla.javascript.JavaScriptException,);
Call(ATTRIBUTE,org.mozilla.javascript.JavaScriptException,<init>$2 --> value,org.mozilla.javascript.JavaScriptException,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaScriptException,details --> value,org.mozilla.javascript.JavaScriptException,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaScriptException,getValue --> value,org.mozilla.javascript.JavaScriptException,READ);
Call(METHOD,org.mozilla.javascript.JavaScriptException,<init>$2 --> <init>,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.JavaScriptException,<init>$2 --> recordErrorOrigin,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.JavaScriptException,<init>$2 --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaScriptException,<init>$2 --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaScriptException,<init>$2 --> has,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.JavaScriptException,<init>$2 --> put,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.JavaScriptException,<init>$2 --> setStackProvider,org.mozilla.javascript.NativeError,);
Call(METHOD,org.mozilla.javascript.JavaScriptException,details --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.JavaScriptException,details --> defaultObjectToString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.JavaScriptException,getSourceName --> sourceName,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.JavaScriptException,getLineNumber --> lineNumber,org.mozilla.javascript.RhinoException,);
EndClass 36
StartClass 37
Class(org.mozilla.javascript.BaseFunction,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(FUNCTION_TAG,java.lang.Object,Private,Y,Y,);
Attribute(Id_length,int,Private,Y,Y,);
Attribute(Id_arity,int,Private,Y,Y,);
Attribute(Id_name,int,Private,Y,Y,);
Attribute(Id_prototype,int,Private,Y,Y,);
Attribute(Id_arguments,int,Private,Y,Y,);
Attribute(MAX_INSTANCE_ID,int,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(Id_toString,int,Private,Y,Y,);
Attribute(Id_toSource,int,Private,Y,Y,);
Attribute(Id_apply,int,Private,Y,Y,);
Attribute(Id_call,int,Private,Y,Y,);
Attribute(Id_bind,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Attribute(prototypeProperty,java.lang.Object,Private,N,N,);
Attribute(prototypePropertyAttributes,int,Private,N,N,);
Method(init,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(getTypeOf,java.lang.String,Public,N,N);
Method(hasInstance,boolean,Public,N,N);
Method(getMaxInstanceId,int,Protected,N,N);
Method(findInstanceIdInfo,int,Protected,N,N);
Method(getInstanceIdName,java.lang.String,Protected,N,N);
Method(getInstanceIdValue,java.lang.Object,Protected,N,N);
Method(setInstanceIdValue,void,Protected,N,N);
Method(fillConstructorProperties,void,Protected,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(isApply,boolean,Public,Y,N);
Method(isApplyOrCall,boolean,Public,Y,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(realFunction,org.mozilla.javascript.BaseFunction,Private,N,N);
Method(setImmunePrototypeProperty,void,Public,N,N);
Method(getClassPrototype,org.mozilla.javascript.Scriptable,Protected,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(construct,org.mozilla.javascript.Scriptable,Public,N,N);
Method(createObject,org.mozilla.javascript.Scriptable,Public,N,N);
Method(decompile,java.lang.String,Public,N,N);
Method(getArity,int,Public,N,N);
Method(getLength,int,Public,N,N);
Method(getFunctionName,java.lang.String,Public,N,N);
Method(hasPrototypeProperty,boolean,Protected,N,N);
Method(getPrototypeProperty,java.lang.Object,Protected,N,N);
Method(setupDefaultPrototype,java.lang.Object,Private,N,N);
Method(getArguments,java.lang.Object,Private,N,N);
Method(jsConstructor,java.lang.Object,Private,Y,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(hasInstance,org.mozilla.javascript.Scriptable,);
Parameter(findInstanceIdInfo,java.lang.String,);
Parameter(getInstanceIdName,int,);
Parameter(getInstanceIdValue,int,);
Parameter(setInstanceIdValue,int,);
Parameter(setInstanceIdValue,java.lang.Object,);
Parameter(fillConstructorProperties,org.mozilla.javascript.IdFunctionObject,);
Parameter(initPrototypeId,int,);
Parameter(isApply,org.mozilla.javascript.IdFunctionObject,);
Parameter(isApplyOrCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(realFunction,org.mozilla.javascript.Scriptable,);
Parameter(realFunction,org.mozilla.javascript.IdFunctionObject,);
Parameter(setImmunePrototypeProperty,java.lang.Object,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(construct,org.mozilla.javascript.Context,);
Parameter(construct,org.mozilla.javascript.Scriptable,);
Parameter(construct,java.lang.Object[],);
Parameter(createObject,org.mozilla.javascript.Context,);
Parameter(createObject,org.mozilla.javascript.Scriptable,);
Parameter(decompile,int,);
Parameter(decompile,int,);
Parameter(jsConstructor,org.mozilla.javascript.Context,);
Parameter(jsConstructor,org.mozilla.javascript.Scriptable,);
Parameter(jsConstructor,java.lang.Object[],);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
SubClass(org.mozilla.javascript.commonjs.module.Require);
SubClass(org.mozilla.javascript.IdFunctionObject);
SubClass(org.mozilla.javascript.InterpretedFunction);
SubClass(org.mozilla.javascript.NativeFunction);
SubClass(org.mozilla.javascript.ScriptRuntime$1);
SubClass(org.mozilla.javascript.NativeScript);
SubClass(org.mozilla.javascript.BoundFunction);
SubClass(org.mozilla.javascript.FunctionObject);
SubClass(org.mozilla.javascript.FieldAndMethods);
SubClass(org.mozilla.javascript.NativeJavaMethod);
SubClass(org.mozilla.javascript.NativeJavaConstructor);
Generalization(org.mozilla.javascript.IdScriptableObject);
Realization(org.mozilla.javascript.Function);
Call(METHOD,org.mozilla.javascript.BaseFunction,init --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,hasInstance --> getFunctionName,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,findInstanceIdInfo --> hasPrototypeProperty,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getInstanceIdValue --> getLength,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getInstanceIdValue --> getArity,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getInstanceIdValue --> getFunctionName,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getInstanceIdValue --> getPrototypeProperty,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getInstanceIdValue --> getArguments,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> jsConstructor,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> realFunction,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> decompile,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getClassPrototype --> getPrototypeProperty,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,construct --> createObject,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,construct --> call,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,construct --> getFunctionName,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,construct --> getClassPrototype,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,createObject --> getClassPrototype,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,decompile --> getFunctionName,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,decompile --> getArity,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getPrototypeProperty --> setupDefaultPrototype,org.mozilla.javascript.BaseFunction,);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,init --> prototypePropertyAttributes,org.mozilla.javascript.BaseFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,<init> --> prototypePropertyAttributes,org.mozilla.javascript.BaseFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,<init>$2 --> prototypePropertyAttributes,org.mozilla.javascript.BaseFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,findInstanceIdInfo --> prototypePropertyAttributes,org.mozilla.javascript.BaseFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,setInstanceIdValue --> prototypePropertyAttributes,org.mozilla.javascript.BaseFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,setInstanceIdValue --> prototypeProperty,org.mozilla.javascript.BaseFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,initPrototypeId --> FUNCTION_TAG,org.mozilla.javascript.BaseFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,isApply --> FUNCTION_TAG,org.mozilla.javascript.BaseFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,isApplyOrCall --> FUNCTION_TAG,org.mozilla.javascript.BaseFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,execIdCall --> FUNCTION_TAG,org.mozilla.javascript.BaseFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,setImmunePrototypeProperty --> prototypePropertyAttributes,org.mozilla.javascript.BaseFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,setImmunePrototypeProperty --> prototypeProperty,org.mozilla.javascript.BaseFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,setImmunePrototypeProperty --> prototypePropertyAttributes,org.mozilla.javascript.BaseFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,hasPrototypeProperty --> prototypeProperty,org.mozilla.javascript.BaseFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,getPrototypeProperty --> prototypeProperty,org.mozilla.javascript.BaseFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,setupDefaultPrototype --> prototypeProperty,org.mozilla.javascript.BaseFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,setupDefaultPrototype --> prototypeProperty,org.mozilla.javascript.BaseFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,<clinit> --> FUNCTION_TAG,org.mozilla.javascript.BaseFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,setInstanceIdValue --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,setInstanceIdValue --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,execIdCall --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,realFunction --> FunctionClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,setImmunePrototypeProperty --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,call --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,getPrototypeProperty --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,getPrototypeProperty --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BaseFunction,getArguments --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(METHOD,org.mozilla.javascript.BaseFunction,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,<init>$2 --> <init>$2,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getTypeOf --> avoidObjectDetection,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,hasInstance --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,hasInstance --> jsDelegatesTo,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,hasInstance --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,findInstanceIdInfo --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,findInstanceIdInfo --> instanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getInstanceIdName --> getInstanceIdName,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getInstanceIdValue --> wrapInt,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getInstanceIdValue --> getInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,setInstanceIdValue --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.BaseFunction,setInstanceIdValue --> defaultPut,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,setInstanceIdValue --> setInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,fillConstructorProperties --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,fillConstructorProperties --> fillConstructorProperties,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,isApply --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,isApply --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,isApplyOrCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,isApplyOrCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> toInt32$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> toInt32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> applyOrCall,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> notFunctionError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> toObjectOrNull$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,execIdCall --> <init>,org.mozilla.javascript.BoundFunction,);
Call(METHOD,org.mozilla.javascript.BaseFunction,realFunction --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.BaseFunction,realFunction --> getDelegee,org.mozilla.javascript.Delegator,);
Call(METHOD,org.mozilla.javascript.BaseFunction,realFunction --> getFunctionName,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,realFunction --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getClassPrototype --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,construct --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.BaseFunction,construct --> setPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.BaseFunction,construct --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.BaseFunction,construct --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,construct --> setParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.BaseFunction,createObject --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,createObject --> setPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.BaseFunction,createObject --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,createObject --> setParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.BaseFunction,setupDefaultPrototype --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,setupDefaultPrototype --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,setupDefaultPrototype --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,setupDefaultPrototype --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getArguments --> defaultGet,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getArguments --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getArguments --> findFunctionActivation,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,getArguments --> get,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,jsConstructor --> getLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.BaseFunction,jsConstructor --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,jsConstructor --> getSourcePositionFromStack,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.BaseFunction,jsConstructor --> makeUrlForGeneratedScript,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BaseFunction,jsConstructor --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BaseFunction,jsConstructor --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.BaseFunction,jsConstructor --> forEval,org.mozilla.javascript.DefaultErrorReporter,);
Call(METHOD,org.mozilla.javascript.BaseFunction,jsConstructor --> createInterpreter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.BaseFunction,jsConstructor --> <init>$2,org.mozilla.javascript.JavaScriptException,);
Call(METHOD,org.mozilla.javascript.BaseFunction,jsConstructor --> compileFunction$2,org.mozilla.javascript.Context,);
EndClass 37
StartClass 38
Class(org.mozilla.javascript.commonjs.module.ModuleScriptProvider,Y,Y,Public);
Method(getModuleScript,org.mozilla.javascript.commonjs.module.ModuleScript,Public,N,Y);
Parameter(getModuleScript,org.mozilla.javascript.Context,);
Parameter(getModuleScript,java.lang.String,);
Parameter(getModuleScript,java.net.URI,);
Parameter(getModuleScript,java.net.URI,);
Parameter(getModuleScript,org.mozilla.javascript.Scriptable,);
EndClass 38
StartClass 39
Class(org.mozilla.javascript.commonjs.module.ModuleScript,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(script,org.mozilla.javascript.Script,Private,N,Y,);
Attribute(uri,java.net.URI,Private,N,Y,);
Attribute(base,java.net.URI,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getScript,org.mozilla.javascript.Script,Public,N,N);
Method(getUri,java.net.URI,Public,N,N);
Method(getBase,java.net.URI,Public,N,N);
Method(isSandboxed,boolean,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Script,);
Parameter(<init>,java.net.URI,);
Parameter(<init>,java.net.URI,);
Composition(org.mozilla.javascript.Script);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScript,<init> --> script,org.mozilla.javascript.commonjs.module.ModuleScript,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScript,<init> --> uri,org.mozilla.javascript.commonjs.module.ModuleScript,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScript,<init> --> base,org.mozilla.javascript.commonjs.module.ModuleScript,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScript,getScript --> script,org.mozilla.javascript.commonjs.module.ModuleScript,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScript,getUri --> uri,org.mozilla.javascript.commonjs.module.ModuleScript,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScript,getBase --> base,org.mozilla.javascript.commonjs.module.ModuleScript,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScript,isSandboxed --> base,org.mozilla.javascript.commonjs.module.ModuleScript,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.ModuleScript,isSandboxed --> uri,org.mozilla.javascript.commonjs.module.ModuleScript,READ);
EndClass 39
StartClass 40
Class(org.mozilla.javascript.ScriptableObject,N,Y,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(EMPTY,int,Public,Y,Y,);
Attribute(READONLY,int,Public,Y,Y,);
Attribute(DONTENUM,int,Public,Y,Y,);
Attribute(PERMANENT,int,Public,Y,Y,);
Attribute(UNINITIALIZED_CONST,int,Public,Y,Y,);
Attribute(CONST,int,Public,Y,Y,);
Attribute(prototypeObject,org.mozilla.javascript.Scriptable,Private,N,N,);
Attribute(parentScopeObject,org.mozilla.javascript.Scriptable,Private,N,N,);
Attribute(slots,org.mozilla.javascript.ScriptableObject$Slot[],Private,N,N,);
Attribute(count,int,Private,N,N,);
Attribute(firstAdded,org.mozilla.javascript.ScriptableObject$Slot,Private,N,N,);
Attribute(lastAdded,org.mozilla.javascript.ScriptableObject$Slot,Private,N,N,);
Attribute(associatedValues,java.util.Map,Private,N,N,java.lang.Object;java.lang.Object);
Attribute(SLOT_QUERY,int,Private,Y,Y,);
Attribute(SLOT_MODIFY,int,Private,Y,Y,);
Attribute(SLOT_MODIFY_CONST,int,Private,Y,Y,);
Attribute(SLOT_MODIFY_GETTER_SETTER,int,Private,Y,Y,);
Attribute(SLOT_CONVERT_ACCESSOR_TO_DATA,int,Private,Y,Y,);
Attribute(INITIAL_SLOT_SIZE,int,Private,Y,Y,);
Attribute(isExtensible,boolean,Private,N,N,);
Attribute($assertionsDisabled,boolean,Public,Y,Y,);
Method(buildDataDescriptor,org.mozilla.javascript.ScriptableObject,Protected,Y,N);
Method(checkValidAttributes,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getTypeOf,java.lang.String,Public,N,N);
Method(getClassName,java.lang.String,Public,N,Y);
Method(has,boolean,Public,N,N);
Method(has$2,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(get$2,java.lang.Object,Public,N,N);
Method(put,void,Public,N,N);
Method(put$2,void,Public,N,N);
Method(delete,void,Public,N,N);
Method(delete$2,void,Public,N,N);
Method(putConst,void,Public,N,N);
Method(defineConst,void,Public,N,N);
Method(isConst,boolean,Public,N,N);
Method(getAttributes,int,Public,N,N);
Method(getAttributes$2,int,Public,N,N);
Method(setAttributes,void,Public,N,N);
Method(setAttributes$2,void,Public,N,N);
Method(getAttributes$3,int,Public,N,N);
Method(getAttributes$4,int,Public,N,N);
Method(setAttributes$3,void,Public,N,N);
Method(setAttributes$4,void,Public,N,N);
Method(setGetterOrSetter,void,Public,N,N);
Method(setGetterOrSetter$2,void,Private,N,N);
Method(getGetterOrSetter,java.lang.Object,Public,N,N);
Method(isGetterOrSetter,boolean,Protected,N,N);
Method(addLazilyInitializedValue,void,Public,N,N);
Method(getPrototype,org.mozilla.javascript.Scriptable,Public,N,N);
Method(setPrototype,void,Public,N,N);
Method(getParentScope,org.mozilla.javascript.Scriptable,Public,N,N);
Method(setParentScope,void,Public,N,N);
Method(getIds,java.lang.Object[],Public,N,N);
Method(getAllIds,java.lang.Object[],Public,N,N);
Method(getDefaultValue,java.lang.Object,Public,N,N);
Method(getDefaultValue$2,java.lang.Object,Public,Y,N);
Method(hasInstance,boolean,Public,N,N);
Method(avoidObjectDetection,boolean,Public,N,N);
Method(equivalentValues,java.lang.Object,Protected,N,N);
Method(defineClass,void,Public,Y,N);
Method(defineClass$2,void,Public,Y,N);
Method(defineClass$3,java.lang.String,Public,Y,N);
Method(buildClassCtor,org.mozilla.javascript.BaseFunction,Public,Y,N);
Method(findAnnotatedMember,java.lang.reflect.Member,Private,Y,N);
Method(findSetterMethod,java.lang.reflect.Method,Private,Y,N);
Method(getPropertyName,java.lang.String,Private,Y,N);
Method(extendsScriptable,java.lang.Class,Private,Y,N);
Method(defineProperty,void,Public,N,N);
Method(defineProperty$2,void,Public,Y,N);
Method(defineConstProperty,void,Public,Y,N);
Method(defineProperty$3,void,Public,N,N);
Method(defineProperty$4,void,Public,N,N);
Method(defineOwnProperties,void,Public,N,N);
Method(defineOwnProperty,void,Public,N,N);
Method(defineOwnProperty$2,void,Protected,N,N);
Method(checkPropertyDefinition,void,Protected,N,N);
Method(checkPropertyChange,void,Protected,N,N);
Method(isTrue,boolean,Protected,Y,N);
Method(isFalse,boolean,Protected,Y,N);
Method(sameValue,boolean,Protected,N,N);
Method(applyDescriptorToAttributeBitset,int,Protected,N,N);
Method(isDataDescriptor,boolean,Protected,N,N);
Method(isAccessorDescriptor,boolean,Protected,N,N);
Method(isGenericDescriptor,boolean,Protected,N,N);
Method(ensureScriptable,org.mozilla.javascript.Scriptable,Protected,Y,N);
Method(ensureScriptableObject,org.mozilla.javascript.ScriptableObject,Protected,Y,N);
Method(defineFunctionProperties,void,Public,N,N);
Method(getObjectPrototype,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(getFunctionPrototype,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(getArrayPrototype,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(getClassPrototype,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(getTopLevelScope,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(isExtensible,boolean,Public,N,N);
Method(preventExtensions,void,Public,N,N);
Method(sealObject,void,Public,N,N);
Method(isSealed,boolean,Public,N,N);
Method(checkNotSealed,void,Private,N,N);
Method(getProperty,java.lang.Object,Public,Y,N);
Method(getTypedProperty,java.lang.Object,Public,Y,N);
Method(getProperty$2,java.lang.Object,Public,Y,N);
Method(getTypedProperty$2,java.lang.Object,Public,Y,N);
Method(hasProperty,boolean,Public,Y,N);
Method(redefineProperty,void,Public,Y,N);
Method(hasProperty$2,boolean,Public,Y,N);
Method(putProperty,void,Public,Y,N);
Method(putConstProperty,void,Public,Y,N);
Method(putProperty$2,void,Public,Y,N);
Method(deleteProperty,boolean,Public,Y,N);
Method(deleteProperty$2,boolean,Public,Y,N);
Method(getPropertyIds,java.lang.Object[],Public,Y,N);
Method(callMethod,java.lang.Object,Public,Y,N);
Method(callMethod$2,java.lang.Object,Public,Y,N);
Method(getBase,org.mozilla.javascript.Scriptable,Private,Y,N);
Method(getBase$2,org.mozilla.javascript.Scriptable,Private,Y,N);
Method(getAssociatedValue,java.lang.Object,Public,N,N);
Method(getTopScopeValue,java.lang.Object,Public,Y,N);
Method(associateValue,java.lang.Object,Public,N,N);
Method(putImpl,boolean,Private,N,N);
Method(putConstImpl,boolean,Private,N,N);
Method(findAttributeSlot,org.mozilla.javascript.ScriptableObject$Slot,Private,N,N);
Method(unwrapSlot,org.mozilla.javascript.ScriptableObject$Slot,Private,Y,N);
Method(getSlot,org.mozilla.javascript.ScriptableObject$Slot,Private,N,N);
Method(createSlot,org.mozilla.javascript.ScriptableObject$Slot,Private,N,N);
Method(removeSlot,void,Private,N,N);
Method(getSlotIndex,int,Private,Y,N);
Method(copyTable,void,Private,Y,N);
Method(addKnownAbsentSlot,void,Private,Y,N);
Method(getIds$2,java.lang.Object[],Public,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(getOwnPropertyDescriptor,org.mozilla.javascript.ScriptableObject,Protected,N,N);
Method(getSlot$2,org.mozilla.javascript.ScriptableObject$Slot,Protected,N,N);
Method(size,int,Public,N,N);
Method(isEmpty,boolean,Public,N,N);
Method(get$3,java.lang.Object,Public,N,N);
Method(access$100,org.mozilla.javascript.ScriptableObject$Slot,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(buildDataDescriptor,org.mozilla.javascript.Scriptable,);
Parameter(buildDataDescriptor,java.lang.Object,);
Parameter(buildDataDescriptor,int,);
Parameter(checkValidAttributes,int,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(has,java.lang.String,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(has$2,int,);
Parameter(has$2,org.mozilla.javascript.Scriptable,);
Parameter(get,java.lang.String,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(get$2,int,);
Parameter(get$2,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.String,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(put$2,int,);
Parameter(put$2,org.mozilla.javascript.Scriptable,);
Parameter(put$2,java.lang.Object,);
Parameter(delete,java.lang.String,);
Parameter(delete$2,int,);
Parameter(putConst,java.lang.String,);
Parameter(putConst,org.mozilla.javascript.Scriptable,);
Parameter(putConst,java.lang.Object,);
Parameter(defineConst,java.lang.String,);
Parameter(defineConst,org.mozilla.javascript.Scriptable,);
Parameter(isConst,java.lang.String,);
Parameter(getAttributes,java.lang.String,);
Parameter(getAttributes,org.mozilla.javascript.Scriptable,);
Parameter(getAttributes$2,int,);
Parameter(getAttributes$2,org.mozilla.javascript.Scriptable,);
Parameter(setAttributes,java.lang.String,);
Parameter(setAttributes,org.mozilla.javascript.Scriptable,);
Parameter(setAttributes,int,);
Parameter(setAttributes$2,int,);
Parameter(setAttributes$2,org.mozilla.javascript.Scriptable,);
Parameter(setAttributes$2,int,);
Parameter(getAttributes$3,java.lang.String,);
Parameter(getAttributes$4,int,);
Parameter(setAttributes$3,java.lang.String,);
Parameter(setAttributes$3,int,);
Parameter(setAttributes$4,int,);
Parameter(setAttributes$4,int,);
Parameter(setGetterOrSetter,java.lang.String,);
Parameter(setGetterOrSetter,int,);
Parameter(setGetterOrSetter,org.mozilla.javascript.Callable,);
Parameter(setGetterOrSetter,boolean,);
Parameter(setGetterOrSetter$2,java.lang.String,);
Parameter(setGetterOrSetter$2,int,);
Parameter(setGetterOrSetter$2,org.mozilla.javascript.Callable,);
Parameter(setGetterOrSetter$2,boolean,);
Parameter(setGetterOrSetter$2,boolean,);
Parameter(getGetterOrSetter,java.lang.String,);
Parameter(getGetterOrSetter,int,);
Parameter(getGetterOrSetter,boolean,);
Parameter(isGetterOrSetter,java.lang.String,);
Parameter(isGetterOrSetter,int,);
Parameter(isGetterOrSetter,boolean,);
Parameter(addLazilyInitializedValue,java.lang.String,);
Parameter(addLazilyInitializedValue,int,);
Parameter(addLazilyInitializedValue,org.mozilla.javascript.LazilyLoadedCtor,);
Parameter(addLazilyInitializedValue,int,);
Parameter(setPrototype,org.mozilla.javascript.Scriptable,);
Parameter(setParentScope,org.mozilla.javascript.Scriptable,);
Parameter(getDefaultValue,java.lang.Class,);
Parameter(getDefaultValue$2,org.mozilla.javascript.Scriptable,);
Parameter(getDefaultValue$2,java.lang.Class,);
Parameter(hasInstance,org.mozilla.javascript.Scriptable,);
Parameter(equivalentValues,java.lang.Object,);
Parameter(defineClass,org.mozilla.javascript.Scriptable,);
Parameter(defineClass,java.lang.Class,);
Parameter(defineClass$2,org.mozilla.javascript.Scriptable,);
Parameter(defineClass$2,java.lang.Class,);
Parameter(defineClass$2,boolean,);
Parameter(defineClass$3,org.mozilla.javascript.Scriptable,);
Parameter(defineClass$3,java.lang.Class,);
Parameter(defineClass$3,boolean,);
Parameter(defineClass$3,boolean,);
Parameter(buildClassCtor,org.mozilla.javascript.Scriptable,);
Parameter(buildClassCtor,java.lang.Class,);
Parameter(buildClassCtor,boolean,);
Parameter(buildClassCtor,boolean,);
Parameter(findAnnotatedMember,java.lang.reflect.AccessibleObject[],);
Parameter(findAnnotatedMember,java.lang.Class,);
Parameter(findSetterMethod,java.lang.reflect.Method[],);
Parameter(findSetterMethod,java.lang.String,);
Parameter(findSetterMethod,java.lang.String,);
Parameter(getPropertyName,java.lang.String,);
Parameter(getPropertyName,java.lang.String,);
Parameter(getPropertyName,java.lang.annotation.Annotation,);
Parameter(extendsScriptable,java.lang.Class,);
Parameter(defineProperty,java.lang.String,);
Parameter(defineProperty,java.lang.Object,);
Parameter(defineProperty,int,);
Parameter(defineProperty$2,org.mozilla.javascript.Scriptable,);
Parameter(defineProperty$2,java.lang.String,);
Parameter(defineProperty$2,java.lang.Object,);
Parameter(defineProperty$2,int,);
Parameter(defineConstProperty,org.mozilla.javascript.Scriptable,);
Parameter(defineConstProperty,java.lang.String,);
Parameter(defineProperty$3,java.lang.String,);
Parameter(defineProperty$3,java.lang.Class,);
Parameter(defineProperty$3,int,);
Parameter(defineProperty$4,java.lang.String,);
Parameter(defineProperty$4,java.lang.Object,);
Parameter(defineProperty$4,java.lang.reflect.Method,);
Parameter(defineProperty$4,java.lang.reflect.Method,);
Parameter(defineProperty$4,int,);
Parameter(defineOwnProperties,org.mozilla.javascript.Context,);
Parameter(defineOwnProperties,org.mozilla.javascript.ScriptableObject,);
Parameter(defineOwnProperty,org.mozilla.javascript.Context,);
Parameter(defineOwnProperty,java.lang.Object,);
Parameter(defineOwnProperty,org.mozilla.javascript.ScriptableObject,);
Parameter(defineOwnProperty$2,org.mozilla.javascript.Context,);
Parameter(defineOwnProperty$2,java.lang.Object,);
Parameter(defineOwnProperty$2,org.mozilla.javascript.ScriptableObject,);
Parameter(defineOwnProperty$2,boolean,);
Parameter(checkPropertyDefinition,org.mozilla.javascript.ScriptableObject,);
Parameter(checkPropertyChange,java.lang.String,);
Parameter(checkPropertyChange,org.mozilla.javascript.ScriptableObject,);
Parameter(checkPropertyChange,org.mozilla.javascript.ScriptableObject,);
Parameter(isTrue,java.lang.Object,);
Parameter(isFalse,java.lang.Object,);
Parameter(sameValue,java.lang.Object,);
Parameter(sameValue,java.lang.Object,);
Parameter(applyDescriptorToAttributeBitset,int,);
Parameter(applyDescriptorToAttributeBitset,org.mozilla.javascript.ScriptableObject,);
Parameter(isDataDescriptor,org.mozilla.javascript.ScriptableObject,);
Parameter(isAccessorDescriptor,org.mozilla.javascript.ScriptableObject,);
Parameter(isGenericDescriptor,org.mozilla.javascript.ScriptableObject,);
Parameter(ensureScriptable,java.lang.Object,);
Parameter(ensureScriptableObject,java.lang.Object,);
Parameter(defineFunctionProperties,java.lang.String[],);
Parameter(defineFunctionProperties,java.lang.Class,);
Parameter(defineFunctionProperties,int,);
Parameter(getObjectPrototype,org.mozilla.javascript.Scriptable,);
Parameter(getFunctionPrototype,org.mozilla.javascript.Scriptable,);
Parameter(getArrayPrototype,org.mozilla.javascript.Scriptable,);
Parameter(getClassPrototype,org.mozilla.javascript.Scriptable,);
Parameter(getClassPrototype,java.lang.String,);
Parameter(getTopLevelScope,org.mozilla.javascript.Scriptable,);
Parameter(checkNotSealed,java.lang.String,);
Parameter(checkNotSealed,int,);
Parameter(getProperty,org.mozilla.javascript.Scriptable,);
Parameter(getProperty,java.lang.String,);
Parameter(getTypedProperty,org.mozilla.javascript.Scriptable,);
Parameter(getTypedProperty,int,);
Parameter(getTypedProperty,java.lang.Class,);
Parameter(getProperty$2,org.mozilla.javascript.Scriptable,);
Parameter(getProperty$2,int,);
Parameter(getTypedProperty$2,org.mozilla.javascript.Scriptable,);
Parameter(getTypedProperty$2,java.lang.String,);
Parameter(getTypedProperty$2,java.lang.Class,);
Parameter(hasProperty,org.mozilla.javascript.Scriptable,);
Parameter(hasProperty,java.lang.String,);
Parameter(redefineProperty,org.mozilla.javascript.Scriptable,);
Parameter(redefineProperty,java.lang.String,);
Parameter(redefineProperty,boolean,);
Parameter(hasProperty$2,org.mozilla.javascript.Scriptable,);
Parameter(hasProperty$2,int,);
Parameter(putProperty,org.mozilla.javascript.Scriptable,);
Parameter(putProperty,java.lang.String,);
Parameter(putProperty,java.lang.Object,);
Parameter(putConstProperty,org.mozilla.javascript.Scriptable,);
Parameter(putConstProperty,java.lang.String,);
Parameter(putConstProperty,java.lang.Object,);
Parameter(putProperty$2,org.mozilla.javascript.Scriptable,);
Parameter(putProperty$2,int,);
Parameter(putProperty$2,java.lang.Object,);
Parameter(deleteProperty,org.mozilla.javascript.Scriptable,);
Parameter(deleteProperty,java.lang.String,);
Parameter(deleteProperty$2,org.mozilla.javascript.Scriptable,);
Parameter(deleteProperty$2,int,);
Parameter(getPropertyIds,org.mozilla.javascript.Scriptable,);
Parameter(callMethod,org.mozilla.javascript.Scriptable,);
Parameter(callMethod,java.lang.String,);
Parameter(callMethod,java.lang.Object[],);
Parameter(callMethod$2,org.mozilla.javascript.Context,);
Parameter(callMethod$2,org.mozilla.javascript.Scriptable,);
Parameter(callMethod$2,java.lang.String,);
Parameter(callMethod$2,java.lang.Object[],);
Parameter(getBase,org.mozilla.javascript.Scriptable,);
Parameter(getBase,java.lang.String,);
Parameter(getBase$2,org.mozilla.javascript.Scriptable,);
Parameter(getBase$2,int,);
Parameter(getAssociatedValue,java.lang.Object,);
Parameter(getTopScopeValue,org.mozilla.javascript.Scriptable,);
Parameter(getTopScopeValue,java.lang.Object,);
Parameter(associateValue,java.lang.Object,);
Parameter(associateValue,java.lang.Object,);
Parameter(putImpl,java.lang.String,);
Parameter(putImpl,int,);
Parameter(putImpl,org.mozilla.javascript.Scriptable,);
Parameter(putImpl,java.lang.Object,);
Parameter(putConstImpl,java.lang.String,);
Parameter(putConstImpl,int,);
Parameter(putConstImpl,org.mozilla.javascript.Scriptable,);
Parameter(putConstImpl,java.lang.Object,);
Parameter(putConstImpl,int,);
Parameter(findAttributeSlot,java.lang.String,);
Parameter(findAttributeSlot,int,);
Parameter(findAttributeSlot,int,);
Parameter(unwrapSlot,org.mozilla.javascript.ScriptableObject$Slot,);
Parameter(getSlot,java.lang.String,);
Parameter(getSlot,int,);
Parameter(getSlot,int,);
Parameter(createSlot,java.lang.String,);
Parameter(createSlot,int,);
Parameter(createSlot,int,);
Parameter(removeSlot,java.lang.String,);
Parameter(removeSlot,int,);
Parameter(getSlotIndex,int,);
Parameter(getSlotIndex,int,);
Parameter(copyTable,org.mozilla.javascript.ScriptableObject$Slot[],);
Parameter(copyTable,org.mozilla.javascript.ScriptableObject$Slot[],);
Parameter(copyTable,int,);
Parameter(addKnownAbsentSlot,org.mozilla.javascript.ScriptableObject$Slot[],);
Parameter(addKnownAbsentSlot,org.mozilla.javascript.ScriptableObject$Slot,);
Parameter(addKnownAbsentSlot,int,);
Parameter(getIds$2,boolean,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Parameter(getOwnPropertyDescriptor,org.mozilla.javascript.Context,);
Parameter(getOwnPropertyDescriptor,java.lang.Object,);
Parameter(getSlot$2,org.mozilla.javascript.Context,);
Parameter(getSlot$2,java.lang.Object,);
Parameter(getSlot$2,int,);
Parameter(get$3,java.lang.Object,);
Parameter(access$100,org.mozilla.javascript.ScriptableObject$Slot,);
SubClass(org.mozilla.javascript.NativeArray);
SubClass(org.mozilla.javascript.commonjs.module.ModuleScope);
SubClass(org.mozilla.javascript.tools.shell.Global);
SubClass(org.mozilla.javascript.ImporterTopLevel);
SubClass(org.mozilla.javascript.TopLevel);
SubClass(org.mozilla.javascript.commonjs.module.Require);
SubClass(org.mozilla.javascript.IdFunctionObject);
SubClass(org.mozilla.javascript.InterpretedFunction);
SubClass(org.mozilla.javascript.NativeFunction);
SubClass(org.mozilla.javascript.ScriptRuntime$1);
SubClass(org.mozilla.javascript.NativeScript);
SubClass(org.mozilla.javascript.BoundFunction);
SubClass(org.mozilla.javascript.FunctionObject);
SubClass(org.mozilla.javascript.FieldAndMethods);
SubClass(org.mozilla.javascript.NativeJavaMethod);
SubClass(org.mozilla.javascript.NativeJavaConstructor);
SubClass(org.mozilla.javascript.BaseFunction);
SubClass(org.mozilla.javascript.NativeIterator$StopIteration);
SubClass(org.mozilla.javascript.NativeObject);
SubClass(org.mozilla.javascript.NativeString);
SubClass(org.mozilla.javascript.NativeCall);
SubClass(org.mozilla.javascript.NativeContinuation);
SubClass(org.mozilla.javascript.NativeBoolean);
SubClass(org.mozilla.javascript.NativeDate);
SubClass(org.mozilla.javascript.NativeError);
SubClass(org.mozilla.javascript.Arguments);
SubClass(org.mozilla.javascript.NativeJSON);
SubClass(org.mozilla.javascript.xml.XMLObject);
SubClass(org.mozilla.javascript.NativeMath);
SubClass(org.mozilla.javascript.NativeIterator);
SubClass(org.mozilla.javascript.NativeNumber);
SubClass(org.mozilla.javascript.NativeGenerator);
SubClass(org.mozilla.javascript.IdScriptableObject);
SubClass(org.mozilla.javascript.tools.shell.Environment);
SubClass(org.mozilla.javascript.NativeJavaPackage);
Realization(org.mozilla.javascript.Scriptable);
Realization(org.mozilla.javascript.debug.DebuggableObject);
Realization(org.mozilla.javascript.ConstProperties);
Composition(org.mozilla.javascript.Scriptable);
Composition(org.mozilla.javascript.ScriptableObject$Slot);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildDataDescriptor --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getTypeOf --> avoidObjectDetection,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,has --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,has$2 --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,get --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,get$2 --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,put --> putImpl,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,put$2 --> putImpl,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,delete --> checkNotSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,delete --> removeSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,delete$2 --> checkNotSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,delete$2 --> removeSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConst --> putConstImpl,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineConst --> putConstImpl,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,isConst --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getAttributes --> getAttributes$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getAttributes$2 --> getAttributes$4,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setAttributes --> setAttributes$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setAttributes$2 --> setAttributes$4,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getAttributes$3 --> findAttributeSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getAttributes$4 --> findAttributeSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setAttributes$3 --> checkNotSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setAttributes$3 --> findAttributeSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setAttributes$4 --> checkNotSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setAttributes$4 --> findAttributeSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setGetterOrSetter --> setGetterOrSetter$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setGetterOrSetter$2 --> checkNotSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setGetterOrSetter$2 --> isExtensible,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setGetterOrSetter$2 --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setGetterOrSetter$2 --> unwrapSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getGetterOrSetter --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getGetterOrSetter --> unwrapSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,isGetterOrSetter --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,isGetterOrSetter --> unwrapSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,addLazilyInitializedValue --> checkNotSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,addLazilyInitializedValue --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getIds --> getIds$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getAllIds --> getIds$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getDefaultValue --> getDefaultValue$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineClass --> defineClass$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineClass$2 --> defineClass$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineClass$3 --> buildClassCtor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineClass$3 --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> extendsScriptable,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> defineClass$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> getClassPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> findAnnotatedMember,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> getPropertyName,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> findSetterMethod,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> defineProperty$4,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty --> checkNotSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty --> put,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty --> setAttributes$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty$2 --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineConstProperty --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty$3 --> defineProperty$4,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty$4 --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperties --> getIds,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperties --> get$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperties --> ensureScriptableObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperties --> checkPropertyDefinition,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperties --> defineOwnProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty --> checkPropertyDefinition,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty --> defineOwnProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> getSlot$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> checkPropertyChange,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> isAccessorDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> applyDescriptorToAttributeBitset,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> unwrapSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> isDataDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyDefinition --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyDefinition --> isDataDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyDefinition --> isAccessorDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyChange --> isExtensible,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyChange --> get,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyChange --> isFalse,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyChange --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyChange --> isTrue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyChange --> isDataDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyChange --> isAccessorDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyChange --> sameValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,isFalse --> isTrue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,applyDescriptorToAttributeBitset --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,isDataDescriptor --> hasProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,isAccessorDescriptor --> hasProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,isGenericDescriptor --> isDataDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,isGenericDescriptor --> isAccessorDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineFunctionProperties --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getObjectPrototype --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getFunctionPrototype --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getArrayPrototype --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getClassPrototype --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getClassPrototype --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkNotSealed --> isSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getTypedProperty --> getProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getTypedProperty$2 --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,hasProperty --> getBase,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,redefineProperty --> getBase,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,hasProperty$2 --> getBase$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putProperty --> getBase,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConstProperty --> getBase,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putProperty$2 --> getBase$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,deleteProperty --> getBase,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,deleteProperty$2 --> getBase$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,callMethod --> callMethod$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,callMethod$2 --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,callMethod$2 --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getTopScopeValue --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getTopScopeValue --> getAssociatedValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putImpl --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putImpl --> checkNotSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConstImpl --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConstImpl --> isExtensible,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConstImpl --> checkNotSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConstImpl --> unwrapSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,findAttributeSlot --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getSlot --> getSlotIndex,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getSlot --> unwrapSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getSlot --> createSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,createSlot --> getSlotIndex,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,createSlot --> unwrapSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,createSlot --> copyTable,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,createSlot --> addKnownAbsentSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,removeSlot --> getSlotIndex,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,removeSlot --> unwrapSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,copyTable --> getSlotIndex,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,copyTable --> addKnownAbsentSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,readObject --> getSlotIndex,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,readObject --> addKnownAbsentSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getOwnPropertyDescriptor --> getSlot$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getOwnPropertyDescriptor --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getSlot$2 --> getSlot,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,get$3 --> get,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,get$3 --> get$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,access$100 --> unwrapSlot,org.mozilla.javascript.ScriptableObject,);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,<init> --> isExtensible,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,<init>$2 --> isExtensible,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,<init>$2 --> parentScopeObject,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,<init>$2 --> prototypeObject,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getPrototype --> prototypeObject,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,setPrototype --> prototypeObject,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getParentScope --> parentScopeObject,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,setParentScope --> parentScopeObject,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,isExtensible --> isExtensible,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,preventExtensions --> isExtensible,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,sealObject --> count,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,sealObject --> firstAdded,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,sealObject --> count,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,isSealed --> count,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getAssociatedValue --> associatedValues,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,associateValue --> associatedValues,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,associateValue --> associatedValues,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,putImpl --> isExtensible,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,putImpl --> count,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,putConstImpl --> $assertionsDisabled,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getSlot --> slots,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> slots,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> count,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> lastAdded,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> firstAdded,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> slots,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> firstAdded,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> lastAdded,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> count,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> slots,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> count,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> firstAdded,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> lastAdded,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> count,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> firstAdded,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> lastAdded,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getIds$2 --> slots,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getIds$2 --> firstAdded,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,writeObject --> count,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,writeObject --> slots,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,writeObject --> firstAdded,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,writeObject --> firstAdded,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,readObject --> count,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,readObject --> lastAdded,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,readObject --> slots,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,readObject --> slots,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,readObject --> lastAdded,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,readObject --> firstAdded,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,size --> count,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,isEmpty --> count,org.mozilla.javascript.ScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,<clinit> --> $assertionsDisabled,org.mozilla.javascript.ScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,buildDataDescriptor --> Object,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,get --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,get$2 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineConst --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,setGetterOrSetter$2 --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,setGetterOrSetter$2 --> setter,org.mozilla.javascript.ScriptableObject$GetterSlot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,setGetterOrSetter$2 --> getter,org.mozilla.javascript.ScriptableObject$GetterSlot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,setGetterOrSetter$2 --> value,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getGetterOrSetter --> setter,org.mozilla.javascript.ScriptableObject$GetterSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getGetterOrSetter --> getter,org.mozilla.javascript.ScriptableObject$GetterSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getGetterOrSetter --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,isGetterOrSetter --> setter,org.mozilla.javascript.ScriptableObject$GetterSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,isGetterOrSetter --> getter,org.mozilla.javascript.ScriptableObject$GetterSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,addLazilyInitializedValue --> getter,org.mozilla.javascript.ScriptableObject$GetterSlot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,addLazilyInitializedValue --> setter,org.mozilla.javascript.ScriptableObject$GetterSlot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,addLazilyInitializedValue --> value,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> StringClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> ScriptableClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> FunctionClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> BooleanClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> ByteClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> ShortClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> IntegerClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> FloatClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> DoubleClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,equivalentValues --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,buildClassCtor --> ContextClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,buildClassCtor --> ScriptableClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,buildClassCtor --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,extendsScriptable --> ScriptableClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineConstProperty --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineProperty$4 --> ScriptableClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineProperty$4 --> ScriptableObjectClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineProperty$4 --> delegateTo,org.mozilla.javascript.MemberBox,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineProperty$4 --> getter,org.mozilla.javascript.ScriptableObject$GetterSlot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineProperty$4 --> setter,org.mozilla.javascript.ScriptableObject$GetterSlot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> getter,org.mozilla.javascript.ScriptableObject$GetterSlot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> setter,org.mozilla.javascript.ScriptableObject$GetterSlot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> value,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,checkPropertyDefinition --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,checkPropertyDefinition --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,isTrue --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,sameValue --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,sameValue --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,applyDescriptorToAttributeBitset --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getObjectPrototype --> Object,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getFunctionPrototype --> Function,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getArrayPrototype --> Array,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,sealObject --> value,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,sealObject --> orderedNext,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,sealObject --> value,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getProperty --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getTypedProperty --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getProperty$2 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getTypedProperty$2 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getPropertyIds --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,putConstImpl --> value,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,unwrapSlot --> slot,org.mozilla.javascript.ScriptableObject$RelinkedSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getSlot --> name,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getSlot --> indexOrHash,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getSlot --> next,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> indexOrHash,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> name,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> next,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> value,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> value,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> next,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,createSlot --> orderedNext,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> indexOrHash,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> name,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> next,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> orderedNext,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> next,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,removeSlot --> orderedNext,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,copyTable --> indexOrHash,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,copyTable --> next,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,addKnownAbsentSlot --> next,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,addKnownAbsentSlot --> next,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getIds$2 --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getIds$2 --> wasDeleted,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getIds$2 --> orderedNext,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getIds$2 --> name,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,getIds$2 --> indexOrHash,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,writeObject --> wasDeleted,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,writeObject --> orderedNext,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,writeObject --> orderedNext,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,readObject --> indexOrHash,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,readObject --> orderedNext,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,get$3 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject,get$3 --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildDataDescriptor --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildDataDescriptor --> setBuiltinProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,get --> getValue,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,get$2 --> getValue,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,put --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,put --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,put$2 --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,put$2 --> put$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConst --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConst --> putConst,org.mozilla.javascript.ConstProperties,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConst --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineConst --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineConst --> defineConst,org.mozilla.javascript.ConstProperties,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,isConst --> getAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getAttributes$3 --> getAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getAttributes$4 --> getAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setAttributes$3 --> setAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setAttributes$4 --> setAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setGetterOrSetter$2 --> getAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,setGetterOrSetter$2 --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,addLazilyInitializedValue --> setAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getDefaultValue$2 --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,hasInstance --> jsDelegatesTo,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineClass$3 --> getClassPrototype,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineClass$3 --> getClassName,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> getMethodList,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> getClassName,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> getPrototypeProperty,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> setPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> findSingleMethod,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> <init>,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> isVarArgsMethod,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> initAsConstructor,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> reportRuntimeError2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,buildClassCtor --> isVarArgsConstructor,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,findSetterMethod --> value,org.mozilla.javascript.annotations.JSSetter,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getPropertyName --> value,org.mozilla.javascript.annotations.JSGetter,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getPropertyName --> value,org.mozilla.javascript.annotations.JSFunction,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getPropertyName --> value,org.mozilla.javascript.annotations.JSStaticFunction,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty$2 --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineConstProperty --> defineConst,org.mozilla.javascript.ConstProperties,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty$3 --> getMethodList,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty$3 --> findSingleMethod,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty$4 --> <init>,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty$4 --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineProperty$4 --> setAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> getPropertyDescriptor,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> getAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineOwnProperty$2 --> setAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyDefinition --> notFunctionError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyDefinition --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyChange --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkPropertyChange --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,isTrue --> toBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,sameValue --> shallowEq,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,applyDescriptorToAttributeBitset --> toBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,ensureScriptable --> typeof,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,ensureScriptable --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,ensureScriptableObject --> typeof,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,ensureScriptableObject --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineFunctionProperties --> getMethodList,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineFunctionProperties --> findSingleMethod,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineFunctionProperties --> reportRuntimeError2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,defineFunctionProperties --> <init>,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getObjectPrototype --> getBuiltinPrototype,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getFunctionPrototype --> getBuiltinPrototype,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getArrayPrototype --> getBuiltinPrototype,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getClassPrototype --> getPrototypeProperty,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getClassPrototype --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getTopLevelScope --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,sealObject --> init,org.mozilla.javascript.LazilyLoadedCtor,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,sealObject --> getValue,org.mozilla.javascript.LazilyLoadedCtor,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,checkNotSealed --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getProperty --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getProperty --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getTypedProperty --> jsToJava,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getProperty$2 --> get$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getProperty$2 --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getTypedProperty$2 --> jsToJava,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,redefineProperty --> isConst,org.mozilla.javascript.ConstProperties,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,redefineProperty --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putProperty --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConstProperty --> putConst,org.mozilla.javascript.ConstProperties,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putProperty$2 --> put$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,deleteProperty --> delete,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,deleteProperty --> has,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,deleteProperty$2 --> delete$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,deleteProperty$2 --> has$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getPropertyIds --> getIds,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getPropertyIds --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getPropertyIds --> <init>$2,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getPropertyIds --> intern,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getPropertyIds --> getKeys,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,callMethod$2 --> notFunctionError$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,callMethod$2 --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,callMethod$2 --> call$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getBase --> has,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getBase --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getBase$2 --> has$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getBase$2 --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getTopScopeValue --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,associateValue --> initHash,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putImpl --> setValue,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConstImpl --> getAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConstImpl --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConstImpl --> setAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,putConstImpl --> setValue,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,findAttributeSlot --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,createSlot --> getAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,createSlot --> <init>,org.mozilla.javascript.ScriptableObject$GetterSlot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,createSlot --> <init>,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,createSlot --> markDeleted,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,createSlot --> setAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,removeSlot --> getAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,removeSlot --> markDeleted,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,copyTable --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,copyTable --> <init>,org.mozilla.javascript.ScriptableObject$RelinkedSlot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getIds$2 --> getAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getOwnPropertyDescriptor --> getPropertyDescriptor,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getSlot$2 --> toStringIdOrIndex,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,getSlot$2 --> lastIndexResult,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject,get$3 --> unwrap,org.mozilla.javascript.Wrapper,);
EndClass 40
StartClass 41
Class(org.mozilla.javascript.ContextFactory$GlobalSetter,Y,Y,Public);
Method(setContextFactoryGlobal,void,Public,N,Y);
Method(getContextFactoryGlobal,org.mozilla.javascript.ContextFactory,Public,N,Y);
Parameter(setContextFactoryGlobal,org.mozilla.javascript.ContextFactory,);
EndClass 41
StartClass 42
Class(org.mozilla.javascript.xml.XMLLib$Factory,N,Y,Public);
Method(<init>,void,Public,N,N);
Method(create,org.mozilla.javascript.xml.XMLLib$Factory,Public,Y,N);
Method(getImplementationClassName,java.lang.String,Public,N,Y);
Parameter(create,java.lang.String,);
SubClass(org.mozilla.javascript.xml.XMLLib$Factory$1);
Call(METHOD,org.mozilla.javascript.xml.XMLLib$Factory,create --> <init>,org.mozilla.javascript.xml.XMLLib$Factory$1,);
EndClass 42
StartClass 43
Class(org.mozilla.javascript.Callable,Y,Y,Public);
Method(call,java.lang.Object,Public,N,Y);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
EndClass 43
StartClass 44
Class(org.mozilla.javascript.ContextFactory$Listener,Y,Y,Public);
Method(contextCreated,void,Public,N,Y);
Method(contextReleased,void,Public,N,Y);
Parameter(contextCreated,org.mozilla.javascript.Context,);
Parameter(contextReleased,org.mozilla.javascript.Context,);
EndClass 44
StartClass 45
Class(org.mozilla.javascript.ConsString,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(s1,java.lang.CharSequence,Private,N,N,);
Attribute(s2,java.lang.CharSequence,Private,N,N,);
Attribute(length,int,Private,N,Y,);
Attribute(depth,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(writeReplace,java.lang.Object,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(flatten,java.lang.String,Private,N,N);
Method(appendTo,void,Private,N,N);
Method(appendFragment,void,Private,Y,N);
Method(length,int,Public,N,N);
Method(charAt,char,Public,N,N);
Method(subSequence,java.lang.CharSequence,Public,N,N);
Parameter(<init>,java.lang.CharSequence,);
Parameter(<init>,java.lang.CharSequence,);
Parameter(appendTo,java.lang.StringBuilder,);
Parameter(appendFragment,java.lang.CharSequence,);
Parameter(appendFragment,java.lang.StringBuilder,);
Parameter(charAt,int,);
Parameter(subSequence,int,);
Parameter(subSequence,int,);
Call(METHOD,org.mozilla.javascript.ConsString,<init> --> flatten,org.mozilla.javascript.ConsString,);
Call(METHOD,org.mozilla.javascript.ConsString,writeReplace --> toString,org.mozilla.javascript.ConsString,);
Call(METHOD,org.mozilla.javascript.ConsString,toString --> flatten,org.mozilla.javascript.ConsString,);
Call(METHOD,org.mozilla.javascript.ConsString,flatten --> appendTo,org.mozilla.javascript.ConsString,);
Call(METHOD,org.mozilla.javascript.ConsString,appendTo --> appendFragment,org.mozilla.javascript.ConsString,);
Call(METHOD,org.mozilla.javascript.ConsString,appendFragment --> appendTo,org.mozilla.javascript.ConsString,);
Call(METHOD,org.mozilla.javascript.ConsString,charAt --> flatten,org.mozilla.javascript.ConsString,);
Call(METHOD,org.mozilla.javascript.ConsString,subSequence --> flatten,org.mozilla.javascript.ConsString,);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,<init> --> depth,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,<init> --> s1,org.mozilla.javascript.ConsString,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,<init> --> s2,org.mozilla.javascript.ConsString,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,<init> --> length,org.mozilla.javascript.ConsString,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,<init> --> depth,org.mozilla.javascript.ConsString,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,toString --> depth,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,toString --> s1,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,flatten --> depth,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,flatten --> length,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,flatten --> s1,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,flatten --> s1,org.mozilla.javascript.ConsString,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,flatten --> s2,org.mozilla.javascript.ConsString,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,flatten --> depth,org.mozilla.javascript.ConsString,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,appendTo --> s1,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,appendTo --> s2,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,length --> length,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,charAt --> depth,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,charAt --> s1,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,subSequence --> depth,org.mozilla.javascript.ConsString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ConsString,subSequence --> s1,org.mozilla.javascript.ConsString,READ);
EndClass 45
StartClass 46
Class(org.mozilla.javascript.ContextFactory$1,N,N,NA);
Attribute(val$parent,java.lang.ClassLoader,Public,N,Y,);
Attribute(this$0,org.mozilla.javascript.ContextFactory,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,org.mozilla.javascript.DefiningClassLoader,Public,N,N);
Method(run$2,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.ContextFactory,);
Parameter(<init>,java.lang.ClassLoader,);
Composition(org.mozilla.javascript.ContextFactory);
Call(METHOD,org.mozilla.javascript.ContextFactory$1,run$2 --> run,org.mozilla.javascript.ContextFactory$1,);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory$1,<init> --> this$0,org.mozilla.javascript.ContextFactory$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory$1,<init> --> val$parent,org.mozilla.javascript.ContextFactory$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContextFactory$1,run --> val$parent,org.mozilla.javascript.ContextFactory$1,READ);
Call(METHOD,org.mozilla.javascript.ContextFactory$1,run --> <init>$2,org.mozilla.javascript.DefiningClassLoader,);
EndClass 46
StartClass 47
Class(org.mozilla.javascript.ContextFactory$1GlobalSetterImpl,N,N,NA);
Method(<init>,void,Public,N,N);
Method(setContextFactoryGlobal,void,Public,N,N);
Method(getContextFactoryGlobal,org.mozilla.javascript.ContextFactory,Public,N,N);
Parameter(setContextFactoryGlobal,org.mozilla.javascript.ContextFactory,);
Realization(org.mozilla.javascript.ContextFactory$GlobalSetter);
Call(METHOD,org.mozilla.javascript.ContextFactory$1GlobalSetterImpl,setContextFactoryGlobal --> <init>,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.ContextFactory$1GlobalSetterImpl,setContextFactoryGlobal --> access$002,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.ContextFactory$1GlobalSetterImpl,getContextFactoryGlobal --> access$000,org.mozilla.javascript.ContextFactory,);
EndClass 47
StartClass 48
Class(org.mozilla.javascript.IdScriptableObject,N,Y,Public);
Attribute(prototypeValues,org.mozilla.javascript.IdScriptableObject$PrototypeValues,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(defaultGet,java.lang.Object,Protected,N,N);
Method(defaultPut,void,Protected,N,N);
Method(has,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(put,void,Public,N,N);
Method(delete,void,Public,N,N);
Method(getAttributes,int,Public,N,N);
Method(setAttributes,void,Public,N,N);
Method(getIds,java.lang.Object[],Public,N,N);
Method(getMaxInstanceId,int,Protected,N,N);
Method(instanceIdInfo,int,Protected,Y,N);
Method(findInstanceIdInfo,int,Protected,N,N);
Method(getInstanceIdName,java.lang.String,Protected,N,N);
Method(getInstanceIdValue,java.lang.Object,Protected,N,N);
Method(setInstanceIdValue,void,Protected,N,N);
Method(setInstanceIdAttributes,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(exportAsJSClass,org.mozilla.javascript.IdFunctionObject,Public,N,N);
Method(hasPrototypeMap,boolean,Public,N,N);
Method(activatePrototypeMap,void,Public,N,N);
Method(initPrototypeMethod,void,Public,N,N);
Method(initPrototypeConstructor,void,Public,N,N);
Method(initPrototypeValue,void,Public,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(findPrototypeId,int,Protected,N,N);
Method(fillConstructorProperties,void,Protected,N,N);
Method(addIdFunctionProperty,void,Protected,N,N);
Method(incompatibleCallError,org.mozilla.javascript.EcmaError,Protected,Y,N);
Method(newIdFunction,org.mozilla.javascript.IdFunctionObject,Private,N,N);
Method(defineOwnProperty,void,Public,N,N);
Method(getOwnPropertyDescriptor,org.mozilla.javascript.ScriptableObject,Protected,N,N);
Method(getBuiltInDescriptor,org.mozilla.javascript.ScriptableObject,Private,N,N);
Method(readObject,void,Private,N,N);
Method(writeObject,void,Private,N,N);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(defaultGet,java.lang.String,);
Parameter(defaultPut,java.lang.String,);
Parameter(defaultPut,java.lang.Object,);
Parameter(has,java.lang.String,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(get,java.lang.String,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.String,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(delete,java.lang.String,);
Parameter(getAttributes,java.lang.String,);
Parameter(setAttributes,java.lang.String,);
Parameter(setAttributes,int,);
Parameter(getIds,boolean,);
Parameter(instanceIdInfo,int,);
Parameter(instanceIdInfo,int,);
Parameter(findInstanceIdInfo,java.lang.String,);
Parameter(getInstanceIdName,int,);
Parameter(getInstanceIdValue,int,);
Parameter(setInstanceIdValue,int,);
Parameter(setInstanceIdValue,java.lang.Object,);
Parameter(setInstanceIdAttributes,int,);
Parameter(setInstanceIdAttributes,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(exportAsJSClass,int,);
Parameter(exportAsJSClass,org.mozilla.javascript.Scriptable,);
Parameter(exportAsJSClass,boolean,);
Parameter(activatePrototypeMap,int,);
Parameter(initPrototypeMethod,java.lang.Object,);
Parameter(initPrototypeMethod,int,);
Parameter(initPrototypeMethod,java.lang.String,);
Parameter(initPrototypeMethod,int,);
Parameter(initPrototypeConstructor,org.mozilla.javascript.IdFunctionObject,);
Parameter(initPrototypeValue,int,);
Parameter(initPrototypeValue,java.lang.String,);
Parameter(initPrototypeValue,java.lang.Object,);
Parameter(initPrototypeValue,int,);
Parameter(initPrototypeId,int,);
Parameter(findPrototypeId,java.lang.String,);
Parameter(fillConstructorProperties,org.mozilla.javascript.IdFunctionObject,);
Parameter(addIdFunctionProperty,org.mozilla.javascript.Scriptable,);
Parameter(addIdFunctionProperty,java.lang.Object,);
Parameter(addIdFunctionProperty,int,);
Parameter(addIdFunctionProperty,java.lang.String,);
Parameter(addIdFunctionProperty,int,);
Parameter(incompatibleCallError,org.mozilla.javascript.IdFunctionObject,);
Parameter(newIdFunction,java.lang.Object,);
Parameter(newIdFunction,int,);
Parameter(newIdFunction,java.lang.String,);
Parameter(newIdFunction,int,);
Parameter(newIdFunction,org.mozilla.javascript.Scriptable,);
Parameter(defineOwnProperty,org.mozilla.javascript.Context,);
Parameter(defineOwnProperty,java.lang.Object,);
Parameter(defineOwnProperty,org.mozilla.javascript.ScriptableObject,);
Parameter(getOwnPropertyDescriptor,org.mozilla.javascript.Context,);
Parameter(getOwnPropertyDescriptor,java.lang.Object,);
Parameter(getBuiltInDescriptor,java.lang.String,);
Parameter(readObject,java.io.ObjectInputStream,);
Parameter(writeObject,java.io.ObjectOutputStream,);
SuperClass(org.mozilla.javascript.ScriptableObject);
SubClass(org.mozilla.javascript.NativeArray);
SubClass(org.mozilla.javascript.commonjs.module.ModuleScope);
SubClass(org.mozilla.javascript.tools.shell.Global);
SubClass(org.mozilla.javascript.ImporterTopLevel);
SubClass(org.mozilla.javascript.TopLevel);
SubClass(org.mozilla.javascript.commonjs.module.Require);
SubClass(org.mozilla.javascript.IdFunctionObject);
SubClass(org.mozilla.javascript.InterpretedFunction);
SubClass(org.mozilla.javascript.NativeFunction);
SubClass(org.mozilla.javascript.ScriptRuntime$1);
SubClass(org.mozilla.javascript.NativeScript);
SubClass(org.mozilla.javascript.BoundFunction);
SubClass(org.mozilla.javascript.FunctionObject);
SubClass(org.mozilla.javascript.FieldAndMethods);
SubClass(org.mozilla.javascript.NativeJavaMethod);
SubClass(org.mozilla.javascript.NativeJavaConstructor);
SubClass(org.mozilla.javascript.BaseFunction);
SubClass(org.mozilla.javascript.NativeIterator$StopIteration);
SubClass(org.mozilla.javascript.NativeObject);
SubClass(org.mozilla.javascript.NativeString);
SubClass(org.mozilla.javascript.NativeCall);
SubClass(org.mozilla.javascript.NativeContinuation);
SubClass(org.mozilla.javascript.NativeBoolean);
SubClass(org.mozilla.javascript.NativeDate);
SubClass(org.mozilla.javascript.NativeError);
SubClass(org.mozilla.javascript.Arguments);
SubClass(org.mozilla.javascript.NativeJSON);
SubClass(org.mozilla.javascript.xml.XMLObject);
SubClass(org.mozilla.javascript.NativeMath);
SubClass(org.mozilla.javascript.NativeIterator);
SubClass(org.mozilla.javascript.NativeNumber);
SubClass(org.mozilla.javascript.NativeGenerator);
Generalization(org.mozilla.javascript.ScriptableObject);
Realization(org.mozilla.javascript.IdFunctionCall);
Composition(org.mozilla.javascript.IdScriptableObject$PrototypeValues);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,has --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,has --> getInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,get --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,get --> getInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,put --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,put --> setInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,delete --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,delete --> setInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getAttributes --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,setAttributes --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,setAttributes --> setInstanceIdAttributes,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getIds --> getMaxInstanceId,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getIds --> getInstanceIdName,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getIds --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getIds --> getInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,setInstanceIdAttributes --> getInstanceIdName,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,exportAsJSClass --> activatePrototypeMap,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,exportAsJSClass --> fillConstructorProperties,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,initPrototypeMethod --> newIdFunction,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,addIdFunctionProperty --> newIdFunction,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> getOwnPropertyDescriptor,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> getInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> setInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> setAttributes,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getOwnPropertyDescriptor --> getBuiltInDescriptor,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getBuiltInDescriptor --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getBuiltInDescriptor --> getInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,readObject --> activatePrototypeMap,org.mozilla.javascript.IdScriptableObject,);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,has --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,get --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,put --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,delete --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,getAttributes --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,setAttributes --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,getIds --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,exportAsJSClass --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,hasPrototypeMap --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,activatePrototypeMap --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,activatePrototypeMap --> prototypeValues,org.mozilla.javascript.IdScriptableObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,initPrototypeMethod --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,initPrototypeConstructor --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,initPrototypeValue --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,getBuiltInDescriptor --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,writeObject --> prototypeValues,org.mozilla.javascript.IdScriptableObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,has --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,get --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,delete --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,getIds --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,initPrototypeConstructor --> constructorId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,<init> --> <init>,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,<init>$2 --> <init>$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defaultGet --> get,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defaultPut --> put,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,has --> findId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,has --> has,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,has --> has,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,get --> get,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,get --> findId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,get --> get,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,put --> isSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,put --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,put --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,put --> findId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,put --> set,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,put --> put,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,delete --> isSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,delete --> findId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,delete --> delete,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,delete --> delete,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getAttributes --> findId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getAttributes --> getAttributes,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getAttributes --> getAttributes$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,setAttributes --> checkValidAttributes,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,setAttributes --> findId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,setAttributes --> setAttributes,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,setAttributes --> setAttributes$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getIds --> getIds$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getIds --> getNames,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,setInstanceIdAttributes --> getClassName,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,setInstanceIdAttributes --> constructError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,execIdCall --> unknown,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,exportAsJSClass --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,exportAsJSClass --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,exportAsJSClass --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,exportAsJSClass --> createPrecachedConstructor,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,exportAsJSClass --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,exportAsJSClass --> exportAsScopeProperty,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,activatePrototypeMap --> <init>,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,initPrototypeMethod --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,initPrototypeMethod --> initValue,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,initPrototypeConstructor --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,initPrototypeConstructor --> isSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,initPrototypeConstructor --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,initPrototypeConstructor --> initValue,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,initPrototypeValue --> initValue,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,addIdFunctionProperty --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,addIdFunctionProperty --> addAsProperty,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,incompatibleCallError --> getFunctionName,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,incompatibleCallError --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,newIdFunction --> <init>$2,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,newIdFunction --> isSealed,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,newIdFunction --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> isAccessorDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> delete$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> checkPropertyDefinition,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> checkPropertyChange,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> sameValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> applyDescriptorToAttributeBitset,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> findId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> delete,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> getAttributes,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> get,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> set,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> setAttributes,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,defineOwnProperty --> defineOwnProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getOwnPropertyDescriptor --> getOwnPropertyDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getBuiltInDescriptor --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getBuiltInDescriptor --> buildDataDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getBuiltInDescriptor --> findId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getBuiltInDescriptor --> get,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,getBuiltInDescriptor --> getAttributes,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject,writeObject --> getMaxId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
EndClass 48
StartClass 49
Class(org.mozilla.javascript.IdFunctionObject,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(idcall,org.mozilla.javascript.IdFunctionCall,Private,N,Y,);
Attribute(tag,java.lang.Object,Private,N,Y,);
Attribute(methodId,int,Private,N,Y,);
Attribute(arity,int,Private,N,N,);
Attribute(useCallAsConstructor,boolean,Private,N,N,);
Attribute(functionName,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(initFunction,void,Public,N,N);
Method(hasTag,boolean,Public,N,N);
Method(methodId,int,Public,N,N);
Method(markAsConstructor,void,Public,N,N);
Method(addAsProperty,void,Public,N,N);
Method(exportAsScopeProperty,void,Public,N,N);
Method(getPrototype,org.mozilla.javascript.Scriptable,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(createObject,org.mozilla.javascript.Scriptable,Public,N,N);
Method(decompile,java.lang.String,Public,N,N);
Method(getArity,int,Public,N,N);
Method(getLength,int,Public,N,N);
Method(getFunctionName,java.lang.String,Public,N,N);
Method(unknown,java.lang.RuntimeException,Public,N,N);
Parameter(<init>,org.mozilla.javascript.IdFunctionCall,);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>$2,org.mozilla.javascript.IdFunctionCall,);
Parameter(<init>$2,java.lang.Object,);
Parameter(<init>$2,int,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,int,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(initFunction,java.lang.String,);
Parameter(initFunction,org.mozilla.javascript.Scriptable,);
Parameter(hasTag,java.lang.Object,);
Parameter(markAsConstructor,org.mozilla.javascript.Scriptable,);
Parameter(addAsProperty,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(createObject,org.mozilla.javascript.Context,);
Parameter(createObject,org.mozilla.javascript.Scriptable,);
Parameter(decompile,int,);
Parameter(decompile,int,);
SuperClass(org.mozilla.javascript.BaseFunction);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.BaseFunction);
Composition(org.mozilla.javascript.IdFunctionCall);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,exportAsScopeProperty --> addAsProperty,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,decompile --> getFunctionName,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,decompile --> getArity,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,getLength --> getArity,org.mozilla.javascript.IdFunctionObject,);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,<init> --> idcall,org.mozilla.javascript.IdFunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,<init> --> tag,org.mozilla.javascript.IdFunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,<init> --> methodId,org.mozilla.javascript.IdFunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,<init> --> arity,org.mozilla.javascript.IdFunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,<init>$2 --> idcall,org.mozilla.javascript.IdFunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,<init>$2 --> tag,org.mozilla.javascript.IdFunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,<init>$2 --> methodId,org.mozilla.javascript.IdFunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,<init>$2 --> arity,org.mozilla.javascript.IdFunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,<init>$2 --> functionName,org.mozilla.javascript.IdFunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,initFunction --> functionName,org.mozilla.javascript.IdFunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,hasTag --> tag,org.mozilla.javascript.IdFunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,methodId --> methodId,org.mozilla.javascript.IdFunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,markAsConstructor --> useCallAsConstructor,org.mozilla.javascript.IdFunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,addAsProperty --> functionName,org.mozilla.javascript.IdFunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,call --> idcall,org.mozilla.javascript.IdFunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,createObject --> useCallAsConstructor,org.mozilla.javascript.IdFunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,createObject --> functionName,org.mozilla.javascript.IdFunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,decompile --> idcall,org.mozilla.javascript.IdFunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,getArity --> arity,org.mozilla.javascript.IdFunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,getFunctionName --> functionName,org.mozilla.javascript.IdFunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,unknown --> methodId,org.mozilla.javascript.IdFunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdFunctionObject,unknown --> idcall,org.mozilla.javascript.IdFunctionObject,READ);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,<init> --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,<init>$2 --> <init>$2,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,initFunction --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,markAsConstructor --> setImmunePrototypeProperty,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,addAsProperty --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,exportAsScopeProperty --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,getPrototype --> getPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,getPrototype --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,getPrototype --> getFunctionPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,getPrototype --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,call --> execIdCall,org.mozilla.javascript.IdFunctionCall,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,createObject --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.IdFunctionObject,decompile --> getClassName,org.mozilla.javascript.Scriptable,);
EndClass 49
StartClass 50
Class(org.mozilla.javascript.NativeArray$2,N,N,NA);
Method(<init>,void,Public,N,N);
Method(compare,int,Public,N,N);
Parameter(compare,java.lang.Object,);
Parameter(compare,java.lang.Object,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$2,compare --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$2,compare --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.NativeArray$2,compare --> toString,org.mozilla.javascript.ScriptRuntime,);
EndClass 50
StartClass 51
Class(org.mozilla.javascript.NativeArray$1,N,N,NA);
Attribute(val$cmpBuf,java.lang.Object[],Public,N,Y,);
Attribute(val$jsCompareFunction,org.mozilla.javascript.Callable,Public,N,Y,);
Attribute(val$cx,org.mozilla.javascript.Context,Public,N,Y,);
Attribute(val$scope,org.mozilla.javascript.Scriptable,Public,N,Y,);
Attribute(val$funThis,org.mozilla.javascript.Scriptable,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(compare,int,Public,N,N);
Parameter(<init>,java.lang.Object[],);
Parameter(<init>,org.mozilla.javascript.Callable,);
Parameter(<init>,org.mozilla.javascript.Context,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(compare,java.lang.Object,);
Parameter(compare,java.lang.Object,);
Composition(org.mozilla.javascript.Callable);
Composition(org.mozilla.javascript.Context);
Composition(org.mozilla.javascript.Scriptable);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,<init> --> val$cmpBuf,org.mozilla.javascript.NativeArray$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,<init> --> val$jsCompareFunction,org.mozilla.javascript.NativeArray$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,<init> --> val$cx,org.mozilla.javascript.NativeArray$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,<init> --> val$scope,org.mozilla.javascript.NativeArray$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,<init> --> val$funThis,org.mozilla.javascript.NativeArray$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,compare --> val$cmpBuf,org.mozilla.javascript.NativeArray$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,compare --> val$jsCompareFunction,org.mozilla.javascript.NativeArray$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,compare --> val$cx,org.mozilla.javascript.NativeArray$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,compare --> val$scope,org.mozilla.javascript.NativeArray$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,compare --> val$funThis,org.mozilla.javascript.NativeArray$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,compare --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$1,compare --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.NativeArray$1,compare --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.NativeArray$1,compare --> toNumber,org.mozilla.javascript.ScriptRuntime,);
EndClass 51
StartClass 52
Class(org.mozilla.javascript.NativeArray$3,N,N,NA);
Attribute(cursor,int,Public,N,N,);
Attribute(val$start,int,Public,N,Y,);
Attribute(val$len,int,Public,N,Y,);
Attribute(this$0,org.mozilla.javascript.NativeArray,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(hasNext,boolean,Public,N,N);
Method(next,java.lang.Object,Public,N,N);
Method(hasPrevious,boolean,Public,N,N);
Method(previous,java.lang.Object,Public,N,N);
Method(nextIndex,int,Public,N,N);
Method(previousIndex,int,Public,N,N);
Method(remove,void,Public,N,N);
Method(add,void,Public,N,N);
Method(set,void,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeArray,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(add,java.lang.Object,);
Parameter(set,java.lang.Object,);
Composition(org.mozilla.javascript.NativeArray);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,<init> --> val$start,org.mozilla.javascript.NativeArray$3,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,<init> --> this$0,org.mozilla.javascript.NativeArray$3,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,<init> --> val$start,org.mozilla.javascript.NativeArray$3,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,<init> --> val$len,org.mozilla.javascript.NativeArray$3,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,<init> --> cursor,org.mozilla.javascript.NativeArray$3,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,hasNext --> cursor,org.mozilla.javascript.NativeArray$3,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,hasNext --> val$len,org.mozilla.javascript.NativeArray$3,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,next --> cursor,org.mozilla.javascript.NativeArray$3,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,next --> val$len,org.mozilla.javascript.NativeArray$3,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,next --> this$0,org.mozilla.javascript.NativeArray$3,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,next --> cursor,org.mozilla.javascript.NativeArray$3,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,hasPrevious --> cursor,org.mozilla.javascript.NativeArray$3,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,previous --> cursor,org.mozilla.javascript.NativeArray$3,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,previous --> this$0,org.mozilla.javascript.NativeArray$3,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,previous --> cursor,org.mozilla.javascript.NativeArray$3,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,nextIndex --> cursor,org.mozilla.javascript.NativeArray$3,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeArray$3,previousIndex --> cursor,org.mozilla.javascript.NativeArray$3,READ);
Call(METHOD,org.mozilla.javascript.NativeArray$3,next --> get$3,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeArray$3,previous --> get$3,org.mozilla.javascript.NativeArray,);
EndClass 52
StartClass 53
Class(org.mozilla.javascript.Undefined,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(instance,java.lang.Object,Public,Y,Y,);
Method(<init>,void,Private,N,N);
Method(readResolve,java.lang.Object,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Call(METHOD,org.mozilla.javascript.Undefined,<clinit> --> <init>,org.mozilla.javascript.Undefined,);
Call(ATTRIBUTE,org.mozilla.javascript.Undefined,readResolve --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Undefined,<clinit> --> instance,org.mozilla.javascript.Undefined,WRITE);
EndClass 53
StartClass 54
Class(org.mozilla.javascript.Wrapper,Y,Y,Public);
Method(unwrap,java.lang.Object,Public,N,Y);
EndClass 54
StartClass 55
Class(org.mozilla.javascript.NativeObject,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(OBJECT_TAG,java.lang.Object,Private,Y,Y,);
Attribute(ConstructorId_getPrototypeOf,int,Private,Y,Y,);
Attribute(ConstructorId_keys,int,Private,Y,Y,);
Attribute(ConstructorId_getOwnPropertyNames,int,Private,Y,Y,);
Attribute(ConstructorId_getOwnPropertyDescriptor,int,Private,Y,Y,);
Attribute(ConstructorId_defineProperty,int,Private,Y,Y,);
Attribute(ConstructorId_isExtensible,int,Private,Y,Y,);
Attribute(ConstructorId_preventExtensions,int,Private,Y,Y,);
Attribute(ConstructorId_defineProperties,int,Private,Y,Y,);
Attribute(ConstructorId_create,int,Private,Y,Y,);
Attribute(ConstructorId_isSealed,int,Private,Y,Y,);
Attribute(ConstructorId_isFrozen,int,Private,Y,Y,);
Attribute(ConstructorId_seal,int,Private,Y,Y,);
Attribute(ConstructorId_freeze,int,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(Id_toString,int,Private,Y,Y,);
Attribute(Id_toLocaleString,int,Private,Y,Y,);
Attribute(Id_valueOf,int,Private,Y,Y,);
Attribute(Id_hasOwnProperty,int,Private,Y,Y,);
Attribute(Id_propertyIsEnumerable,int,Private,Y,Y,);
Attribute(Id_isPrototypeOf,int,Private,Y,Y,);
Attribute(Id_toSource,int,Private,Y,Y,);
Attribute(Id___defineGetter__,int,Private,Y,Y,);
Attribute(Id___defineSetter__,int,Private,Y,Y,);
Attribute(Id___lookupGetter__,int,Private,Y,Y,);
Attribute(Id___lookupSetter__,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(init,void,Public,Y,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(fillConstructorProperties,void,Protected,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(containsKey,boolean,Public,N,N);
Method(containsValue,boolean,Public,N,N);
Method(remove,java.lang.Object,Public,N,N);
Method(keySet,java.util.Set,Public,N,N);
Method(values,java.util.Collection,Public,N,N);
Method(entrySet,java.util.Set,Public,N,N);
Method(put,java.lang.Object,Public,N,N);
Method(putAll,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(fillConstructorProperties,org.mozilla.javascript.IdFunctionObject,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(containsKey,java.lang.Object,);
Parameter(containsValue,java.lang.Object,);
Parameter(remove,java.lang.Object,);
Parameter(put,java.lang.Object,);
Parameter(put,java.lang.Object,);
Parameter(putAll,java.util.Map,);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
SubClass(org.mozilla.javascript.NativeIterator$StopIteration);
Generalization(org.mozilla.javascript.IdScriptableObject);
Call(METHOD,org.mozilla.javascript.NativeObject,init --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,containsValue --> values,org.mozilla.javascript.NativeObject,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject,fillConstructorProperties --> OBJECT_TAG,org.mozilla.javascript.NativeObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject,initPrototypeId --> OBJECT_TAG,org.mozilla.javascript.NativeObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject,execIdCall --> OBJECT_TAG,org.mozilla.javascript.NativeObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject,<clinit> --> OBJECT_TAG,org.mozilla.javascript.NativeObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject,execIdCall --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.NativeObject,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,toString --> defaultObjectToString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeObject,fillConstructorProperties --> addIdFunctionProperty,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,fillConstructorProperties --> fillConstructorProperties,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> construct,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> toObject$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> defaultObjectToSource,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> defaultObjectToString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> toStringIdOrIndex,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> lastIndexResult,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> has$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> has,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> wrapBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> getAttributes$4,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> getAttributes$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> notFunctionError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> reportRuntimeError2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> setGetterOrSetter,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> setDenseOnly,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> getGetterOrSetter,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> getPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> ensureScriptable,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> getIds,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> newArray$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> ensureScriptableObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> getAllIds,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> getOwnPropertyDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> defineOwnProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> isExtensible,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> preventExtensions,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> toObject,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> defineOwnProperties,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> get$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> isDataDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> put,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,execIdCall --> defineOwnProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,containsKey --> has,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,containsKey --> has$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,remove --> get$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,remove --> delete,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,remove --> delete$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject,keySet --> <init>,org.mozilla.javascript.NativeObject$KeySet,);
Call(METHOD,org.mozilla.javascript.NativeObject,values --> <init>,org.mozilla.javascript.NativeObject$ValueCollection,);
Call(METHOD,org.mozilla.javascript.NativeObject,entrySet --> <init>,org.mozilla.javascript.NativeObject$EntrySet,);
EndClass 55
StartClass 56
Class(org.mozilla.javascript.NativeString,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(STRING_TAG,java.lang.Object,Private,Y,Y,);
Attribute(Id_length,int,Private,Y,Y,);
Attribute(MAX_INSTANCE_ID,int,Private,Y,Y,);
Attribute(ConstructorId_fromCharCode,int,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(Id_toString,int,Private,Y,Y,);
Attribute(Id_toSource,int,Private,Y,Y,);
Attribute(Id_valueOf,int,Private,Y,Y,);
Attribute(Id_charAt,int,Private,Y,Y,);
Attribute(Id_charCodeAt,int,Private,Y,Y,);
Attribute(Id_indexOf,int,Private,Y,Y,);
Attribute(Id_lastIndexOf,int,Private,Y,Y,);
Attribute(Id_split,int,Private,Y,Y,);
Attribute(Id_substring,int,Private,Y,Y,);
Attribute(Id_toLowerCase,int,Private,Y,Y,);
Attribute(Id_toUpperCase,int,Private,Y,Y,);
Attribute(Id_substr,int,Private,Y,Y,);
Attribute(Id_concat,int,Private,Y,Y,);
Attribute(Id_slice,int,Private,Y,Y,);
Attribute(Id_bold,int,Private,Y,Y,);
Attribute(Id_italics,int,Private,Y,Y,);
Attribute(Id_fixed,int,Private,Y,Y,);
Attribute(Id_strike,int,Private,Y,Y,);
Attribute(Id_small,int,Private,Y,Y,);
Attribute(Id_big,int,Private,Y,Y,);
Attribute(Id_blink,int,Private,Y,Y,);
Attribute(Id_sup,int,Private,Y,Y,);
Attribute(Id_sub,int,Private,Y,Y,);
Attribute(Id_fontsize,int,Private,Y,Y,);
Attribute(Id_fontcolor,int,Private,Y,Y,);
Attribute(Id_link,int,Private,Y,Y,);
Attribute(Id_anchor,int,Private,Y,Y,);
Attribute(Id_equals,int,Private,Y,Y,);
Attribute(Id_equalsIgnoreCase,int,Private,Y,Y,);
Attribute(Id_match,int,Private,Y,Y,);
Attribute(Id_search,int,Private,Y,Y,);
Attribute(Id_replace,int,Private,Y,Y,);
Attribute(Id_localeCompare,int,Private,Y,Y,);
Attribute(Id_toLocaleLowerCase,int,Private,Y,Y,);
Attribute(Id_toLocaleUpperCase,int,Private,Y,Y,);
Attribute(Id_trim,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Attribute(ConstructorId_charAt,int,Private,Y,Y,);
Attribute(ConstructorId_charCodeAt,int,Private,Y,Y,);
Attribute(ConstructorId_indexOf,int,Private,Y,Y,);
Attribute(ConstructorId_lastIndexOf,int,Private,Y,Y,);
Attribute(ConstructorId_split,int,Private,Y,Y,);
Attribute(ConstructorId_substring,int,Private,Y,Y,);
Attribute(ConstructorId_toLowerCase,int,Private,Y,Y,);
Attribute(ConstructorId_toUpperCase,int,Private,Y,Y,);
Attribute(ConstructorId_substr,int,Private,Y,Y,);
Attribute(ConstructorId_concat,int,Private,Y,Y,);
Attribute(ConstructorId_slice,int,Private,Y,Y,);
Attribute(ConstructorId_equalsIgnoreCase,int,Private,Y,Y,);
Attribute(ConstructorId_match,int,Private,Y,Y,);
Attribute(ConstructorId_search,int,Private,Y,Y,);
Attribute(ConstructorId_replace,int,Private,Y,Y,);
Attribute(ConstructorId_localeCompare,int,Private,Y,Y,);
Attribute(ConstructorId_toLocaleLowerCase,int,Private,Y,Y,);
Attribute(string,java.lang.CharSequence,Private,N,N,);
Method(init,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(getMaxInstanceId,int,Protected,N,N);
Method(findInstanceIdInfo,int,Protected,N,N);
Method(getInstanceIdName,java.lang.String,Protected,N,N);
Method(getInstanceIdValue,java.lang.Object,Protected,N,N);
Method(fillConstructorProperties,void,Protected,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(realThis,org.mozilla.javascript.NativeString,Private,Y,N);
Method(tagify,java.lang.String,Private,Y,N);
Method(toCharSequence,java.lang.CharSequence,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(put,void,Public,N,N);
Method(js_indexOf,int,Private,Y,N);
Method(js_lastIndexOf,int,Private,Y,N);
Method(js_substring,java.lang.CharSequence,Private,Y,N);
Method(getLength,int,Public,N,N);
Method(js_substr,java.lang.CharSequence,Private,Y,N);
Method(js_concat,java.lang.String,Private,Y,N);
Method(js_slice,java.lang.CharSequence,Private,Y,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(<init>,java.lang.CharSequence,);
Parameter(findInstanceIdInfo,java.lang.String,);
Parameter(getInstanceIdName,int,);
Parameter(getInstanceIdValue,int,);
Parameter(fillConstructorProperties,org.mozilla.javascript.IdFunctionObject,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(realThis,org.mozilla.javascript.Scriptable,);
Parameter(realThis,org.mozilla.javascript.IdFunctionObject,);
Parameter(tagify,java.lang.Object,);
Parameter(tagify,java.lang.String,);
Parameter(tagify,java.lang.String,);
Parameter(tagify,java.lang.Object[],);
Parameter(get,int,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(put,int,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(js_indexOf,java.lang.String,);
Parameter(js_indexOf,java.lang.Object[],);
Parameter(js_lastIndexOf,java.lang.String,);
Parameter(js_lastIndexOf,java.lang.Object[],);
Parameter(js_substring,org.mozilla.javascript.Context,);
Parameter(js_substring,java.lang.CharSequence,);
Parameter(js_substring,java.lang.Object[],);
Parameter(js_substr,java.lang.CharSequence,);
Parameter(js_substr,java.lang.Object[],);
Parameter(js_concat,java.lang.String,);
Parameter(js_concat,java.lang.Object[],);
Parameter(js_slice,java.lang.CharSequence,);
Parameter(js_slice,java.lang.Object[],);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Call(METHOD,org.mozilla.javascript.NativeString,init --> <init>,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> <init>,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> realThis,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> js_indexOf,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> js_lastIndexOf,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> js_substring,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> js_substr,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> js_concat,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> js_slice,org.mozilla.javascript.NativeString,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> tagify,org.mozilla.javascript.NativeString,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,<init> --> string,org.mozilla.javascript.NativeString,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,getInstanceIdValue --> string,org.mozilla.javascript.NativeString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,fillConstructorProperties --> STRING_TAG,org.mozilla.javascript.NativeString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,initPrototypeId --> STRING_TAG,org.mozilla.javascript.NativeString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,execIdCall --> STRING_TAG,org.mozilla.javascript.NativeString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,execIdCall --> string,org.mozilla.javascript.NativeString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,toCharSequence --> string,org.mozilla.javascript.NativeString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,toString --> string,org.mozilla.javascript.NativeString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,get --> string,org.mozilla.javascript.NativeString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,put --> string,org.mozilla.javascript.NativeString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,getLength --> string,org.mozilla.javascript.NativeString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,<clinit> --> STRING_TAG,org.mozilla.javascript.NativeString,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,execIdCall --> NaNobj,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,execIdCall --> ROOT_LOCALE,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeString,js_substring --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.NativeString,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,findInstanceIdInfo --> instanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,findInstanceIdInfo --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,getInstanceIdName --> getInstanceIdName,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,getInstanceIdValue --> wrapInt,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,getInstanceIdValue --> getInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,fillConstructorProperties --> addIdFunctionProperty,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,fillConstructorProperties --> fillConstructorProperties,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> toCharSequence,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> toObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> toUint16,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> escapeString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> toInteger$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> wrapInt,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> checkRegExpProxy,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> js_split,org.mozilla.javascript.RegExpProxy,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> toString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> wrapBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> action,org.mozilla.javascript.RegExpProxy,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> getLocale,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,execIdCall --> isJSWhitespaceOrLineTerminator,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,realThis --> incompatibleCallError,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,tagify --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,tagify --> toString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,get --> get$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,put --> put$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeString,js_indexOf --> toString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,js_indexOf --> toInteger$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,js_lastIndexOf --> toString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,js_lastIndexOf --> toNumber$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,js_substring --> toInteger$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,js_substring --> toInteger,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,js_substring --> getLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeString,js_substr --> toInteger,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,js_concat --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeString,js_slice --> toInteger,org.mozilla.javascript.ScriptRuntime,);
EndClass 56
StartClass 57
Class(org.mozilla.javascript.TopLevel$Builtins,N,N,Public);
Attribute(Object,org.mozilla.javascript.TopLevel$Builtins,Public,Y,Y,);
Attribute(Array,org.mozilla.javascript.TopLevel$Builtins,Public,Y,Y,);
Attribute(Function,org.mozilla.javascript.TopLevel$Builtins,Public,Y,Y,);
Attribute(String,org.mozilla.javascript.TopLevel$Builtins,Public,Y,Y,);
Attribute(Number,org.mozilla.javascript.TopLevel$Builtins,Public,Y,Y,);
Attribute(Boolean,org.mozilla.javascript.TopLevel$Builtins,Public,Y,Y,);
Attribute(RegExp,org.mozilla.javascript.TopLevel$Builtins,Public,Y,Y,);
Attribute(Error,org.mozilla.javascript.TopLevel$Builtins,Public,Y,Y,);
Attribute($VALUES,org.mozilla.javascript.TopLevel$Builtins[],Private,Y,Y,);
Method(values,org.mozilla.javascript.TopLevel$Builtins[],Public,Y,N);
Method(valueOf,org.mozilla.javascript.TopLevel$Builtins,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(valueOf,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Composition(org.mozilla.javascript.TopLevel$Builtins);
Call(METHOD,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> <init>,org.mozilla.javascript.TopLevel$Builtins,);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,values --> $VALUES,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Object,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Array,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Function,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> String,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Number,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Boolean,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> RegExp,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Error,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Object,org.mozilla.javascript.TopLevel$Builtins,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Array,org.mozilla.javascript.TopLevel$Builtins,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Function,org.mozilla.javascript.TopLevel$Builtins,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> String,org.mozilla.javascript.TopLevel$Builtins,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Number,org.mozilla.javascript.TopLevel$Builtins,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Boolean,org.mozilla.javascript.TopLevel$Builtins,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> RegExp,org.mozilla.javascript.TopLevel$Builtins,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> Error,org.mozilla.javascript.TopLevel$Builtins,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TopLevel$Builtins,<clinit> --> $VALUES,org.mozilla.javascript.TopLevel$Builtins,WRITE);
EndClass 57
StartClass 58
Class(org.mozilla.javascript.ObjToIntMap,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(A,int,Private,Y,Y,);
Attribute(DELETED,java.lang.Object,Private,Y,Y,);
Attribute(keys,java.lang.Object[],Private,N,N,);
Attribute(values,int[],Private,N,N,);
Attribute(power,int,Private,N,N,);
Attribute(keyCount,int,Private,N,N,);
Attribute(occupiedCount,int,Private,N,N,);
Attribute(check,boolean,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(isEmpty,boolean,Public,N,N);
Method(size,int,Public,N,N);
Method(has,boolean,Public,N,N);
Method(get,int,Public,N,N);
Method(getExisting,int,Public,N,N);
Method(put,void,Public,N,N);
Method(intern,java.lang.Object,Public,N,N);
Method(remove,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(newIterator,org.mozilla.javascript.ObjToIntMap$Iterator,Public,N,N);
Method(initIterator,void,Public,N,N);
Method(getKeys,java.lang.Object[],Public,N,N);
Method(getKeys$2,void,Public,N,N);
Method(tableLookupStep,int,Private,Y,N);
Method(findIndex,int,Private,N,N);
Method(insertNewKey,int,Private,N,N);
Method(rehashTable,void,Private,N,N);
Method(ensureIndex,int,Private,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(access$000,java.lang.Object,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,int,);
Parameter(has,java.lang.Object,);
Parameter(get,java.lang.Object,);
Parameter(get,int,);
Parameter(getExisting,java.lang.Object,);
Parameter(put,java.lang.Object,);
Parameter(put,int,);
Parameter(intern,java.lang.Object,);
Parameter(remove,java.lang.Object,);
Parameter(initIterator,org.mozilla.javascript.ObjToIntMap$Iterator,);
Parameter(getKeys$2,java.lang.Object[],);
Parameter(getKeys$2,int,);
Parameter(tableLookupStep,int,);
Parameter(tableLookupStep,int,);
Parameter(tableLookupStep,int,);
Parameter(findIndex,java.lang.Object,);
Parameter(insertNewKey,java.lang.Object,);
Parameter(insertNewKey,int,);
Parameter(ensureIndex,java.lang.Object,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,<init> --> <init>$2,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,has --> findIndex,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,get --> findIndex,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,getExisting --> findIndex,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,put --> ensureIndex,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,intern --> ensureIndex,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,remove --> findIndex,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,getKeys --> getKeys$2,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,findIndex --> tableLookupStep,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,insertNewKey --> tableLookupStep,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,rehashTable --> insertNewKey,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,ensureIndex --> tableLookupStep,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,ensureIndex --> rehashTable,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,ensureIndex --> insertNewKey,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,readObject --> insertNewKey,org.mozilla.javascript.ObjToIntMap,);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,<init>$2 --> power,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,isEmpty --> keyCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,size --> keyCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,get --> values,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,getExisting --> values,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,put --> values,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,intern --> values,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,intern --> keys,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,remove --> keys,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,remove --> DELETED,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,remove --> keyCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,remove --> keyCount,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,clear --> keys,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,clear --> keyCount,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,clear --> occupiedCount,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,initIterator --> keys,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,initIterator --> values,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,initIterator --> keyCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,getKeys --> keyCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,getKeys$2 --> keyCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,getKeys$2 --> keys,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,getKeys$2 --> DELETED,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,findIndex --> keys,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,findIndex --> power,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,findIndex --> values,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,insertNewKey --> power,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,insertNewKey --> keys,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,insertNewKey --> values,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,insertNewKey --> occupiedCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,insertNewKey --> keyCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,insertNewKey --> occupiedCount,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,insertNewKey --> keyCount,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,rehashTable --> keys,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,rehashTable --> power,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,rehashTable --> keyCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,rehashTable --> occupiedCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,rehashTable --> values,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,rehashTable --> DELETED,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,rehashTable --> keys,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,rehashTable --> values,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,rehashTable --> power,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,rehashTable --> keyCount,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,rehashTable --> occupiedCount,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,ensureIndex --> keys,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,ensureIndex --> power,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,ensureIndex --> values,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,ensureIndex --> DELETED,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,ensureIndex --> occupiedCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,ensureIndex --> keyCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,ensureIndex --> occupiedCount,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,ensureIndex --> keyCount,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,writeObject --> keyCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,writeObject --> keys,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,writeObject --> DELETED,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,writeObject --> values,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,readObject --> keyCount,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,readObject --> power,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,readObject --> values,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,readObject --> keyCount,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,readObject --> keys,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,readObject --> values,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,access$000 --> DELETED,org.mozilla.javascript.ObjToIntMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,<clinit> --> DELETED,org.mozilla.javascript.ObjToIntMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,has --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,get --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,getExisting --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,put --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,intern --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,remove --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap,getKeys$2 --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,<init>$2 --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,getExisting --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,newIterator --> <init>,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap,initIterator --> init,org.mozilla.javascript.ObjToIntMap$Iterator,);
EndClass 58
StartClass 59
Class(org.mozilla.javascript.commonjs.module.provider.ParsedContentType,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(contentType,java.lang.String,Private,N,Y,);
Attribute(encoding,java.lang.String,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getContentType,java.lang.String,Public,N,N);
Method(getEncoding,java.lang.String,Public,N,N);
Parameter(<init>,java.lang.String,);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,<init> --> contentType,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,<init> --> encoding,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,getContentType --> contentType,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,getEncoding --> encoding,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,READ);
EndClass 59
StartClass 60
Class(org.mozilla.javascript.UniqueTag,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(ID_NOT_FOUND,int,Private,Y,Y,);
Attribute(ID_NULL_VALUE,int,Private,Y,Y,);
Attribute(ID_DOUBLE_MARK,int,Private,Y,Y,);
Attribute(NOT_FOUND,org.mozilla.javascript.UniqueTag,Public,Y,Y,);
Attribute(NULL_VALUE,org.mozilla.javascript.UniqueTag,Public,Y,Y,);
Attribute(DOUBLE_MARK,org.mozilla.javascript.UniqueTag,Public,Y,Y,);
Attribute(tagId,int,Private,N,Y,);
Method(<init>,void,Private,N,N);
Method(readResolve,java.lang.Object,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,int,);
Composition(org.mozilla.javascript.UniqueTag);
Call(METHOD,org.mozilla.javascript.UniqueTag,<clinit> --> <init>,org.mozilla.javascript.UniqueTag,);
Call(ATTRIBUTE,org.mozilla.javascript.UniqueTag,<init> --> tagId,org.mozilla.javascript.UniqueTag,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UniqueTag,readResolve --> tagId,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UniqueTag,readResolve --> NOT_FOUND,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UniqueTag,readResolve --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UniqueTag,readResolve --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UniqueTag,toString --> tagId,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UniqueTag,<clinit> --> NOT_FOUND,org.mozilla.javascript.UniqueTag,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UniqueTag,<clinit> --> NULL_VALUE,org.mozilla.javascript.UniqueTag,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UniqueTag,<clinit> --> DOUBLE_MARK,org.mozilla.javascript.UniqueTag,WRITE);
Call(METHOD,org.mozilla.javascript.UniqueTag,toString --> codeBug,org.mozilla.javascript.Kit,);
EndClass 60
StartClass 61
Class(org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,N,N,NA);
Attribute(reader,java.lang.Object,Private,N,Y,);
Attribute(in,java.io.InputStream,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getIn,java.io.InputStream,Public,N,N);
Method(readLine,java.lang.String,Public,N,N);
Method(readLine$2,java.lang.String,Public,N,N);
Method(flush,void,Public,N,N);
Method(print,void,Public,N,N);
Method(println,void,Public,N,N);
Method(println$2,void,Public,N,N);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,java.nio.charset.Charset,);
Parameter(readLine$2,java.lang.String,);
Parameter(print,java.lang.String,);
Parameter(println$2,java.lang.String,);
SuperClass(org.mozilla.javascript.tools.shell.ShellConsole);
Generalization(org.mozilla.javascript.tools.shell.ShellConsole);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,<init> --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,<init> --> in,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,getIn --> in,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,readLine --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,readLine$2 --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,flush --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,print --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,println --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,println$2 --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,READ);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,<init> --> <init>,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,<init> --> <init>,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,readLine --> access$000,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,readLine --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,readLine$2 --> access$200,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,readLine$2 --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,flush --> access$000,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,flush --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,print --> access$200,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,print --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,println --> access$000,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,println --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,println$2 --> access$200,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,println$2 --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV1,println$2 --> access$000,org.mozilla.javascript.tools.shell.ShellConsole,);
EndClass 61
StartClass 62
Class(org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,N,N,NA);
Attribute(reader,java.lang.Object,Private,N,Y,);
Attribute(in,java.io.InputStream,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getIn,java.io.InputStream,Public,N,N);
Method(readLine,java.lang.String,Public,N,N);
Method(readLine$2,java.lang.String,Public,N,N);
Method(flush,void,Public,N,N);
Method(print,void,Public,N,N);
Method(println,void,Public,N,N);
Method(println$2,void,Public,N,N);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,java.nio.charset.Charset,);
Parameter(readLine$2,java.lang.String,);
Parameter(print,java.lang.String,);
Parameter(println$2,java.lang.String,);
SuperClass(org.mozilla.javascript.tools.shell.ShellConsole);
Generalization(org.mozilla.javascript.tools.shell.ShellConsole);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,<init> --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,<init> --> in,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,getIn --> in,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,readLine --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,readLine$2 --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,flush --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,print --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,println --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,println$2 --> reader,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,READ);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,<init> --> <init>,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,<init> --> <init>,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,readLine --> access$000,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,readLine --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,readLine$2 --> access$200,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,readLine$2 --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,flush --> access$000,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,flush --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,print --> access$300,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,print --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,println --> access$000,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,println --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,println$2 --> access$300,org.mozilla.javascript.tools.shell.ShellConsole,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$JLineShellConsoleV2,println$2 --> access$100,org.mozilla.javascript.tools.shell.ShellConsole,);
EndClass 62
StartClass 63
Class(org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,N,N,NA);
Attribute(EMPTY,byte[],Private,Y,Y,);
Attribute(console,org.mozilla.javascript.tools.shell.ShellConsole,Private,N,Y,);
Attribute(cs,java.nio.charset.Charset,Private,N,Y,);
Attribute(buffer,byte[],Private,N,N,);
Attribute(cursor,int,Private,N,N,);
Attribute(atEOF,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(read,int,Public,N,N);
Method(read$2,int,Public,N,N);
Method(ensureInput,boolean,Private,N,N);
Method(readNextLine,int,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,org.mozilla.javascript.tools.shell.ShellConsole,);
Parameter(<init>,java.nio.charset.Charset,);
Parameter(read,byte[],);
Parameter(read,int,);
Parameter(read,int,);
Composition(org.mozilla.javascript.tools.shell.ShellConsole);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,read --> ensureInput,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,read$2 --> ensureInput,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,ensureInput --> readNextLine,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,<init> --> EMPTY,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,<init> --> buffer,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,<init> --> cursor,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,<init> --> atEOF,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,<init> --> console,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,<init> --> cs,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,read --> buffer,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,read --> cursor,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,read --> cursor,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,read$2 --> cursor,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,read$2 --> buffer,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,read$2 --> cursor,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,ensureInput --> atEOF,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,ensureInput --> cursor,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,ensureInput --> buffer,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,ensureInput --> atEOF,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,ensureInput --> cursor,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,readNextLine --> console,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,readNextLine --> cs,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,readNextLine --> buffer,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,readNextLine --> EMPTY,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,readNextLine --> buffer,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,<clinit> --> EMPTY,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,WRITE);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$ConsoleInputStream,readNextLine --> readLine$2,org.mozilla.javascript.tools.shell.ShellConsole,);
EndClass 63
StartClass 64
Class(org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,N,N,NA);
Attribute(in,java.io.InputStream,Private,N,Y,);
Attribute(out,java.io.PrintWriter,Private,N,Y,);
Attribute(reader,java.io.BufferedReader,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getIn,java.io.InputStream,Public,N,N);
Method(readLine,java.lang.String,Public,N,N);
Method(readLine$2,java.lang.String,Public,N,N);
Method(flush,void,Public,N,N);
Method(print,void,Public,N,N);
Method(println,void,Public,N,N);
Method(println$2,void,Public,N,N);
Parameter(<init>,java.io.InputStream,);
Parameter(<init>,java.io.PrintStream,);
Parameter(<init>,java.nio.charset.Charset,);
Parameter(readLine$2,java.lang.String,);
Parameter(print,java.lang.String,);
Parameter(println$2,java.lang.String,);
SuperClass(org.mozilla.javascript.tools.shell.ShellConsole);
Generalization(org.mozilla.javascript.tools.shell.ShellConsole);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,<init> --> in,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,<init> --> out,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,<init> --> reader,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,getIn --> in,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,readLine --> reader,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,readLine$2 --> out,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,readLine$2 --> reader,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,flush --> out,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,print --> out,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,println --> out,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,println$2 --> out,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,READ);
Call(METHOD,org.mozilla.javascript.tools.shell.ShellConsole$SimpleShellConsole,<init> --> <init>,org.mozilla.javascript.tools.shell.ShellConsole,);
EndClass 64
StartClass 65
Class(org.mozilla.javascript.tools.shell.FlexibleCompletor,N,N,NA);
Attribute(completeMethod,java.lang.reflect.Method,Private,N,N,);
Attribute(global,org.mozilla.javascript.Scriptable,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(invoke,java.lang.Object,Public,N,N);
Method(complete,int,Public,N,N);
Parameter(<init>,java.lang.Class,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(invoke,java.lang.Object,);
Parameter(invoke,java.lang.reflect.Method,);
Parameter(invoke,java.lang.Object[],);
Parameter(complete,java.lang.String,java.lang.String);
Parameter(complete,int,);
Parameter(complete,java.util.List,);
Composition(org.mozilla.javascript.Scriptable);
Call(METHOD,org.mozilla.javascript.tools.shell.FlexibleCompletor,invoke --> complete,org.mozilla.javascript.tools.shell.FlexibleCompletor,);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.FlexibleCompletor,<init> --> global,org.mozilla.javascript.tools.shell.FlexibleCompletor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.FlexibleCompletor,<init> --> completeMethod,org.mozilla.javascript.tools.shell.FlexibleCompletor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.FlexibleCompletor,invoke --> completeMethod,org.mozilla.javascript.tools.shell.FlexibleCompletor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.FlexibleCompletor,complete --> global,org.mozilla.javascript.tools.shell.FlexibleCompletor,READ);
Call(METHOD,org.mozilla.javascript.tools.shell.FlexibleCompletor,complete --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.tools.shell.FlexibleCompletor,complete --> getAllIds,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.FlexibleCompletor,complete --> getIds,org.mozilla.javascript.Scriptable,);
EndClass 65
StartClass 66
Class(org.mozilla.javascript.ImporterTopLevel,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(IMPORTER_TAG,java.lang.Object,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(Id_importClass,int,Private,Y,Y,);
Attribute(Id_importPackage,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Attribute(importedPackages,org.mozilla.javascript.ObjArray,Private,N,N,);
Attribute(topScopeFlag,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(init,void,Public,Y,N);
Method(initStandardObjects,void,Public,N,N);
Method(has,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(getPackageProperty,java.lang.Object,Private,N,N);
Method(importPackage,void,Public,N,N);
Method(js_construct,java.lang.Object,Private,N,N);
Method(js_importClass,java.lang.Object,Private,N,N);
Method(js_importPackage,java.lang.Object,Private,N,N);
Method(importPackage$2,void,Private,N,N);
Method(importClass,void,Private,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(realThis,org.mozilla.javascript.ImporterTopLevel,Private,N,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,org.mozilla.javascript.Context,);
Parameter(<init>$3,org.mozilla.javascript.Context,);
Parameter(<init>$3,boolean,);
Parameter(init,org.mozilla.javascript.Context,);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(initStandardObjects,org.mozilla.javascript.Context,);
Parameter(initStandardObjects,boolean,);
Parameter(has,java.lang.String,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(get,java.lang.String,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(getPackageProperty,java.lang.String,);
Parameter(getPackageProperty,org.mozilla.javascript.Scriptable,);
Parameter(importPackage,org.mozilla.javascript.Context,);
Parameter(importPackage,org.mozilla.javascript.Scriptable,);
Parameter(importPackage,java.lang.Object[],);
Parameter(importPackage,org.mozilla.javascript.Function,);
Parameter(js_construct,org.mozilla.javascript.Scriptable,);
Parameter(js_construct,java.lang.Object[],);
Parameter(js_importClass,java.lang.Object[],);
Parameter(js_importPackage,java.lang.Object[],);
Parameter(importPackage$2,org.mozilla.javascript.NativeJavaPackage,);
Parameter(importClass,org.mozilla.javascript.NativeJavaClass,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(realThis,org.mozilla.javascript.Scriptable,);
Parameter(realThis,org.mozilla.javascript.IdFunctionObject,);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.TopLevel);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
SubClass(org.mozilla.javascript.tools.shell.Global);
Generalization(org.mozilla.javascript.TopLevel);
Composition(org.mozilla.javascript.ObjArray);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,<init>$2 --> <init>$3,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,<init>$3 --> initStandardObjects,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,init --> <init>,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,has --> getPackageProperty,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,get --> getPackageProperty,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,importPackage --> js_importPackage,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_construct --> <init>,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_construct --> importClass,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_construct --> importPackage$2,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_importClass --> importClass,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_importPackage --> importPackage$2,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,importClass --> get,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,execIdCall --> js_construct,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,execIdCall --> realThis,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,execIdCall --> js_importClass,org.mozilla.javascript.ImporterTopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,execIdCall --> js_importPackage,org.mozilla.javascript.ImporterTopLevel,);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,<init> --> importedPackages,org.mozilla.javascript.ImporterTopLevel,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,<init>$3 --> importedPackages,org.mozilla.javascript.ImporterTopLevel,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,getClassName --> topScopeFlag,org.mozilla.javascript.ImporterTopLevel,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,initStandardObjects --> topScopeFlag,org.mozilla.javascript.ImporterTopLevel,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,getPackageProperty --> importedPackages,org.mozilla.javascript.ImporterTopLevel,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,importPackage$2 --> importedPackages,org.mozilla.javascript.ImporterTopLevel,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,initPrototypeId --> IMPORTER_TAG,org.mozilla.javascript.ImporterTopLevel,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,execIdCall --> IMPORTER_TAG,org.mozilla.javascript.ImporterTopLevel,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,realThis --> topScopeFlag,org.mozilla.javascript.ImporterTopLevel,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,<clinit> --> IMPORTER_TAG,org.mozilla.javascript.ImporterTopLevel,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,has --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,get --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,getPackageProperty --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,js_importClass --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,js_importPackage --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ImporterTopLevel,importClass --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,<init> --> <init>,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,<init> --> <init>,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,<init>$3 --> <init>,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,<init>$3 --> <init>,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,initStandardObjects --> initStandardObjects$3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,initStandardObjects --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,initStandardObjects --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,initStandardObjects --> delete,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,has --> has,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,get --> get,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,getPackageProperty --> toArray,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,getPackageProperty --> getPkgProperty,org.mozilla.javascript.NativeJavaPackage,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,getPackageProperty --> reportRuntimeError2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_construct --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_construct --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_construct --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_construct --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_importClass --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_importClass --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_importPackage --> toString,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,js_importPackage --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,importPackage$2 --> size,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,importPackage$2 --> get,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,importPackage$2 --> equals,org.mozilla.javascript.NativeJavaPackage,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,importPackage$2 --> add,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,importClass --> getClassObject,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,importClass --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,importClass --> put,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.ImporterTopLevel,realThis --> incompatibleCallError,org.mozilla.javascript.IdScriptableObject,);
EndClass 66
StartClass 67
Class(org.mozilla.javascript.serialize.ScriptableOutputStream,N,N,Public);
Attribute(scope,org.mozilla.javascript.Scriptable,Private,N,N,);
Attribute(table,java.util.Map,Private,N,N,java.lang.Object;java.lang.String);
Method(<init>,void,Public,N,N);
Method(excludeAllIds,void,Public,N,N);
Method(addOptionalExcludedName,void,Public,N,N);
Method(addExcludedName,void,Public,N,N);
Method(hasExcludedName,boolean,Public,N,N);
Method(removeExcludedName,void,Public,N,N);
Method(excludeStandardObjectNames,void,Public,N,N);
Method(lookupQualifiedName,java.lang.Object,Public,Y,N);
Method(replaceObject,java.lang.Object,Protected,N,N);
Parameter(<init>,java.io.OutputStream,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(excludeAllIds,java.lang.Object[],);
Parameter(addOptionalExcludedName,java.lang.String,);
Parameter(addExcludedName,java.lang.String,);
Parameter(hasExcludedName,java.lang.String,);
Parameter(removeExcludedName,java.lang.String,);
Parameter(lookupQualifiedName,org.mozilla.javascript.Scriptable,);
Parameter(lookupQualifiedName,java.lang.String,);
Parameter(replaceObject,java.lang.Object,);
Composition(org.mozilla.javascript.Scriptable);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableOutputStream,<init> --> excludeStandardObjectNames,org.mozilla.javascript.serialize.ScriptableOutputStream,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableOutputStream,excludeAllIds --> addExcludedName,org.mozilla.javascript.serialize.ScriptableOutputStream,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableOutputStream,addOptionalExcludedName --> lookupQualifiedName,org.mozilla.javascript.serialize.ScriptableOutputStream,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableOutputStream,addExcludedName --> lookupQualifiedName,org.mozilla.javascript.serialize.ScriptableOutputStream,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableOutputStream,excludeStandardObjectNames --> addExcludedName,org.mozilla.javascript.serialize.ScriptableOutputStream,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableOutputStream,excludeStandardObjectNames --> addOptionalExcludedName,org.mozilla.javascript.serialize.ScriptableOutputStream,);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,<init> --> table,org.mozilla.javascript.serialize.ScriptableOutputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,<init> --> scope,org.mozilla.javascript.serialize.ScriptableOutputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,<init> --> table,org.mozilla.javascript.serialize.ScriptableOutputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,excludeAllIds --> scope,org.mozilla.javascript.serialize.ScriptableOutputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,addOptionalExcludedName --> scope,org.mozilla.javascript.serialize.ScriptableOutputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,addOptionalExcludedName --> table,org.mozilla.javascript.serialize.ScriptableOutputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,addExcludedName --> scope,org.mozilla.javascript.serialize.ScriptableOutputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,addExcludedName --> table,org.mozilla.javascript.serialize.ScriptableOutputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,hasExcludedName --> table,org.mozilla.javascript.serialize.ScriptableOutputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,removeExcludedName --> table,org.mozilla.javascript.serialize.ScriptableOutputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,replaceObject --> table,org.mozilla.javascript.serialize.ScriptableOutputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream,addOptionalExcludedName --> NOT_FOUND,org.mozilla.javascript.UniqueTag,READ);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableOutputStream,excludeAllIds --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableOutputStream,lookupQualifiedName --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableOutputStream,replaceObject --> <init>,org.mozilla.javascript.serialize.ScriptableOutputStream$PendingLookup,);
EndClass 67
StartClass 68
Class(org.mozilla.javascript.tools.shell.Environment,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(thePrototypeInstance,org.mozilla.javascript.tools.shell.Environment,Private,N,N,);
Method(defineClass,void,Public,Y,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(has,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(put,void,Public,N,N);
Method(collectIds,java.lang.Object[],Private,N,N);
Method(getIds,java.lang.Object[],Public,N,N);
Method(getAllIds,java.lang.Object[],Public,N,N);
Parameter(defineClass,org.mozilla.javascript.ScriptableObject,);
Parameter(<init>$2,org.mozilla.javascript.ScriptableObject,);
Parameter(has,java.lang.String,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(get,java.lang.String,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.String,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.ScriptableObject);
Composition(org.mozilla.javascript.tools.shell.Environment);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,getIds --> collectIds,org.mozilla.javascript.tools.shell.Environment,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,getAllIds --> collectIds,org.mozilla.javascript.tools.shell.Environment,);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Environment,<init> --> thePrototypeInstance,org.mozilla.javascript.tools.shell.Environment,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Environment,<init> --> thePrototypeInstance,org.mozilla.javascript.tools.shell.Environment,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Environment,<init>$2 --> thePrototypeInstance,org.mozilla.javascript.tools.shell.Environment,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Environment,has --> thePrototypeInstance,org.mozilla.javascript.tools.shell.Environment,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Environment,get --> thePrototypeInstance,org.mozilla.javascript.tools.shell.Environment,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Environment,put --> thePrototypeInstance,org.mozilla.javascript.tools.shell.Environment,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Environment,getIds --> thePrototypeInstance,org.mozilla.javascript.tools.shell.Environment,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Environment,getAllIds --> thePrototypeInstance,org.mozilla.javascript.tools.shell.Environment,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Environment,get --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,defineClass --> defineClass,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,<init> --> <init>,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,<init>$2 --> <init>,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,<init>$2 --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,<init>$2 --> getTopLevelProp,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,<init>$2 --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,<init>$2 --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,has --> has,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,get --> get,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,get --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,get --> toObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,put --> put,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,put --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,getIds --> getIds,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.tools.shell.Environment,getAllIds --> getAllIds,org.mozilla.javascript.ScriptableObject,);
EndClass 68
StartClass 69
Class(org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(privilegedUris,java.lang.Iterable,Private,N,Y,java.net.URI);
Attribute(fallbackUris,java.lang.Iterable,Private,N,Y,java.net.URI);
Attribute(urlConnectionSecurityDomainProvider,org.mozilla.javascript.commonjs.module.provider.UrlConnectionSecurityDomainProvider,Private,N,Y,);
Attribute(urlConnectionExpiryCalculator,org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(loadFromPrivilegedLocations,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Protected,N,N);
Method(loadFromFallbackLocations,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Protected,N,N);
Method(loadFromPathList,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Private,N,N);
Method(loadFromUri,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Protected,N,N);
Method(loadFromActualUri,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Protected,N,N);
Method(getReader,java.io.Reader,Private,Y,N);
Method(getCharacterEncoding,java.lang.String,Private,Y,N);
Method(getSecurityDomain,java.lang.Object,Private,N,N);
Method(close,void,Private,N,N);
Method(onFailedClosingUrlConnection,void,Protected,N,N);
Method(openUrlConnection,java.net.URLConnection,Protected,N,N);
Method(entityNeedsRevalidation,boolean,Protected,N,N);
Parameter(<init>,java.lang.Iterable,java.net.URI);
Parameter(<init>,java.lang.Iterable,java.net.URI);
Parameter(<init>$2,java.lang.Iterable,java.net.URI);
Parameter(<init>$2,java.lang.Iterable,java.net.URI);
Parameter(<init>$2,org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator,);
Parameter(<init>$2,org.mozilla.javascript.commonjs.module.provider.UrlConnectionSecurityDomainProvider,);
Parameter(loadFromPrivilegedLocations,java.lang.String,);
Parameter(loadFromPrivilegedLocations,java.lang.Object,);
Parameter(loadFromFallbackLocations,java.lang.String,);
Parameter(loadFromFallbackLocations,java.lang.Object,);
Parameter(loadFromPathList,java.lang.String,java.net.URI);
Parameter(loadFromPathList,java.lang.Object,);
Parameter(loadFromPathList,java.lang.Iterable,);
Parameter(loadFromUri,java.net.URI,);
Parameter(loadFromUri,java.net.URI,);
Parameter(loadFromUri,java.lang.Object,);
Parameter(loadFromActualUri,java.net.URI,);
Parameter(loadFromActualUri,java.net.URI,);
Parameter(loadFromActualUri,java.lang.Object,);
Parameter(getReader,java.net.URLConnection,);
Parameter(getCharacterEncoding,java.net.URLConnection,);
Parameter(getSecurityDomain,java.net.URLConnection,);
Parameter(close,java.net.URLConnection,);
Parameter(onFailedClosingUrlConnection,java.net.URLConnection,);
Parameter(onFailedClosingUrlConnection,java.io.IOException,);
Parameter(openUrlConnection,java.net.URL,);
Parameter(entityNeedsRevalidation,java.lang.Object,);
SuperClass(org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase);
Generalization(org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase);
Composition(org.mozilla.javascript.commonjs.module.provider.UrlConnectionSecurityDomainProvider);
Composition(org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,<init> --> <init>$2,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromPrivilegedLocations --> loadFromPathList,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromFallbackLocations --> loadFromPathList,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromPathList --> loadFromUri,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromUri --> loadFromActualUri,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromActualUri --> openUrlConnection,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromActualUri --> close,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromActualUri --> getReader,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromActualUri --> getSecurityDomain,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,getReader --> getCharacterEncoding,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,close --> onFailedClosingUrlConnection,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,<init>$2 --> privilegedUris,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,<init>$2 --> fallbackUris,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,<init>$2 --> urlConnectionExpiryCalculator,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,<init>$2 --> urlConnectionSecurityDomainProvider,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromPrivilegedLocations --> privilegedUris,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromFallbackLocations --> fallbackUris,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromActualUri --> urlConnectionExpiryCalculator,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,getSecurityDomain --> urlConnectionSecurityDomainProvider,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromActualUri --> NOT_MODIFIED,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,READ);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,<init> --> <init>,org.mozilla.javascript.commonjs.module.provider.DefaultUrlConnectionExpiryCalculator,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,<init>$2 --> <init>,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromActualUri --> appliesTo,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromActualUri --> applyConditionals,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromActualUri --> updateValidator,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromActualUri --> <init>,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,loadFromActualUri --> <init>,org.mozilla.javascript.commonjs.module.provider.ModuleSource,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,getCharacterEncoding --> <init>,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,getCharacterEncoding --> getEncoding,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,getCharacterEncoding --> getContentType,org.mozilla.javascript.commonjs.module.provider.ParsedContentType,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,getSecurityDomain --> getSecurityDomain,org.mozilla.javascript.commonjs.module.provider.UrlConnectionSecurityDomainProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider,entityNeedsRevalidation --> entityNeedsRevalidation,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,);
EndClass 69
StartClass 70
Class(org.mozilla.javascript.Synchronizer,N,N,Public);
Attribute(syncObject,java.lang.Object,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,java.lang.Object,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
SuperClass(org.mozilla.javascript.Delegator);
Generalization(org.mozilla.javascript.Delegator);
Call(ATTRIBUTE,org.mozilla.javascript.Synchronizer,<init>$2 --> syncObject,org.mozilla.javascript.Synchronizer,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Synchronizer,call --> syncObject,org.mozilla.javascript.Synchronizer,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Synchronizer,call --> obj,org.mozilla.javascript.Delegator,READ);
Call(METHOD,org.mozilla.javascript.Synchronizer,<init> --> <init>$2,org.mozilla.javascript.Delegator,);
Call(METHOD,org.mozilla.javascript.Synchronizer,<init>$2 --> <init>$2,org.mozilla.javascript.Delegator,);
Call(METHOD,org.mozilla.javascript.Synchronizer,call --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.Synchronizer,call --> call,org.mozilla.javascript.Function,);
EndClass 70
StartClass 71
Class(org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,Y,Y,Public);
Attribute(NOT_MODIFIED,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Public,Y,Y,);
Method(loadSource,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Public,N,Y);
Method(loadSource$2,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Public,N,Y);
Method(<clinit>,void,Public,Y,N);
Parameter(loadSource,java.lang.String,);
Parameter(loadSource,org.mozilla.javascript.Scriptable,);
Parameter(loadSource,java.lang.Object,);
Parameter(loadSource$2,java.net.URI,);
Parameter(loadSource$2,java.net.URI,);
Parameter(loadSource$2,java.lang.Object,);
Composition(org.mozilla.javascript.commonjs.module.provider.ModuleSource);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,<clinit> --> NOT_MODIFIED,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,WRITE);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,<clinit> --> <init>,org.mozilla.javascript.commonjs.module.provider.ModuleSource,);
EndClass 71
StartClass 72
Class(org.mozilla.javascript.serialize.ScriptableInputStream,N,N,Public);
Attribute(scope,org.mozilla.javascript.Scriptable,Private,N,N,);
Attribute(classLoader,java.lang.ClassLoader,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(resolveClass,java.lang.Class,Protected,N,N);
Method(resolveObject,java.lang.Object,Protected,N,N);
Parameter(<init>,java.io.InputStream,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(resolveClass,java.io.ObjectStreamClass,);
Parameter(resolveObject,java.lang.Object,);
Composition(org.mozilla.javascript.Scriptable);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableInputStream,<init> --> scope,org.mozilla.javascript.serialize.ScriptableInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableInputStream,<init> --> classLoader,org.mozilla.javascript.serialize.ScriptableInputStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableInputStream,resolveClass --> classLoader,org.mozilla.javascript.serialize.ScriptableInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableInputStream,resolveObject --> scope,org.mozilla.javascript.serialize.ScriptableInputStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableInputStream,resolveObject --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableInputStream,<init> --> getCurrentContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableInputStream,<init> --> getApplicationClassLoader,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableInputStream,resolveObject --> getName,org.mozilla.javascript.serialize.ScriptableOutputStream$PendingLookup,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableInputStream,resolveObject --> lookupQualifiedName,org.mozilla.javascript.serialize.ScriptableOutputStream,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableInputStream,resolveObject --> readResolve,org.mozilla.javascript.UniqueTag,);
Call(METHOD,org.mozilla.javascript.serialize.ScriptableInputStream,resolveObject --> readResolve,org.mozilla.javascript.Undefined,);
EndClass 72
StartClass 73
Class(org.mozilla.javascript.tools.shell.Runner,N,N,NA);
Attribute(factory,org.mozilla.javascript.ContextFactory,Public,N,N,);
Attribute(scope,org.mozilla.javascript.Scriptable,Private,N,N,);
Attribute(f,org.mozilla.javascript.Function,Private,N,N,);
Attribute(s,org.mozilla.javascript.Script,Private,N,N,);
Attribute(args,java.lang.Object[],Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(run,void,Public,N,N);
Method(run$2,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,org.mozilla.javascript.Function,);
Parameter(<init>,java.lang.Object[],);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,org.mozilla.javascript.Script,);
Parameter(run$2,org.mozilla.javascript.Context,);
Realization(org.mozilla.javascript.ContextAction);
Composition(org.mozilla.javascript.ContextFactory);
Composition(org.mozilla.javascript.Scriptable);
Composition(org.mozilla.javascript.Function);
Composition(org.mozilla.javascript.Script);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Runner,<init> --> scope,org.mozilla.javascript.tools.shell.Runner,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Runner,<init> --> f,org.mozilla.javascript.tools.shell.Runner,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Runner,<init> --> args,org.mozilla.javascript.tools.shell.Runner,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Runner,<init>$2 --> scope,org.mozilla.javascript.tools.shell.Runner,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Runner,<init>$2 --> s,org.mozilla.javascript.tools.shell.Runner,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Runner,run --> factory,org.mozilla.javascript.tools.shell.Runner,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Runner,run$2 --> f,org.mozilla.javascript.tools.shell.Runner,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Runner,run$2 --> scope,org.mozilla.javascript.tools.shell.Runner,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Runner,run$2 --> args,org.mozilla.javascript.tools.shell.Runner,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Runner,run$2 --> s,org.mozilla.javascript.tools.shell.Runner,READ);
Call(METHOD,org.mozilla.javascript.tools.shell.Runner,run --> call,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.tools.shell.Runner,run$2 --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.tools.shell.Runner,run$2 --> exec,org.mozilla.javascript.Script,);
EndClass 73
StartClass 74
Class(org.mozilla.javascript.tools.shell.PipeThread,N,N,NA);
Attribute(fromProcess,boolean,Private,N,N,);
Attribute(from,java.io.InputStream,Private,N,N,);
Attribute(to,java.io.OutputStream,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(run,void,Public,N,N);
Parameter(<init>,boolean,);
Parameter(<init>,java.io.InputStream,);
Parameter(<init>,java.io.OutputStream,);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.PipeThread,<init> --> fromProcess,org.mozilla.javascript.tools.shell.PipeThread,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.PipeThread,<init> --> from,org.mozilla.javascript.tools.shell.PipeThread,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.PipeThread,<init> --> to,org.mozilla.javascript.tools.shell.PipeThread,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.PipeThread,run --> fromProcess,org.mozilla.javascript.tools.shell.PipeThread,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.PipeThread,run --> from,org.mozilla.javascript.tools.shell.PipeThread,READ);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.PipeThread,run --> to,org.mozilla.javascript.tools.shell.PipeThread,READ);
Call(METHOD,org.mozilla.javascript.tools.shell.PipeThread,run --> pipe,org.mozilla.javascript.tools.shell.Global,);
Call(METHOD,org.mozilla.javascript.tools.shell.PipeThread,run --> throwAsScriptRuntimeEx,org.mozilla.javascript.Context,);
EndClass 74
StartClass 75
Class(org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(scriptRefQueue,java.lang.ref.ReferenceQueue,Private,N,N,org.mozilla.javascript.Script);
Attribute(scripts,java.util.concurrent.ConcurrentMap,Private,N,N,java.lang.String;org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference);
Method(<init>,void,Public,N,N);
Method(getModuleScript,org.mozilla.javascript.commonjs.module.ModuleScript,Public,N,N);
Method(getLoadedModule,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,Protected,N,N);
Method(putLoadedModule,void,Protected,N,N);
Method(readObject,void,Private,N,N);
Method(writeObject,void,Private,N,N);
Parameter(<init>,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,);
Parameter(getModuleScript,org.mozilla.javascript.Context,);
Parameter(getModuleScript,java.lang.String,);
Parameter(getModuleScript,java.net.URI,);
Parameter(getModuleScript,java.net.URI,);
Parameter(getModuleScript,org.mozilla.javascript.Scriptable,);
Parameter(getLoadedModule,java.lang.String,);
Parameter(putLoadedModule,java.lang.String,);
Parameter(putLoadedModule,org.mozilla.javascript.commonjs.module.ModuleScript,);
Parameter(putLoadedModule,java.lang.Object,);
Parameter(readObject,java.io.ObjectInputStream,);
Parameter(writeObject,java.io.ObjectOutputStream,);
SuperClass(org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase);
Generalization(org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,readObject --> putLoadedModule,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,<init> --> scriptRefQueue,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,<init> --> scripts,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,getModuleScript --> scriptRefQueue,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,getModuleScript --> scripts,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,getLoadedModule --> scripts,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,putLoadedModule --> scripts,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,putLoadedModule --> scriptRefQueue,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,readObject --> scriptRefQueue,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,readObject --> scripts,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,writeObject --> scripts,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,READ);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,<init> --> <init>,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,<init> --> getConcurrencyLevel,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,getModuleScript --> getModuleId,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,getModuleScript --> getModuleScript,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,getLoadedModule --> getCachedModuleScript,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,putLoadedModule --> getScript,org.mozilla.javascript.commonjs.module.ModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,putLoadedModule --> getUri,org.mozilla.javascript.commonjs.module.ModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,putLoadedModule --> getBase,org.mozilla.javascript.commonjs.module.ModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,putLoadedModule --> <init>,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,readObject --> getModule,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,readObject --> getValidator,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider,writeObject --> getCachedModuleScript,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,);
EndClass 75
StartClass 76
Class(org.mozilla.javascript.tools.shell.Global$1,N,N,NA);
Attribute(this$0,org.mozilla.javascript.tools.shell.Global,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.tools.shell.Global,);
Parameter(run,org.mozilla.javascript.Context,);
Realization(org.mozilla.javascript.ContextAction);
Composition(org.mozilla.javascript.tools.shell.Global);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global$1,<init> --> this$0,org.mozilla.javascript.tools.shell.Global$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.tools.shell.Global$1,run --> this$0,org.mozilla.javascript.tools.shell.Global$1,READ);
Call(METHOD,org.mozilla.javascript.tools.shell.Global$1,run --> init$2,org.mozilla.javascript.tools.shell.Global,);
EndClass 76
StartClass 77
Class(org.mozilla.javascript.commonjs.module.RequireBuilder,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(sandboxed,boolean,Private,N,N,);
Attribute(moduleScriptProvider,org.mozilla.javascript.commonjs.module.ModuleScriptProvider,Private,N,N,);
Attribute(preExec,org.mozilla.javascript.Script,Private,N,N,);
Attribute(postExec,org.mozilla.javascript.Script,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(setModuleScriptProvider,org.mozilla.javascript.commonjs.module.RequireBuilder,Public,N,N);
Method(setPostExec,org.mozilla.javascript.commonjs.module.RequireBuilder,Public,N,N);
Method(setPreExec,org.mozilla.javascript.commonjs.module.RequireBuilder,Public,N,N);
Method(setSandboxed,org.mozilla.javascript.commonjs.module.RequireBuilder,Public,N,N);
Method(createRequire,org.mozilla.javascript.commonjs.module.Require,Public,N,N);
Parameter(setModuleScriptProvider,org.mozilla.javascript.commonjs.module.ModuleScriptProvider,);
Parameter(setPostExec,org.mozilla.javascript.Script,);
Parameter(setPreExec,org.mozilla.javascript.Script,);
Parameter(setSandboxed,boolean,);
Parameter(createRequire,org.mozilla.javascript.Context,);
Parameter(createRequire,org.mozilla.javascript.Scriptable,);
Composition(org.mozilla.javascript.commonjs.module.ModuleScriptProvider);
Composition(org.mozilla.javascript.Script);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.RequireBuilder,<init> --> sandboxed,org.mozilla.javascript.commonjs.module.RequireBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.RequireBuilder,setModuleScriptProvider --> moduleScriptProvider,org.mozilla.javascript.commonjs.module.RequireBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.RequireBuilder,setPostExec --> postExec,org.mozilla.javascript.commonjs.module.RequireBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.RequireBuilder,setPreExec --> preExec,org.mozilla.javascript.commonjs.module.RequireBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.RequireBuilder,setSandboxed --> sandboxed,org.mozilla.javascript.commonjs.module.RequireBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.RequireBuilder,createRequire --> moduleScriptProvider,org.mozilla.javascript.commonjs.module.RequireBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.RequireBuilder,createRequire --> preExec,org.mozilla.javascript.commonjs.module.RequireBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.RequireBuilder,createRequire --> postExec,org.mozilla.javascript.commonjs.module.RequireBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.RequireBuilder,createRequire --> sandboxed,org.mozilla.javascript.commonjs.module.RequireBuilder,READ);
Call(METHOD,org.mozilla.javascript.commonjs.module.RequireBuilder,createRequire --> <init>,org.mozilla.javascript.commonjs.module.Require,);
EndClass 77
StartClass 78
Class(org.mozilla.javascript.ContinuationPending,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(continuationState,org.mozilla.javascript.NativeContinuation,Private,N,N,);
Attribute(applicationState,java.lang.Object,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getContinuation,java.lang.Object,Public,N,N);
Method(getContinuationState,org.mozilla.javascript.NativeContinuation,Public,N,N);
Method(setApplicationState,void,Public,N,N);
Method(getApplicationState,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeContinuation,);
Parameter(setApplicationState,java.lang.Object,);
Composition(org.mozilla.javascript.NativeContinuation);
Call(ATTRIBUTE,org.mozilla.javascript.ContinuationPending,<init> --> continuationState,org.mozilla.javascript.ContinuationPending,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContinuationPending,getContinuation --> continuationState,org.mozilla.javascript.ContinuationPending,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContinuationPending,getContinuationState --> continuationState,org.mozilla.javascript.ContinuationPending,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ContinuationPending,setApplicationState --> applicationState,org.mozilla.javascript.ContinuationPending,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ContinuationPending,getApplicationState --> applicationState,org.mozilla.javascript.ContinuationPending,READ);
EndClass 78
StartClass 79
Class(org.mozilla.javascript.NativeCall,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(CALL_TAG,java.lang.Object,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Attribute(function,org.mozilla.javascript.NativeFunction,Public,N,N,);
Attribute(originalArgs,java.lang.Object[],Public,N,N,);
Attribute(parentActivationCall,org.mozilla.javascript.NativeCall,Public,N,N,);
Method(init,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(findPrototypeId,int,Protected,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(<init>$2,org.mozilla.javascript.NativeFunction,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,java.lang.Object[],);
Parameter(findPrototypeId,java.lang.String,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Composition(org.mozilla.javascript.NativeFunction);
Composition(org.mozilla.javascript.NativeCall);
Call(METHOD,org.mozilla.javascript.NativeCall,init --> <init>,org.mozilla.javascript.NativeCall,);
Call(METHOD,org.mozilla.javascript.NativeCall,execIdCall --> <init>,org.mozilla.javascript.NativeCall,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeCall,<init>$2 --> function,org.mozilla.javascript.NativeCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeCall,<init>$2 --> originalArgs,org.mozilla.javascript.NativeCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeCall,initPrototypeId --> CALL_TAG,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeCall,execIdCall --> CALL_TAG,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeCall,<clinit> --> CALL_TAG,org.mozilla.javascript.NativeCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeCall,<init>$2 --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeCall,<init>$2 --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.NativeCall,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeCall,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeCall,<init>$2 --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeCall,<init>$2 --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeCall,<init>$2 --> getParamAndVarCount,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.NativeCall,<init>$2 --> getParamCount,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.NativeCall,<init>$2 --> getParamOrVarName,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.NativeCall,<init>$2 --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeCall,<init>$2 --> has,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeCall,<init>$2 --> <init>,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.NativeCall,<init>$2 --> getParamOrVarConst,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.NativeCall,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeCall,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeCall,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeCall,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeCall,execIdCall --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeCall,execIdCall --> checkDeprecated,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeCall,execIdCall --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeCall,execIdCall --> setPrototype,org.mozilla.javascript.ScriptableObject,);
EndClass 79
StartClass 80
Class(org.mozilla.javascript.xml.XMLLib,N,Y,Public);
Attribute(XML_LIB_KEY,java.lang.Object,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(extractFromScopeOrNull,org.mozilla.javascript.xml.XMLLib,Public,Y,N);
Method(extractFromScope,org.mozilla.javascript.xml.XMLLib,Public,Y,N);
Method(bindToScope,org.mozilla.javascript.xml.XMLLib,Protected,N,N);
Method(isXMLName,boolean,Public,N,Y);
Method(nameRef,org.mozilla.javascript.Ref,Public,N,Y);
Method(nameRef$2,org.mozilla.javascript.Ref,Public,N,Y);
Method(escapeAttributeValue,java.lang.String,Public,N,Y);
Method(escapeTextValue,java.lang.String,Public,N,Y);
Method(toDefaultXmlNamespace,java.lang.Object,Public,N,Y);
Method(setIgnoreComments,void,Public,N,N);
Method(setIgnoreWhitespace,void,Public,N,N);
Method(setIgnoreProcessingInstructions,void,Public,N,N);
Method(setPrettyPrinting,void,Public,N,N);
Method(setPrettyIndent,void,Public,N,N);
Method(isIgnoreComments,boolean,Public,N,N);
Method(isIgnoreProcessingInstructions,boolean,Public,N,N);
Method(isIgnoreWhitespace,boolean,Public,N,N);
Method(isPrettyPrinting,boolean,Public,N,N);
Method(getPrettyIndent,int,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(extractFromScopeOrNull,org.mozilla.javascript.Scriptable,);
Parameter(extractFromScope,org.mozilla.javascript.Scriptable,);
Parameter(bindToScope,org.mozilla.javascript.Scriptable,);
Parameter(isXMLName,org.mozilla.javascript.Context,);
Parameter(isXMLName,java.lang.Object,);
Parameter(nameRef,org.mozilla.javascript.Context,);
Parameter(nameRef,java.lang.Object,);
Parameter(nameRef,org.mozilla.javascript.Scriptable,);
Parameter(nameRef,int,);
Parameter(nameRef$2,org.mozilla.javascript.Context,);
Parameter(nameRef$2,java.lang.Object,);
Parameter(nameRef$2,java.lang.Object,);
Parameter(nameRef$2,org.mozilla.javascript.Scriptable,);
Parameter(nameRef$2,int,);
Parameter(escapeAttributeValue,java.lang.Object,);
Parameter(escapeTextValue,java.lang.Object,);
Parameter(toDefaultXmlNamespace,org.mozilla.javascript.Context,);
Parameter(toDefaultXmlNamespace,java.lang.Object,);
Parameter(setIgnoreComments,boolean,);
Parameter(setIgnoreWhitespace,boolean,);
Parameter(setIgnoreProcessingInstructions,boolean,);
Parameter(setPrettyPrinting,boolean,);
Parameter(setPrettyIndent,int,);
Call(METHOD,org.mozilla.javascript.xml.XMLLib,extractFromScope --> extractFromScopeOrNull,org.mozilla.javascript.xml.XMLLib,);
Call(ATTRIBUTE,org.mozilla.javascript.xml.XMLLib,extractFromScopeOrNull --> XML_LIB_KEY,org.mozilla.javascript.xml.XMLLib,READ);
Call(ATTRIBUTE,org.mozilla.javascript.xml.XMLLib,bindToScope --> XML_LIB_KEY,org.mozilla.javascript.xml.XMLLib,READ);
Call(ATTRIBUTE,org.mozilla.javascript.xml.XMLLib,<clinit> --> XML_LIB_KEY,org.mozilla.javascript.xml.XMLLib,WRITE);
Call(METHOD,org.mozilla.javascript.xml.XMLLib,extractFromScopeOrNull --> getLibraryScopeOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.xml.XMLLib,extractFromScopeOrNull --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.xml.XMLLib,extractFromScopeOrNull --> getAssociatedValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.xml.XMLLib,extractFromScope --> getMessage0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.xml.XMLLib,extractFromScope --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.xml.XMLLib,bindToScope --> getLibraryScopeOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.xml.XMLLib,bindToScope --> associateValue,org.mozilla.javascript.ScriptableObject,);
EndClass 80
StartClass 81
Class(org.mozilla.javascript.ClassShutter,Y,Y,Public);
Method(visibleToScripts,boolean,Public,N,Y);
Parameter(visibleToScripts,java.lang.String,);
EndClass 81
StartClass 82
Class(org.mozilla.javascript.RegExpProxy,Y,Y,Public);
Attribute(RA_MATCH,int,Public,Y,Y,);
Attribute(RA_REPLACE,int,Public,Y,Y,);
Attribute(RA_SEARCH,int,Public,Y,Y,);
Method(isRegExp,boolean,Public,N,Y);
Method(compileRegExp,java.lang.Object,Public,N,Y);
Method(wrapRegExp,org.mozilla.javascript.Scriptable,Public,N,Y);
Method(action,java.lang.Object,Public,N,Y);
Method(find_split,int,Public,N,Y);
Method(js_split,java.lang.Object,Public,N,Y);
Parameter(isRegExp,org.mozilla.javascript.Scriptable,);
Parameter(compileRegExp,org.mozilla.javascript.Context,);
Parameter(compileRegExp,java.lang.String,);
Parameter(compileRegExp,java.lang.String,);
Parameter(wrapRegExp,org.mozilla.javascript.Context,);
Parameter(wrapRegExp,org.mozilla.javascript.Scriptable,);
Parameter(wrapRegExp,java.lang.Object,);
Parameter(action,org.mozilla.javascript.Context,);
Parameter(action,org.mozilla.javascript.Scriptable,);
Parameter(action,org.mozilla.javascript.Scriptable,);
Parameter(action,java.lang.Object[],);
Parameter(action,int,);
Parameter(find_split,org.mozilla.javascript.Context,);
Parameter(find_split,org.mozilla.javascript.Scriptable,);
Parameter(find_split,java.lang.String,);
Parameter(find_split,java.lang.String,);
Parameter(find_split,org.mozilla.javascript.Scriptable,);
Parameter(find_split,int[],);
Parameter(find_split,int[],);
Parameter(find_split,boolean[],);
Parameter(find_split,java.lang.String[][],);
Parameter(js_split,org.mozilla.javascript.Context,);
Parameter(js_split,org.mozilla.javascript.Scriptable,);
Parameter(js_split,java.lang.String,);
Parameter(js_split,java.lang.Object[],);
EndClass 82
StartClass 83
Class(org.mozilla.javascript.WrapFactory,N,N,Public);
Attribute(javaPrimitiveWrap,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(wrap,java.lang.Object,Public,N,N);
Method(wrapNewObject,org.mozilla.javascript.Scriptable,Public,N,N);
Method(wrapAsJavaObject,org.mozilla.javascript.Scriptable,Public,N,N);
Method(wrapJavaClass,org.mozilla.javascript.Scriptable,Public,N,N);
Method(isJavaPrimitiveWrap,boolean,Public,N,N);
Method(setJavaPrimitiveWrap,void,Public,N,N);
Parameter(wrap,org.mozilla.javascript.Context,);
Parameter(wrap,org.mozilla.javascript.Scriptable,);
Parameter(wrap,java.lang.Object,);
Parameter(wrap,java.lang.Class,);
Parameter(wrapNewObject,org.mozilla.javascript.Context,);
Parameter(wrapNewObject,org.mozilla.javascript.Scriptable,);
Parameter(wrapNewObject,java.lang.Object,);
Parameter(wrapAsJavaObject,org.mozilla.javascript.Context,);
Parameter(wrapAsJavaObject,org.mozilla.javascript.Scriptable,);
Parameter(wrapAsJavaObject,java.lang.Object,);
Parameter(wrapAsJavaObject,java.lang.Class,);
Parameter(wrapJavaClass,org.mozilla.javascript.Context,);
Parameter(wrapJavaClass,org.mozilla.javascript.Scriptable,);
Parameter(wrapJavaClass,java.lang.Class,);
Parameter(setJavaPrimitiveWrap,boolean,);
Call(METHOD,org.mozilla.javascript.WrapFactory,wrap --> isJavaPrimitiveWrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.WrapFactory,wrap --> wrapAsJavaObject,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.WrapFactory,wrapNewObject --> wrapAsJavaObject,org.mozilla.javascript.WrapFactory,);
Call(ATTRIBUTE,org.mozilla.javascript.WrapFactory,<init> --> javaPrimitiveWrap,org.mozilla.javascript.WrapFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.WrapFactory,isJavaPrimitiveWrap --> javaPrimitiveWrap,org.mozilla.javascript.WrapFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.WrapFactory,setJavaPrimitiveWrap --> javaPrimitiveWrap,org.mozilla.javascript.WrapFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.WrapFactory,wrap --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.WrapFactory,wrap --> wrap,org.mozilla.javascript.NativeJavaArray,);
Call(METHOD,org.mozilla.javascript.WrapFactory,wrapNewObject --> wrap,org.mozilla.javascript.NativeJavaArray,);
Call(METHOD,org.mozilla.javascript.WrapFactory,wrapAsJavaObject --> <init>$2,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.WrapFactory,wrapJavaClass --> <init>$2,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.WrapFactory,setJavaPrimitiveWrap --> getCurrentContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.WrapFactory,setJavaPrimitiveWrap --> isSealed,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.WrapFactory,setJavaPrimitiveWrap --> onSealedMutation,org.mozilla.javascript.Context,);
EndClass 83
StartClass 84
Class(org.mozilla.javascript.debug.Debugger,Y,Y,Public);
Method(handleCompilationDone,void,Public,N,Y);
Method(getFrame,org.mozilla.javascript.debug.DebugFrame,Public,N,Y);
Parameter(handleCompilationDone,org.mozilla.javascript.Context,);
Parameter(handleCompilationDone,org.mozilla.javascript.debug.DebuggableScript,);
Parameter(handleCompilationDone,java.lang.String,);
Parameter(getFrame,org.mozilla.javascript.Context,);
Parameter(getFrame,org.mozilla.javascript.debug.DebuggableScript,);
EndClass 84
StartClass 85
Class(org.mozilla.javascript.ObjArray,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(size,int,Private,N,N,);
Attribute(sealed,boolean,Private,N,N,);
Attribute(FIELDS_STORE_SIZE,int,Private,Y,Y,);
Attribute(f0,java.lang.Object,Private,N,N,);
Attribute(f1,java.lang.Object,Private,N,N,);
Attribute(f2,java.lang.Object,Private,N,N,);
Attribute(f3,java.lang.Object,Private,N,N,);
Attribute(f4,java.lang.Object,Private,N,N,);
Attribute(data,java.lang.Object[],Private,N,N,);
Method(<init>,void,Public,N,N);
Method(isSealed,boolean,Public,N,N);
Method(seal,void,Public,N,N);
Method(isEmpty,boolean,Public,N,N);
Method(size,int,Public,N,N);
Method(setSize,void,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(set,void,Public,N,N);
Method(getImpl,java.lang.Object,Private,N,N);
Method(setImpl,void,Private,N,N);
Method(indexOf,int,Public,N,N);
Method(lastIndexOf,int,Public,N,N);
Method(peek,java.lang.Object,Public,N,N);
Method(pop,java.lang.Object,Public,N,N);
Method(push,void,Public,N,N);
Method(add,void,Public,N,N);
Method(add$2,void,Public,N,N);
Method(remove,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(toArray,java.lang.Object[],Public,N,N);
Method(toArray$2,void,Public,N,N);
Method(toArray$3,void,Public,N,N);
Method(ensureCapacity,void,Private,N,N);
Method(onInvalidIndex,java.lang.RuntimeException,Private,Y,N);
Method(onEmptyStackTopRead,java.lang.RuntimeException,Private,Y,N);
Method(onSeledMutation,java.lang.RuntimeException,Private,Y,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(setSize,int,);
Parameter(get,int,);
Parameter(set,int,);
Parameter(set,java.lang.Object,);
Parameter(getImpl,int,);
Parameter(setImpl,int,);
Parameter(setImpl,java.lang.Object,);
Parameter(indexOf,java.lang.Object,);
Parameter(lastIndexOf,java.lang.Object,);
Parameter(push,java.lang.Object,);
Parameter(add,java.lang.Object,);
Parameter(add$2,int,);
Parameter(add$2,java.lang.Object,);
Parameter(remove,int,);
Parameter(toArray$2,java.lang.Object[],);
Parameter(toArray$3,java.lang.Object[],);
Parameter(toArray$3,int,);
Parameter(ensureCapacity,int,);
Parameter(onInvalidIndex,int,);
Parameter(onInvalidIndex,int,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Call(METHOD,org.mozilla.javascript.ObjArray,setSize --> onSeledMutation,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,setSize --> setImpl,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,setSize --> ensureCapacity,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,get --> onInvalidIndex,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,get --> getImpl,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,set --> onInvalidIndex,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,set --> onSeledMutation,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,set --> setImpl,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,indexOf --> getImpl,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,lastIndexOf --> getImpl,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,peek --> onEmptyStackTopRead,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,peek --> getImpl,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,pop --> onSeledMutation,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,pop --> onEmptyStackTopRead,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,push --> add,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,add --> onSeledMutation,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,add --> ensureCapacity,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,add --> setImpl,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,add$2 --> onInvalidIndex,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,add$2 --> onSeledMutation,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,add$2 --> ensureCapacity,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,remove --> onInvalidIndex,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,remove --> onSeledMutation,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,clear --> onSeledMutation,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,clear --> setImpl,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,toArray --> toArray$3,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,toArray$2 --> toArray$3,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,writeObject --> getImpl,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.ObjArray,readObject --> setImpl,org.mozilla.javascript.ObjArray,);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,isSealed --> sealed,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,seal --> sealed,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,isEmpty --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,size --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,setSize --> sealed,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,setSize --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,setSize --> size,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,get --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,set --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,set --> sealed,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,getImpl --> f0,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,getImpl --> f1,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,getImpl --> f2,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,getImpl --> f3,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,getImpl --> f4,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,getImpl --> data,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,setImpl --> data,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,setImpl --> f0,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,setImpl --> f1,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,setImpl --> f2,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,setImpl --> f3,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,setImpl --> f4,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,indexOf --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,lastIndexOf --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,peek --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> sealed,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> f0,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> f1,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> f2,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> f3,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> f4,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> data,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> f0,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> f1,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> f2,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> f3,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> f4,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,pop --> size,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add --> sealed,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add --> size,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> sealed,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> f0,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> f1,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> f2,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> f3,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> f4,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> data,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> f0,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> f1,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> f2,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> f3,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> f4,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,add$2 --> size,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> sealed,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> f1,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> f2,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> f3,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> f4,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> data,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> f0,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> f1,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> f2,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> f3,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> f4,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,remove --> size,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,clear --> sealed,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,clear --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,clear --> size,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,toArray --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,toArray$3 --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,toArray$3 --> data,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,toArray$3 --> f4,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,toArray$3 --> f3,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,toArray$3 --> f2,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,toArray$3 --> f1,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,toArray$3 --> f0,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,ensureCapacity --> data,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,ensureCapacity --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,ensureCapacity --> data,org.mozilla.javascript.ObjArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,writeObject --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,readObject --> size,org.mozilla.javascript.ObjArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjArray,readObject --> data,org.mozilla.javascript.ObjArray,WRITE);
EndClass 85
StartClass 86
Class(org.mozilla.javascript.ContextListener,Y,Y,Public);
Method(contextEntered,void,Public,N,Y);
Method(contextExited,void,Public,N,Y);
Parameter(contextEntered,org.mozilla.javascript.Context,);
Parameter(contextExited,org.mozilla.javascript.Context,);
Realization(org.mozilla.javascript.ContextFactory$Listener);
EndClass 86
StartClass 87
Class(org.mozilla.javascript.Context$ClassShutterSetter,Y,Y,Public);
Method(setClassShutter,void,Public,N,Y);
Method(getClassShutter,org.mozilla.javascript.ClassShutter,Public,N,Y);
Parameter(setClassShutter,org.mozilla.javascript.ClassShutter,);
EndClass 87
StartClass 88
Class(org.mozilla.javascript.debug.DebuggableScript,Y,Y,Public);
Method(isTopLevel,boolean,Public,N,Y);
Method(isFunction,boolean,Public,N,Y);
Method(getFunctionName,java.lang.String,Public,N,Y);
Method(getParamCount,int,Public,N,Y);
Method(getParamAndVarCount,int,Public,N,Y);
Method(getParamOrVarName,java.lang.String,Public,N,Y);
Method(getSourceName,java.lang.String,Public,N,Y);
Method(isGeneratedScript,boolean,Public,N,Y);
Method(getLineNumbers,int[],Public,N,Y);
Method(getFunctionCount,int,Public,N,Y);
Method(getFunction,org.mozilla.javascript.debug.DebuggableScript,Public,N,Y);
Method(getParent,org.mozilla.javascript.debug.DebuggableScript,Public,N,Y);
Parameter(getParamOrVarName,int,);
Parameter(getFunction,int,);
EndClass 88
StartClass 89
Class(org.mozilla.javascript.ast.ScriptNode,N,N,Public);
Attribute(encodedSourceStart,int,Private,N,N,);
Attribute(encodedSourceEnd,int,Private,N,N,);
Attribute(sourceName,java.lang.String,Private,N,N,);
Attribute(encodedSource,java.lang.String,Private,N,N,);
Attribute(endLineno,int,Private,N,N,);
Attribute(functions,java.util.List,Private,N,N,org.mozilla.javascript.ast.FunctionNode);
Attribute(regexps,java.util.List,Private,N,N,org.mozilla.javascript.ast.RegExpLiteral);
Attribute(EMPTY_LIST,java.util.List,Private,N,N,org.mozilla.javascript.ast.FunctionNode);
Attribute(symbols,java.util.List,Private,N,N,org.mozilla.javascript.ast.Symbol);
Attribute(paramCount,int,Private,N,N,);
Attribute(variableNames,java.lang.String[],Private,N,N,);
Attribute(isConsts,boolean[],Private,N,N,);
Attribute(compilerData,java.lang.Object,Private,N,N,);
Attribute(tempNumber,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getSourceName,java.lang.String,Public,N,N);
Method(setSourceName,void,Public,N,N);
Method(getEncodedSourceStart,int,Public,N,N);
Method(setEncodedSourceStart,void,Public,N,N);
Method(getEncodedSourceEnd,int,Public,N,N);
Method(setEncodedSourceEnd,void,Public,N,N);
Method(setEncodedSourceBounds,void,Public,N,N);
Method(setEncodedSource,void,Public,N,N);
Method(getEncodedSource,java.lang.String,Public,N,N);
Method(getBaseLineno,int,Public,N,N);
Method(setBaseLineno,void,Public,N,N);
Method(getEndLineno,int,Public,N,N);
Method(setEndLineno,void,Public,N,N);
Method(getFunctionCount,int,Public,N,N);
Method(getFunctionNode,org.mozilla.javascript.ast.FunctionNode,Public,N,N);
Method(getFunctions,java.util.List,Public,N,N);
Method(addFunction,int,Public,N,N);
Method(getRegexpCount,int,Public,N,N);
Method(getRegexpString,java.lang.String,Public,N,N);
Method(getRegexpFlags,java.lang.String,Public,N,N);
Method(addRegExp,void,Public,N,N);
Method(getIndexForNameNode,int,Public,N,N);
Method(getParamOrVarName,java.lang.String,Public,N,N);
Method(getParamCount,int,Public,N,N);
Method(getParamAndVarCount,int,Public,N,N);
Method(getParamAndVarNames,java.lang.String[],Public,N,N);
Method(getParamAndVarConst,boolean[],Public,N,N);
Method(addSymbol,void,Public,N,N);
Method(getSymbols,java.util.List,Public,N,N);
Method(setSymbols,void,Public,N,N);
Method(flattenSymbolTable,void,Public,N,N);
Method(getCompilerData,java.lang.Object,Public,N,N);
Method(setCompilerData,void,Public,N,N);
Method(getNextTempName,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(setSourceName,java.lang.String,);
Parameter(setEncodedSourceStart,int,);
Parameter(setEncodedSourceEnd,int,);
Parameter(setEncodedSourceBounds,int,);
Parameter(setEncodedSourceBounds,int,);
Parameter(setEncodedSource,java.lang.String,);
Parameter(setBaseLineno,int,);
Parameter(setEndLineno,int,);
Parameter(getFunctionNode,int,);
Parameter(addFunction,org.mozilla.javascript.ast.FunctionNode,);
Parameter(getRegexpString,int,);
Parameter(getRegexpFlags,int,);
Parameter(addRegExp,org.mozilla.javascript.ast.RegExpLiteral,);
Parameter(getIndexForNameNode,org.mozilla.javascript.Node,);
Parameter(getParamOrVarName,int,);
Parameter(addSymbol,org.mozilla.javascript.ast.Symbol,);
Parameter(setSymbols,java.util.List,org.mozilla.javascript.ast.Symbol);
Parameter(flattenSymbolTable,boolean,);
Parameter(setCompilerData,java.lang.Object,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
SubClass(org.mozilla.javascript.ast.AstRoot);
SubClass(org.mozilla.javascript.ast.FunctionNode);
Generalization(org.mozilla.javascript.ast.Scope);
Composition(org.mozilla.javascript.ast.FunctionNode);
Composition(org.mozilla.javascript.ast.Symbol);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init> --> encodedSourceStart,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init> --> encodedSourceEnd,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init> --> endLineno,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init> --> EMPTY_LIST,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init> --> symbols,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init> --> paramCount,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init> --> tempNumber,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init>$2 --> encodedSourceStart,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init>$2 --> encodedSourceEnd,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init>$2 --> endLineno,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init>$2 --> EMPTY_LIST,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init>$2 --> symbols,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init>$2 --> paramCount,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init>$2 --> tempNumber,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getSourceName --> sourceName,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setSourceName --> sourceName,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getEncodedSourceStart --> encodedSourceStart,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setEncodedSourceStart --> encodedSourceStart,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getEncodedSourceEnd --> encodedSourceEnd,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setEncodedSourceEnd --> encodedSourceEnd,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setEncodedSourceBounds --> encodedSourceStart,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setEncodedSourceBounds --> encodedSourceEnd,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setEncodedSource --> encodedSource,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getEncodedSource --> encodedSource,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getEndLineno --> endLineno,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setEndLineno --> endLineno,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setEndLineno --> endLineno,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getFunctionCount --> functions,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getFunctionNode --> functions,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getFunctions --> functions,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getFunctions --> EMPTY_LIST,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,addFunction --> functions,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,addFunction --> functions,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getRegexpCount --> regexps,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getRegexpString --> regexps,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getRegexpFlags --> regexps,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,addRegExp --> regexps,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,addRegExp --> regexps,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getIndexForNameNode --> variableNames,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getParamOrVarName --> variableNames,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getParamCount --> paramCount,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getParamAndVarCount --> variableNames,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getParamAndVarCount --> symbols,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getParamAndVarNames --> variableNames,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getParamAndVarConst --> variableNames,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getParamAndVarConst --> isConsts,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,addSymbol --> variableNames,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,addSymbol --> paramCount,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,addSymbol --> symbols,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,addSymbol --> paramCount,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getSymbols --> symbols,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setSymbols --> symbols,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,flattenSymbolTable --> symbols,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,flattenSymbolTable --> variableNames,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,flattenSymbolTable --> isConsts,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,flattenSymbolTable --> symbols,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,flattenSymbolTable --> variableNames,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,flattenSymbolTable --> isConsts,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getCompilerData --> compilerData,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setCompilerData --> compilerData,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setCompilerData --> compilerData,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getNextTempName --> tempNumber,org.mozilla.javascript.ast.ScriptNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getNextTempName --> tempNumber,org.mozilla.javascript.ast.ScriptNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init> --> top,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init>$2 --> top,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,getBaseLineno --> lineno,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setBaseLineno --> lineno,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,setBaseLineno --> lineno,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ScriptNode,flattenSymbolTable --> symbolTable,org.mozilla.javascript.ast.Scope,READ);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,<init> --> <init>,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,<init>$2 --> <init>$2,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,setBaseLineno --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,setEndLineno --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,addFunction --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,getRegexpString --> getValue,org.mozilla.javascript.ast.RegExpLiteral,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,getRegexpFlags --> getFlags,org.mozilla.javascript.ast.RegExpLiteral,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,addRegExp --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,addRegExp --> putIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,getIndexForNameNode --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,getIndexForNameNode --> getScope,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,getIndexForNameNode --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,getIndexForNameNode --> getSymbol,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,getIndexForNameNode --> getIndex,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,getParamOrVarName --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,getParamAndVarCount --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,getParamAndVarNames --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,getParamAndVarConst --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,addSymbol --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,addSymbol --> getDeclType,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,flattenSymbolTable --> getContainingTable,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,flattenSymbolTable --> getName,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,flattenSymbolTable --> getDeclType,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,flattenSymbolTable --> setIndex,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,setCompilerData --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,visit --> iterator,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.ScriptNode,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 89
StartClass 90
Class(org.mozilla.javascript.DefaultErrorReporter,N,N,NA);
Attribute(instance,org.mozilla.javascript.DefaultErrorReporter,Public,Y,Y,);
Attribute(forEval,boolean,Private,N,N,);
Attribute(chainedReporter,org.mozilla.javascript.ErrorReporter,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(forEval,org.mozilla.javascript.ErrorReporter,Public,Y,N);
Method(warning,void,Public,N,N);
Method(error,void,Public,N,N);
Method(runtimeError,org.mozilla.javascript.EvaluatorException,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(forEval,org.mozilla.javascript.ErrorReporter,);
Parameter(warning,java.lang.String,);
Parameter(warning,java.lang.String,);
Parameter(warning,int,);
Parameter(warning,java.lang.String,);
Parameter(warning,int,);
Parameter(error,java.lang.String,);
Parameter(error,java.lang.String,);
Parameter(error,int,);
Parameter(error,java.lang.String,);
Parameter(error,int,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,int,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,int,);
Realization(org.mozilla.javascript.ErrorReporter);
Composition(org.mozilla.javascript.DefaultErrorReporter);
Composition(org.mozilla.javascript.ErrorReporter);
Call(METHOD,org.mozilla.javascript.DefaultErrorReporter,forEval --> <init>,org.mozilla.javascript.DefaultErrorReporter,);
Call(METHOD,org.mozilla.javascript.DefaultErrorReporter,error --> runtimeError,org.mozilla.javascript.DefaultErrorReporter,);
Call(METHOD,org.mozilla.javascript.DefaultErrorReporter,<clinit> --> <init>,org.mozilla.javascript.DefaultErrorReporter,);
Call(ATTRIBUTE,org.mozilla.javascript.DefaultErrorReporter,forEval --> forEval,org.mozilla.javascript.DefaultErrorReporter,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.DefaultErrorReporter,forEval --> chainedReporter,org.mozilla.javascript.DefaultErrorReporter,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.DefaultErrorReporter,warning --> chainedReporter,org.mozilla.javascript.DefaultErrorReporter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.DefaultErrorReporter,error --> forEval,org.mozilla.javascript.DefaultErrorReporter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.DefaultErrorReporter,error --> chainedReporter,org.mozilla.javascript.DefaultErrorReporter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.DefaultErrorReporter,runtimeError --> chainedReporter,org.mozilla.javascript.DefaultErrorReporter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.DefaultErrorReporter,<clinit> --> instance,org.mozilla.javascript.DefaultErrorReporter,WRITE);
Call(METHOD,org.mozilla.javascript.DefaultErrorReporter,warning --> warning,org.mozilla.javascript.ErrorReporter,);
Call(METHOD,org.mozilla.javascript.DefaultErrorReporter,error --> constructError$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.DefaultErrorReporter,error --> error,org.mozilla.javascript.ErrorReporter,);
Call(METHOD,org.mozilla.javascript.DefaultErrorReporter,runtimeError --> runtimeError,org.mozilla.javascript.ErrorReporter,);
Call(METHOD,org.mozilla.javascript.DefaultErrorReporter,runtimeError --> <init>$3,org.mozilla.javascript.EvaluatorException,);
EndClass 90
StartClass 91
Class(org.mozilla.javascript.Node,N,N,Public);
Attribute(FUNCTION_PROP,int,Public,Y,Y,);
Attribute(LOCAL_PROP,int,Public,Y,Y,);
Attribute(LOCAL_BLOCK_PROP,int,Public,Y,Y,);
Attribute(REGEXP_PROP,int,Public,Y,Y,);
Attribute(CASEARRAY_PROP,int,Public,Y,Y,);
Attribute(TARGETBLOCK_PROP,int,Public,Y,Y,);
Attribute(VARIABLE_PROP,int,Public,Y,Y,);
Attribute(ISNUMBER_PROP,int,Public,Y,Y,);
Attribute(DIRECTCALL_PROP,int,Public,Y,Y,);
Attribute(SPECIALCALL_PROP,int,Public,Y,Y,);
Attribute(SKIP_INDEXES_PROP,int,Public,Y,Y,);
Attribute(OBJECT_IDS_PROP,int,Public,Y,Y,);
Attribute(INCRDECR_PROP,int,Public,Y,Y,);
Attribute(CATCH_SCOPE_PROP,int,Public,Y,Y,);
Attribute(LABEL_ID_PROP,int,Public,Y,Y,);
Attribute(MEMBER_TYPE_PROP,int,Public,Y,Y,);
Attribute(NAME_PROP,int,Public,Y,Y,);
Attribute(CONTROL_BLOCK_PROP,int,Public,Y,Y,);
Attribute(PARENTHESIZED_PROP,int,Public,Y,Y,);
Attribute(GENERATOR_END_PROP,int,Public,Y,Y,);
Attribute(DESTRUCTURING_ARRAY_LENGTH,int,Public,Y,Y,);
Attribute(DESTRUCTURING_NAMES,int,Public,Y,Y,);
Attribute(DESTRUCTURING_PARAMS,int,Public,Y,Y,);
Attribute(JSDOC_PROP,int,Public,Y,Y,);
Attribute(EXPRESSION_CLOSURE_PROP,int,Public,Y,Y,);
Attribute(DESTRUCTURING_SHORTHAND,int,Public,Y,Y,);
Attribute(LAST_PROP,int,Public,Y,Y,);
Attribute(BOTH,int,Public,Y,Y,);
Attribute(LEFT,int,Public,Y,Y,);
Attribute(RIGHT,int,Public,Y,Y,);
Attribute(NON_SPECIALCALL,int,Public,Y,Y,);
Attribute(SPECIALCALL_EVAL,int,Public,Y,Y,);
Attribute(SPECIALCALL_WITH,int,Public,Y,Y,);
Attribute(DECR_FLAG,int,Public,Y,Y,);
Attribute(POST_FLAG,int,Public,Y,Y,);
Attribute(PROPERTY_FLAG,int,Public,Y,Y,);
Attribute(ATTRIBUTE_FLAG,int,Public,Y,Y,);
Attribute(DESCENDANTS_FLAG,int,Public,Y,Y,);
Attribute(NOT_SET,org.mozilla.javascript.Node,Private,Y,Y,);
Attribute(END_UNREACHED,int,Public,Y,Y,);
Attribute(END_DROPS_OFF,int,Public,Y,Y,);
Attribute(END_RETURNS,int,Public,Y,Y,);
Attribute(END_RETURNS_VALUE,int,Public,Y,Y,);
Attribute(END_YIELDS,int,Public,Y,Y,);
Attribute(type,int,Protected,N,N,);
Attribute(next,org.mozilla.javascript.Node,Protected,N,N,);
Attribute(first,org.mozilla.javascript.Node,Protected,N,N,);
Attribute(last,org.mozilla.javascript.Node,Protected,N,N,);
Attribute(lineno,int,Protected,N,N,);
Attribute(propListHead,org.mozilla.javascript.Node$PropListItem,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(<init>$6,void,Public,N,N);
Method(<init>$7,void,Public,N,N);
Method(<init>$8,void,Public,N,N);
Method(newNumber,org.mozilla.javascript.Node,Public,Y,N);
Method(newString,org.mozilla.javascript.Node,Public,Y,N);
Method(newString$2,org.mozilla.javascript.Node,Public,Y,N);
Method(getType,int,Public,N,N);
Method(setType,org.mozilla.javascript.Node,Public,N,N);
Method(getJsDoc,java.lang.String,Public,N,N);
Method(getJsDocNode,org.mozilla.javascript.ast.Comment,Public,N,N);
Method(setJsDocNode,void,Public,N,N);
Method(hasChildren,boolean,Public,N,N);
Method(getFirstChild,org.mozilla.javascript.Node,Public,N,N);
Method(getLastChild,org.mozilla.javascript.Node,Public,N,N);
Method(getNext,org.mozilla.javascript.Node,Public,N,N);
Method(getChildBefore,org.mozilla.javascript.Node,Public,N,N);
Method(getLastSibling,org.mozilla.javascript.Node,Public,N,N);
Method(addChildToFront,void,Public,N,N);
Method(addChildToBack,void,Public,N,N);
Method(addChildrenToFront,void,Public,N,N);
Method(addChildrenToBack,void,Public,N,N);
Method(addChildBefore,void,Public,N,N);
Method(addChildAfter,void,Public,N,N);
Method(removeChild,void,Public,N,N);
Method(replaceChild,void,Public,N,N);
Method(replaceChildAfter,void,Public,N,N);
Method(removeChildren,void,Public,N,N);
Method(iterator,java.util.Iterator,Public,N,N);
Method(propToString,java.lang.String,Private,Y,N);
Method(lookupProperty,org.mozilla.javascript.Node$PropListItem,Private,N,N);
Method(ensureProperty,org.mozilla.javascript.Node$PropListItem,Private,N,N);
Method(removeProp,void,Public,N,N);
Method(getProp,java.lang.Object,Public,N,N);
Method(getIntProp,int,Public,N,N);
Method(getExistingIntProp,int,Public,N,N);
Method(putProp,void,Public,N,N);
Method(putIntProp,void,Public,N,N);
Method(getLineno,int,Public,N,N);
Method(setLineno,void,Public,N,N);
Method(getDouble,double,Public,N,N);
Method(setDouble,void,Public,N,N);
Method(getString,java.lang.String,Public,N,N);
Method(setString,void,Public,N,N);
Method(getScope,org.mozilla.javascript.ast.Scope,Public,N,N);
Method(setScope,void,Public,N,N);
Method(newTarget,org.mozilla.javascript.Node,Public,Y,N);
Method(labelId,int,Public,N,N);
Method(labelId$2,void,Public,N,N);
Method(hasConsistentReturnUsage,boolean,Public,N,N);
Method(endCheckIf,int,Private,N,N);
Method(endCheckSwitch,int,Private,N,N);
Method(endCheckTry,int,Private,N,N);
Method(endCheckLoop,int,Private,N,N);
Method(endCheckBlock,int,Private,N,N);
Method(endCheckLabel,int,Private,N,N);
Method(endCheckBreak,int,Private,N,N);
Method(endCheck,int,Private,N,N);
Method(hasSideEffects,boolean,Public,N,N);
Method(resetTargets,void,Public,N,N);
Method(resetTargets_r,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(toString$2,void,Private,N,N);
Method(toStringTree,java.lang.String,Public,N,N);
Method(toStringTreeHelper,void,Private,Y,N);
Method(generatePrintIds,void,Private,Y,N);
Method(appendPrintId,void,Private,Y,N);
Method(access$000,org.mozilla.javascript.Node,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,int,);
Parameter(<init>$2,int,);
Parameter(<init>$2,org.mozilla.javascript.Node,);
Parameter(<init>$3,int,);
Parameter(<init>$3,org.mozilla.javascript.Node,);
Parameter(<init>$3,org.mozilla.javascript.Node,);
Parameter(<init>$4,int,);
Parameter(<init>$4,org.mozilla.javascript.Node,);
Parameter(<init>$4,org.mozilla.javascript.Node,);
Parameter(<init>$4,org.mozilla.javascript.Node,);
Parameter(<init>$5,int,);
Parameter(<init>$5,int,);
Parameter(<init>$6,int,);
Parameter(<init>$6,org.mozilla.javascript.Node,);
Parameter(<init>$6,int,);
Parameter(<init>$7,int,);
Parameter(<init>$7,org.mozilla.javascript.Node,);
Parameter(<init>$7,org.mozilla.javascript.Node,);
Parameter(<init>$7,int,);
Parameter(<init>$8,int,);
Parameter(<init>$8,org.mozilla.javascript.Node,);
Parameter(<init>$8,org.mozilla.javascript.Node,);
Parameter(<init>$8,org.mozilla.javascript.Node,);
Parameter(<init>$8,int,);
Parameter(newNumber,double,);
Parameter(newString,java.lang.String,);
Parameter(newString$2,int,);
Parameter(newString$2,java.lang.String,);
Parameter(setType,int,);
Parameter(setJsDocNode,org.mozilla.javascript.ast.Comment,);
Parameter(getChildBefore,org.mozilla.javascript.Node,);
Parameter(addChildToFront,org.mozilla.javascript.Node,);
Parameter(addChildToBack,org.mozilla.javascript.Node,);
Parameter(addChildrenToFront,org.mozilla.javascript.Node,);
Parameter(addChildrenToBack,org.mozilla.javascript.Node,);
Parameter(addChildBefore,org.mozilla.javascript.Node,);
Parameter(addChildBefore,org.mozilla.javascript.Node,);
Parameter(addChildAfter,org.mozilla.javascript.Node,);
Parameter(addChildAfter,org.mozilla.javascript.Node,);
Parameter(removeChild,org.mozilla.javascript.Node,);
Parameter(replaceChild,org.mozilla.javascript.Node,);
Parameter(replaceChild,org.mozilla.javascript.Node,);
Parameter(replaceChildAfter,org.mozilla.javascript.Node,);
Parameter(replaceChildAfter,org.mozilla.javascript.Node,);
Parameter(propToString,int,);
Parameter(lookupProperty,int,);
Parameter(ensureProperty,int,);
Parameter(removeProp,int,);
Parameter(getProp,int,);
Parameter(getIntProp,int,);
Parameter(getIntProp,int,);
Parameter(getExistingIntProp,int,);
Parameter(putProp,int,);
Parameter(putProp,java.lang.Object,);
Parameter(putIntProp,int,);
Parameter(putIntProp,int,);
Parameter(setLineno,int,);
Parameter(setDouble,double,);
Parameter(setString,java.lang.String,);
Parameter(setScope,org.mozilla.javascript.ast.Scope,);
Parameter(labelId$2,int,);
Parameter(toString$2,org.mozilla.javascript.ObjToIntMap,);
Parameter(toString$2,java.lang.StringBuffer,);
Parameter(toStringTree,org.mozilla.javascript.ast.ScriptNode,);
Parameter(toStringTreeHelper,org.mozilla.javascript.ast.ScriptNode,);
Parameter(toStringTreeHelper,org.mozilla.javascript.Node,);
Parameter(toStringTreeHelper,org.mozilla.javascript.ObjToIntMap,);
Parameter(toStringTreeHelper,int,);
Parameter(toStringTreeHelper,java.lang.StringBuffer,);
Parameter(generatePrintIds,org.mozilla.javascript.Node,);
Parameter(generatePrintIds,org.mozilla.javascript.ObjToIntMap,);
Parameter(appendPrintId,org.mozilla.javascript.Node,);
Parameter(appendPrintId,org.mozilla.javascript.ObjToIntMap,);
Parameter(appendPrintId,java.lang.StringBuffer,);
SubClass(org.mozilla.javascript.ast.RegExpLiteral);
SubClass(org.mozilla.javascript.ast.Name);
SubClass(org.mozilla.javascript.ast.Comment);
SubClass(org.mozilla.javascript.ast.AstRoot);
SubClass(org.mozilla.javascript.ast.FunctionNode);
SubClass(org.mozilla.javascript.ast.ScriptNode);
SubClass(org.mozilla.javascript.ast.WhileLoop);
SubClass(org.mozilla.javascript.ast.DoLoop);
SubClass(org.mozilla.javascript.ast.ForLoop);
SubClass(org.mozilla.javascript.ast.ArrayComprehensionLoop);
SubClass(org.mozilla.javascript.ast.GeneratorExpressionLoop);
SubClass(org.mozilla.javascript.ast.ForInLoop);
SubClass(org.mozilla.javascript.ast.Loop);
SubClass(org.mozilla.javascript.ast.GeneratorExpression);
SubClass(org.mozilla.javascript.ast.LetNode);
SubClass(org.mozilla.javascript.ast.ArrayComprehension);
SubClass(org.mozilla.javascript.ast.Scope);
SubClass(org.mozilla.javascript.ast.SwitchStatement);
SubClass(org.mozilla.javascript.ast.BreakStatement);
SubClass(org.mozilla.javascript.ast.ContinueStatement);
SubClass(org.mozilla.javascript.ast.Label);
SubClass(org.mozilla.javascript.ast.Jump);
SubClass(org.mozilla.javascript.ast.NumberLiteral);
SubClass(org.mozilla.javascript.ast.LabeledStatement);
SubClass(org.mozilla.javascript.ast.IfStatement);
SubClass(org.mozilla.javascript.ast.TryStatement);
SubClass(org.mozilla.javascript.ast.ThrowStatement);
SubClass(org.mozilla.javascript.ast.WithStatement);
SubClass(org.mozilla.javascript.ast.VariableDeclaration);
SubClass(org.mozilla.javascript.ast.ObjectLiteral);
SubClass(org.mozilla.javascript.ast.StringLiteral);
SubClass(org.mozilla.javascript.ast.UnaryExpression);
SubClass(org.mozilla.javascript.ast.ErrorNode);
SubClass(org.mozilla.javascript.ast.ArrayLiteral);
SubClass(org.mozilla.javascript.ast.EmptyStatement);
SubClass(org.mozilla.javascript.ast.ParenthesizedExpression);
SubClass(org.mozilla.javascript.ast.ObjectProperty);
SubClass(org.mozilla.javascript.ast.Assignment);
SubClass(org.mozilla.javascript.ast.PropertyGet);
SubClass(org.mozilla.javascript.ast.XmlMemberGet);
SubClass(org.mozilla.javascript.ast.XmlDotQuery);
SubClass(org.mozilla.javascript.ast.InfixExpression);
SubClass(org.mozilla.javascript.ast.XmlElemRef);
SubClass(org.mozilla.javascript.ast.XmlPropRef);
SubClass(org.mozilla.javascript.ast.XmlRef);
SubClass(org.mozilla.javascript.ast.ConditionalExpression);
SubClass(org.mozilla.javascript.ast.Yield);
SubClass(org.mozilla.javascript.ast.XmlString);
SubClass(org.mozilla.javascript.ast.XmlExpression);
SubClass(org.mozilla.javascript.ast.XmlFragment);
SubClass(org.mozilla.javascript.ast.CatchClause);
SubClass(org.mozilla.javascript.ast.ExpressionStatement);
SubClass(org.mozilla.javascript.ast.NewExpression);
SubClass(org.mozilla.javascript.ast.FunctionCall);
SubClass(org.mozilla.javascript.ast.ReturnStatement);
SubClass(org.mozilla.javascript.ast.SwitchCase);
SubClass(org.mozilla.javascript.ast.XmlLiteral);
SubClass(org.mozilla.javascript.ast.Block);
SubClass(org.mozilla.javascript.ast.VariableInitializer);
SubClass(org.mozilla.javascript.ast.EmptyExpression);
SubClass(org.mozilla.javascript.ast.KeywordLiteral);
SubClass(org.mozilla.javascript.ast.ElementGet);
SubClass(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.Node);
Composition(org.mozilla.javascript.Node$PropListItem);
Call(METHOD,org.mozilla.javascript.Node,<init>$6 --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,<init>$7 --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,<init>$8 --> <init>$4,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,newString --> newString$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,newString$2 --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,getJsDoc --> getJsDocNode,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,getJsDocNode --> getProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,setJsDocNode --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,addChildrenToFront --> getLastSibling,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,addChildrenToBack --> getLastSibling,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,addChildBefore --> getChildBefore,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,addChildBefore --> addChildAfter,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,removeChild --> getChildBefore,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,replaceChild --> getChildBefore,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,ensureProperty --> lookupProperty,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,getProp --> lookupProperty,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,getIntProp --> lookupProperty,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,getExistingIntProp --> lookupProperty,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,putProp --> removeProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,putProp --> ensureProperty,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,putIntProp --> ensureProperty,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,newTarget --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,labelId --> getIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,labelId$2 --> putIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,hasConsistentReturnUsage --> endCheck,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheckIf --> endCheck,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheckLoop --> endCheck,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheckLoop --> getIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheckBlock --> endCheck,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheckLabel --> endCheck,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheckLabel --> getIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheckBreak --> putIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheck --> endCheckBreak,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheck --> endCheck,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheck --> endCheckLoop,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheck --> endCheckLabel,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheck --> endCheckIf,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheck --> endCheckSwitch,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheck --> endCheckTry,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,endCheck --> endCheckBlock,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,hasSideEffects --> hasSideEffects,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,resetTargets --> resetTargets_r,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,resetTargets_r --> labelId$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,resetTargets_r --> resetTargets_r,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node,<clinit> --> <init>,org.mozilla.javascript.Node,);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init> --> lineno,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$2 --> lineno,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$2 --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$2 --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$2 --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$3 --> lineno,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$3 --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$3 --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$3 --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$4 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$4 --> lineno,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$4 --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$4 --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$4 --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$5 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$5 --> lineno,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$6 --> lineno,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$7 --> lineno,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<init>$8 --> lineno,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,getType --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,setType --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,hasChildren --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,getFirstChild --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,getLastChild --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,getNext --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,getChildBefore --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,getChildBefore --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,getLastSibling --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildToFront --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildToFront --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildToFront --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildToFront --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildToFront --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildToBack --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildToBack --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildToBack --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildToBack --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildrenToFront --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildrenToFront --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildrenToFront --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildrenToFront --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildrenToFront --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildrenToBack --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildrenToBack --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildrenToBack --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildrenToBack --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildrenToBack --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildBefore --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildBefore --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildBefore --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildBefore --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildAfter --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildAfter --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildAfter --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,addChildAfter --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeChild --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeChild --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeChild --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeChild --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeChild --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeChild --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,replaceChild --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,replaceChild --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,replaceChild --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,replaceChild --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,replaceChild --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,replaceChild --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,replaceChildAfter --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,replaceChildAfter --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,replaceChildAfter --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,replaceChildAfter --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeChildren --> last,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeChildren --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,lookupProperty --> propListHead,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,ensureProperty --> propListHead,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,ensureProperty --> propListHead,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeProp --> propListHead,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeProp --> propListHead,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,getLineno --> lineno,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,setLineno --> lineno,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,labelId --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,labelId$2 --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheckIf --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheckLoop --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheckLoop --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheckLoop --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheckLoop --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheckBlock --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheckBlock --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheckLabel --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheck --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheck --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheck --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,hasSideEffects --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,hasSideEffects --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,hasSideEffects --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,hasSideEffects --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,resetTargets --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,resetTargets_r --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,resetTargets_r --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,resetTargets_r --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,toString --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,access$000 --> NOT_SET,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,<clinit> --> NOT_SET,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,lookupProperty --> type,org.mozilla.javascript.Node$PropListItem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,lookupProperty --> next,org.mozilla.javascript.Node$PropListItem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,ensureProperty --> type,org.mozilla.javascript.Node$PropListItem,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,ensureProperty --> next,org.mozilla.javascript.Node$PropListItem,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeProp --> type,org.mozilla.javascript.Node$PropListItem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeProp --> next,org.mozilla.javascript.Node$PropListItem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,removeProp --> next,org.mozilla.javascript.Node$PropListItem,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,getProp --> objectValue,org.mozilla.javascript.Node$PropListItem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,getIntProp --> intValue,org.mozilla.javascript.Node$PropListItem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,getExistingIntProp --> intValue,org.mozilla.javascript.Node$PropListItem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,putProp --> objectValue,org.mozilla.javascript.Node$PropListItem,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,putIntProp --> intValue,org.mozilla.javascript.Node$PropListItem,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheckIf --> target,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node,endCheckLoop --> target,org.mozilla.javascript.ast.Jump,READ);
Call(METHOD,org.mozilla.javascript.Node,newNumber --> <init>,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.Node,newNumber --> setNumber,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.Node,newString$2 --> <init>,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Node,newString$2 --> setIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Node,getJsDoc --> getValue,org.mozilla.javascript.ast.Comment,);
Call(METHOD,org.mozilla.javascript.Node,iterator --> <init>,org.mozilla.javascript.Node$NodeIterator,);
Call(METHOD,org.mozilla.javascript.Node,ensureProperty --> <init>$2,org.mozilla.javascript.Node$PropListItem,);
Call(METHOD,org.mozilla.javascript.Node,getExistingIntProp --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Node,getDouble --> getNumber,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.Node,setDouble --> setNumber,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.Node,getString --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Node,setString --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Node,setString --> setIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Node,getScope --> getScope,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Node,setScope --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Node,setScope --> setScope,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Node,labelId --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Node,labelId$2 --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Node,endCheckBreak --> getJumpStatement,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.Node,hasSideEffects --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Node,resetTargets --> codeBug,org.mozilla.javascript.Kit,);
EndClass 91
StartClass 92
Class(org.mozilla.javascript.VMBridge,N,Y,Public);
Attribute(instance,org.mozilla.javascript.VMBridge,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(makeInstance,org.mozilla.javascript.VMBridge,Private,Y,N);
Method(getThreadContextHelper,java.lang.Object,Protected,N,Y);
Method(getContext,org.mozilla.javascript.Context,Protected,N,Y);
Method(setContext,void,Protected,N,Y);
Method(getCurrentThreadClassLoader,java.lang.ClassLoader,Protected,N,Y);
Method(tryToMakeAccessible,boolean,Protected,N,Y);
Method(getInterfaceProxyHelper,java.lang.Object,Protected,N,N);
Method(newInterfaceProxy,java.lang.Object,Protected,N,N);
Method(isVarArgs,boolean,Protected,N,Y);
Method(getJavaIterator,java.util.Iterator,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(getContext,java.lang.Object,);
Parameter(setContext,java.lang.Object,);
Parameter(setContext,org.mozilla.javascript.Context,);
Parameter(tryToMakeAccessible,java.lang.Object,);
Parameter(getInterfaceProxyHelper,org.mozilla.javascript.ContextFactory,);
Parameter(getInterfaceProxyHelper,java.lang.Class[],);
Parameter(newInterfaceProxy,java.lang.Object,);
Parameter(newInterfaceProxy,org.mozilla.javascript.ContextFactory,);
Parameter(newInterfaceProxy,org.mozilla.javascript.InterfaceAdapter,);
Parameter(newInterfaceProxy,java.lang.Object,);
Parameter(newInterfaceProxy,org.mozilla.javascript.Scriptable,);
Parameter(isVarArgs,java.lang.reflect.Member,);
Parameter(getJavaIterator,org.mozilla.javascript.Context,);
Parameter(getJavaIterator,org.mozilla.javascript.Scriptable,);
Parameter(getJavaIterator,java.lang.Object,);
Composition(org.mozilla.javascript.VMBridge);
Call(METHOD,org.mozilla.javascript.VMBridge,<clinit> --> makeInstance,org.mozilla.javascript.VMBridge,);
Call(ATTRIBUTE,org.mozilla.javascript.VMBridge,<clinit> --> instance,org.mozilla.javascript.VMBridge,WRITE);
Call(METHOD,org.mozilla.javascript.VMBridge,makeInstance --> classOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.VMBridge,makeInstance --> newInstanceOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.VMBridge,getInterfaceProxyHelper --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.VMBridge,newInterfaceProxy --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.VMBridge,getJavaIterator --> unwrap,org.mozilla.javascript.Wrapper,);
EndClass 92
StartClass 93
Class(org.mozilla.javascript.InterpretedFunction,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(idata,org.mozilla.javascript.InterpreterData,Public,N,N,);
Attribute(securityController,org.mozilla.javascript.SecurityController,Public,N,N,);
Attribute(securityDomain,java.lang.Object,Public,N,N,);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Private,N,N);
Method(createScript,org.mozilla.javascript.InterpretedFunction,Public,Y,N);
Method(createFunction,org.mozilla.javascript.InterpretedFunction,Public,Y,N);
Method(createFunction$2,org.mozilla.javascript.InterpretedFunction,Public,Y,N);
Method(getFunctionName,java.lang.String,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(exec,java.lang.Object,Public,N,N);
Method(isScript,boolean,Public,N,N);
Method(getEncodedSource,java.lang.String,Public,N,N);
Method(getDebuggableView,org.mozilla.javascript.debug.DebuggableScript,Public,N,N);
Method(resumeGenerator,java.lang.Object,Public,N,N);
Method(getLanguageVersion,int,Protected,N,N);
Method(getParamCount,int,Protected,N,N);
Method(getParamAndVarCount,int,Protected,N,N);
Method(getParamOrVarName,java.lang.String,Protected,N,N);
Method(getParamOrVarConst,boolean,Protected,N,N);
Parameter(<init>,org.mozilla.javascript.InterpreterData,);
Parameter(<init>,java.lang.Object,);
Parameter(<init>$2,org.mozilla.javascript.InterpretedFunction,);
Parameter(<init>$2,int,);
Parameter(createScript,org.mozilla.javascript.InterpreterData,);
Parameter(createScript,java.lang.Object,);
Parameter(createFunction,org.mozilla.javascript.Context,);
Parameter(createFunction,org.mozilla.javascript.Scriptable,);
Parameter(createFunction,org.mozilla.javascript.InterpreterData,);
Parameter(createFunction,java.lang.Object,);
Parameter(createFunction$2,org.mozilla.javascript.Context,);
Parameter(createFunction$2,org.mozilla.javascript.Scriptable,);
Parameter(createFunction$2,org.mozilla.javascript.InterpretedFunction,);
Parameter(createFunction$2,int,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(exec,org.mozilla.javascript.Context,);
Parameter(exec,org.mozilla.javascript.Scriptable,);
Parameter(resumeGenerator,org.mozilla.javascript.Context,);
Parameter(resumeGenerator,org.mozilla.javascript.Scriptable,);
Parameter(resumeGenerator,int,);
Parameter(resumeGenerator,java.lang.Object,);
Parameter(resumeGenerator,java.lang.Object,);
Parameter(getParamOrVarName,int,);
Parameter(getParamOrVarConst,int,);
SuperClass(org.mozilla.javascript.NativeFunction);
SuperClass(org.mozilla.javascript.BaseFunction);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.NativeFunction);
Realization(org.mozilla.javascript.Script);
Composition(org.mozilla.javascript.InterpreterData);
Composition(org.mozilla.javascript.SecurityController);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,createScript --> <init>,org.mozilla.javascript.InterpretedFunction,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,createFunction --> <init>,org.mozilla.javascript.InterpretedFunction,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,createFunction$2 --> <init>$2,org.mozilla.javascript.InterpretedFunction,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,exec --> isScript,org.mozilla.javascript.InterpretedFunction,);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,<init> --> idata,org.mozilla.javascript.InterpretedFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,<init> --> securityController,org.mozilla.javascript.InterpretedFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,<init> --> securityDomain,org.mozilla.javascript.InterpretedFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,<init>$2 --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,<init>$2 --> securityController,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,<init>$2 --> securityDomain,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,<init>$2 --> idata,org.mozilla.javascript.InterpretedFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,<init>$2 --> securityController,org.mozilla.javascript.InterpretedFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,<init>$2 --> securityDomain,org.mozilla.javascript.InterpretedFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getFunctionName --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,isScript --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getEncodedSource --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getDebuggableView --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getLanguageVersion --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getParamCount --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getParamAndVarCount --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getParamOrVarName --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getParamOrVarConst --> idata,org.mozilla.javascript.InterpretedFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,<init>$2 --> itsNestedFunctions,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getFunctionName --> itsName,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,exec --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,isScript --> itsFunctionType,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getLanguageVersion --> languageVersion,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getParamCount --> argCount,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getParamAndVarCount --> argNames,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getParamOrVarName --> argNames,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpretedFunction,getParamOrVarConst --> argIsConst,org.mozilla.javascript.InterpreterData,READ);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,<init> --> <init>,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,<init> --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,<init> --> getSecurityController,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,<init> --> getDynamicSecurityDomain,org.mozilla.javascript.SecurityController,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,<init>$2 --> <init>,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,createFunction --> initScriptFunction,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,createFunction$2 --> initScriptFunction,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,call --> hasTopCall,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,call --> doTopCall,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,call --> interpret,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,exec --> hasTopCall,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,exec --> doTopCall,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,exec --> interpret,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,getEncodedSource --> getEncodedSource,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.InterpretedFunction,resumeGenerator --> resumeGenerator,org.mozilla.javascript.Interpreter,);
EndClass 93
StartClass 94
Class(org.mozilla.javascript.Parser,N,N,Public);
Attribute(ARGC_LIMIT,int,Public,Y,Y,);
Attribute(CLEAR_TI_MASK,int,Public,Y,Y,);
Attribute(TI_AFTER_EOL,int,Public,Y,Y,);
Attribute(TI_CHECK_LABEL,int,Public,Y,Y,);
Attribute(compilerEnv,org.mozilla.javascript.CompilerEnvirons,Public,N,N,);
Attribute(errorReporter,org.mozilla.javascript.ErrorReporter,Private,N,N,);
Attribute(errorCollector,org.mozilla.javascript.ast.IdeErrorReporter,Private,N,N,);
Attribute(sourceURI,java.lang.String,Private,N,N,);
Attribute(sourceChars,char[],Private,N,N,);
Attribute(calledByCompileFunction,boolean,Public,N,N,);
Attribute(parseFinished,boolean,Private,N,N,);
Attribute(ts,org.mozilla.javascript.TokenStream,Private,N,N,);
Attribute(currentFlaggedToken,int,Private,N,N,);
Attribute(currentToken,int,Private,N,N,);
Attribute(syntaxErrorCount,int,Private,N,N,);
Attribute(scannedComments,java.util.List,Private,N,N,org.mozilla.javascript.ast.Comment);
Attribute(currentJsDocComment,org.mozilla.javascript.ast.Comment,Private,N,N,);
Attribute(nestingOfFunction,int,Protected,N,N,);
Attribute(currentLabel,org.mozilla.javascript.ast.LabeledStatement,Private,N,N,);
Attribute(inDestructuringAssignment,boolean,Private,N,N,);
Attribute(inUseStrictDirective,boolean,Protected,N,N,);
Attribute(currentScriptOrFn,org.mozilla.javascript.ast.ScriptNode,Public,N,N,);
Attribute(currentScope,org.mozilla.javascript.ast.Scope,Public,N,N,);
Attribute(endFlags,int,Private,N,N,);
Attribute(inForInit,boolean,Private,N,N,);
Attribute(labelSet,java.util.Map,Private,N,N,java.lang.String;org.mozilla.javascript.ast.LabeledStatement);
Attribute(loopSet,java.util.List,Private,N,N,org.mozilla.javascript.ast.Loop);
Attribute(loopAndSwitchSet,java.util.List,Private,N,N,org.mozilla.javascript.ast.Jump);
Attribute(prevNameTokenStart,int,Private,N,N,);
Attribute(prevNameTokenString,java.lang.String,Private,N,N,);
Attribute(prevNameTokenLineno,int,Private,N,N,);
Attribute(PROP_ENTRY,int,Private,Y,Y,);
Attribute(GET_ENTRY,int,Private,Y,Y,);
Attribute(SET_ENTRY,int,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(addStrictWarning,void,Public,N,N);
Method(addStrictWarning$2,void,Public,N,N);
Method(addWarning,void,Public,N,N);
Method(addWarning$2,void,Public,N,N);
Method(addWarning$3,void,Public,N,N);
Method(addError,void,Public,N,N);
Method(addError$2,void,Public,N,N);
Method(addError$3,void,Public,N,N);
Method(addError$4,void,Public,N,N);
Method(lookupMessage,java.lang.String,Public,N,N);
Method(lookupMessage$2,java.lang.String,Public,N,N);
Method(reportError,void,Public,N,N);
Method(reportError$2,void,Public,N,N);
Method(reportError$3,void,Public,N,N);
Method(reportError$4,void,Public,N,N);
Method(getNodeEnd,int,Private,N,N);
Method(recordComment,void,Private,N,N);
Method(getAndResetJsDoc,org.mozilla.javascript.ast.Comment,Private,N,N);
Method(getNumberOfEols,int,Private,N,N);
Method(peekToken,int,Private,N,N);
Method(peekFlaggedToken,int,Private,N,N);
Method(consumeToken,void,Private,N,N);
Method(nextToken,int,Private,N,N);
Method(nextFlaggedToken,int,Private,N,N);
Method(matchToken,boolean,Private,N,N);
Method(peekTokenOrEOL,int,Private,N,N);
Method(mustMatchToken,boolean,Private,N,N);
Method(mustMatchToken$2,boolean,Private,N,N);
Method(mustHaveXML,void,Private,N,N);
Method(eof,boolean,Public,N,N);
Method(insideFunction,boolean,Public,N,N);
Method(pushScope,void,Public,N,N);
Method(popScope,void,Public,N,N);
Method(enterLoop,void,Private,N,N);
Method(exitLoop,void,Private,N,N);
Method(enterSwitch,void,Private,N,N);
Method(exitSwitch,void,Private,N,N);
Method(parse,org.mozilla.javascript.ast.AstRoot,Public,N,N);
Method(parse$2,org.mozilla.javascript.ast.AstRoot,Public,N,N);
Method(parse$3,org.mozilla.javascript.ast.AstRoot,Private,N,N);
Method(parseFunctionBody,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(getDirective,java.lang.String,Private,N,N);
Method(parseFunctionParams,void,Private,N,N);
Method(function,org.mozilla.javascript.ast.FunctionNode,Private,N,N);
Method(statements,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(statements$2,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(condition,org.mozilla.javascript.Parser$ConditionData,Private,N,N);
Method(statement,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(statementHelper,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(autoInsertSemicolon,void,Private,N,N);
Method(ifStatement,org.mozilla.javascript.ast.IfStatement,Private,N,N);
Method(switchStatement,org.mozilla.javascript.ast.SwitchStatement,Private,N,N);
Method(whileLoop,org.mozilla.javascript.ast.WhileLoop,Private,N,N);
Method(doLoop,org.mozilla.javascript.ast.DoLoop,Private,N,N);
Method(forLoop,org.mozilla.javascript.ast.Loop,Private,N,N);
Method(forLoopInit,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(tryStatement,org.mozilla.javascript.ast.TryStatement,Private,N,N);
Method(throwStatement,org.mozilla.javascript.ast.ThrowStatement,Private,N,N);
Method(matchJumpLabelName,org.mozilla.javascript.ast.LabeledStatement,Private,N,N);
Method(breakStatement,org.mozilla.javascript.ast.BreakStatement,Private,N,N);
Method(continueStatement,org.mozilla.javascript.ast.ContinueStatement,Private,N,N);
Method(withStatement,org.mozilla.javascript.ast.WithStatement,Private,N,N);
Method(letStatement,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(nowAllSet,boolean,Private,Y,N);
Method(returnOrYield,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(block,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(defaultXmlNamespace,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(recordLabel,void,Private,N,N);
Method(nameOrLabel,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(variables,org.mozilla.javascript.ast.VariableDeclaration,Private,N,N);
Method(let,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(defineSymbol,void,Public,N,N);
Method(defineSymbol$2,void,Public,N,N);
Method(expr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(assignExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(condExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(orExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(andExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(bitOrExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(bitXorExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(bitAndExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(eqExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(relExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(shiftExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(addExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(mulExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(unaryExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(xmlInitializer,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(argumentList,java.util.List,Private,N,N);
Method(memberExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(memberExprTail,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(propertyAccess,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(attributeAccess,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(propertyName,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(xmlElemRef,org.mozilla.javascript.ast.XmlElemRef,Private,N,N);
Method(destructuringPrimaryExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(primaryExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(parenExpr,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(name,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(arrayLiteral,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(arrayComprehension,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(arrayComprehensionLoop,org.mozilla.javascript.ast.ArrayComprehensionLoop,Private,N,N);
Method(generatorExpression,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(generatorExpression$2,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(generatorExpressionLoop,org.mozilla.javascript.ast.GeneratorExpressionLoop,Private,N,N);
Method(objectLiteral,org.mozilla.javascript.ast.ObjectLiteral,Private,N,N);
Method(objliteralProperty,org.mozilla.javascript.ast.AstNode,Private,N,N);
Method(plainProperty,org.mozilla.javascript.ast.ObjectProperty,Private,N,N);
Method(getterSetterProperty,org.mozilla.javascript.ast.ObjectProperty,Private,N,N);
Method(createNameNode,org.mozilla.javascript.ast.Name,Private,N,N);
Method(createNameNode$2,org.mozilla.javascript.ast.Name,Private,N,N);
Method(createStringLiteral,org.mozilla.javascript.ast.StringLiteral,Private,N,N);
Method(checkActivationName,void,Protected,N,N);
Method(setRequiresActivation,void,Protected,N,N);
Method(checkCallRequiresActivation,void,Private,N,N);
Method(setIsGenerator,void,Protected,N,N);
Method(checkBadIncDec,void,Private,N,N);
Method(makeErrorNode,org.mozilla.javascript.ast.ErrorNode,Private,N,N);
Method(nodeEnd,int,Private,N,N);
Method(saveNameTokenData,void,Private,N,N);
Method(lineBeginningFor,int,Private,N,N);
Method(warnMissingSemi,void,Private,N,N);
Method(warnTrailingComma,void,Private,N,N);
Method(readFully,java.lang.String,Private,N,N);
Method(createDestructuringAssignment,org.mozilla.javascript.Node,Public,N,N);
Method(destructuringAssignmentHelper,org.mozilla.javascript.Node,Public,N,N);
Method(destructuringArray,boolean,Public,N,N);
Method(destructuringObject,boolean,Public,N,N);
Method(createName,org.mozilla.javascript.Node,Protected,N,N);
Method(createName$2,org.mozilla.javascript.Node,Protected,N,N);
Method(createNumber,org.mozilla.javascript.Node,Protected,N,N);
Method(createScopeNode,org.mozilla.javascript.ast.Scope,Protected,N,N);
Method(simpleAssignment,org.mozilla.javascript.Node,Protected,N,N);
Method(checkMutableReference,void,Protected,N,N);
Method(removeParens,org.mozilla.javascript.ast.AstNode,Protected,N,N);
Method(markDestructuring,void,Public,N,N);
Method(codeBug,java.lang.RuntimeException,Private,N,N);
Method(access$200,java.util.Map,Public,Y,N);
Method(access$202,java.util.Map,Public,Y,N);
Method(access$300,java.util.List,Public,Y,N);
Method(access$302,java.util.List,Public,Y,N);
Method(access$400,java.util.List,Public,Y,N);
Method(access$402,java.util.List,Public,Y,N);
Method(access$500,int,Public,Y,N);
Method(access$502,int,Public,Y,N);
Method(access$600,boolean,Public,Y,N);
Method(access$602,boolean,Public,Y,N);
Parameter(<init>$2,org.mozilla.javascript.CompilerEnvirons,);
Parameter(<init>$3,org.mozilla.javascript.CompilerEnvirons,);
Parameter(<init>$3,org.mozilla.javascript.ErrorReporter,);
Parameter(addStrictWarning,java.lang.String,);
Parameter(addStrictWarning,java.lang.String,);
Parameter(addStrictWarning$2,java.lang.String,);
Parameter(addStrictWarning$2,java.lang.String,);
Parameter(addStrictWarning$2,int,);
Parameter(addStrictWarning$2,int,);
Parameter(addWarning,java.lang.String,);
Parameter(addWarning,java.lang.String,);
Parameter(addWarning$2,java.lang.String,);
Parameter(addWarning$2,int,);
Parameter(addWarning$2,int,);
Parameter(addWarning$3,java.lang.String,);
Parameter(addWarning$3,java.lang.String,);
Parameter(addWarning$3,int,);
Parameter(addWarning$3,int,);
Parameter(addError,java.lang.String,);
Parameter(addError$2,java.lang.String,);
Parameter(addError$2,int,);
Parameter(addError$2,int,);
Parameter(addError$3,java.lang.String,);
Parameter(addError$3,java.lang.String,);
Parameter(addError$4,java.lang.String,);
Parameter(addError$4,java.lang.String,);
Parameter(addError$4,int,);
Parameter(addError$4,int,);
Parameter(lookupMessage,java.lang.String,);
Parameter(lookupMessage$2,java.lang.String,);
Parameter(lookupMessage$2,java.lang.String,);
Parameter(reportError,java.lang.String,);
Parameter(reportError$2,java.lang.String,);
Parameter(reportError$2,java.lang.String,);
Parameter(reportError$3,java.lang.String,);
Parameter(reportError$3,int,);
Parameter(reportError$3,int,);
Parameter(reportError$4,java.lang.String,);
Parameter(reportError$4,java.lang.String,);
Parameter(reportError$4,int,);
Parameter(reportError$4,int,);
Parameter(getNodeEnd,org.mozilla.javascript.ast.AstNode,);
Parameter(recordComment,int,);
Parameter(recordComment,java.lang.String,);
Parameter(getNumberOfEols,java.lang.String,);
Parameter(matchToken,int,);
Parameter(mustMatchToken,int,);
Parameter(mustMatchToken,java.lang.String,);
Parameter(mustMatchToken$2,int,);
Parameter(mustMatchToken$2,java.lang.String,);
Parameter(mustMatchToken$2,int,);
Parameter(mustMatchToken$2,int,);
Parameter(pushScope,org.mozilla.javascript.ast.Scope,);
Parameter(enterLoop,org.mozilla.javascript.ast.Loop,);
Parameter(enterSwitch,org.mozilla.javascript.ast.SwitchStatement,);
Parameter(parse,java.lang.String,);
Parameter(parse,java.lang.String,);
Parameter(parse,int,);
Parameter(parse$2,java.io.Reader,);
Parameter(parse$2,java.lang.String,);
Parameter(parse$2,int,);
Parameter(getDirective,org.mozilla.javascript.ast.AstNode,);
Parameter(parseFunctionParams,org.mozilla.javascript.ast.FunctionNode,);
Parameter(function,int,);
Parameter(statements,org.mozilla.javascript.ast.AstNode,);
Parameter(autoInsertSemicolon,org.mozilla.javascript.ast.AstNode,);
Parameter(forLoopInit,int,);
Parameter(nowAllSet,int,);
Parameter(nowAllSet,int,);
Parameter(nowAllSet,int,);
Parameter(returnOrYield,int,);
Parameter(returnOrYield,boolean,);
Parameter(recordLabel,org.mozilla.javascript.ast.Label,);
Parameter(recordLabel,org.mozilla.javascript.ast.LabeledStatement,);
Parameter(variables,int,);
Parameter(variables,int,);
Parameter(variables,boolean,);
Parameter(let,boolean,);
Parameter(let,int,);
Parameter(defineSymbol,int,);
Parameter(defineSymbol,java.lang.String,);
Parameter(defineSymbol$2,int,);
Parameter(defineSymbol$2,java.lang.String,);
Parameter(defineSymbol$2,boolean,);
Parameter(memberExpr,boolean,);
Parameter(memberExprTail,boolean,);
Parameter(memberExprTail,org.mozilla.javascript.ast.AstNode,);
Parameter(propertyAccess,int,);
Parameter(propertyAccess,org.mozilla.javascript.ast.AstNode,);
Parameter(propertyName,int,);
Parameter(propertyName,java.lang.String,);
Parameter(propertyName,int,);
Parameter(xmlElemRef,int,);
Parameter(xmlElemRef,org.mozilla.javascript.ast.Name,);
Parameter(xmlElemRef,int,);
Parameter(name,int,);
Parameter(name,int,);
Parameter(arrayComprehension,org.mozilla.javascript.ast.AstNode,);
Parameter(arrayComprehension,int,);
Parameter(generatorExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(generatorExpression,int,);
Parameter(generatorExpression$2,org.mozilla.javascript.ast.AstNode,);
Parameter(generatorExpression$2,int,);
Parameter(generatorExpression$2,boolean,);
Parameter(plainProperty,org.mozilla.javascript.ast.AstNode,);
Parameter(plainProperty,int,);
Parameter(getterSetterProperty,int,);
Parameter(getterSetterProperty,org.mozilla.javascript.ast.AstNode,);
Parameter(getterSetterProperty,boolean,);
Parameter(createNameNode$2,boolean,);
Parameter(createNameNode$2,int,);
Parameter(checkActivationName,java.lang.String,);
Parameter(checkActivationName,int,);
Parameter(checkCallRequiresActivation,org.mozilla.javascript.ast.AstNode,);
Parameter(checkBadIncDec,org.mozilla.javascript.ast.UnaryExpression,);
Parameter(nodeEnd,org.mozilla.javascript.ast.AstNode,);
Parameter(saveNameTokenData,int,);
Parameter(saveNameTokenData,java.lang.String,);
Parameter(saveNameTokenData,int,);
Parameter(lineBeginningFor,int,);
Parameter(warnMissingSemi,int,);
Parameter(warnMissingSemi,int,);
Parameter(warnTrailingComma,int,);
Parameter(warnTrailingComma,java.util.List,);
Parameter(warnTrailingComma,int,);
Parameter(readFully,java.io.Reader,);
Parameter(createDestructuringAssignment,int,);
Parameter(createDestructuringAssignment,org.mozilla.javascript.Node,);
Parameter(createDestructuringAssignment,org.mozilla.javascript.Node,);
Parameter(destructuringAssignmentHelper,int,);
Parameter(destructuringAssignmentHelper,org.mozilla.javascript.Node,);
Parameter(destructuringAssignmentHelper,org.mozilla.javascript.Node,);
Parameter(destructuringAssignmentHelper,java.lang.String,);
Parameter(destructuringArray,org.mozilla.javascript.ast.ArrayLiteral,java.lang.String);
Parameter(destructuringArray,int,);
Parameter(destructuringArray,java.lang.String,);
Parameter(destructuringArray,org.mozilla.javascript.Node,);
Parameter(destructuringArray,java.util.List,);
Parameter(destructuringObject,org.mozilla.javascript.ast.ObjectLiteral,java.lang.String);
Parameter(destructuringObject,int,);
Parameter(destructuringObject,java.lang.String,);
Parameter(destructuringObject,org.mozilla.javascript.Node,);
Parameter(destructuringObject,java.util.List,);
Parameter(createName,java.lang.String,);
Parameter(createName$2,int,);
Parameter(createName$2,java.lang.String,);
Parameter(createName$2,org.mozilla.javascript.Node,);
Parameter(createNumber,double,);
Parameter(createScopeNode,int,);
Parameter(createScopeNode,int,);
Parameter(simpleAssignment,org.mozilla.javascript.Node,);
Parameter(simpleAssignment,org.mozilla.javascript.Node,);
Parameter(checkMutableReference,org.mozilla.javascript.Node,);
Parameter(removeParens,org.mozilla.javascript.ast.AstNode,);
Parameter(markDestructuring,org.mozilla.javascript.ast.AstNode,);
Parameter(access$200,org.mozilla.javascript.Parser,);
Parameter(access$202,org.mozilla.javascript.Parser,);
Parameter(access$202,java.util.Map,);
Parameter(access$300,org.mozilla.javascript.Parser,);
Parameter(access$302,org.mozilla.javascript.Parser,);
Parameter(access$302,java.util.List,);
Parameter(access$400,org.mozilla.javascript.Parser,);
Parameter(access$402,org.mozilla.javascript.Parser,);
Parameter(access$402,java.util.List,);
Parameter(access$500,org.mozilla.javascript.Parser,);
Parameter(access$502,org.mozilla.javascript.Parser,);
Parameter(access$502,int,);
Parameter(access$600,org.mozilla.javascript.Parser,);
Parameter(access$602,org.mozilla.javascript.Parser,);
Parameter(access$602,boolean,);
SubClass(org.mozilla.javascript.IRFactory);
Composition(org.mozilla.javascript.CompilerEnvirons);
Composition(org.mozilla.javascript.ErrorReporter);
Composition(org.mozilla.javascript.ast.IdeErrorReporter);
Composition(org.mozilla.javascript.TokenStream);
Composition(org.mozilla.javascript.ast.Comment);
Composition(org.mozilla.javascript.ast.LabeledStatement);
Composition(org.mozilla.javascript.ast.ScriptNode);
Composition(org.mozilla.javascript.ast.Scope);
Composition(org.mozilla.javascript.ast.Jump);
Call(METHOD,org.mozilla.javascript.Parser,<init> --> <init>$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,<init>$2 --> <init>$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addStrictWarning --> addStrictWarning$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addStrictWarning$2 --> addWarning$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addWarning --> addWarning$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addWarning$2 --> addWarning$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addWarning$3 --> lookupMessage$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addWarning$3 --> addError$4,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addError --> addError$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addError$2 --> addError$4,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addError$3 --> addError$4,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addError$4 --> lookupMessage$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,lookupMessage --> lookupMessage$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,reportError --> reportError$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,reportError$2 --> reportError$4,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,reportError$3 --> reportError$4,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,reportError$4 --> addError$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,peekToken --> recordComment,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,peekToken --> getNumberOfEols,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,peekFlaggedToken --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nextToken --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nextToken --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nextFlaggedToken --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nextFlaggedToken --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,matchToken --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,matchToken --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,peekTokenOrEOL --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,mustMatchToken --> mustMatchToken$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,mustMatchToken$2 --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,mustMatchToken$2 --> reportError$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,mustHaveXML --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,pushScope --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,enterLoop --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,exitLoop --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse --> parse$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse$2 --> readFully,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse$2 --> parse,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse$2 --> parse$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> function,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> statement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> getDirective,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> lookupMessage,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> lookupMessage$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> assignExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> function,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> statement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> getDirective,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> getAndResetJsDoc,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> destructuringPrimaryExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> markDestructuring,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> defineSymbol$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> createNameNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> defineSymbol,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> reportError$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> addError$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> makeErrorNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> createDestructuringAssignment,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,function --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,function --> createNameNode$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,function --> reportError$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,function --> memberExprTail,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,function --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,function --> memberExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,function --> defineSymbol,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,function --> getAndResetJsDoc,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,function --> parseFunctionParams,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,function --> parseFunctionBody,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,function --> addStrictWarning,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statements --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statements --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statements --> statement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statements$2 --> statements,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,condition --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,condition --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,condition --> addStrictWarning$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statement --> statementHelper,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statement --> lineBeginningFor,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statement --> nodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statement --> addStrictWarning$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statement --> peekTokenOrEOL,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statement --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> ifStatement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> switchStatement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> whileLoop,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> doLoop,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> forLoop,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> tryStatement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> throwStatement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> breakStatement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> continueStatement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> withStatement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> variables,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> letStatement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> returnOrYield,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> block,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> makeErrorNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> function,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> defaultXmlNamespace,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> nameOrLabel,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> insideFunction,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> autoInsertSemicolon,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,autoInsertSemicolon --> peekFlaggedToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,autoInsertSemicolon --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,autoInsertSemicolon --> nodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,autoInsertSemicolon --> warnMissingSemi,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,autoInsertSemicolon --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> condition,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> statement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> enterSwitch,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> nextToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> statement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> exitSwitch,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> enterLoop,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> condition,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> statement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> exitLoop,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> enterLoop,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> statement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> condition,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> exitLoop,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> forLoopInit,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> enterLoop,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> statement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> exitLoop,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoopInit --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoopInit --> variables,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoopInit --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,forLoopInit --> markDestructuring,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> getAndResetJsDoc,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> statement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> createNameNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> reportError$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> statements$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,throwStatement --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,throwStatement --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,throwStatement --> peekTokenOrEOL,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,throwStatement --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,throwStatement --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,throwStatement --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,matchJumpLabelName --> peekTokenOrEOL,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,matchJumpLabelName --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,matchJumpLabelName --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> peekTokenOrEOL,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> createNameNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> matchJumpLabelName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> reportError$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> peekTokenOrEOL,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> createNameNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> matchJumpLabelName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> reportError$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> getAndResetJsDoc,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> statement,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,letStatement --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,letStatement --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,letStatement --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,letStatement --> let,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,letStatement --> variables,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> insideFunction,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> peekTokenOrEOL,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> nowAllSet,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> addStrictWarning$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> setRequiresActivation,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> setIsGenerator,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> addError$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,block --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,block --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,block --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,block --> statements,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,block --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,block --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> mustHaveXML,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> setRequiresActivation,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,recordLabel --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,recordLabel --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,recordLabel --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,recordLabel --> reportError$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> insideFunction,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> recordLabel,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> autoInsertSemicolon,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> statementHelper,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> getAndResetJsDoc,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> destructuringPrimaryExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> reportError$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> markDestructuring,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> createNameNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> reportError$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> defineSymbol$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> assignExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,let --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,let --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,let --> variables,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,let --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,let --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,let --> statements$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,let --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,let --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,let --> insideFunction,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,let --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol --> defineSymbol$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> addError$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> addError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> addStrictWarning,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> addWarning,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,expr --> assignExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,expr --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,expr --> nodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,expr --> addStrictWarning$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,expr --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,expr --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,assignExpr --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,assignExpr --> returnOrYield,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,assignExpr --> condExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,assignExpr --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,assignExpr --> getAndResetJsDoc,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,assignExpr --> markDestructuring,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,assignExpr --> assignExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> orExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> assignExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,orExpr --> andExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,orExpr --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,orExpr --> orExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,andExpr --> bitOrExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,andExpr --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,andExpr --> andExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,bitOrExpr --> bitXorExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,bitOrExpr --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,bitXorExpr --> bitAndExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,bitXorExpr --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,bitAndExpr --> eqExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,bitAndExpr --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,eqExpr --> relExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,eqExpr --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,eqExpr --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,relExpr --> shiftExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,relExpr --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,relExpr --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,shiftExpr --> addExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,shiftExpr --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,shiftExpr --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addExpr --> mulExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addExpr --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,addExpr --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,mulExpr --> unaryExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,mulExpr --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,mulExpr --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> unaryExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> memberExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> checkBadIncDec,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> makeErrorNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> xmlInitializer,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> memberExprTail,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> peekTokenOrEOL,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> makeErrorNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,argumentList --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,argumentList --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,argumentList --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,argumentList --> assignExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,argumentList --> generatorExpression$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,argumentList --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> primaryExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> memberExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> argumentList,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> objectLiteral,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> memberExprTail,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> propertyAccess,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> mustHaveXML,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setRequiresActivation,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> checkCallRequiresActivation,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> argumentList,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> mustHaveXML,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> nextToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> createNameNode$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> saveNameTokenData,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> propertyName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> attributeAccess,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> makeErrorNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,attributeAccess --> nextToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,attributeAccess --> propertyName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,attributeAccess --> saveNameTokenData,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,attributeAccess --> xmlElemRef,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,attributeAccess --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,attributeAccess --> makeErrorNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> createNameNode$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> nextToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> createNameNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> saveNameTokenData,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> xmlElemRef,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> makeErrorNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,xmlElemRef --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,xmlElemRef --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,xmlElemRef --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringPrimaryExpr --> primaryExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> nextFlaggedToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> function,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> arrayLiteral,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> objectLiteral,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> let,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> parenExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> mustHaveXML,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> attributeAccess,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> name,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> createStringLiteral,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> makeErrorNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parenExpr --> getAndResetJsDoc,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parenExpr --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parenExpr --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parenExpr --> generatorExpression,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,parenExpr --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,name --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,name --> saveNameTokenData,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,name --> propertyName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,name --> createNameNode$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> warnTrailingComma,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> arrayComprehension,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> assignExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> arrayComprehensionLoop,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> condition,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> nextToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> destructuringPrimaryExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> markDestructuring,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> createNameNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> defineSymbol$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression --> generatorExpression$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> generatorExpressionLoop,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> condition,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> nextToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> destructuringPrimaryExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> markDestructuring,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> createNameNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> defineSymbol$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> expr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> getAndResetJsDoc,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> createNameNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> objliteralProperty,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> getterSetterProperty,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> plainProperty,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> warnTrailingComma,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> addError$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> matchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objliteralProperty --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objliteralProperty --> createNameNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objliteralProperty --> createStringLiteral,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objliteralProperty --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,objliteralProperty --> consumeToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> peekToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> mustMatchToken,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> assignExpr,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,getterSetterProperty --> function,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,getterSetterProperty --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,getterSetterProperty --> getNodeEnd,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,createNameNode --> createNameNode$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,createNameNode$2 --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,createNameNode$2 --> checkActivationName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,checkActivationName --> insideFunction,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,checkActivationName --> setRequiresActivation,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,setRequiresActivation --> insideFunction,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,checkCallRequiresActivation --> setRequiresActivation,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,setIsGenerator --> insideFunction,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,checkBadIncDec --> removeParens,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,checkBadIncDec --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,warnMissingSemi --> lineBeginningFor,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,warnMissingSemi --> addStrictWarning$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,warnTrailingComma --> lineBeginningFor,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,warnTrailingComma --> addWarning$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,createDestructuringAssignment --> destructuringAssignmentHelper,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,createDestructuringAssignment --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> createScopeNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> createName$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> defineSymbol$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> destructuringArray,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> destructuringObject,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> simpleAssignment,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> createNumber,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringArray --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringArray --> createNumber,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringArray --> createName$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringArray --> defineSymbol$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringArray --> destructuringAssignmentHelper,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> createNumber,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> createName$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> defineSymbol$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> destructuringAssignmentHelper,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,createName --> checkActivationName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,createName$2 --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> reportError$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> checkMutableReference,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> codeBug,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,checkMutableReference --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser,markDestructuring --> markDestructuring,org.mozilla.javascript.Parser,);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,<init>$3 --> currentFlaggedToken,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,<init>$3 --> prevNameTokenString,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,<init>$3 --> compilerEnv,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,<init>$3 --> errorReporter,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,<init>$3 --> errorCollector,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addStrictWarning --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addStrictWarning$2 --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addWarning --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addWarning$3 --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addWarning$3 --> errorCollector,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addWarning$3 --> sourceURI,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addWarning$3 --> errorReporter,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addWarning$3 --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError$3 --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError$4 --> syntaxErrorCount,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError$4 --> errorCollector,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError$4 --> sourceURI,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError$4 --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError$4 --> errorReporter,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError$4 --> syntaxErrorCount,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,reportError$2 --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,reportError$4 --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,recordComment --> scannedComments,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,recordComment --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,recordComment --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,recordComment --> scannedComments,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,recordComment --> currentJsDocComment,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,getAndResetJsDoc --> currentJsDocComment,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,getAndResetJsDoc --> currentJsDocComment,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,peekToken --> currentFlaggedToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,peekToken --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,peekToken --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,peekToken --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,peekToken --> currentToken,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,peekToken --> currentFlaggedToken,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,peekFlaggedToken --> currentFlaggedToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,consumeToken --> currentFlaggedToken,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,nextFlaggedToken --> currentFlaggedToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,peekTokenOrEOL --> currentFlaggedToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,mustMatchToken --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,mustHaveXML --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,eof --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,insideFunction --> nestingOfFunction,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,pushScope --> currentScope,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,pushScope --> currentScope,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,popScope --> currentScope,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,popScope --> currentScope,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,enterLoop --> loopSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,enterLoop --> loopAndSwitchSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,enterLoop --> currentLabel,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,enterLoop --> loopSet,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,enterLoop --> loopAndSwitchSet,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,exitLoop --> loopSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,exitLoop --> loopAndSwitchSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,enterSwitch --> loopAndSwitchSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,enterSwitch --> loopAndSwitchSet,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,exitSwitch --> loopAndSwitchSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse --> parseFinished,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse --> sourceURI,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse --> sourceChars,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse --> ts,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse --> parseFinished,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$2 --> parseFinished,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$2 --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$2 --> sourceURI,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$2 --> ts,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$2 --> parseFinished,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> inUseStrictDirective,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> calledByCompileFunction,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> sourceURI,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> syntaxErrorCount,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> errorReporter,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> scannedComments,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> currentScriptOrFn,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> currentScope,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> inUseStrictDirective,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionBody --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionBody --> nestingOfFunction,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionBody --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionBody --> inUseStrictDirective,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionBody --> nestingOfFunction,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionBody --> inUseStrictDirective,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionParams --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionParams --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionParams --> inUseStrictDirective,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,function --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,function --> inUseStrictDirective,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,function --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,function --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,function --> sourceURI,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,function --> currentScope,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statements --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statements --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statements --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,condition --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statement --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statement --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statementHelper --> currentLabel,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statementHelper --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statementHelper --> inUseStrictDirective,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statementHelper --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statementHelper --> currentLabel,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,autoInsertSemicolon --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,ifStatement --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,ifStatement --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,switchStatement --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,switchStatement --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,whileLoop --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,whileLoop --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,doLoop --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,doLoop --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,forLoop --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,forLoop --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,forLoop --> currentScope,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,forLoopInit --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,forLoopInit --> inForInit,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,tryStatement --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,tryStatement --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,tryStatement --> inUseStrictDirective,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,throwStatement --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,throwStatement --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,matchJumpLabelName --> labelSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,matchJumpLabelName --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,breakStatement --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,breakStatement --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,breakStatement --> loopAndSwitchSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,continueStatement --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,continueStatement --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,continueStatement --> loopSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,withStatement --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,withStatement --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,letStatement --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,letStatement --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,returnOrYield --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,returnOrYield --> endFlags,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,returnOrYield --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,returnOrYield --> endFlags,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,block --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,block --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,defaultXmlNamespace --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,defaultXmlNamespace --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,recordLabel --> labelSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,recordLabel --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,recordLabel --> labelSet,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,nameOrLabel --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,nameOrLabel --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,nameOrLabel --> currentFlaggedToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,nameOrLabel --> labelSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,nameOrLabel --> currentFlaggedToken,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,nameOrLabel --> currentLabel,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,variables --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,variables --> inUseStrictDirective,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,variables --> inForInit,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,let --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,defineSymbol$2 --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,defineSymbol$2 --> currentScope,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,defineSymbol$2 --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,expr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,expr --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,assignExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,assignExpr --> currentJsDocComment,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,condExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,condExpr --> inForInit,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,condExpr --> inForInit,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,orExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,andExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,bitOrExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,bitXorExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,bitAndExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,eqExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,eqExpr --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,relExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,relExpr --> inForInit,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,shiftExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,mulExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,unaryExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,unaryExpr --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,xmlInitializer --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,xmlInitializer --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,argumentList --> inForInit,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,argumentList --> inForInit,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,memberExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,memberExprTail --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,propertyAccess --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,propertyAccess --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,attributeAccess --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,propertyName --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,propertyName --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,xmlElemRef --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,destructuringPrimaryExpr --> inDestructuringAssignment,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,primaryExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,primaryExpr --> inUseStrictDirective,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parenExpr --> inForInit,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parenExpr --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parenExpr --> inForInit,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,name --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,name --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayLiteral --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayLiteral --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayComprehension --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayComprehensionLoop --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,generatorExpression$2 --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,generatorExpressionLoop --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,objectLiteral --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,objectLiteral --> inUseStrictDirective,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,objliteralProperty --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,objliteralProperty --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,plainProperty --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,plainProperty --> inDestructuringAssignment,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,plainProperty --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createNameNode$2 --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createNameNode$2 --> prevNameTokenString,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createNameNode$2 --> prevNameTokenStart,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createNameNode$2 --> prevNameTokenLineno,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createNameNode$2 --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createNameNode$2 --> prevNameTokenStart,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createNameNode$2 --> prevNameTokenString,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createNameNode$2 --> prevNameTokenLineno,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createStringLiteral --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,checkActivationName --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,setRequiresActivation --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,setIsGenerator --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,makeErrorNode --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,saveNameTokenData --> prevNameTokenStart,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,saveNameTokenData --> prevNameTokenString,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,saveNameTokenData --> prevNameTokenLineno,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,lineBeginningFor --> sourceChars,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,warnMissingSemi --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,warnMissingSemi --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,warnTrailingComma --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createDestructuringAssignment --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,destructuringArray --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,destructuringObject --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,destructuringObject --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,simpleAssignment --> inUseStrictDirective,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,codeBug --> ts,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,codeBug --> currentToken,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,access$200 --> labelSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,access$202 --> labelSet,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,access$300 --> loopSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,access$302 --> loopSet,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,access$400 --> loopAndSwitchSet,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,access$402 --> loopAndSwitchSet,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,access$500 --> endFlags,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,access$502 --> endFlags,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,access$600 --> inForInit,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,access$602 --> inForInit,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addStrictWarning --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addStrictWarning --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addWarning --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addWarning --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError$3 --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addError$3 --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,reportError$2 --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,reportError$2 --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,recordComment --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,recordComment --> commentType,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,recordComment --> JSDOC,org.mozilla.javascript.Token$CommentType,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,mustMatchToken --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,mustMatchToken --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parse$3 --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionBody --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionBody --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionBody --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parseFunctionParams --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,function --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,function --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,function --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statements --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statements --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,condition --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,condition --> condition,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,condition --> lp,org.mozilla.javascript.Parser$ConditionData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,condition --> condition,org.mozilla.javascript.Parser$ConditionData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,condition --> rp,org.mozilla.javascript.Parser$ConditionData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statement --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statementHelper --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statementHelper --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,statementHelper --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,autoInsertSemicolon --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,ifStatement --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,ifStatement --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,ifStatement --> condition,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,ifStatement --> lp,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,ifStatement --> rp,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,switchStatement --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,switchStatement --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,switchStatement --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,whileLoop --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,whileLoop --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,whileLoop --> condition,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,whileLoop --> lp,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,whileLoop --> rp,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,doLoop --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,doLoop --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,doLoop --> condition,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,doLoop --> lp,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,doLoop --> rp,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,doLoop --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,forLoop --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,forLoop --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,forLoop --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,forLoopInit --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,forLoopInit --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,tryStatement --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,tryStatement --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,tryStatement --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,throwStatement --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,throwStatement --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,breakStatement --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,breakStatement --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,breakStatement --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,continueStatement --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,continueStatement --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,continueStatement --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,withStatement --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,withStatement --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,letStatement --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,letStatement --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,returnOrYield --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,returnOrYield --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,returnOrYield --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,block --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,block --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,block --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,defaultXmlNamespace --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,defaultXmlNamespace --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,nameOrLabel --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,nameOrLabel --> lineno,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,nameOrLabel --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,nameOrLabel --> lineno,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,variables --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,variables --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,variables --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,let --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,let --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,let --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,expr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,assignExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,condExpr --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,condExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,orExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,andExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,bitOrExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,bitXorExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,bitAndExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,eqExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,relExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,shiftExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,addExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,mulExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,unaryExpr --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,unaryExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,xmlInitializer --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,xmlInitializer --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,xmlInitializer --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,memberExpr --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,memberExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,memberExpr --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,memberExprTail --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,memberExprTail --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,memberExprTail --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,propertyAccess --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,propertyAccess --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,attributeAccess --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,attributeAccess --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,propertyName --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,propertyName --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,xmlElemRef --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,xmlElemRef --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,primaryExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,primaryExpr --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parenExpr --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parenExpr --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,parenExpr --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,name --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,name --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,name --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayLiteral --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayLiteral --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayComprehension --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayComprehension --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayComprehension --> condition,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayComprehension --> lp,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayComprehension --> rp,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayComprehensionLoop --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,arrayComprehensionLoop --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,generatorExpression$2 --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,generatorExpression$2 --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,generatorExpression$2 --> condition,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,generatorExpression$2 --> lp,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,generatorExpression$2 --> rp,org.mozilla.javascript.Parser$ConditionData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,generatorExpressionLoop --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,generatorExpressionLoop --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,objectLiteral --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,objectLiteral --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,objectLiteral --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,objliteralProperty --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,plainProperty --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createNameNode$2 --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createNameNode$2 --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createStringLiteral --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createStringLiteral --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,createStringLiteral --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,makeErrorNode --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,makeErrorNode --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,makeErrorNode --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,warnMissingSemi --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,destructuringObject --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,codeBug --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser,codeBug --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(METHOD,org.mozilla.javascript.Parser,<init> --> <init>,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,<init>$2 --> getErrorReporter,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,addStrictWarning$2 --> isStrictMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,addWarning$3 --> reportWarningAsError,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,addWarning$3 --> warning,org.mozilla.javascript.ast.IdeErrorReporter,);
Call(METHOD,org.mozilla.javascript.Parser,addWarning$3 --> getLineno,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,addWarning$3 --> getLine,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,addWarning$3 --> getOffset,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,addWarning$3 --> warning,org.mozilla.javascript.ErrorReporter,);
Call(METHOD,org.mozilla.javascript.Parser,addError$4 --> error,org.mozilla.javascript.ast.IdeErrorReporter,);
Call(METHOD,org.mozilla.javascript.Parser,addError$4 --> getLineno,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,addError$4 --> getLine,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,addError$4 --> getOffset,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,addError$4 --> error,org.mozilla.javascript.ErrorReporter,);
Call(METHOD,org.mozilla.javascript.Parser,lookupMessage$2 --> getMessage0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Parser,lookupMessage$2 --> getMessage1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Parser,reportError$4 --> recoverFromErrors,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,reportError$4 --> <init>$2,org.mozilla.javascript.Parser$ParserException,);
Call(METHOD,org.mozilla.javascript.Parser,getNodeEnd --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,getNodeEnd --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,recordComment --> getTokenLength,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,recordComment --> <init>,org.mozilla.javascript.ast.Comment,);
Call(METHOD,org.mozilla.javascript.Parser,recordComment --> isRecordingLocalJsDocComments,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,recordComment --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,peekToken --> getLineno,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,peekToken --> getToken,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,peekToken --> isRecordingComments,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,peekToken --> getAndResetCurrentComment,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,mustHaveXML --> isXmlAvailable,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,eof --> eof,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,pushScope --> getParentScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.Parser,pushScope --> addChildScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.Parser,popScope --> getParentScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.Parser,enterLoop --> setStatement,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.Parser,enterLoop --> getFirstLabel,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.Parser,enterLoop --> setLoop,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.Parser,enterLoop --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,enterLoop --> setRelative,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,exitLoop --> getParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,exitLoop --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,exitLoop --> setRelative,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,parse --> isIdeMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,parse --> <init>,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,parse$2 --> isIdeMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,parse$2 --> <init>,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> <init>$2,org.mozilla.javascript.ast.AstRoot,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> setInStrictMode,org.mozilla.javascript.ast.AstRoot,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> isIdeMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> reportRuntimeError,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> runtimeError,org.mozilla.javascript.ErrorReporter,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> addComment,org.mozilla.javascript.ast.AstRoot,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> setSourceName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> setBaseLineno,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Parser,parse$3 --> setEndLineno,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> getLanguageVersion,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> <init>$2,org.mozilla.javascript.ast.Block,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> <init>$2,org.mozilla.javascript.ast.ReturnStatement,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> setReturnValue,org.mozilla.javascript.ast.ReturnStatement,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> addStatement,org.mozilla.javascript.ast.Block,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionBody --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,getDirective --> getExpression,org.mozilla.javascript.ast.ExpressionStatement,);
Call(METHOD,org.mozilla.javascript.Parser,getDirective --> getValue,org.mozilla.javascript.ast.StringLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> setRp,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> addParam,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> getNextTempName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,parseFunctionParams --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,function --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Parser,function --> isAllowMemberExprAsFunctionName,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,function --> length,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Parser,function --> <init>$3,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,function --> setFunctionType,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,function --> setLp,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,function --> setJsDocNode,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,function --> <init>,org.mozilla.javascript.Parser$PerFunctionVariables,);
Call(METHOD,org.mozilla.javascript.Parser,function --> setBody,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,function --> setEncodedSourceBounds,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Parser,function --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,function --> isStrictMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,function --> getBody,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,function --> hasConsistentReturnUsage,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,function --> restore,org.mozilla.javascript.Parser$PerFunctionVariables,);
Call(METHOD,org.mozilla.javascript.Parser,function --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Parser,function --> setMemberExprNode,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,function --> setSourceName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Parser,function --> setBaseLineno,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Parser,function --> setEndLineno,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Parser,function --> isIdeMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,function --> setParentScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.Parser,statements --> isIdeMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,statements --> <init>$2,org.mozilla.javascript.ast.Block,);
Call(METHOD,org.mozilla.javascript.Parser,statements --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,statements --> addChild,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,statements --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,condition --> <init>$2,org.mozilla.javascript.Parser$ConditionData,);
Call(METHOD,org.mozilla.javascript.Parser,condition --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,condition --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,statement --> isStrictMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,statement --> hasSideEffects,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,statement --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,statement --> <init>$3,org.mozilla.javascript.ast.EmptyStatement,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> getStatement,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> <init>$4,org.mozilla.javascript.ast.KeywordLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> <init>$3,org.mozilla.javascript.ast.EmptyStatement,);
Call(METHOD,org.mozilla.javascript.Parser,statementHelper --> <init>$2,org.mozilla.javascript.ast.ExpressionStatement,);
Call(METHOD,org.mozilla.javascript.Parser,autoInsertSemicolon --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,autoInsertSemicolon --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> <init>$3,org.mozilla.javascript.ast.IfStatement,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> setCondition,org.mozilla.javascript.ast.IfStatement,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> setParens,org.mozilla.javascript.ast.IfStatement,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> setThenPart,org.mozilla.javascript.ast.IfStatement,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> setElsePart,org.mozilla.javascript.ast.IfStatement,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> setElsePosition,org.mozilla.javascript.ast.IfStatement,);
Call(METHOD,org.mozilla.javascript.Parser,ifStatement --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> <init>$2,org.mozilla.javascript.ast.SwitchStatement,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> setLp,org.mozilla.javascript.ast.SwitchStatement,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> setExpression,org.mozilla.javascript.ast.SwitchStatement,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> setRp,org.mozilla.javascript.ast.SwitchStatement,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> <init>$2,org.mozilla.javascript.ast.SwitchCase,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> setExpression,org.mozilla.javascript.ast.SwitchCase,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> addStatement,org.mozilla.javascript.ast.SwitchCase,);
Call(METHOD,org.mozilla.javascript.Parser,switchStatement --> addCase,org.mozilla.javascript.ast.SwitchStatement,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> <init>$2,org.mozilla.javascript.ast.WhileLoop,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> setCondition,org.mozilla.javascript.ast.WhileLoop,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> setParens,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,whileLoop --> setBody,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> <init>$2,org.mozilla.javascript.ast.DoLoop,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> setWhilePosition,org.mozilla.javascript.ast.DoLoop,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> setCondition,org.mozilla.javascript.ast.DoLoop,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> setParens,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> setBody,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.Parser,doLoop --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> <init>,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> <init>$3,org.mozilla.javascript.ast.EmptyExpression,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> <init>$2,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> getVariables,org.mozilla.javascript.ast.VariableDeclaration,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setIterator,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setIteratedObject,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setInPosition,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setIsForEach,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setEachPosition,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> <init>$2,org.mozilla.javascript.ast.ForLoop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setInitializer,org.mozilla.javascript.ast.ForLoop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setCondition,org.mozilla.javascript.ast.ForLoop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setIncrement,org.mozilla.javascript.ast.ForLoop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> replaceWith,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setBody,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoop --> setParens,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.Parser,forLoopInit --> <init>$3,org.mozilla.javascript.ast.EmptyExpression,);
Call(METHOD,org.mozilla.javascript.Parser,forLoopInit --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> <init>$2,org.mozilla.javascript.ast.CatchClause,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setVarName,org.mozilla.javascript.ast.CatchClause,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setCatchCondition,org.mozilla.javascript.ast.CatchClause,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setBody,org.mozilla.javascript.ast.CatchClause,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setIfPosition,org.mozilla.javascript.ast.CatchClause,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setParens,org.mozilla.javascript.ast.CatchClause,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> <init>$3,org.mozilla.javascript.ast.TryStatement,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setTryBlock,org.mozilla.javascript.ast.TryStatement,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setCatchClauses,org.mozilla.javascript.ast.TryStatement,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setFinallyBlock,org.mozilla.javascript.ast.TryStatement,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setFinallyPosition,org.mozilla.javascript.ast.TryStatement,);
Call(METHOD,org.mozilla.javascript.Parser,tryStatement --> setJsDocNode,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,throwStatement --> <init>$6,org.mozilla.javascript.ast.ThrowStatement,);
Call(METHOD,org.mozilla.javascript.Parser,throwStatement --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,matchJumpLabelName --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> getFirstLabel,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> <init>$3,org.mozilla.javascript.ast.BreakStatement,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> setBreakLabel,org.mozilla.javascript.ast.BreakStatement,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> setBreakTarget,org.mozilla.javascript.ast.BreakStatement,);
Call(METHOD,org.mozilla.javascript.Parser,breakStatement --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> getStatement,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> <init>$3,org.mozilla.javascript.ast.ContinueStatement,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> setTarget,org.mozilla.javascript.ast.ContinueStatement,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> setLabel,org.mozilla.javascript.ast.ContinueStatement,);
Call(METHOD,org.mozilla.javascript.Parser,continueStatement --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> <init>$3,org.mozilla.javascript.ast.WithStatement,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> setJsDocNode,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> setExpression,org.mozilla.javascript.ast.WithStatement,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> setStatement,org.mozilla.javascript.ast.WithStatement,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> setParens,org.mozilla.javascript.ast.WithStatement,);
Call(METHOD,org.mozilla.javascript.Parser,withStatement --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,letStatement --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> <init>$4,org.mozilla.javascript.ast.ReturnStatement,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> <init>$4,org.mozilla.javascript.ast.Yield,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> <init>$3,org.mozilla.javascript.ast.ExpressionStatement,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> getFunctionName,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> length,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Parser,returnOrYield --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,block --> <init>$2,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.Parser,block --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,block --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> <init>$3,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> setOperator,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> setOperand,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,defaultXmlNamespace --> <init>$2,org.mozilla.javascript.ast.ExpressionStatement,);
Call(METHOD,org.mozilla.javascript.Parser,recordLabel --> getName,org.mozilla.javascript.ast.Label,);
Call(METHOD,org.mozilla.javascript.Parser,recordLabel --> isIdeMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,recordLabel --> getLabelByName,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.Parser,recordLabel --> getAbsolutePosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,recordLabel --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,recordLabel --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,recordLabel --> addLabel,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> <init>$2,org.mozilla.javascript.ast.ExpressionStatement,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> <init>$2,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> getLabels,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> getName,org.mozilla.javascript.ast.Label,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> getParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,nameOrLabel --> setStatement,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> <init>$2,org.mozilla.javascript.ast.VariableDeclaration,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> setType,org.mozilla.javascript.ast.VariableDeclaration,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> setJsDocNode,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> getLineno,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> <init>$3,org.mozilla.javascript.ast.VariableInitializer,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> setTarget,org.mozilla.javascript.ast.VariableInitializer,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> setInitializer,org.mozilla.javascript.ast.VariableInitializer,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> addVariable,org.mozilla.javascript.ast.VariableDeclaration,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,variables --> setIsStatement,org.mozilla.javascript.ast.VariableDeclaration,);
Call(METHOD,org.mozilla.javascript.Parser,let --> <init>$2,org.mozilla.javascript.ast.LetNode,);
Call(METHOD,org.mozilla.javascript.Parser,let --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,let --> setLp,org.mozilla.javascript.ast.LetNode,);
Call(METHOD,org.mozilla.javascript.Parser,let --> setVariables,org.mozilla.javascript.ast.LetNode,);
Call(METHOD,org.mozilla.javascript.Parser,let --> setRp,org.mozilla.javascript.ast.LetNode,);
Call(METHOD,org.mozilla.javascript.Parser,let --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,let --> setBody,org.mozilla.javascript.ast.LetNode,);
Call(METHOD,org.mozilla.javascript.Parser,let --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,let --> <init>$2,org.mozilla.javascript.ast.ExpressionStatement,);
Call(METHOD,org.mozilla.javascript.Parser,let --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> isIdeMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> getDefiningScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> getSymbol,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> getDeclType,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> <init>$2,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.Parser,defineSymbol$2 --> putSymbol,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.Parser,expr --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,expr --> isStrictMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,expr --> hasSideEffects,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,expr --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,assignExpr --> <init>$6,org.mozilla.javascript.ast.Assignment,);
Call(METHOD,org.mozilla.javascript.Parser,assignExpr --> setJsDocNode,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> <init>$3,org.mozilla.javascript.ast.ConditionalExpression,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> setTestExpression,org.mozilla.javascript.ast.ConditionalExpression,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> setTrueExpression,org.mozilla.javascript.ast.ConditionalExpression,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> setFalseExpression,org.mozilla.javascript.ast.ConditionalExpression,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> setQuestionMarkPosition,org.mozilla.javascript.ast.ConditionalExpression,);
Call(METHOD,org.mozilla.javascript.Parser,condExpr --> setColonPosition,org.mozilla.javascript.ast.ConditionalExpression,);
Call(METHOD,org.mozilla.javascript.Parser,orExpr --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,andExpr --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,bitOrExpr --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,bitXorExpr --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,bitAndExpr --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,eqExpr --> getLanguageVersion,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,eqExpr --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,relExpr --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,shiftExpr --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,addExpr --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,mulExpr --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> <init>$4,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> isXmlAvailable,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,unaryExpr --> <init>$5,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> getFirstXMLToken,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> <init>$2,org.mozilla.javascript.ast.XmlLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> <init>$3,org.mozilla.javascript.ast.XmlString,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> addFragment,org.mozilla.javascript.ast.XmlLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> <init>$3,org.mozilla.javascript.ast.EmptyExpression,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> <init>$4,org.mozilla.javascript.ast.XmlExpression,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> isXMLAttribute,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> setIsXmlAttribute,org.mozilla.javascript.ast.XmlExpression,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,xmlInitializer --> getNextXMLToken,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> <init>$2,org.mozilla.javascript.ast.NewExpression,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> setTarget,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> setArguments,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> setParens,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> setInitializer,org.mozilla.javascript.ast.NewExpression,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,memberExpr --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> <init>$3,org.mozilla.javascript.ast.XmlDotQuery,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setOperatorPosition,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setRp,org.mozilla.javascript.ast.XmlDotQuery,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> <init>$3,org.mozilla.javascript.ast.ElementGet,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setTarget,org.mozilla.javascript.ast.ElementGet,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setElement,org.mozilla.javascript.ast.ElementGet,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setParens,org.mozilla.javascript.ast.ElementGet,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> <init>$2,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setTarget,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setLp,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setArguments,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setRp,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.Parser,memberExprTail --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> isXmlAvailable,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> isReservedKeywordAsIdentifier,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> isKeyword,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> <init>$6,org.mozilla.javascript.ast.PropertyGet,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> keywordToName,org.mozilla.javascript.Token,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> <init>,org.mozilla.javascript.ast.XmlMemberGet,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> <init>,org.mozilla.javascript.ast.PropertyGet,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> setPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> setOperatorPosition,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> setLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,propertyAccess --> setRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,attributeAccess --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> <init>$3,org.mozilla.javascript.ast.XmlPropRef,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> setAtPos,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> setNamespace,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> setColonPos,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> setPropName,org.mozilla.javascript.ast.XmlPropRef,);
Call(METHOD,org.mozilla.javascript.Parser,propertyName --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,xmlElemRef --> <init>$3,org.mozilla.javascript.ast.XmlElemRef,);
Call(METHOD,org.mozilla.javascript.Parser,xmlElemRef --> setNamespace,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.Parser,xmlElemRef --> setColonPos,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.Parser,xmlElemRef --> setAtPos,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.Parser,xmlElemRef --> setExpression,org.mozilla.javascript.ast.XmlElemRef,);
Call(METHOD,org.mozilla.javascript.Parser,xmlElemRef --> setBrackets,org.mozilla.javascript.ast.XmlElemRef,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> isNumberOctal,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> getNumber,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> <init>$5,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> readRegExp,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> <init>$3,org.mozilla.javascript.ast.RegExpLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> setValue,org.mozilla.javascript.ast.RegExpLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> readAndClearRegExpFlags,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> setFlags,org.mozilla.javascript.ast.RegExpLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,primaryExpr --> <init>$4,org.mozilla.javascript.ast.KeywordLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,parenExpr --> <init>$4,org.mozilla.javascript.ast.ParenthesizedExpression,);
Call(METHOD,org.mozilla.javascript.Parser,parenExpr --> setJsDocNode,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,parenExpr --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,parenExpr --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,parenExpr --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,name --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,name --> <init>$3,org.mozilla.javascript.ast.Label,);
Call(METHOD,org.mozilla.javascript.Parser,name --> setName,org.mozilla.javascript.ast.Label,);
Call(METHOD,org.mozilla.javascript.Parser,name --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,name --> isXmlAvailable,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> <init>$2,org.mozilla.javascript.ast.ArrayLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> <init>$3,org.mozilla.javascript.ast.EmptyExpression,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> setDestructuringLength,org.mozilla.javascript.ast.ArrayLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> setSkipCount,org.mozilla.javascript.ast.ArrayLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> addElement,org.mozilla.javascript.ast.ArrayLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,arrayLiteral --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> <init>$3,org.mozilla.javascript.ast.ArrayComprehension,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> setResult,org.mozilla.javascript.ast.ArrayComprehension,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> setLoops,org.mozilla.javascript.ast.ArrayComprehension,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> setIfPosition,org.mozilla.javascript.ast.ArrayComprehension,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> setFilter,org.mozilla.javascript.ast.ArrayComprehension,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> setFilterLp,org.mozilla.javascript.ast.ArrayComprehension,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehension --> setFilterRp,org.mozilla.javascript.ast.ArrayComprehension,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> <init>$2,org.mozilla.javascript.ast.ArrayComprehensionLoop,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> setIterator,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> setIteratedObject,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> setInPosition,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> setEachPosition,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> setIsForEach,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,arrayComprehensionLoop --> setParens,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> <init>$3,org.mozilla.javascript.ast.GeneratorExpression,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> setResult,org.mozilla.javascript.ast.GeneratorExpression,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> setLoops,org.mozilla.javascript.ast.GeneratorExpression,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> setIfPosition,org.mozilla.javascript.ast.GeneratorExpression,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> setFilter,org.mozilla.javascript.ast.GeneratorExpression,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> setFilterLp,org.mozilla.javascript.ast.GeneratorExpression,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpression$2 --> setFilterRp,org.mozilla.javascript.ast.GeneratorExpression,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> <init>$2,org.mozilla.javascript.ast.GeneratorExpressionLoop,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> setIterator,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> setIteratedObject,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> setInPosition,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.Parser,generatorExpressionLoop --> setParens,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> setJsDocNode,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> <init>$3,org.mozilla.javascript.ast.ObjectLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> setElements,org.mozilla.javascript.ast.ObjectLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,objectLiteral --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,objliteralProperty --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,objliteralProperty --> getNumber,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,objliteralProperty --> <init>$5,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,objliteralProperty --> isReservedKeywordAsIdentifier,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,objliteralProperty --> isKeyword,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> getLanguageVersion,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> <init>$5,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> <init>,org.mozilla.javascript.ast.ObjectProperty,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> setLeftAndRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,plainProperty --> setOperatorPosition,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,getterSetterProperty --> getFunctionName,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,getterSetterProperty --> length,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Parser,getterSetterProperty --> <init>$2,org.mozilla.javascript.ast.ObjectProperty,);
Call(METHOD,org.mozilla.javascript.Parser,getterSetterProperty --> setIsGetter,org.mozilla.javascript.ast.ObjectProperty,);
Call(METHOD,org.mozilla.javascript.Parser,getterSetterProperty --> setIsSetter,org.mozilla.javascript.ast.ObjectProperty,);
Call(METHOD,org.mozilla.javascript.Parser,getterSetterProperty --> setLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,getterSetterProperty --> setRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,getterSetterProperty --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,createNameNode$2 --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,createNameNode$2 --> isIdeMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,createNameNode$2 --> <init>$5,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Parser,createNameNode$2 --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,createStringLiteral --> <init>$3,org.mozilla.javascript.ast.StringLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,createStringLiteral --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,createStringLiteral --> getString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,createStringLiteral --> setValue,org.mozilla.javascript.ast.StringLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,createStringLiteral --> getQuoteChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.Parser,createStringLiteral --> setQuoteCharacter,org.mozilla.javascript.ast.StringLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,checkActivationName --> getActivationNames,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,checkActivationName --> getLanguageVersion,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,setRequiresActivation --> setRequiresActivation,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,checkCallRequiresActivation --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,checkCallRequiresActivation --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Parser,checkCallRequiresActivation --> getProperty,org.mozilla.javascript.ast.PropertyGet,);
Call(METHOD,org.mozilla.javascript.Parser,setIsGenerator --> setIsGenerator,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.Parser,checkBadIncDec --> getOperand,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.Parser,checkBadIncDec --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,makeErrorNode --> <init>$3,org.mozilla.javascript.ast.ErrorNode,);
Call(METHOD,org.mozilla.javascript.Parser,makeErrorNode --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,nodeEnd --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,nodeEnd --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,warnMissingSemi --> isStrictMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,warnTrailingComma --> getWarnTrailingComma,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.Parser,warnTrailingComma --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.Parser,createDestructuringAssignment --> getNextTempName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Parser,createDestructuringAssignment --> getLastChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,createDestructuringAssignment --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> getLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> addChildToFront,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringAssignmentHelper --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringArray --> getElements,org.mozilla.javascript.ast.ArrayLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringArray --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringArray --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringArray --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringArray --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringArray --> getNextTempName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> getElements,org.mozilla.javascript.ast.ObjectLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> getLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> newString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> getValue,org.mozilla.javascript.ast.StringLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> getNumber,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> getRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,destructuringObject --> getNextTempName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.Parser,createName --> newString$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,createName$2 --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,createName$2 --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,createNumber --> newNumber,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,createScopeNode --> <init>,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.Parser,createScopeNode --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,createScopeNode --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> getTarget,org.mozilla.javascript.ast.PropertyGet,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> getProperty,org.mozilla.javascript.ast.PropertyGet,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> getTarget,org.mozilla.javascript.ast.ElementGet,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> getElement,org.mozilla.javascript.ast.ElementGet,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> getLastChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,simpleAssignment --> <init>$4,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,checkMutableReference --> getIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Parser,removeParens --> getExpression,org.mozilla.javascript.ast.ParenthesizedExpression,);
Call(METHOD,org.mozilla.javascript.Parser,markDestructuring --> setIsDestructuring,org.mozilla.javascript.ast.DestructuringForm,);
Call(METHOD,org.mozilla.javascript.Parser,markDestructuring --> getExpression,org.mozilla.javascript.ast.ParenthesizedExpression,);
Call(METHOD,org.mozilla.javascript.Parser,codeBug --> codeBug$2,org.mozilla.javascript.Kit,);
EndClass 94
StartClass 95
Class(org.mozilla.javascript.NativeFunction,N,Y,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(initScriptFunction,void,Public,N,N);
Method(decompile,java.lang.String,Public,N,N);
Method(getLength,int,Public,N,N);
Method(getArity,int,Public,N,N);
Method(jsGet_name,java.lang.String,Public,N,N);
Method(getEncodedSource,java.lang.String,Public,N,N);
Method(getDebuggableView,org.mozilla.javascript.debug.DebuggableScript,Public,N,N);
Method(resumeGenerator,java.lang.Object,Public,N,N);
Method(getLanguageVersion,int,Protected,N,Y);
Method(getParamCount,int,Protected,N,Y);
Method(getParamAndVarCount,int,Protected,N,Y);
Method(getParamOrVarName,java.lang.String,Protected,N,Y);
Method(getParamOrVarConst,boolean,Protected,N,N);
Parameter(initScriptFunction,org.mozilla.javascript.Context,);
Parameter(initScriptFunction,org.mozilla.javascript.Scriptable,);
Parameter(decompile,int,);
Parameter(decompile,int,);
Parameter(resumeGenerator,org.mozilla.javascript.Context,);
Parameter(resumeGenerator,org.mozilla.javascript.Scriptable,);
Parameter(resumeGenerator,int,);
Parameter(resumeGenerator,java.lang.Object,);
Parameter(resumeGenerator,java.lang.Object,);
Parameter(getParamOrVarName,int,);
Parameter(getParamOrVarConst,int,);
SuperClass(org.mozilla.javascript.BaseFunction);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
SubClass(org.mozilla.javascript.InterpretedFunction);
Generalization(org.mozilla.javascript.BaseFunction);
Call(METHOD,org.mozilla.javascript.NativeFunction,decompile --> getEncodedSource,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.NativeFunction,getLength --> getParamCount,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.NativeFunction,getLength --> getLanguageVersion,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.NativeFunction,getArity --> getParamCount,org.mozilla.javascript.NativeFunction,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeFunction,getLength --> originalArgs,org.mozilla.javascript.NativeCall,READ);
Call(METHOD,org.mozilla.javascript.NativeFunction,<init> --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeFunction,initScriptFunction --> setFunctionProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeFunction,decompile --> decompile,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeFunction,decompile --> <init>$2,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.NativeFunction,decompile --> put$2,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.NativeFunction,decompile --> decompile,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.NativeFunction,getLength --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeFunction,getLength --> findFunctionActivation,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeFunction,jsGet_name --> getFunctionName,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeFunction,resumeGenerator --> <init>,org.mozilla.javascript.EvaluatorException,);
EndClass 95
StartClass 96
Class(org.mozilla.javascript.NativeContinuation,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(FTAG,java.lang.Object,Private,Y,Y,);
Attribute(implementation,java.lang.Object,Private,N,N,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(init,void,Public,Y,N);
Method(getImplementation,java.lang.Object,Public,N,N);
Method(initImplementation,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(construct,org.mozilla.javascript.Scriptable,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(isContinuationConstructor,boolean,Public,Y,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Context,);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(initImplementation,java.lang.Object,);
Parameter(construct,org.mozilla.javascript.Context,);
Parameter(construct,org.mozilla.javascript.Scriptable,);
Parameter(construct,java.lang.Object[],);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(isContinuationConstructor,org.mozilla.javascript.IdFunctionObject,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Realization(org.mozilla.javascript.Function);
Call(METHOD,org.mozilla.javascript.NativeContinuation,init --> <init>,org.mozilla.javascript.NativeContinuation,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeContinuation,getImplementation --> implementation,org.mozilla.javascript.NativeContinuation,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeContinuation,initImplementation --> implementation,org.mozilla.javascript.NativeContinuation,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeContinuation,isContinuationConstructor --> FTAG,org.mozilla.javascript.NativeContinuation,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeContinuation,initPrototypeId --> FTAG,org.mozilla.javascript.NativeContinuation,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeContinuation,execIdCall --> FTAG,org.mozilla.javascript.NativeContinuation,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeContinuation,<clinit> --> FTAG,org.mozilla.javascript.NativeContinuation,WRITE);
Call(METHOD,org.mozilla.javascript.NativeContinuation,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeContinuation,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeContinuation,construct --> reportRuntimeError$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeContinuation,call --> restartContinuation,org.mozilla.javascript.Interpreter,);
Call(METHOD,org.mozilla.javascript.NativeContinuation,isContinuationConstructor --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeContinuation,isContinuationConstructor --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeContinuation,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeContinuation,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeContinuation,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeContinuation,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeContinuation,execIdCall --> reportRuntimeError$2,org.mozilla.javascript.Context,);
EndClass 96
StartClass 97
Class(org.mozilla.javascript.Context$1,N,N,NA);
Attribute(val$callable,org.mozilla.javascript.Callable,Public,N,Y,);
Attribute(val$scope,org.mozilla.javascript.Scriptable,Public,N,Y,);
Attribute(val$thisObj,org.mozilla.javascript.Scriptable,Public,N,Y,);
Attribute(val$args,java.lang.Object[],Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Callable,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,java.lang.Object[],);
Parameter(run,org.mozilla.javascript.Context,);
Realization(org.mozilla.javascript.ContextAction);
Composition(org.mozilla.javascript.Callable);
Composition(org.mozilla.javascript.Scriptable);
Call(ATTRIBUTE,org.mozilla.javascript.Context$1,<init> --> val$callable,org.mozilla.javascript.Context$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context$1,<init> --> val$scope,org.mozilla.javascript.Context$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context$1,<init> --> val$thisObj,org.mozilla.javascript.Context$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context$1,<init> --> val$args,org.mozilla.javascript.Context$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context$1,run --> val$callable,org.mozilla.javascript.Context$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context$1,run --> val$scope,org.mozilla.javascript.Context$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context$1,run --> val$thisObj,org.mozilla.javascript.Context$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context$1,run --> val$args,org.mozilla.javascript.Context$1,READ);
Call(METHOD,org.mozilla.javascript.Context$1,run --> call,org.mozilla.javascript.Callable,);
EndClass 97
StartClass 98
Class(org.mozilla.javascript.Context$2,N,N,NA);
Attribute(this$0,org.mozilla.javascript.Context,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(setClassShutter,void,Public,N,N);
Method(getClassShutter,org.mozilla.javascript.ClassShutter,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Context,);
Parameter(setClassShutter,org.mozilla.javascript.ClassShutter,);
Realization(org.mozilla.javascript.Context$ClassShutterSetter);
Composition(org.mozilla.javascript.Context);
Call(ATTRIBUTE,org.mozilla.javascript.Context$2,<init> --> this$0,org.mozilla.javascript.Context$2,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Context$2,setClassShutter --> this$0,org.mozilla.javascript.Context$2,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Context$2,getClassShutter --> this$0,org.mozilla.javascript.Context$2,READ);
Call(METHOD,org.mozilla.javascript.Context$2,setClassShutter --> access$002,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Context$2,getClassShutter --> access$000,org.mozilla.javascript.Context,);
EndClass 98
StartClass 99
Class(org.mozilla.javascript.NativeJavaObject,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(JSTYPE_UNDEFINED,int,Private,Y,Y,);
Attribute(JSTYPE_NULL,int,Private,Y,Y,);
Attribute(JSTYPE_BOOLEAN,int,Private,Y,Y,);
Attribute(JSTYPE_NUMBER,int,Private,Y,Y,);
Attribute(JSTYPE_STRING,int,Private,Y,Y,);
Attribute(JSTYPE_JAVA_CLASS,int,Private,Y,Y,);
Attribute(JSTYPE_JAVA_OBJECT,int,Private,Y,Y,);
Attribute(JSTYPE_JAVA_ARRAY,int,Private,Y,Y,);
Attribute(JSTYPE_OBJECT,int,Private,Y,Y,);
Attribute(CONVERSION_TRIVIAL,byte,Public,Y,Y,);
Attribute(CONVERSION_NONTRIVIAL,byte,Public,Y,Y,);
Attribute(CONVERSION_NONE,byte,Public,Y,Y,);
Attribute(prototype,org.mozilla.javascript.Scriptable,Protected,N,N,);
Attribute(parent,org.mozilla.javascript.Scriptable,Protected,N,N,);
Attribute(javaObject,java.lang.Object,Protected,N,N,);
Attribute(staticType,java.lang.Class,Protected,N,N,);
Attribute(members,org.mozilla.javascript.JavaMembers,Protected,N,N,);
Attribute(fieldAndMethods,java.util.Map,Private,N,N,java.lang.String;org.mozilla.javascript.FieldAndMethods);
Attribute(isAdapter,boolean,Protected,N,N,);
Attribute(COERCED_INTERFACE_KEY,java.lang.Object,Private,Y,Y,);
Attribute(adapter_writeAdapterObject,java.lang.reflect.Method,Private,Y,N,);
Attribute(adapter_readAdapterObject,java.lang.reflect.Method,Private,Y,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(initMembers,void,Protected,N,N);
Method(has,boolean,Public,N,N);
Method(has$2,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(get$2,java.lang.Object,Public,N,N);
Method(put,void,Public,N,N);
Method(put$2,void,Public,N,N);
Method(hasInstance,boolean,Public,N,N);
Method(delete,void,Public,N,N);
Method(delete$2,void,Public,N,N);
Method(getPrototype,org.mozilla.javascript.Scriptable,Public,N,N);
Method(setPrototype,void,Public,N,N);
Method(getParentScope,org.mozilla.javascript.Scriptable,Public,N,N);
Method(setParentScope,void,Public,N,N);
Method(getIds,java.lang.Object[],Public,N,N);
Method(wrap,java.lang.Object,Public,Y,N);
Method(unwrap,java.lang.Object,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(getDefaultValue,java.lang.Object,Public,N,N);
Method(canConvert,boolean,Public,Y,N);
Method(getConversionWeight,int,Public,Y,N);
Method(getSizeRank,int,Public,Y,N);
Method(getJSTypeCode,int,Private,Y,N);
Method(coerceType,java.lang.Object,Public,Y,N);
Method(coerceTypeImpl,java.lang.Object,Public,Y,N);
Method(createInterfaceAdapter,java.lang.Object,Protected,Y,N);
Method(coerceToNumber,java.lang.Object,Private,Y,N);
Method(toDouble,double,Private,Y,N);
Method(toInteger,long,Private,Y,N);
Method(reportConversionError,void,Public,Y,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,java.lang.Object,);
Parameter(<init>$2,java.lang.Class,);
Parameter(<init>$3,org.mozilla.javascript.Scriptable,);
Parameter(<init>$3,java.lang.Object,);
Parameter(<init>$3,java.lang.Class,);
Parameter(<init>$3,boolean,);
Parameter(has,java.lang.String,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(has$2,int,);
Parameter(has$2,org.mozilla.javascript.Scriptable,);
Parameter(get,java.lang.String,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(get$2,int,);
Parameter(get$2,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.String,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(put$2,int,);
Parameter(put$2,org.mozilla.javascript.Scriptable,);
Parameter(put$2,java.lang.Object,);
Parameter(hasInstance,org.mozilla.javascript.Scriptable,);
Parameter(delete,java.lang.String,);
Parameter(delete$2,int,);
Parameter(setPrototype,org.mozilla.javascript.Scriptable,);
Parameter(setParentScope,org.mozilla.javascript.Scriptable,);
Parameter(wrap,org.mozilla.javascript.Scriptable,);
Parameter(wrap,java.lang.Object,);
Parameter(wrap,java.lang.Class,);
Parameter(getDefaultValue,java.lang.Class,);
Parameter(canConvert,java.lang.Object,);
Parameter(canConvert,java.lang.Class,);
Parameter(getConversionWeight,java.lang.Object,);
Parameter(getConversionWeight,java.lang.Class,);
Parameter(getSizeRank,java.lang.Class,);
Parameter(getJSTypeCode,java.lang.Object,);
Parameter(coerceType,java.lang.Class,);
Parameter(coerceType,java.lang.Object,);
Parameter(coerceTypeImpl,java.lang.Class,);
Parameter(coerceTypeImpl,java.lang.Object,);
Parameter(createInterfaceAdapter,java.lang.Class,);
Parameter(createInterfaceAdapter,org.mozilla.javascript.ScriptableObject,);
Parameter(coerceToNumber,java.lang.Class,);
Parameter(coerceToNumber,java.lang.Object,);
Parameter(toDouble,java.lang.Object,);
Parameter(toInteger,java.lang.Object,);
Parameter(toInteger,java.lang.Class,);
Parameter(toInteger,double,);
Parameter(toInteger,double,);
Parameter(reportConversionError,java.lang.Object,);
Parameter(reportConversionError,java.lang.Class,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
SubClass(org.mozilla.javascript.NativeJavaClass);
SubClass(org.mozilla.javascript.NativeJavaArray);
Realization(org.mozilla.javascript.Scriptable);
Realization(org.mozilla.javascript.Wrapper);
Composition(org.mozilla.javascript.Scriptable);
Composition(org.mozilla.javascript.JavaMembers);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,<init>$2 --> <init>$3,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,<init>$3 --> initMembers,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getDefaultValue --> get,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,canConvert --> getConversionWeight,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getConversionWeight --> getJSTypeCode,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getConversionWeight --> getSizeRank,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceType --> coerceTypeImpl,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> getJSTypeCode,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> reportConversionError,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> coerceToNumber,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> coerceTypeImpl,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> createInterfaceAdapter,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceToNumber --> toInteger,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceToNumber --> toDouble,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,toDouble --> toDouble,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,toDouble --> reportConversionError,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,toInteger --> toDouble,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,toInteger --> reportConversionError,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,readObject --> initMembers,org.mozilla.javascript.NativeJavaObject,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,<init>$3 --> parent,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,<init>$3 --> javaObject,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,<init>$3 --> staticType,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,<init>$3 --> isAdapter,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,initMembers --> javaObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,initMembers --> staticType,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,initMembers --> parent,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,initMembers --> isAdapter,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,initMembers --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,initMembers --> members,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,initMembers --> fieldAndMethods,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,has --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,get --> fieldAndMethods,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,get --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,get --> javaObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,get$2 --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,put --> prototype,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,put --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,put --> javaObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,put$2 --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getPrototype --> prototype,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getPrototype --> javaObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getPrototype --> parent,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,setPrototype --> prototype,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getParentScope --> parent,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,setParentScope --> parent,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getIds --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,unwrap --> javaObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getDefaultValue --> javaObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,createInterfaceAdapter --> COERCED_INTERFACE_KEY,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,writeObject --> isAdapter,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,writeObject --> adapter_writeAdapterObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,writeObject --> javaObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,writeObject --> staticType,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,readObject --> isAdapter,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,readObject --> adapter_readAdapterObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,readObject --> isAdapter,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,readObject --> javaObject,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,readObject --> staticType,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,<clinit> --> COERCED_INTERFACE_KEY,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,<clinit> --> adapter_writeAdapterObject,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,<clinit> --> adapter_readAdapterObject,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getPrototype --> String,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getDefaultValue --> BooleanClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getDefaultValue --> StringClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getDefaultValue --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getDefaultValue --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getConversionWeight --> StringClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getConversionWeight --> ObjectClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getConversionWeight --> BooleanClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getConversionWeight --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getConversionWeight --> ClassClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getConversionWeight --> DateClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,getJSTypeCode --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> StringClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> ObjectClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> BooleanClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> CharacterClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> ClassClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> DateClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceToNumber --> CharacterClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceToNumber --> ObjectClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceToNumber --> DoubleClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceToNumber --> FloatClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceToNumber --> IntegerClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceToNumber --> LongClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceToNumber --> ShortClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,coerceToNumber --> ByteClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,<clinit> --> ObjectClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaObject,<clinit> --> ScriptableClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,initMembers --> lookupClass,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,initMembers --> getFieldAndMethodsObjects,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,has --> has,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,get --> get,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,get$2 --> reportMemberNotFound,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,put --> has,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,put --> put,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,put --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,put$2 --> reportMemberNotFound,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getPrototype --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getPrototype --> getBuiltinPrototype,org.mozilla.javascript.TopLevel,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getIds --> getIds,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,wrap --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,wrap --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,wrap --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getDefaultValue --> reportRuntimeError0,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getDefaultValue --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getDefaultValue --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getDefaultValue --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getDefaultValue --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,getConversionWeight --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> getJSTimeValue,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> getLength,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,coerceTypeImpl --> get,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,createInterfaceAdapter --> makeHashKeyFromPair,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,createInterfaceAdapter --> getAssociatedValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,createInterfaceAdapter --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,createInterfaceAdapter --> create,org.mozilla.javascript.InterfaceAdapter,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,createInterfaceAdapter --> associateValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,toDouble --> toNumber$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,toDouble --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,toDouble --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,toInteger --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,reportConversionError --> javaSignature,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,reportConversionError --> reportRuntimeError2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaObject,<clinit> --> classOrNull,org.mozilla.javascript.Kit,);
EndClass 99
StartClass 100
Class(org.mozilla.javascript.CompilerEnvirons,N,N,Public);
Attribute(errorReporter,org.mozilla.javascript.ErrorReporter,Private,N,N,);
Attribute(languageVersion,int,Private,N,N,);
Attribute(generateDebugInfo,boolean,Private,N,N,);
Attribute(reservedKeywordAsIdentifier,boolean,Private,N,N,);
Attribute(allowMemberExprAsFunctionName,boolean,Private,N,N,);
Attribute(xmlAvailable,boolean,Private,N,N,);
Attribute(optimizationLevel,int,Private,N,N,);
Attribute(generatingSource,boolean,Private,N,N,);
Attribute(strictMode,boolean,Private,N,N,);
Attribute(warningAsError,boolean,Private,N,N,);
Attribute(generateObserverCount,boolean,Private,N,N,);
Attribute(recordingComments,boolean,Private,N,N,);
Attribute(recordingLocalJsDocComments,boolean,Private,N,N,);
Attribute(recoverFromErrors,boolean,Private,N,N,);
Attribute(warnTrailingComma,boolean,Private,N,N,);
Attribute(ideMode,boolean,Private,N,N,);
Attribute(allowSharpComments,boolean,Private,N,N,);
Attribute(activationNames,java.util.Set,Public,N,N,java.lang.String);
Method(<init>,void,Public,N,N);
Method(initFromContext,void,Public,N,N);
Method(getErrorReporter,org.mozilla.javascript.ErrorReporter,Public,N,N);
Method(setErrorReporter,void,Public,N,N);
Method(getLanguageVersion,int,Public,N,N);
Method(setLanguageVersion,void,Public,N,N);
Method(isGenerateDebugInfo,boolean,Public,N,N);
Method(setGenerateDebugInfo,void,Public,N,N);
Method(isReservedKeywordAsIdentifier,boolean,Public,N,N);
Method(setReservedKeywordAsIdentifier,void,Public,N,N);
Method(isAllowMemberExprAsFunctionName,boolean,Public,N,N);
Method(setAllowMemberExprAsFunctionName,void,Public,N,N);
Method(isXmlAvailable,boolean,Public,N,N);
Method(setXmlAvailable,void,Public,N,N);
Method(getOptimizationLevel,int,Public,N,N);
Method(setOptimizationLevel,void,Public,N,N);
Method(isGeneratingSource,boolean,Public,N,N);
Method(getWarnTrailingComma,boolean,Public,N,N);
Method(setWarnTrailingComma,void,Public,N,N);
Method(isStrictMode,boolean,Public,N,N);
Method(setStrictMode,void,Public,N,N);
Method(reportWarningAsError,boolean,Public,N,N);
Method(setGeneratingSource,void,Public,N,N);
Method(isGenerateObserverCount,boolean,Public,N,N);
Method(setGenerateObserverCount,void,Public,N,N);
Method(isRecordingComments,boolean,Public,N,N);
Method(setRecordingComments,void,Public,N,N);
Method(isRecordingLocalJsDocComments,boolean,Public,N,N);
Method(setRecordingLocalJsDocComments,void,Public,N,N);
Method(setRecoverFromErrors,void,Public,N,N);
Method(recoverFromErrors,boolean,Public,N,N);
Method(setIdeMode,void,Public,N,N);
Method(isIdeMode,boolean,Public,N,N);
Method(getActivationNames,java.util.Set,Public,N,N);
Method(setActivationNames,void,Public,N,N);
Method(setAllowSharpComments,void,Public,N,N);
Method(getAllowSharpComments,boolean,Public,N,N);
Method(ideEnvirons,org.mozilla.javascript.CompilerEnvirons,Public,Y,N);
Parameter(initFromContext,org.mozilla.javascript.Context,);
Parameter(setErrorReporter,org.mozilla.javascript.ErrorReporter,);
Parameter(setLanguageVersion,int,);
Parameter(setGenerateDebugInfo,boolean,);
Parameter(setReservedKeywordAsIdentifier,boolean,);
Parameter(setAllowMemberExprAsFunctionName,boolean,);
Parameter(setXmlAvailable,boolean,);
Parameter(setOptimizationLevel,int,);
Parameter(setWarnTrailingComma,boolean,);
Parameter(setStrictMode,boolean,);
Parameter(setGeneratingSource,boolean,);
Parameter(setGenerateObserverCount,boolean,);
Parameter(setRecordingComments,boolean,);
Parameter(setRecordingLocalJsDocComments,boolean,);
Parameter(setRecoverFromErrors,boolean,);
Parameter(setIdeMode,boolean,);
Parameter(setActivationNames,java.util.Set,java.lang.String);
Parameter(setAllowSharpComments,boolean,);
Composition(org.mozilla.javascript.ErrorReporter);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,initFromContext --> setErrorReporter,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,ideEnvirons --> <init>,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,ideEnvirons --> setRecoverFromErrors,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,ideEnvirons --> setRecordingComments,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,ideEnvirons --> setStrictMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,ideEnvirons --> setWarnTrailingComma,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,ideEnvirons --> setLanguageVersion,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,ideEnvirons --> setReservedKeywordAsIdentifier,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,ideEnvirons --> setIdeMode,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,ideEnvirons --> setErrorReporter,org.mozilla.javascript.CompilerEnvirons,);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> errorReporter,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> languageVersion,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> generateDebugInfo,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> reservedKeywordAsIdentifier,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> allowMemberExprAsFunctionName,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> xmlAvailable,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> optimizationLevel,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> generatingSource,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> strictMode,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> warningAsError,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> generateObserverCount,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> allowSharpComments,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> languageVersion,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> generateDebugInfo,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> reservedKeywordAsIdentifier,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> allowMemberExprAsFunctionName,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> strictMode,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> warningAsError,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> xmlAvailable,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> optimizationLevel,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> generatingSource,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> activationNames,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> generateObserverCount,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,getErrorReporter --> errorReporter,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setErrorReporter --> errorReporter,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,getLanguageVersion --> languageVersion,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setLanguageVersion --> languageVersion,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,isGenerateDebugInfo --> generateDebugInfo,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setGenerateDebugInfo --> generateDebugInfo,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,isReservedKeywordAsIdentifier --> reservedKeywordAsIdentifier,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setReservedKeywordAsIdentifier --> reservedKeywordAsIdentifier,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,isAllowMemberExprAsFunctionName --> allowMemberExprAsFunctionName,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setAllowMemberExprAsFunctionName --> allowMemberExprAsFunctionName,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,isXmlAvailable --> xmlAvailable,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setXmlAvailable --> xmlAvailable,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,getOptimizationLevel --> optimizationLevel,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setOptimizationLevel --> optimizationLevel,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,isGeneratingSource --> generatingSource,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,getWarnTrailingComma --> warnTrailingComma,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setWarnTrailingComma --> warnTrailingComma,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,isStrictMode --> strictMode,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setStrictMode --> strictMode,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,reportWarningAsError --> warningAsError,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setGeneratingSource --> generatingSource,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,isGenerateObserverCount --> generateObserverCount,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setGenerateObserverCount --> generateObserverCount,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,isRecordingComments --> recordingComments,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setRecordingComments --> recordingComments,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,isRecordingLocalJsDocComments --> recordingLocalJsDocComments,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setRecordingLocalJsDocComments --> recordingLocalJsDocComments,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setRecoverFromErrors --> recoverFromErrors,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,recoverFromErrors --> recoverFromErrors,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setIdeMode --> ideMode,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,isIdeMode --> ideMode,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,getActivationNames --> activationNames,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setActivationNames --> activationNames,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,setAllowSharpComments --> allowSharpComments,org.mozilla.javascript.CompilerEnvirons,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,getAllowSharpComments --> allowSharpComments,org.mozilla.javascript.CompilerEnvirons,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,<init> --> instance,org.mozilla.javascript.DefaultErrorReporter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> activationNames,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CompilerEnvirons,initFromContext --> generateObserverCount,org.mozilla.javascript.Context,READ);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,initFromContext --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,initFromContext --> getLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,initFromContext --> isGeneratingDebugChanged,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,initFromContext --> isGeneratingDebug,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,initFromContext --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,initFromContext --> getOptimizationLevel,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,initFromContext --> isGeneratingSource,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,setLanguageVersion --> checkLanguageVersion,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,setOptimizationLevel --> checkOptimizationLevel,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.CompilerEnvirons,ideEnvirons --> <init>,org.mozilla.javascript.ast.ErrorCollector,);
EndClass 100
StartClass 101
Class(org.mozilla.javascript.IRFactory,N,N,Public);
Attribute(LOOP_DO_WHILE,int,Private,Y,Y,);
Attribute(LOOP_WHILE,int,Private,Y,Y,);
Attribute(LOOP_FOR,int,Private,Y,Y,);
Attribute(ALWAYS_TRUE_BOOLEAN,int,Private,Y,Y,);
Attribute(ALWAYS_FALSE_BOOLEAN,int,Private,Y,Y,);
Attribute(decompiler,org.mozilla.javascript.Decompiler,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(transformTree,org.mozilla.javascript.ast.ScriptNode,Public,N,N);
Method(transform,org.mozilla.javascript.Node,Public,N,N);
Method(transformArrayComp,org.mozilla.javascript.Node,Private,N,N);
Method(arrayCompTransformHelper,org.mozilla.javascript.Node,Private,N,N);
Method(transformArrayLiteral,org.mozilla.javascript.Node,Private,N,N);
Method(transformAssignment,org.mozilla.javascript.Node,Private,N,N);
Method(transformBlock,org.mozilla.javascript.Node,Private,N,N);
Method(transformBreak,org.mozilla.javascript.Node,Private,N,N);
Method(transformCondExpr,org.mozilla.javascript.Node,Private,N,N);
Method(transformContinue,org.mozilla.javascript.Node,Private,N,N);
Method(transformDoLoop,org.mozilla.javascript.Node,Private,N,N);
Method(transformElementGet,org.mozilla.javascript.Node,Private,N,N);
Method(transformExprStmt,org.mozilla.javascript.Node,Private,N,N);
Method(transformForInLoop,org.mozilla.javascript.Node,Private,N,N);
Method(transformForLoop,org.mozilla.javascript.Node,Private,N,N);
Method(transformFunction,org.mozilla.javascript.Node,Private,N,N);
Method(transformFunctionCall,org.mozilla.javascript.Node,Private,N,N);
Method(transformGenExpr,org.mozilla.javascript.Node,Private,N,N);
Method(genExprTransformHelper,org.mozilla.javascript.Node,Private,N,N);
Method(transformIf,org.mozilla.javascript.Node,Private,N,N);
Method(transformInfix,org.mozilla.javascript.Node,Private,N,N);
Method(transformLabeledStatement,org.mozilla.javascript.Node,Private,N,N);
Method(transformLetNode,org.mozilla.javascript.Node,Private,N,N);
Method(transformLiteral,org.mozilla.javascript.Node,Private,N,N);
Method(transformName,org.mozilla.javascript.Node,Private,N,N);
Method(transformNewExpr,org.mozilla.javascript.Node,Private,N,N);
Method(transformNumber,org.mozilla.javascript.Node,Private,N,N);
Method(transformObjectLiteral,org.mozilla.javascript.Node,Private,N,N);
Method(getPropKey,java.lang.Object,Private,N,N);
Method(transformParenExpr,org.mozilla.javascript.Node,Private,N,N);
Method(transformPropertyGet,org.mozilla.javascript.Node,Private,N,N);
Method(transformRegExp,org.mozilla.javascript.Node,Private,N,N);
Method(transformReturn,org.mozilla.javascript.Node,Private,N,N);
Method(transformScript,org.mozilla.javascript.Node,Private,N,N);
Method(transformString,org.mozilla.javascript.Node,Private,N,N);
Method(transformSwitch,org.mozilla.javascript.Node,Private,N,N);
Method(transformThrow,org.mozilla.javascript.Node,Private,N,N);
Method(transformTry,org.mozilla.javascript.Node,Private,N,N);
Method(transformUnary,org.mozilla.javascript.Node,Private,N,N);
Method(transformVariables,org.mozilla.javascript.Node,Private,N,N);
Method(transformVariableInitializers,org.mozilla.javascript.Node,Private,N,N);
Method(transformWhileLoop,org.mozilla.javascript.Node,Private,N,N);
Method(transformWith,org.mozilla.javascript.Node,Private,N,N);
Method(transformYield,org.mozilla.javascript.Node,Private,N,N);
Method(transformXmlLiteral,org.mozilla.javascript.Node,Private,N,N);
Method(transformXmlMemberGet,org.mozilla.javascript.Node,Private,N,N);
Method(transformXmlRef,org.mozilla.javascript.Node,Private,N,N);
Method(transformXmlRef$2,org.mozilla.javascript.Node,Private,N,N);
Method(transformDefaultXmlNamepace,org.mozilla.javascript.Node,Private,N,N);
Method(addSwitchCase,void,Private,N,N);
Method(closeSwitch,void,Private,N,N);
Method(createExprStatementNoReturn,org.mozilla.javascript.Node,Private,N,N);
Method(createString,org.mozilla.javascript.Node,Private,N,N);
Method(createCatch,org.mozilla.javascript.Node,Private,N,N);
Method(initFunction,org.mozilla.javascript.Node,Private,N,N);
Method(createLoopNode,org.mozilla.javascript.ast.Scope,Private,N,N);
Method(createFor,org.mozilla.javascript.Node,Private,N,N);
Method(createLoop,org.mozilla.javascript.Node,Private,N,N);
Method(createForIn,org.mozilla.javascript.Node,Private,N,N);
Method(createTryCatchFinally,org.mozilla.javascript.Node,Private,N,N);
Method(createWith,org.mozilla.javascript.Node,Private,N,N);
Method(createIf,org.mozilla.javascript.Node,Private,N,N);
Method(createCondExpr,org.mozilla.javascript.Node,Private,N,N);
Method(createUnary,org.mozilla.javascript.Node,Private,N,N);
Method(createCallOrNew,org.mozilla.javascript.Node,Private,N,N);
Method(createIncDec,org.mozilla.javascript.Node,Private,N,N);
Method(createPropertyGet,org.mozilla.javascript.Node,Private,N,N);
Method(createElementGet,org.mozilla.javascript.Node,Private,N,N);
Method(createMemberRefGet,org.mozilla.javascript.Node,Private,N,N);
Method(createBinary,org.mozilla.javascript.Node,Private,N,N);
Method(createAssignment,org.mozilla.javascript.Node,Private,N,N);
Method(createUseLocal,org.mozilla.javascript.Node,Private,N,N);
Method(makeJump,org.mozilla.javascript.ast.Jump,Private,N,N);
Method(makeReference,org.mozilla.javascript.Node,Private,N,N);
Method(isAlwaysDefinedBoolean,int,Private,Y,N);
Method(isDestructuring,boolean,Public,N,N);
Method(decompileFunctionHeader,org.mozilla.javascript.Node,Public,N,N);
Method(decompile,void,Public,N,N);
Method(decompileArrayLiteral,void,Public,N,N);
Method(decompileObjectLiteral,void,Public,N,N);
Method(decompilePropertyGet,void,Public,N,N);
Method(decompileElementGet,void,Public,N,N);
Parameter(<init>$2,org.mozilla.javascript.CompilerEnvirons,);
Parameter(<init>$3,org.mozilla.javascript.CompilerEnvirons,);
Parameter(<init>$3,org.mozilla.javascript.ErrorReporter,);
Parameter(transformTree,org.mozilla.javascript.ast.AstRoot,);
Parameter(transform,org.mozilla.javascript.ast.AstNode,);
Parameter(transformArrayComp,org.mozilla.javascript.ast.ArrayComprehension,);
Parameter(arrayCompTransformHelper,org.mozilla.javascript.ast.ArrayComprehension,);
Parameter(arrayCompTransformHelper,java.lang.String,);
Parameter(transformArrayLiteral,org.mozilla.javascript.ast.ArrayLiteral,);
Parameter(transformAssignment,org.mozilla.javascript.ast.Assignment,);
Parameter(transformBlock,org.mozilla.javascript.ast.AstNode,);
Parameter(transformBreak,org.mozilla.javascript.ast.BreakStatement,);
Parameter(transformCondExpr,org.mozilla.javascript.ast.ConditionalExpression,);
Parameter(transformContinue,org.mozilla.javascript.ast.ContinueStatement,);
Parameter(transformDoLoop,org.mozilla.javascript.ast.DoLoop,);
Parameter(transformElementGet,org.mozilla.javascript.ast.ElementGet,);
Parameter(transformExprStmt,org.mozilla.javascript.ast.ExpressionStatement,);
Parameter(transformForInLoop,org.mozilla.javascript.ast.ForInLoop,);
Parameter(transformForLoop,org.mozilla.javascript.ast.ForLoop,);
Parameter(transformFunction,org.mozilla.javascript.ast.FunctionNode,);
Parameter(transformFunctionCall,org.mozilla.javascript.ast.FunctionCall,);
Parameter(transformGenExpr,org.mozilla.javascript.ast.GeneratorExpression,);
Parameter(genExprTransformHelper,org.mozilla.javascript.ast.GeneratorExpression,);
Parameter(transformIf,org.mozilla.javascript.ast.IfStatement,);
Parameter(transformInfix,org.mozilla.javascript.ast.InfixExpression,);
Parameter(transformLabeledStatement,org.mozilla.javascript.ast.LabeledStatement,);
Parameter(transformLetNode,org.mozilla.javascript.ast.LetNode,);
Parameter(transformLiteral,org.mozilla.javascript.ast.AstNode,);
Parameter(transformName,org.mozilla.javascript.ast.Name,);
Parameter(transformNewExpr,org.mozilla.javascript.ast.NewExpression,);
Parameter(transformNumber,org.mozilla.javascript.ast.NumberLiteral,);
Parameter(transformObjectLiteral,org.mozilla.javascript.ast.ObjectLiteral,);
Parameter(getPropKey,org.mozilla.javascript.Node,);
Parameter(transformParenExpr,org.mozilla.javascript.ast.ParenthesizedExpression,);
Parameter(transformPropertyGet,org.mozilla.javascript.ast.PropertyGet,);
Parameter(transformRegExp,org.mozilla.javascript.ast.RegExpLiteral,);
Parameter(transformReturn,org.mozilla.javascript.ast.ReturnStatement,);
Parameter(transformScript,org.mozilla.javascript.ast.ScriptNode,);
Parameter(transformString,org.mozilla.javascript.ast.StringLiteral,);
Parameter(transformSwitch,org.mozilla.javascript.ast.SwitchStatement,);
Parameter(transformThrow,org.mozilla.javascript.ast.ThrowStatement,);
Parameter(transformTry,org.mozilla.javascript.ast.TryStatement,);
Parameter(transformUnary,org.mozilla.javascript.ast.UnaryExpression,);
Parameter(transformVariables,org.mozilla.javascript.ast.VariableDeclaration,);
Parameter(transformVariableInitializers,org.mozilla.javascript.ast.VariableDeclaration,);
Parameter(transformWhileLoop,org.mozilla.javascript.ast.WhileLoop,);
Parameter(transformWith,org.mozilla.javascript.ast.WithStatement,);
Parameter(transformYield,org.mozilla.javascript.ast.Yield,);
Parameter(transformXmlLiteral,org.mozilla.javascript.ast.XmlLiteral,);
Parameter(transformXmlMemberGet,org.mozilla.javascript.ast.XmlMemberGet,);
Parameter(transformXmlRef,org.mozilla.javascript.ast.XmlRef,);
Parameter(transformXmlRef$2,org.mozilla.javascript.Node,);
Parameter(transformXmlRef$2,org.mozilla.javascript.ast.XmlRef,);
Parameter(transformXmlRef$2,int,);
Parameter(transformDefaultXmlNamepace,org.mozilla.javascript.ast.UnaryExpression,);
Parameter(addSwitchCase,org.mozilla.javascript.Node,);
Parameter(addSwitchCase,org.mozilla.javascript.Node,);
Parameter(addSwitchCase,org.mozilla.javascript.Node,);
Parameter(closeSwitch,org.mozilla.javascript.Node,);
Parameter(createExprStatementNoReturn,org.mozilla.javascript.Node,);
Parameter(createExprStatementNoReturn,int,);
Parameter(createString,java.lang.String,);
Parameter(createCatch,java.lang.String,);
Parameter(createCatch,org.mozilla.javascript.Node,);
Parameter(createCatch,org.mozilla.javascript.Node,);
Parameter(createCatch,int,);
Parameter(initFunction,org.mozilla.javascript.ast.FunctionNode,);
Parameter(initFunction,int,);
Parameter(initFunction,org.mozilla.javascript.Node,);
Parameter(initFunction,int,);
Parameter(createLoopNode,org.mozilla.javascript.Node,);
Parameter(createLoopNode,int,);
Parameter(createFor,org.mozilla.javascript.ast.Scope,);
Parameter(createFor,org.mozilla.javascript.Node,);
Parameter(createFor,org.mozilla.javascript.Node,);
Parameter(createFor,org.mozilla.javascript.Node,);
Parameter(createFor,org.mozilla.javascript.Node,);
Parameter(createLoop,org.mozilla.javascript.ast.Jump,);
Parameter(createLoop,int,);
Parameter(createLoop,org.mozilla.javascript.Node,);
Parameter(createLoop,org.mozilla.javascript.Node,);
Parameter(createLoop,org.mozilla.javascript.Node,);
Parameter(createLoop,org.mozilla.javascript.Node,);
Parameter(createForIn,int,);
Parameter(createForIn,org.mozilla.javascript.Node,);
Parameter(createForIn,org.mozilla.javascript.Node,);
Parameter(createForIn,org.mozilla.javascript.Node,);
Parameter(createForIn,org.mozilla.javascript.Node,);
Parameter(createForIn,boolean,);
Parameter(createTryCatchFinally,org.mozilla.javascript.Node,);
Parameter(createTryCatchFinally,org.mozilla.javascript.Node,);
Parameter(createTryCatchFinally,org.mozilla.javascript.Node,);
Parameter(createTryCatchFinally,int,);
Parameter(createWith,org.mozilla.javascript.Node,);
Parameter(createWith,org.mozilla.javascript.Node,);
Parameter(createWith,int,);
Parameter(createIf,org.mozilla.javascript.Node,);
Parameter(createIf,org.mozilla.javascript.Node,);
Parameter(createIf,org.mozilla.javascript.Node,);
Parameter(createIf,int,);
Parameter(createCondExpr,org.mozilla.javascript.Node,);
Parameter(createCondExpr,org.mozilla.javascript.Node,);
Parameter(createCondExpr,org.mozilla.javascript.Node,);
Parameter(createUnary,int,);
Parameter(createUnary,org.mozilla.javascript.Node,);
Parameter(createCallOrNew,int,);
Parameter(createCallOrNew,org.mozilla.javascript.Node,);
Parameter(createIncDec,int,);
Parameter(createIncDec,boolean,);
Parameter(createIncDec,org.mozilla.javascript.Node,);
Parameter(createPropertyGet,org.mozilla.javascript.Node,);
Parameter(createPropertyGet,java.lang.String,);
Parameter(createPropertyGet,java.lang.String,);
Parameter(createPropertyGet,int,);
Parameter(createElementGet,org.mozilla.javascript.Node,);
Parameter(createElementGet,java.lang.String,);
Parameter(createElementGet,org.mozilla.javascript.Node,);
Parameter(createElementGet,int,);
Parameter(createMemberRefGet,org.mozilla.javascript.Node,);
Parameter(createMemberRefGet,java.lang.String,);
Parameter(createMemberRefGet,org.mozilla.javascript.Node,);
Parameter(createMemberRefGet,int,);
Parameter(createBinary,int,);
Parameter(createBinary,org.mozilla.javascript.Node,);
Parameter(createBinary,org.mozilla.javascript.Node,);
Parameter(createAssignment,int,);
Parameter(createAssignment,org.mozilla.javascript.Node,);
Parameter(createAssignment,org.mozilla.javascript.Node,);
Parameter(createUseLocal,org.mozilla.javascript.Node,);
Parameter(makeJump,int,);
Parameter(makeJump,org.mozilla.javascript.Node,);
Parameter(makeReference,org.mozilla.javascript.Node,);
Parameter(isAlwaysDefinedBoolean,org.mozilla.javascript.Node,);
Parameter(isDestructuring,org.mozilla.javascript.Node,);
Parameter(decompileFunctionHeader,org.mozilla.javascript.ast.FunctionNode,);
Parameter(decompile,org.mozilla.javascript.ast.AstNode,);
Parameter(decompileArrayLiteral,org.mozilla.javascript.ast.ArrayLiteral,);
Parameter(decompileObjectLiteral,org.mozilla.javascript.ast.ObjectLiteral,);
Parameter(decompilePropertyGet,org.mozilla.javascript.ast.PropertyGet,);
Parameter(decompileElementGet,org.mozilla.javascript.ast.ElementGet,);
SuperClass(org.mozilla.javascript.Parser);
Generalization(org.mozilla.javascript.Parser);
Composition(org.mozilla.javascript.Decompiler);
Call(METHOD,org.mozilla.javascript.IRFactory,<init>$2 --> <init>$3,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTree --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformArrayComp,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformArrayLiteral,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformBlock,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformBreak,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformFunctionCall,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformContinue,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformDoLoop,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformForInLoop,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformForLoop,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformFunction,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformGenExpr,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformElementGet,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformPropertyGet,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformCondExpr,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformIf,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformLiteral,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformName,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformNumber,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformNewExpr,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformObjectLiteral,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformRegExp,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformReturn,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformScript,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformString,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformSwitch,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformThrow,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformTry,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformWhileLoop,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformWith,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformYield,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformExprStmt,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformAssignment,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformUnary,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformXmlMemberGet,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformInfix,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformVariables,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformParenExpr,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformLabeledStatement,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformLetNode,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformXmlRef,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> transformXmlLiteral,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> createCallOrNew,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> createAssignment,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> arrayCompTransformHelper,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> decompile,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> createAssignment,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> createBinary,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> createPropertyGet,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> createCallOrNew,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> createIf,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> createLoopNode,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> createForIn,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayLiteral --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformAssignment --> isDestructuring,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformAssignment --> decompile,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformAssignment --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformAssignment --> createAssignment,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformBlock --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformCondExpr --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformCondExpr --> createCondExpr,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDoLoop --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDoLoop --> createLoop,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformElementGet --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformExprStmt --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> createForIn,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForLoop --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForLoop --> createFor,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> decompileFunctionHeader,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> initFunction,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> createAssignment,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> createExprStatementNoReturn,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunctionCall --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunctionCall --> createCallOrNew,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> decompileFunctionHeader,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> genExprTransformHelper,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> initFunction,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> createAssignment,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> createExprStatementNoReturn,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> createCallOrNew,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> decompile,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> createAssignment,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> createBinary,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> createIf,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> createLoopNode,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> createForIn,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformIf --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformIf --> createIf,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformInfix --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformInfix --> createBinary,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLabeledStatement --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLetNode --> transformVariableInitializers,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLetNode --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNewExpr --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNewExpr --> createCallOrNew,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNewExpr --> transformObjectLiteral,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> getPropKey,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> createUnary,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformParenExpr --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformPropertyGet --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformPropertyGet --> createPropertyGet,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformReturn --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformScript --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> addSwitchCase,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> closeSwitch,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformThrow --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> createCatch,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> createTryCatchFinally,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformUnary --> transformDefaultXmlNamepace,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformUnary --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformUnary --> createIncDec,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformUnary --> createUnary,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariables --> transformVariableInitializers,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariableInitializers --> decompile,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariableInitializers --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWhileLoop --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWhileLoop --> createLoop,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWith --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWith --> createWith,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformYield --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> createString,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> createBinary,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> createUnary,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlMemberGet --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlMemberGet --> transformXmlRef$2,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlRef --> transformXmlRef$2,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlRef$2 --> createPropertyGet,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlRef$2 --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlRef$2 --> createElementGet,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDefaultXmlNamepace --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDefaultXmlNamepace --> createUnary,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,closeSwitch --> makeJump,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createFor --> createLoop,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> makeJump,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> makeReference,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> createLoop,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> makeJump,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> createIf,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> createUseLocal,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> createWith,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIf --> isAlwaysDefinedBoolean,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIf --> makeJump,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createCondExpr --> isAlwaysDefinedBoolean,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> isAlwaysDefinedBoolean,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIncDec --> makeReference,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createPropertyGet --> createMemberRefGet,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createElementGet --> createMemberRefGet,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createBinary --> isAlwaysDefinedBoolean,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> makeReference,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileFunctionHeader --> transform,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileFunctionHeader --> decompile,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> decompileArrayLiteral,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> decompileObjectLiteral,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> decompilePropertyGet,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> decompileElementGet,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileArrayLiteral --> decompile,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileObjectLiteral --> decompile,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompilePropertyGet --> decompile,org.mozilla.javascript.IRFactory,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileElementGet --> decompile,org.mozilla.javascript.IRFactory,);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,<init> --> decompiler,org.mozilla.javascript.IRFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,<init>$3 --> decompiler,org.mozilla.javascript.IRFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformTree --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformTree --> decompiler,org.mozilla.javascript.IRFactory,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformArrayLiteral --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformAssignment --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformBreak --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformCondExpr --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformContinue --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformDoLoop --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformElementGet --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformExprStmt --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformForInLoop --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformForLoop --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformFunction --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformFunctionCall --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformGenExpr --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,genExprTransformHelper --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformIf --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformInfix --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformLabeledStatement --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformLetNode --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformLiteral --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformName --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformNewExpr --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformNumber --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformObjectLiteral --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,getPropKey --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformParenExpr --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformPropertyGet --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformRegExp --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformReturn --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformScript --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformString --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformSwitch --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformThrow --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformTry --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformUnary --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformVariables --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformVariableInitializers --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformWhileLoop --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformWith --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformYield --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformXmlLiteral --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformXmlMemberGet --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformXmlRef$2 --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformDefaultXmlNamepace --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,decompileFunctionHeader --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,decompile --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,decompileArrayLiteral --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,decompileObjectLiteral --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,decompilePropertyGet --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,decompileElementGet --> decompiler,org.mozilla.javascript.IRFactory,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformTree --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformTree --> currentScriptOrFn,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformTree --> inUseStrictDirective,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformArrayComp --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformForLoop --> currentScope,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformForLoop --> currentScope,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformFunction --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformFunction --> nestingOfFunction,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformFunction --> nestingOfFunction,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformGenExpr --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformGenExpr --> lineno,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformGenExpr --> nestingOfFunction,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformGenExpr --> nestingOfFunction,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,genExprTransformHelper --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformLabeledStatement --> target,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformObjectLiteral --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformRegExp --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformScript --> currentScope,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,transformScript --> currentScope,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,addSwitchCase --> target,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,closeSwitch --> target,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,createLoop --> target,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,createTryCatchFinally --> target,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,createIf --> target,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,createBinary --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IRFactory,makeJump --> target,org.mozilla.javascript.ast.Jump,WRITE);
Call(METHOD,org.mozilla.javascript.IRFactory,<init> --> <init>,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,<init> --> <init>,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,<init>$2 --> getErrorReporter,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.IRFactory,<init>$3 --> <init>$3,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,<init>$3 --> <init>,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTree --> isInStrictMode,org.mozilla.javascript.ast.AstRoot,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTree --> getCurrentOffset,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTree --> setEncodedSourceBounds,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTree --> isGeneratingSource,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTree --> getEncodedSource,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTree --> setEncodedSource,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transform --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> createScopeNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> getNextTempName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> defineSymbol$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> <init>$5,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayComp --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> getResult,org.mozilla.javascript.ast.ArrayComprehension,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> getLoops,org.mozilla.javascript.ast.ArrayComprehension,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> isForEach,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> getIterator,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> getNextTempName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> defineSymbol$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> getIteratedObject,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> getFilter,org.mozilla.javascript.ast.ArrayComprehension,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,arrayCompTransformHelper --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayLiteral --> isDestructuring,org.mozilla.javascript.ast.ArrayLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayLiteral --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayLiteral --> getElements,org.mozilla.javascript.ast.ArrayLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayLiteral --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayLiteral --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayLiteral --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayLiteral --> getDestructuringLength,org.mozilla.javascript.ast.ArrayLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayLiteral --> putIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformArrayLiteral --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformAssignment --> getLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformAssignment --> removeParens,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformAssignment --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformAssignment --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformAssignment --> getRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformBlock --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformBlock --> iterator,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformBlock --> removeChildren,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformBlock --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformBlock --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformBreak --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformBreak --> getBreakLabel,org.mozilla.javascript.ast.BreakStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformBreak --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformBreak --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformBreak --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformCondExpr --> getTestExpression,org.mozilla.javascript.ast.ConditionalExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformCondExpr --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformCondExpr --> getTrueExpression,org.mozilla.javascript.ast.ConditionalExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformCondExpr --> getFalseExpression,org.mozilla.javascript.ast.ConditionalExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformContinue --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformContinue --> getLabel,org.mozilla.javascript.ast.ContinueStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformContinue --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformContinue --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformContinue --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDoLoop --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDoLoop --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDoLoop --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDoLoop --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDoLoop --> getBody,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDoLoop --> getCondition,org.mozilla.javascript.ast.DoLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDoLoop --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformElementGet --> getTarget,org.mozilla.javascript.ast.ElementGet,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformElementGet --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformElementGet --> getElement,org.mozilla.javascript.ast.ElementGet,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformElementGet --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformExprStmt --> getExpression,org.mozilla.javascript.ast.ExpressionStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformExprStmt --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformExprStmt --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformExprStmt --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformExprStmt --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> isForEach,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> getIterator,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> getIteratedObject,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> getBody,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForInLoop --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForLoop --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForLoop --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForLoop --> getInitializer,org.mozilla.javascript.ast.ForLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForLoop --> getCondition,org.mozilla.javascript.ast.ForLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForLoop --> getIncrement,org.mozilla.javascript.ast.ForLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForLoop --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformForLoop --> getBody,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> getFunctionType,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> markFunctionStart,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> addFunction,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> <init>,org.mozilla.javascript.Parser$PerFunctionVariables,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> getProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> removeProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> getBody,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> isExpressionClosure,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> markFunctionEnd,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> setEncodedSourceBounds,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> addChildToFront,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunction --> restore,org.mozilla.javascript.Parser$PerFunctionVariables,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunctionCall --> getTarget,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunctionCall --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunctionCall --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunctionCall --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunctionCall --> getArguments,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformFunctionCall --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> <init>,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> getNextTempName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> setSourceName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> setIsGenerator,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> setFunctionType,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> setRequiresActivation,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> getFunctionType,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> markFunctionStart,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> addFunction,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> <init>,org.mozilla.javascript.Parser$PerFunctionVariables,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> getProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> removeProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> isExpressionClosure,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> markFunctionEnd,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> setEncodedSourceBounds,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> addChildToFront,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> restore,org.mozilla.javascript.Parser$PerFunctionVariables,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformGenExpr --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> getResult,org.mozilla.javascript.ast.GeneratorExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> getLoops,org.mozilla.javascript.ast.GeneratorExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> getIterator,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> getNextTempName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> defineSymbol$2,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> getIteratedObject,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> getFilter,org.mozilla.javascript.ast.GeneratorExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> isForEach,org.mozilla.javascript.ast.GeneratorExpressionLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,genExprTransformHelper --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformIf --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformIf --> getCondition,org.mozilla.javascript.ast.IfStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformIf --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformIf --> getThenPart,org.mozilla.javascript.ast.IfStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformIf --> getElsePart,org.mozilla.javascript.ast.IfStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformIf --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformInfix --> getLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformInfix --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformInfix --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformInfix --> getRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLabeledStatement --> getFirstLabel,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLabeledStatement --> getLabels,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLabeledStatement --> getName,org.mozilla.javascript.ast.Label,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLabeledStatement --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLabeledStatement --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLabeledStatement --> getStatement,org.mozilla.javascript.ast.LabeledStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLabeledStatement --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLabeledStatement --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLabeledStatement --> newTarget,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLabeledStatement --> <init>$4,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLetNode --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLetNode --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLetNode --> getVariables,org.mozilla.javascript.ast.LetNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLetNode --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLetNode --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLetNode --> getBody,org.mozilla.javascript.ast.LetNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLetNode --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLetNode --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLetNode --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLiteral --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformLiteral --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformName --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformName --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNewExpr --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNewExpr --> getTarget,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNewExpr --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNewExpr --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNewExpr --> getArguments,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNewExpr --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNewExpr --> getInitializer,org.mozilla.javascript.ast.NewExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNumber --> getNumber,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformNumber --> addNumber,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> isDestructuring,org.mozilla.javascript.ast.ObjectLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> getElements,org.mozilla.javascript.ast.ObjectLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> isGetter,org.mozilla.javascript.ast.ObjectProperty,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> isSetter,org.mozilla.javascript.ast.ObjectProperty,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> getLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> getRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformObjectLiteral --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,getPropKey --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.IRFactory,getPropKey --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,getPropKey --> getIndexObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.IRFactory,getPropKey --> getValue,org.mozilla.javascript.ast.StringLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,getPropKey --> addString,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,getPropKey --> getNumber,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,getPropKey --> addNumber,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,getPropKey --> getIndexObject$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.IRFactory,getPropKey --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformParenExpr --> getExpression,org.mozilla.javascript.ast.ParenthesizedExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformParenExpr --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformParenExpr --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformPropertyGet --> getTarget,org.mozilla.javascript.ast.PropertyGet,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformPropertyGet --> getProperty,org.mozilla.javascript.ast.PropertyGet,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformPropertyGet --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformPropertyGet --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformPropertyGet --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformRegExp --> getValue,org.mozilla.javascript.ast.RegExpLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformRegExp --> getFlags,org.mozilla.javascript.ast.RegExpLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformRegExp --> addRegexp,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformRegExp --> addRegExp,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformReturn --> getProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformReturn --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformReturn --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformReturn --> getReturnValue,org.mozilla.javascript.ast.ReturnStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformReturn --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformReturn --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformReturn --> <init>$5,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformReturn --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformScript --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformScript --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformScript --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformScript --> iterator,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformScript --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformScript --> removeChildren,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformScript --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformScript --> addChildrenToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformString --> getValue,org.mozilla.javascript.ast.StringLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformString --> addString,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformString --> newString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> getExpression,org.mozilla.javascript.ast.SwitchStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> getCases,org.mozilla.javascript.ast.SwitchStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> getExpression,org.mozilla.javascript.ast.SwitchCase,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> getStatements,org.mozilla.javascript.ast.SwitchCase,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformSwitch --> <init>,org.mozilla.javascript.ast.Block,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformThrow --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformThrow --> getExpression,org.mozilla.javascript.ast.ThrowStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformThrow --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformThrow --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformThrow --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> getTryBlock,org.mozilla.javascript.ast.TryStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> <init>,org.mozilla.javascript.ast.Block,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> getCatchClauses,org.mozilla.javascript.ast.TryStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> getVarName,org.mozilla.javascript.ast.CatchClause,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> getCatchCondition,org.mozilla.javascript.ast.CatchClause,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> <init>,org.mozilla.javascript.ast.EmptyExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> getBody,org.mozilla.javascript.ast.CatchClause,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformTry --> getFinallyBlock,org.mozilla.javascript.ast.TryStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformUnary --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformUnary --> isPrefix,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformUnary --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformUnary --> getOperand,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformUnary --> isPostfix,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariables --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariables --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariables --> getParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariables --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariableInitializers --> getVariables,org.mozilla.javascript.ast.VariableDeclaration,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariableInitializers --> getTarget,org.mozilla.javascript.ast.VariableInitializer,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariableInitializers --> getInitializer,org.mozilla.javascript.ast.VariableInitializer,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariableInitializers --> isDestructuring,org.mozilla.javascript.ast.VariableInitializer,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariableInitializers --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariableInitializers --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariableInitializers --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformVariableInitializers --> createDestructuringAssignment,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWhileLoop --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWhileLoop --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWhileLoop --> pushScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWhileLoop --> getCondition,org.mozilla.javascript.ast.WhileLoop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWhileLoop --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWhileLoop --> getBody,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWhileLoop --> popScope,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWith --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWith --> getExpression,org.mozilla.javascript.ast.WithStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWith --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWith --> getStatement,org.mozilla.javascript.ast.WithStatement,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformWith --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformYield --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformYield --> getValue,org.mozilla.javascript.ast.Yield,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformYield --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformYield --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformYield --> <init>$5,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> <init>$5,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> getFragments,org.mozilla.javascript.ast.XmlLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> getXml,org.mozilla.javascript.ast.XmlString,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> isXmlAttribute,org.mozilla.javascript.ast.XmlExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlLiteral --> getExpression,org.mozilla.javascript.ast.XmlExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlMemberGet --> getMemberRef,org.mozilla.javascript.ast.XmlMemberGet,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlMemberGet --> getLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlMemberGet --> isAttributeAccess,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlMemberGet --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlMemberGet --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlRef --> isAttributeAccess,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlRef$2 --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlRef$2 --> getNamespace,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlRef$2 --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlRef$2 --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlRef$2 --> getPropName,org.mozilla.javascript.ast.XmlPropRef,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformXmlRef$2 --> getExpression,org.mozilla.javascript.ast.XmlElemRef,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDefaultXmlNamepace --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDefaultXmlNamepace --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,transformDefaultXmlNamepace --> getOperand,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,addSwitchCase --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,addSwitchCase --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.IRFactory,addSwitchCase --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,addSwitchCase --> newTarget,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,addSwitchCase --> <init>$4,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.IRFactory,addSwitchCase --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,addSwitchCase --> setDefault,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.IRFactory,closeSwitch --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,closeSwitch --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.IRFactory,closeSwitch --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,closeSwitch --> newTarget,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,closeSwitch --> getDefault,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.IRFactory,closeSwitch --> addChildAfter,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,closeSwitch --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createExprStatementNoReturn --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createString --> newString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createCatch --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createCatch --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createCatch --> <init>$8,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> setFunctionType,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> getFunctionCount,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> setRequiresActivation,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> getFunctionName,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> length,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> getSymbol,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> <init>$2,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> putSymbol,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> newString$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> addChildrenToFront,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> getLastChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> getName,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,initFunction --> putIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoopNode --> createScopeNode,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoopNode --> setLoop,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.IRFactory,createFor --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createFor --> splitScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.IRFactory,createFor --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createFor --> addChildrenToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createFor --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createFor --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> newTarget,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> <init>$4,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> addChildrenToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> <init>$5,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> addChildToFront,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> addChildAfter,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createLoop --> setContinue,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> getLastChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> getDestructuringLength,org.mozilla.javascript.ast.ArrayLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> newString$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> createDestructuringAssignment,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> simpleAssignment,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createForIn --> addChildToFront,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> hasChildren,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> <init>$5,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> newTarget,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> getLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> getNext,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> removeChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> putIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> setFinally,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.IRFactory,createTryCatchFinally --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createWith --> setRequiresActivation,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createWith --> <init>$5,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createWith --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createWith --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createWith --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createWith --> addChildrenToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createWith --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIf --> <init>$5,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIf --> newTarget,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIf --> <init>$4,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIf --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIf --> addChildrenToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createCondExpr --> <init>$4,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> newString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> getLastChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> removeChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> getDouble,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> toInt32$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUnary --> setDouble,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createCallOrNew --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createCallOrNew --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createCallOrNew --> getLastChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createCallOrNew --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createCallOrNew --> setRequiresActivation,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createCallOrNew --> putIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIncDec --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIncDec --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIncDec --> putIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createIncDec --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.IRFactory,createPropertyGet --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createPropertyGet --> checkActivationName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createPropertyGet --> isSpecialProperty,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.IRFactory,createPropertyGet --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createPropertyGet --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createPropertyGet --> newString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createPropertyGet --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createElementGet --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.IRFactory,createElementGet --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createMemberRefGet --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createMemberRefGet --> createName,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createMemberRefGet --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createMemberRefGet --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createMemberRefGet --> <init>$4,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createMemberRefGet --> putIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createBinary --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createBinary --> getDouble,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createBinary --> numberToString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.IRFactory,createBinary --> setString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createBinary --> setDouble,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createBinary --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createBinary --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> createDestructuringAssignment,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> simpleAssignment,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> newString$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> getLastChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> <init>$4,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createAssignment --> checkMutableReference,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUseLocal --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUseLocal --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUseLocal --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,createUseLocal --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,makeJump --> <init>$2,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.IRFactory,makeReference --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,makeReference --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,makeReference --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,isAlwaysDefinedBoolean --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,isAlwaysDefinedBoolean --> getDouble,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,isDestructuring --> isDestructuring,org.mozilla.javascript.ast.DestructuringForm,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileFunctionHeader --> getFunctionName,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileFunctionHeader --> getName,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileFunctionHeader --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileFunctionHeader --> getMemberExprNode,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileFunctionHeader --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileFunctionHeader --> getParams,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileFunctionHeader --> isExpressionClosure,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileFunctionHeader --> addEOL,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> getValue,org.mozilla.javascript.ast.StringLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> addString,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> addName,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> getNumber,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> addNumber,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> typeToName,org.mozilla.javascript.Token,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompile --> codeBug$2,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileArrayLiteral --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileArrayLiteral --> getElements,org.mozilla.javascript.ast.ArrayLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileObjectLiteral --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileObjectLiteral --> getElements,org.mozilla.javascript.ast.ObjectLiteral,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileObjectLiteral --> getProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileObjectLiteral --> getLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileObjectLiteral --> getRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompilePropertyGet --> getTarget,org.mozilla.javascript.ast.PropertyGet,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompilePropertyGet --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompilePropertyGet --> getProperty,org.mozilla.javascript.ast.PropertyGet,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileElementGet --> getTarget,org.mozilla.javascript.ast.ElementGet,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileElementGet --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.IRFactory,decompileElementGet --> getElement,org.mozilla.javascript.ast.ElementGet,);
EndClass 101
StartClass 102
Class(org.mozilla.javascript.ast.AstRoot,N,N,Public);
Attribute(comments,java.util.SortedSet,Private,N,N,org.mozilla.javascript.ast.Comment);
Attribute(inStrictMode,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getComments,java.util.SortedSet,Public,N,N);
Method(setComments,void,Public,N,N);
Method(addComment,void,Public,N,N);
Method(setInStrictMode,void,Public,N,N);
Method(isInStrictMode,boolean,Public,N,N);
Method(visitComments,void,Public,N,N);
Method(visitAll,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(debugPrint,java.lang.String,Public,N,N);
Method(checkParentLinks,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(setComments,java.util.SortedSet,org.mozilla.javascript.ast.Comment);
Parameter(addComment,org.mozilla.javascript.ast.Comment,);
Parameter(setInStrictMode,boolean,);
Parameter(visitComments,org.mozilla.javascript.ast.NodeVisitor,);
Parameter(visitAll,org.mozilla.javascript.ast.NodeVisitor,);
Parameter(toSource,int,);
SuperClass(org.mozilla.javascript.ast.ScriptNode);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.ScriptNode);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,setComments --> addComment,org.mozilla.javascript.ast.AstRoot,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,visitAll --> visitComments,org.mozilla.javascript.ast.AstRoot,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,debugPrint --> visitAll,org.mozilla.javascript.ast.AstRoot,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstRoot,getComments --> comments,org.mozilla.javascript.ast.AstRoot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstRoot,setComments --> comments,org.mozilla.javascript.ast.AstRoot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstRoot,setComments --> comments,org.mozilla.javascript.ast.AstRoot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstRoot,addComment --> comments,org.mozilla.javascript.ast.AstRoot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstRoot,addComment --> comments,org.mozilla.javascript.ast.AstRoot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstRoot,setInStrictMode --> inStrictMode,org.mozilla.javascript.ast.AstRoot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstRoot,isInStrictMode --> inStrictMode,org.mozilla.javascript.ast.AstRoot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstRoot,visitComments --> comments,org.mozilla.javascript.ast.AstRoot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstRoot,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstRoot,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,<init> --> <init>,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,<init>$2 --> <init>$2,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,addComment --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,addComment --> <init>,org.mozilla.javascript.ast.AstNode$PositionComparator,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,addComment --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,visitComments --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,visitAll --> visit,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,toSource --> iterator,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,debugPrint --> <init>,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,debugPrint --> toString,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,checkParentLinks --> <init>,org.mozilla.javascript.ast.AstRoot$1,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot,checkParentLinks --> visit,org.mozilla.javascript.ast.ScriptNode,);
EndClass 102
StartClass 103
Class(org.mozilla.javascript.SecurityController$1,N,N,NA);
Attribute(val$callable,org.mozilla.javascript.Callable,Public,N,Y,);
Attribute(val$thisObj,org.mozilla.javascript.Scriptable,Public,N,Y,);
Attribute(val$args,java.lang.Object[],Public,N,Y,);
Attribute(this$0,org.mozilla.javascript.SecurityController,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(exec,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.SecurityController,);
Parameter(<init>,org.mozilla.javascript.Callable,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,java.lang.Object[],);
Parameter(exec,org.mozilla.javascript.Context,);
Parameter(exec,org.mozilla.javascript.Scriptable,);
Realization(org.mozilla.javascript.Script);
Composition(org.mozilla.javascript.Callable);
Composition(org.mozilla.javascript.Scriptable);
Composition(org.mozilla.javascript.SecurityController);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityController$1,<init> --> this$0,org.mozilla.javascript.SecurityController$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityController$1,<init> --> val$callable,org.mozilla.javascript.SecurityController$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityController$1,<init> --> val$thisObj,org.mozilla.javascript.SecurityController$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityController$1,<init> --> val$args,org.mozilla.javascript.SecurityController$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityController$1,exec --> val$callable,org.mozilla.javascript.SecurityController$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityController$1,exec --> val$thisObj,org.mozilla.javascript.SecurityController$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityController$1,exec --> val$args,org.mozilla.javascript.SecurityController$1,READ);
Call(METHOD,org.mozilla.javascript.SecurityController$1,exec --> call,org.mozilla.javascript.Callable,);
EndClass 103
StartClass 104
Class(org.mozilla.javascript.ScriptRuntime$MessageProvider,Y,Y,Public);
Method(getMessage,java.lang.String,Public,N,Y);
Parameter(getMessage,java.lang.String,);
Parameter(getMessage,java.lang.Object[],);
EndClass 104
StartClass 105
Class(org.mozilla.javascript.Ref,N,Y,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(has,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,Y);
Method(set,java.lang.Object,Public,N,Y);
Method(delete,boolean,Public,N,N);
Parameter(has,org.mozilla.javascript.Context,);
Parameter(get,org.mozilla.javascript.Context,);
Parameter(set,org.mozilla.javascript.Context,);
Parameter(set,java.lang.Object,);
Parameter(delete,org.mozilla.javascript.Context,);
SubClass(org.mozilla.javascript.SpecialRef);
EndClass 105
StartClass 106
Class(org.mozilla.javascript.ScriptRuntime$IdEnumeration,N,N,NA);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(obj,org.mozilla.javascript.Scriptable,Public,N,N,);
Attribute(ids,java.lang.Object[],Public,N,N,);
Attribute(index,int,Public,N,N,);
Attribute(used,org.mozilla.javascript.ObjToIntMap,Public,N,N,);
Attribute(currentId,java.lang.Object,Public,N,N,);
Attribute(enumType,int,Public,N,N,);
Attribute(enumNumbers,boolean,Public,N,N,);
Attribute(iterator,org.mozilla.javascript.Scriptable,Public,N,N,);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>$2,org.mozilla.javascript.ScriptRuntime$1,);
Composition(org.mozilla.javascript.Scriptable);
Composition(org.mozilla.javascript.ObjToIntMap);
Call(METHOD,org.mozilla.javascript.ScriptRuntime$IdEnumeration,<init>$2 --> <init>,org.mozilla.javascript.ScriptRuntime$IdEnumeration,);
EndClass 106
StartClass 107
Class(org.mozilla.javascript.NativeBoolean,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(BOOLEAN_TAG,java.lang.Object,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(Id_toString,int,Private,Y,Y,);
Attribute(Id_toSource,int,Private,Y,Y,);
Attribute(Id_valueOf,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Attribute(booleanValue,boolean,Private,N,N,);
Method(init,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(getDefaultValue,java.lang.Object,Public,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(<init>,boolean,);
Parameter(getDefaultValue,java.lang.Class,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Call(METHOD,org.mozilla.javascript.NativeBoolean,init --> <init>,org.mozilla.javascript.NativeBoolean,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,execIdCall --> <init>,org.mozilla.javascript.NativeBoolean,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeBoolean,<init> --> booleanValue,org.mozilla.javascript.NativeBoolean,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeBoolean,getDefaultValue --> booleanValue,org.mozilla.javascript.NativeBoolean,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeBoolean,initPrototypeId --> BOOLEAN_TAG,org.mozilla.javascript.NativeBoolean,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeBoolean,execIdCall --> BOOLEAN_TAG,org.mozilla.javascript.NativeBoolean,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeBoolean,execIdCall --> booleanValue,org.mozilla.javascript.NativeBoolean,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeBoolean,<clinit> --> BOOLEAN_TAG,org.mozilla.javascript.NativeBoolean,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeBoolean,getDefaultValue --> BooleanClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(METHOD,org.mozilla.javascript.NativeBoolean,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,getDefaultValue --> wrapBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,getDefaultValue --> getDefaultValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,execIdCall --> avoidObjectDetection,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,execIdCall --> toBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,execIdCall --> wrapBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeBoolean,execIdCall --> incompatibleCallError,org.mozilla.javascript.IdScriptableObject,);
EndClass 107
StartClass 108
Class(org.mozilla.javascript.NativeDate,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(DATE_TAG,java.lang.Object,Private,Y,Y,);
Attribute(js_NaN_date_str,java.lang.String,Private,Y,Y,);
Attribute(isoFormat,java.text.DateFormat,Private,Y,Y,);
Attribute(HalfTimeDomain,double,Private,Y,Y,);
Attribute(HoursPerDay,double,Private,Y,Y,);
Attribute(MinutesPerHour,double,Private,Y,Y,);
Attribute(SecondsPerMinute,double,Private,Y,Y,);
Attribute(msPerSecond,double,Private,Y,Y,);
Attribute(MinutesPerDay,double,Private,Y,Y,);
Attribute(SecondsPerDay,double,Private,Y,Y,);
Attribute(SecondsPerHour,double,Private,Y,Y,);
Attribute(msPerDay,double,Private,Y,Y,);
Attribute(msPerHour,double,Private,Y,Y,);
Attribute(msPerMinute,double,Private,Y,Y,);
Attribute(MAXARGS,int,Private,Y,Y,);
Attribute(ConstructorId_now,int,Private,Y,Y,);
Attribute(ConstructorId_parse,int,Private,Y,Y,);
Attribute(ConstructorId_UTC,int,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(Id_toString,int,Private,Y,Y,);
Attribute(Id_toTimeString,int,Private,Y,Y,);
Attribute(Id_toDateString,int,Private,Y,Y,);
Attribute(Id_toLocaleString,int,Private,Y,Y,);
Attribute(Id_toLocaleTimeString,int,Private,Y,Y,);
Attribute(Id_toLocaleDateString,int,Private,Y,Y,);
Attribute(Id_toUTCString,int,Private,Y,Y,);
Attribute(Id_toSource,int,Private,Y,Y,);
Attribute(Id_valueOf,int,Private,Y,Y,);
Attribute(Id_getTime,int,Private,Y,Y,);
Attribute(Id_getYear,int,Private,Y,Y,);
Attribute(Id_getFullYear,int,Private,Y,Y,);
Attribute(Id_getUTCFullYear,int,Private,Y,Y,);
Attribute(Id_getMonth,int,Private,Y,Y,);
Attribute(Id_getUTCMonth,int,Private,Y,Y,);
Attribute(Id_getDate,int,Private,Y,Y,);
Attribute(Id_getUTCDate,int,Private,Y,Y,);
Attribute(Id_getDay,int,Private,Y,Y,);
Attribute(Id_getUTCDay,int,Private,Y,Y,);
Attribute(Id_getHours,int,Private,Y,Y,);
Attribute(Id_getUTCHours,int,Private,Y,Y,);
Attribute(Id_getMinutes,int,Private,Y,Y,);
Attribute(Id_getUTCMinutes,int,Private,Y,Y,);
Attribute(Id_getSeconds,int,Private,Y,Y,);
Attribute(Id_getUTCSeconds,int,Private,Y,Y,);
Attribute(Id_getMilliseconds,int,Private,Y,Y,);
Attribute(Id_getUTCMilliseconds,int,Private,Y,Y,);
Attribute(Id_getTimezoneOffset,int,Private,Y,Y,);
Attribute(Id_setTime,int,Private,Y,Y,);
Attribute(Id_setMilliseconds,int,Private,Y,Y,);
Attribute(Id_setUTCMilliseconds,int,Private,Y,Y,);
Attribute(Id_setSeconds,int,Private,Y,Y,);
Attribute(Id_setUTCSeconds,int,Private,Y,Y,);
Attribute(Id_setMinutes,int,Private,Y,Y,);
Attribute(Id_setUTCMinutes,int,Private,Y,Y,);
Attribute(Id_setHours,int,Private,Y,Y,);
Attribute(Id_setUTCHours,int,Private,Y,Y,);
Attribute(Id_setDate,int,Private,Y,Y,);
Attribute(Id_setUTCDate,int,Private,Y,Y,);
Attribute(Id_setMonth,int,Private,Y,Y,);
Attribute(Id_setUTCMonth,int,Private,Y,Y,);
Attribute(Id_setFullYear,int,Private,Y,Y,);
Attribute(Id_setUTCFullYear,int,Private,Y,Y,);
Attribute(Id_setYear,int,Private,Y,Y,);
Attribute(Id_toISOString,int,Private,Y,Y,);
Attribute(Id_toJSON,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Attribute(Id_toGMTString,int,Private,Y,Y,);
Attribute(thisTimeZone,java.util.TimeZone,Private,Y,N,);
Attribute(LocalTZA,double,Private,Y,N,);
Attribute(timeZoneFormatter,java.text.DateFormat,Private,Y,N,);
Attribute(localeDateTimeFormatter,java.text.DateFormat,Private,Y,N,);
Attribute(localeDateFormatter,java.text.DateFormat,Private,Y,N,);
Attribute(localeTimeFormatter,java.text.DateFormat,Private,Y,N,);
Attribute(date,double,Private,N,N,);
Method(init,void,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(getDefaultValue,java.lang.Object,Public,N,N);
Method(getJSTimeValue,double,Public,N,N);
Method(fillConstructorProperties,void,Protected,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(toISOString,java.lang.String,Private,N,N);
Method(Day,double,Private,Y,N);
Method(TimeWithinDay,double,Private,Y,N);
Method(IsLeapYear,boolean,Private,Y,N);
Method(DayFromYear,double,Private,Y,N);
Method(TimeFromYear,double,Private,Y,N);
Method(YearFromTime,int,Private,Y,N);
Method(DayFromMonth,double,Private,Y,N);
Method(MonthFromTime,int,Private,Y,N);
Method(DateFromTime,int,Private,Y,N);
Method(WeekDay,int,Private,Y,N);
Method(now,double,Private,Y,N);
Method(DaylightSavingTA,double,Private,Y,N);
Method(EquivalentYear,int,Private,Y,N);
Method(LocalTime,double,Private,Y,N);
Method(internalUTC,double,Private,Y,N);
Method(HourFromTime,int,Private,Y,N);
Method(MinFromTime,int,Private,Y,N);
Method(SecFromTime,int,Private,Y,N);
Method(msFromTime,int,Private,Y,N);
Method(MakeTime,double,Private,Y,N);
Method(MakeDay,double,Private,Y,N);
Method(MakeDate,double,Private,Y,N);
Method(TimeClip,double,Private,Y,N);
Method(date_msecFromDate,double,Private,Y,N);
Method(date_msecFromArgs,double,Private,Y,N);
Method(jsStaticFunction_UTC,double,Private,Y,N);
Method(date_parseString,double,Private,Y,N);
Method(date_format,java.lang.String,Private,Y,N);
Method(jsConstructor,java.lang.Object,Private,Y,N);
Method(toLocale_helper,java.lang.String,Private,Y,N);
Method(js_toUTCString,java.lang.String,Private,Y,N);
Method(append0PaddedUint,void,Private,Y,N);
Method(appendMonthName,void,Private,Y,N);
Method(appendWeekDayName,void,Private,Y,N);
Method(makeTime,double,Private,Y,N);
Method(makeDate,double,Private,Y,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(getDefaultValue,java.lang.Class,);
Parameter(fillConstructorProperties,org.mozilla.javascript.IdFunctionObject,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(Day,double,);
Parameter(TimeWithinDay,double,);
Parameter(IsLeapYear,int,);
Parameter(DayFromYear,double,);
Parameter(TimeFromYear,double,);
Parameter(YearFromTime,double,);
Parameter(DayFromMonth,int,);
Parameter(DayFromMonth,int,);
Parameter(MonthFromTime,double,);
Parameter(DateFromTime,double,);
Parameter(WeekDay,double,);
Parameter(DaylightSavingTA,double,);
Parameter(EquivalentYear,int,);
Parameter(LocalTime,double,);
Parameter(internalUTC,double,);
Parameter(HourFromTime,double,);
Parameter(MinFromTime,double,);
Parameter(SecFromTime,double,);
Parameter(msFromTime,double,);
Parameter(MakeTime,double,);
Parameter(MakeTime,double,);
Parameter(MakeTime,double,);
Parameter(MakeTime,double,);
Parameter(MakeDay,double,);
Parameter(MakeDay,double,);
Parameter(MakeDay,double,);
Parameter(MakeDate,double,);
Parameter(MakeDate,double,);
Parameter(TimeClip,double,);
Parameter(date_msecFromDate,double,);
Parameter(date_msecFromDate,double,);
Parameter(date_msecFromDate,double,);
Parameter(date_msecFromDate,double,);
Parameter(date_msecFromDate,double,);
Parameter(date_msecFromDate,double,);
Parameter(date_msecFromDate,double,);
Parameter(date_msecFromArgs,java.lang.Object[],);
Parameter(jsStaticFunction_UTC,java.lang.Object[],);
Parameter(date_parseString,java.lang.String,);
Parameter(date_format,double,);
Parameter(date_format,int,);
Parameter(jsConstructor,java.lang.Object[],);
Parameter(toLocale_helper,double,);
Parameter(toLocale_helper,int,);
Parameter(js_toUTCString,double,);
Parameter(append0PaddedUint,java.lang.StringBuffer,);
Parameter(append0PaddedUint,int,);
Parameter(append0PaddedUint,int,);
Parameter(appendMonthName,java.lang.StringBuffer,);
Parameter(appendMonthName,int,);
Parameter(appendWeekDayName,java.lang.StringBuffer,);
Parameter(appendWeekDayName,int,);
Parameter(makeTime,double,);
Parameter(makeTime,java.lang.Object[],);
Parameter(makeTime,int,);
Parameter(makeDate,double,);
Parameter(makeDate,java.lang.Object[],);
Parameter(makeDate,int,);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Call(METHOD,org.mozilla.javascript.NativeDate,init --> <init>,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> now,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> date_parseString,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> jsStaticFunction_UTC,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> date_format,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> jsConstructor,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> toISOString,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> toLocale_helper,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> js_toUTCString,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> LocalTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> YearFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> MonthFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> DateFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> WeekDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> HourFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> MinFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> SecFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> msFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> TimeClip,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> makeTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> makeDate,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> MakeDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> TimeWithinDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> MakeDate,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> internalUTC,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,TimeFromYear --> DayFromYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,YearFromTime --> TimeFromYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DayFromMonth --> IsLeapYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,MonthFromTime --> YearFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,MonthFromTime --> Day,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,MonthFromTime --> DayFromYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,MonthFromTime --> IsLeapYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DateFromTime --> YearFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DateFromTime --> Day,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DateFromTime --> DayFromYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DateFromTime --> IsLeapYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,WeekDay --> Day,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DaylightSavingTA --> YearFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DaylightSavingTA --> EquivalentYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DaylightSavingTA --> MonthFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DaylightSavingTA --> DateFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DaylightSavingTA --> MakeDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DaylightSavingTA --> TimeWithinDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,DaylightSavingTA --> MakeDate,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,EquivalentYear --> DayFromYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,EquivalentYear --> IsLeapYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,LocalTime --> DaylightSavingTA,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,internalUTC --> DaylightSavingTA,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,MakeDay --> TimeFromYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,MakeDay --> DayFromMonth,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_msecFromDate --> MakeDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_msecFromDate --> MakeTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_msecFromDate --> MakeDate,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_msecFromArgs --> date_msecFromDate,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,jsStaticFunction_UTC --> date_msecFromArgs,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,jsStaticFunction_UTC --> TimeClip,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_parseString --> date_msecFromDate,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_parseString --> internalUTC,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> LocalTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> WeekDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> appendWeekDayName,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> MonthFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> appendMonthName,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> DateFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> append0PaddedUint,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> YearFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> HourFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> MinFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> SecFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> DaylightSavingTA,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> EquivalentYear,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> MakeDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> TimeWithinDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_format --> MakeDate,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,jsConstructor --> <init>,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,jsConstructor --> now,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,jsConstructor --> date_parseString,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,jsConstructor --> TimeClip,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,jsConstructor --> date_msecFromArgs,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,jsConstructor --> internalUTC,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,js_toUTCString --> WeekDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,js_toUTCString --> appendWeekDayName,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,js_toUTCString --> DateFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,js_toUTCString --> append0PaddedUint,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,js_toUTCString --> MonthFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,js_toUTCString --> appendMonthName,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,js_toUTCString --> YearFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,js_toUTCString --> HourFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,js_toUTCString --> MinFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,js_toUTCString --> SecFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> LocalTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> HourFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> MinFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> SecFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> msFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> MakeTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> Day,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> MakeDate,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> internalUTC,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> TimeClip,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> LocalTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> YearFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> MonthFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> DateFromTime,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> MakeDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> TimeWithinDay,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> MakeDate,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> internalUTC,org.mozilla.javascript.NativeDate,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> TimeClip,org.mozilla.javascript.NativeDate,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,init --> date,org.mozilla.javascript.NativeDate,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,<init> --> thisTimeZone,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,<init> --> thisTimeZone,org.mozilla.javascript.NativeDate,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,<init> --> LocalTZA,org.mozilla.javascript.NativeDate,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,getJSTimeValue --> date,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,fillConstructorProperties --> DATE_TAG,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,initPrototypeId --> DATE_TAG,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,execIdCall --> DATE_TAG,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,execIdCall --> date,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,execIdCall --> date,org.mozilla.javascript.NativeDate,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,toISOString --> date,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,toISOString --> isoFormat,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,DaylightSavingTA --> thisTimeZone,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,LocalTime --> LocalTZA,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,internalUTC --> LocalTZA,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,date_parseString --> isoFormat,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,date_format --> LocalTZA,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,date_format --> timeZoneFormatter,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,date_format --> timeZoneFormatter,org.mozilla.javascript.NativeDate,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,jsConstructor --> date,org.mozilla.javascript.NativeDate,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,toLocale_helper --> localeDateTimeFormatter,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,toLocale_helper --> localeTimeFormatter,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,toLocale_helper --> localeDateFormatter,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,toLocale_helper --> localeDateTimeFormatter,org.mozilla.javascript.NativeDate,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,toLocale_helper --> localeTimeFormatter,org.mozilla.javascript.NativeDate,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,toLocale_helper --> localeDateFormatter,org.mozilla.javascript.NativeDate,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,<clinit> --> isoFormat,org.mozilla.javascript.NativeDate,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,<clinit> --> DATE_TAG,org.mozilla.javascript.NativeDate,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,<clinit> --> isoFormat,org.mozilla.javascript.NativeDate,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,init --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,getDefaultValue --> StringClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,execIdCall --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,execIdCall --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,execIdCall --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,execIdCall --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,TimeClip --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,date_msecFromArgs --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,date_parseString --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,makeTime --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeDate,makeDate --> NaN,org.mozilla.javascript.ScriptRuntime,READ);
Call(METHOD,org.mozilla.javascript.NativeDate,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeDate,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeDate,getDefaultValue --> getDefaultValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeDate,fillConstructorProperties --> addIdFunctionProperty,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeDate,fillConstructorProperties --> fillConstructorProperties,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeDate,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> toString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> toObject$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> toPrimitive$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> typeError2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> typeError3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> isPrimitive,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> incompatibleCallError,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> toString$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeDate,execIdCall --> toNumber$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,toISOString --> getMessage0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,toISOString --> constructError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,MonthFromTime --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeDate,DateFromTime --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeDate,EquivalentYear --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_msecFromArgs --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_msecFromArgs --> toInteger,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,date_parseString --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeDate,jsConstructor --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeDate,jsConstructor --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,append0PaddedUint --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> padArguments,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeTime --> toInteger$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> padArguments,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeDate,makeDate --> toInteger$2,org.mozilla.javascript.ScriptRuntime,);
EndClass 108
StartClass 109
Class(org.mozilla.javascript.ClassCache,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(AKEY,java.lang.Object,Private,Y,Y,);
Attribute(cachingIsEnabled,boolean,Private,N,N,);
Attribute(classTable,java.util.Map,Private,N,N,java.lang.Class<*>;org.mozilla.javascript.JavaMembers);
Attribute(classAdapterCache,java.util.Map,Private,N,N,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature;java.lang.Class<*>);
Attribute(interfaceAdapterCache,java.util.Map,Private,N,N,java.lang.Class<*>;java.lang.Object);
Attribute(generatedClassSerial,int,Private,N,N,);
Attribute(associatedScope,org.mozilla.javascript.Scriptable,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(get,org.mozilla.javascript.ClassCache,Public,Y,N);
Method(associate,boolean,Public,N,N);
Method(clearCaches,void,Public,N,N);
Method(isCachingEnabled,boolean,Public,N,N);
Method(setCachingEnabled,void,Public,N,N);
Method(getClassCacheMap,java.util.Map,Public,N,N);
Method(getInterfaceAdapterCacheMap,java.util.Map,Public,N,N);
Method(isInvokerOptimizationEnabled,boolean,Public,N,N);
Method(setInvokerOptimizationEnabled,void,Public,N,N);
Method(newClassSerialNumber,int,Public,N,N);
Method(getInterfaceAdapter,java.lang.Object,Public,N,N);
Method(cacheInterfaceAdapter,void,Public,N,N);
Method(getAssociatedScope,org.mozilla.javascript.Scriptable,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(associate,org.mozilla.javascript.ScriptableObject,);
Parameter(setCachingEnabled,boolean,);
Parameter(setInvokerOptimizationEnabled,boolean,);
Parameter(getInterfaceAdapter,java.lang.Class,);
Parameter(cacheInterfaceAdapter,java.lang.Class,);
Parameter(cacheInterfaceAdapter,java.lang.Object,);
Composition(org.mozilla.javascript.Scriptable);
Call(METHOD,org.mozilla.javascript.ClassCache,setCachingEnabled --> clearCaches,org.mozilla.javascript.ClassCache,);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,<init> --> cachingIsEnabled,org.mozilla.javascript.ClassCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,get --> AKEY,org.mozilla.javascript.ClassCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,associate --> AKEY,org.mozilla.javascript.ClassCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,associate --> associatedScope,org.mozilla.javascript.ClassCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,clearCaches --> classTable,org.mozilla.javascript.ClassCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,clearCaches --> classAdapterCache,org.mozilla.javascript.ClassCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,clearCaches --> interfaceAdapterCache,org.mozilla.javascript.ClassCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,isCachingEnabled --> cachingIsEnabled,org.mozilla.javascript.ClassCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,setCachingEnabled --> cachingIsEnabled,org.mozilla.javascript.ClassCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,setCachingEnabled --> cachingIsEnabled,org.mozilla.javascript.ClassCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,getClassCacheMap --> classTable,org.mozilla.javascript.ClassCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,getClassCacheMap --> classTable,org.mozilla.javascript.ClassCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,getInterfaceAdapterCacheMap --> classAdapterCache,org.mozilla.javascript.ClassCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,getInterfaceAdapterCacheMap --> classAdapterCache,org.mozilla.javascript.ClassCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,newClassSerialNumber --> generatedClassSerial,org.mozilla.javascript.ClassCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,newClassSerialNumber --> generatedClassSerial,org.mozilla.javascript.ClassCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,getInterfaceAdapter --> interfaceAdapterCache,org.mozilla.javascript.ClassCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,cacheInterfaceAdapter --> cachingIsEnabled,org.mozilla.javascript.ClassCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,cacheInterfaceAdapter --> interfaceAdapterCache,org.mozilla.javascript.ClassCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,cacheInterfaceAdapter --> interfaceAdapterCache,org.mozilla.javascript.ClassCache,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,getAssociatedScope --> associatedScope,org.mozilla.javascript.ClassCache,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ClassCache,<clinit> --> AKEY,org.mozilla.javascript.ClassCache,WRITE);
Call(METHOD,org.mozilla.javascript.ClassCache,get --> getTopScopeValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ClassCache,associate --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ClassCache,associate --> associateValue,org.mozilla.javascript.ScriptableObject,);
EndClass 109
StartClass 110
Class(org.mozilla.javascript.NativeError,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(ERROR_TAG,java.lang.Object,Private,Y,Y,);
Attribute(stackProvider,org.mozilla.javascript.RhinoException,Private,N,N,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(Id_toString,int,Private,Y,Y,);
Attribute(Id_toSource,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(init,void,Public,Y,N);
Method(make,org.mozilla.javascript.NativeError,Public,Y,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(setStackProvider,void,Public,N,N);
Method(getStack,java.lang.Object,Public,N,N);
Method(setStack,void,Public,N,N);
Method(js_toString,java.lang.Object,Private,Y,N);
Method(js_toSource,java.lang.String,Private,Y,N);
Method(getString,java.lang.String,Private,Y,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(make,org.mozilla.javascript.Context,);
Parameter(make,org.mozilla.javascript.Scriptable,);
Parameter(make,org.mozilla.javascript.IdFunctionObject,);
Parameter(make,java.lang.Object[],);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(setStackProvider,org.mozilla.javascript.RhinoException,);
Parameter(setStack,java.lang.Object,);
Parameter(js_toString,org.mozilla.javascript.Scriptable,);
Parameter(js_toSource,org.mozilla.javascript.Context,);
Parameter(js_toSource,org.mozilla.javascript.Scriptable,);
Parameter(js_toSource,org.mozilla.javascript.Scriptable,);
Parameter(getString,org.mozilla.javascript.Scriptable,);
Parameter(getString,java.lang.String,);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Composition(org.mozilla.javascript.RhinoException);
Call(METHOD,org.mozilla.javascript.NativeError,init --> <init>,org.mozilla.javascript.NativeError,);
Call(METHOD,org.mozilla.javascript.NativeError,make --> <init>,org.mozilla.javascript.NativeError,);
Call(METHOD,org.mozilla.javascript.NativeError,toString --> js_toString,org.mozilla.javascript.NativeError,);
Call(METHOD,org.mozilla.javascript.NativeError,execIdCall --> make,org.mozilla.javascript.NativeError,);
Call(METHOD,org.mozilla.javascript.NativeError,execIdCall --> js_toString,org.mozilla.javascript.NativeError,);
Call(METHOD,org.mozilla.javascript.NativeError,execIdCall --> js_toSource,org.mozilla.javascript.NativeError,);
Call(METHOD,org.mozilla.javascript.NativeError,getStack --> setStack,org.mozilla.javascript.NativeError,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,initPrototypeId --> ERROR_TAG,org.mozilla.javascript.NativeError,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,execIdCall --> ERROR_TAG,org.mozilla.javascript.NativeError,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,setStackProvider --> stackProvider,org.mozilla.javascript.NativeError,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,setStackProvider --> stackProvider,org.mozilla.javascript.NativeError,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,getStack --> stackProvider,org.mozilla.javascript.NativeError,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,setStack --> stackProvider,org.mozilla.javascript.NativeError,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,setStack --> stackProvider,org.mozilla.javascript.NativeError,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,<clinit> --> ERROR_TAG,org.mozilla.javascript.NativeError,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,getStack --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,js_toString --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,js_toString --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,js_toSource --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,js_toSource --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeError,getString --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(METHOD,org.mozilla.javascript.NativeError,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,init --> putProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,make --> get,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,make --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,make --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,make --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeError,make --> putProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,make --> toInt32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeError,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeError,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeError,setStackProvider --> defineProperty$4,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,getStack --> getScriptStackTrace,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.NativeError,setStack --> delete,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,setStack --> put,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,js_toString --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,js_toString --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeError,js_toSource --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,js_toSource --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeError,js_toSource --> uneval,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeError,js_toSource --> toInt32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeError,js_toSource --> toString$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeError,getString --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeError,getString --> toString,org.mozilla.javascript.ScriptRuntime,);
EndClass 110
StartClass 111
Class(org.mozilla.javascript.Arguments,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(FTAG,java.lang.String,Private,Y,Y,);
Attribute(Id_callee,int,Private,Y,Y,);
Attribute(Id_length,int,Private,Y,Y,);
Attribute(Id_caller,int,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(MAX_INSTANCE_ID,int,Private,Y,Y,);
Attribute(callerObj,java.lang.Object,Private,N,N,);
Attribute(calleeObj,java.lang.Object,Private,N,N,);
Attribute(lengthObj,java.lang.Object,Private,N,N,);
Attribute(constructor,java.lang.Object,Private,N,N,);
Attribute(activation,org.mozilla.javascript.NativeCall,Private,N,N,);
Attribute(args,java.lang.Object[],Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(arg,java.lang.Object,Private,N,N);
Method(putIntoActivation,void,Private,N,N);
Method(getFromActivation,java.lang.Object,Private,N,N);
Method(replaceArg,void,Private,N,N);
Method(removeArg,void,Private,N,N);
Method(has,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(sharedWithActivation,boolean,Private,N,N);
Method(put,void,Public,N,N);
Method(delete,void,Public,N,N);
Method(getMaxInstanceId,int,Protected,N,N);
Method(findInstanceIdInfo,int,Protected,N,N);
Method(getInstanceIdName,java.lang.String,Protected,N,N);
Method(getInstanceIdValue,java.lang.Object,Protected,N,N);
Method(setInstanceIdValue,void,Protected,N,N);
Method(getIds,java.lang.Object[],Public,N,N);
Method(getOwnPropertyDescriptor,org.mozilla.javascript.ScriptableObject,Protected,N,N);
Method(defineOwnProperty,void,Protected,N,N);
Parameter(<init>,org.mozilla.javascript.NativeCall,);
Parameter(arg,int,);
Parameter(putIntoActivation,int,);
Parameter(putIntoActivation,java.lang.Object,);
Parameter(getFromActivation,int,);
Parameter(replaceArg,int,);
Parameter(replaceArg,java.lang.Object,);
Parameter(removeArg,int,);
Parameter(has,int,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(get,int,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(sharedWithActivation,int,);
Parameter(put,int,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(delete,int,);
Parameter(findInstanceIdInfo,java.lang.String,);
Parameter(getInstanceIdName,int,);
Parameter(getInstanceIdValue,int,);
Parameter(setInstanceIdValue,int,);
Parameter(setInstanceIdValue,java.lang.Object,);
Parameter(getIds,boolean,);
Parameter(getOwnPropertyDescriptor,org.mozilla.javascript.Context,);
Parameter(getOwnPropertyDescriptor,java.lang.Object,);
Parameter(defineOwnProperty,org.mozilla.javascript.Context,);
Parameter(defineOwnProperty,java.lang.Object,);
Parameter(defineOwnProperty,org.mozilla.javascript.ScriptableObject,);
Parameter(defineOwnProperty,boolean,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Composition(org.mozilla.javascript.NativeCall);
Call(METHOD,org.mozilla.javascript.Arguments,replaceArg --> sharedWithActivation,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,replaceArg --> putIntoActivation,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,has --> arg,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,get --> arg,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,get --> sharedWithActivation,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,get --> getFromActivation,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,put --> arg,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,put --> replaceArg,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,delete --> removeArg,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,getOwnPropertyDescriptor --> arg,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,getOwnPropertyDescriptor --> sharedWithActivation,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,getOwnPropertyDescriptor --> getFromActivation,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,defineOwnProperty --> arg,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,defineOwnProperty --> removeArg,org.mozilla.javascript.Arguments,);
Call(METHOD,org.mozilla.javascript.Arguments,defineOwnProperty --> replaceArg,org.mozilla.javascript.Arguments,);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,<init> --> args,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,<init> --> activation,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,<init> --> args,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,<init> --> lengthObj,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,<init> --> calleeObj,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,<init> --> constructor,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,<init> --> callerObj,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,arg --> args,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,putIntoActivation --> activation,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,getFromActivation --> activation,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,replaceArg --> args,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,replaceArg --> activation,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,replaceArg --> args,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,removeArg --> args,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,removeArg --> activation,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,removeArg --> args,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,sharedWithActivation --> activation,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,delete --> args,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,getInstanceIdValue --> calleeObj,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,getInstanceIdValue --> lengthObj,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,getInstanceIdValue --> callerObj,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,getInstanceIdValue --> activation,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,getInstanceIdValue --> constructor,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,setInstanceIdValue --> calleeObj,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,setInstanceIdValue --> lengthObj,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,setInstanceIdValue --> callerObj,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,setInstanceIdValue --> constructor,org.mozilla.javascript.Arguments,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,getIds --> args,org.mozilla.javascript.Arguments,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,<init> --> originalArgs,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,<init> --> function,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,<init> --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,arg --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,putIntoActivation --> function,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,getFromActivation --> function,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,replaceArg --> originalArgs,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,removeArg --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,removeArg --> originalArgs,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,has --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,get --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,sharedWithActivation --> function,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,put --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,getInstanceIdValue --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,getInstanceIdValue --> parentActivationCall,org.mozilla.javascript.NativeCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,setInstanceIdValue --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,getOwnPropertyDescriptor --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Arguments,defineOwnProperty --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(METHOD,org.mozilla.javascript.Arguments,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,<init> --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,<init> --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,<init> --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,<init> --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,<init> --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,<init> --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,<init> --> getLanguageVersion,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.Arguments,putIntoActivation --> getParamOrVarName,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.Arguments,putIntoActivation --> put,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,getFromActivation --> getParamOrVarName,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.Arguments,getFromActivation --> get,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,has --> has$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,get --> get$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,sharedWithActivation --> getParamCount,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.Arguments,sharedWithActivation --> getParamOrVarName,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.Arguments,put --> put$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,delete --> delete$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,findInstanceIdInfo --> findInstanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,findInstanceIdInfo --> instanceIdInfo,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,getInstanceIdValue --> get,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,getInstanceIdValue --> getInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,setInstanceIdValue --> setInstanceIdValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,getIds --> getIds,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,getIds --> has$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,getIds --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Arguments,getOwnPropertyDescriptor --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Arguments,getOwnPropertyDescriptor --> getOwnPropertyDescriptor,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,getOwnPropertyDescriptor --> has$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,getOwnPropertyDescriptor --> put,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,getOwnPropertyDescriptor --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,getOwnPropertyDescriptor --> buildDataDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,defineOwnProperty --> defineOwnProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,defineOwnProperty --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Arguments,defineOwnProperty --> isAccessorDescriptor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,defineOwnProperty --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.Arguments,defineOwnProperty --> isFalse,org.mozilla.javascript.ScriptableObject,);
EndClass 111
StartClass 112
Class(org.mozilla.javascript.ScriptRuntime$1,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(getLength,int,Public,N,N);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
SuperClass(org.mozilla.javascript.BaseFunction);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.BaseFunction);
Call(METHOD,org.mozilla.javascript.ScriptRuntime$1,<init> --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime$1,call --> typeError0,org.mozilla.javascript.ScriptRuntime,);
EndClass 112
StartClass 113
Class(org.mozilla.javascript.NativeWith,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(FTAG,java.lang.Object,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(prototype,org.mozilla.javascript.Scriptable,Protected,N,N,);
Attribute(parent,org.mozilla.javascript.Scriptable,Protected,N,N,);
Method(init,void,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Protected,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(has,boolean,Public,N,N);
Method(has$2,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(get$2,java.lang.Object,Public,N,N);
Method(put,void,Public,N,N);
Method(put$2,void,Public,N,N);
Method(delete,void,Public,N,N);
Method(delete$2,void,Public,N,N);
Method(getPrototype,org.mozilla.javascript.Scriptable,Public,N,N);
Method(setPrototype,void,Public,N,N);
Method(getParentScope,org.mozilla.javascript.Scriptable,Public,N,N);
Method(setParentScope,void,Public,N,N);
Method(getIds,java.lang.Object[],Public,N,N);
Method(getDefaultValue,java.lang.Object,Public,N,N);
Method(hasInstance,boolean,Public,N,N);
Method(updateDotQuery,java.lang.Object,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(isWithFunction,boolean,Public,Y,N);
Method(newWithSpecial,java.lang.Object,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(has,java.lang.String,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(has$2,int,);
Parameter(has$2,org.mozilla.javascript.Scriptable,);
Parameter(get,java.lang.String,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(get$2,int,);
Parameter(get$2,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.String,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(put$2,int,);
Parameter(put$2,org.mozilla.javascript.Scriptable,);
Parameter(put$2,java.lang.Object,);
Parameter(delete,java.lang.String,);
Parameter(delete$2,int,);
Parameter(setPrototype,org.mozilla.javascript.Scriptable,);
Parameter(setParentScope,org.mozilla.javascript.Scriptable,);
Parameter(getDefaultValue,java.lang.Class,);
Parameter(hasInstance,org.mozilla.javascript.Scriptable,);
Parameter(updateDotQuery,boolean,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(isWithFunction,java.lang.Object,);
Parameter(newWithSpecial,org.mozilla.javascript.Context,);
Parameter(newWithSpecial,org.mozilla.javascript.Scriptable,);
Parameter(newWithSpecial,java.lang.Object[],);
Realization(org.mozilla.javascript.Scriptable);
Realization(org.mozilla.javascript.IdFunctionCall);
Composition(org.mozilla.javascript.Scriptable);
Call(METHOD,org.mozilla.javascript.NativeWith,init --> <init>,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.NativeWith,init --> setParentScope,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.NativeWith,init --> setPrototype,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.NativeWith,newWithSpecial --> <init>,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.NativeWith,newWithSpecial --> setPrototype,org.mozilla.javascript.NativeWith,);
Call(METHOD,org.mozilla.javascript.NativeWith,newWithSpecial --> setParentScope,org.mozilla.javascript.NativeWith,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,init --> FTAG,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,<init>$2 --> parent,org.mozilla.javascript.NativeWith,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,<init>$2 --> prototype,org.mozilla.javascript.NativeWith,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,has --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,has$2 --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,get --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,get$2 --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,put --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,put$2 --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,delete --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,delete$2 --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,getPrototype --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,setPrototype --> prototype,org.mozilla.javascript.NativeWith,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,getParentScope --> parent,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,setParentScope --> parent,org.mozilla.javascript.NativeWith,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,getIds --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,getDefaultValue --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,hasInstance --> prototype,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,execIdCall --> FTAG,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,isWithFunction --> FTAG,org.mozilla.javascript.NativeWith,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeWith,<clinit> --> FTAG,org.mozilla.javascript.NativeWith,WRITE);
Call(METHOD,org.mozilla.javascript.NativeWith,init --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,init --> <init>$2,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,init --> markAsConstructor,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,init --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,init --> exportAsScopeProperty,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,has --> has,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeWith,has$2 --> has$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeWith,get --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeWith,get$2 --> get$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeWith,put --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeWith,put$2 --> put$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeWith,delete --> delete,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeWith,delete$2 --> delete$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeWith,getIds --> getIds,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeWith,getDefaultValue --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeWith,hasInstance --> hasInstance,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeWith,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,execIdCall --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeWith,execIdCall --> unknown,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,isWithFunction --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,isWithFunction --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,newWithSpecial --> checkDeprecated,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeWith,newWithSpecial --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,newWithSpecial --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeWith,newWithSpecial --> toObject$3,org.mozilla.javascript.ScriptRuntime,);
EndClass 113
StartClass 114
Class(org.mozilla.javascript.LazilyLoadedCtor,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(STATE_BEFORE_INIT,int,Private,Y,Y,);
Attribute(STATE_INITIALIZING,int,Private,Y,Y,);
Attribute(STATE_WITH_VALUE,int,Private,Y,Y,);
Attribute(scope,org.mozilla.javascript.ScriptableObject,Private,N,Y,);
Attribute(propertyName,java.lang.String,Private,N,Y,);
Attribute(className,java.lang.String,Private,N,Y,);
Attribute(sealed,boolean,Private,N,Y,);
Attribute(privileged,boolean,Private,N,Y,);
Attribute(initializedValue,java.lang.Object,Private,N,N,);
Attribute(state,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(init,void,Public,N,N);
Method(getValue,java.lang.Object,Public,N,N);
Method(buildValue,java.lang.Object,Private,N,N);
Method(buildValue0,java.lang.Object,Private,N,N);
Method(cast,java.lang.Class,Private,N,N);
Method(access$000,java.lang.Object,Public,Y,N);
Parameter(<init>,org.mozilla.javascript.ScriptableObject,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,boolean,);
Parameter(<init>$2,org.mozilla.javascript.ScriptableObject,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,boolean,);
Parameter(<init>$2,boolean,);
Parameter(cast,java.lang.Class,);
Parameter(access$000,org.mozilla.javascript.LazilyLoadedCtor,);
Composition(org.mozilla.javascript.ScriptableObject);
Call(METHOD,org.mozilla.javascript.LazilyLoadedCtor,<init> --> <init>$2,org.mozilla.javascript.LazilyLoadedCtor,);
Call(METHOD,org.mozilla.javascript.LazilyLoadedCtor,init --> buildValue,org.mozilla.javascript.LazilyLoadedCtor,);
Call(METHOD,org.mozilla.javascript.LazilyLoadedCtor,buildValue --> buildValue0,org.mozilla.javascript.LazilyLoadedCtor,);
Call(METHOD,org.mozilla.javascript.LazilyLoadedCtor,buildValue0 --> cast,org.mozilla.javascript.LazilyLoadedCtor,);
Call(METHOD,org.mozilla.javascript.LazilyLoadedCtor,access$000 --> buildValue0,org.mozilla.javascript.LazilyLoadedCtor,);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,<init>$2 --> scope,org.mozilla.javascript.LazilyLoadedCtor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,<init>$2 --> propertyName,org.mozilla.javascript.LazilyLoadedCtor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,<init>$2 --> className,org.mozilla.javascript.LazilyLoadedCtor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,<init>$2 --> sealed,org.mozilla.javascript.LazilyLoadedCtor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,<init>$2 --> privileged,org.mozilla.javascript.LazilyLoadedCtor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,<init>$2 --> state,org.mozilla.javascript.LazilyLoadedCtor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,init --> state,org.mozilla.javascript.LazilyLoadedCtor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,init --> propertyName,org.mozilla.javascript.LazilyLoadedCtor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,init --> state,org.mozilla.javascript.LazilyLoadedCtor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,init --> initializedValue,org.mozilla.javascript.LazilyLoadedCtor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,getValue --> state,org.mozilla.javascript.LazilyLoadedCtor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,getValue --> propertyName,org.mozilla.javascript.LazilyLoadedCtor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,getValue --> initializedValue,org.mozilla.javascript.LazilyLoadedCtor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,buildValue --> privileged,org.mozilla.javascript.LazilyLoadedCtor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,buildValue0 --> className,org.mozilla.javascript.LazilyLoadedCtor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,buildValue0 --> scope,org.mozilla.javascript.LazilyLoadedCtor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,buildValue0 --> sealed,org.mozilla.javascript.LazilyLoadedCtor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,buildValue0 --> propertyName,org.mozilla.javascript.LazilyLoadedCtor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,init --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor,buildValue0 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(METHOD,org.mozilla.javascript.LazilyLoadedCtor,<init>$2 --> addLazilyInitializedValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.LazilyLoadedCtor,buildValue --> <init>,org.mozilla.javascript.LazilyLoadedCtor$1,);
Call(METHOD,org.mozilla.javascript.LazilyLoadedCtor,buildValue0 --> classOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.LazilyLoadedCtor,buildValue0 --> buildClassCtor,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.LazilyLoadedCtor,buildValue0 --> get,org.mozilla.javascript.ScriptableObject,);
EndClass 114
StartClass 115
Class(org.mozilla.javascript.NativeJSON,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(JSON_TAG,java.lang.Object,Private,Y,Y,);
Attribute(MAX_STRINGIFY_GAP_LENGTH,int,Private,Y,Y,);
Attribute(Id_toSource,int,Private,Y,Y,);
Attribute(Id_parse,int,Private,Y,Y,);
Attribute(Id_stringify,int,Private,Y,Y,);
Attribute(LAST_METHOD_ID,int,Private,Y,Y,);
Attribute(MAX_ID,int,Private,Y,Y,);
Method(init,void,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(parse,java.lang.Object,Private,Y,N);
Method(parse$2,java.lang.Object,Public,Y,N);
Method(walk,java.lang.Object,Private,Y,N);
Method(repeat,java.lang.String,Private,Y,N);
Method(stringify,java.lang.Object,Public,Y,N);
Method(str,java.lang.Object,Private,Y,N);
Method(join,java.lang.String,Private,Y,N);
Method(jo,java.lang.String,Private,Y,N);
Method(ja,java.lang.String,Private,Y,N);
Method(quote,java.lang.String,Private,Y,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(parse,org.mozilla.javascript.Context,);
Parameter(parse,org.mozilla.javascript.Scriptable,);
Parameter(parse,java.lang.String,);
Parameter(parse$2,org.mozilla.javascript.Context,);
Parameter(parse$2,org.mozilla.javascript.Scriptable,);
Parameter(parse$2,java.lang.String,);
Parameter(parse$2,org.mozilla.javascript.Callable,);
Parameter(walk,org.mozilla.javascript.Context,);
Parameter(walk,org.mozilla.javascript.Scriptable,);
Parameter(walk,org.mozilla.javascript.Callable,);
Parameter(walk,org.mozilla.javascript.Scriptable,);
Parameter(walk,java.lang.Object,);
Parameter(repeat,char,);
Parameter(repeat,int,);
Parameter(stringify,org.mozilla.javascript.Context,);
Parameter(stringify,org.mozilla.javascript.Scriptable,);
Parameter(stringify,java.lang.Object,);
Parameter(stringify,java.lang.Object,);
Parameter(stringify,java.lang.Object,);
Parameter(str,java.lang.Object,);
Parameter(str,org.mozilla.javascript.Scriptable,);
Parameter(str,org.mozilla.javascript.NativeJSON$StringifyState,);
Parameter(join,java.util.Collection,java.lang.Object);
Parameter(join,java.lang.String,);
Parameter(jo,org.mozilla.javascript.Scriptable,);
Parameter(jo,org.mozilla.javascript.NativeJSON$StringifyState,);
Parameter(ja,org.mozilla.javascript.NativeArray,);
Parameter(ja,org.mozilla.javascript.NativeJSON$StringifyState,);
Parameter(quote,java.lang.String,);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Call(METHOD,org.mozilla.javascript.NativeJSON,init --> <init>,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,execIdCall --> parse$2,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,execIdCall --> parse,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,execIdCall --> stringify,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,parse$2 --> parse,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,parse$2 --> walk,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,walk --> walk,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> repeat,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> str,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,str --> quote,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,str --> ja,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,str --> jo,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,jo --> str,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,jo --> quote,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,jo --> join,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,ja --> str,org.mozilla.javascript.NativeJSON,);
Call(METHOD,org.mozilla.javascript.NativeJSON,ja --> join,org.mozilla.javascript.NativeJSON,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,initPrototypeId --> JSON_TAG,org.mozilla.javascript.NativeJSON,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,execIdCall --> JSON_TAG,org.mozilla.javascript.NativeJSON,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,<clinit> --> JSON_TAG,org.mozilla.javascript.NativeJSON,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,walk --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,str --> cx,org.mozilla.javascript.NativeJSON$StringifyState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,str --> replacer,org.mozilla.javascript.NativeJSON$StringifyState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,str --> scope,org.mozilla.javascript.NativeJSON$StringifyState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,str --> BooleanClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,str --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,jo --> stack,org.mozilla.javascript.NativeJSON$StringifyState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,jo --> indent,org.mozilla.javascript.NativeJSON$StringifyState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,jo --> gap,org.mozilla.javascript.NativeJSON$StringifyState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,jo --> propertyList,org.mozilla.javascript.NativeJSON$StringifyState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,jo --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,jo --> indent,org.mozilla.javascript.NativeJSON$StringifyState,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,ja --> stack,org.mozilla.javascript.NativeJSON$StringifyState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,ja --> indent,org.mozilla.javascript.NativeJSON$StringifyState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,ja --> gap,org.mozilla.javascript.NativeJSON$StringifyState,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,ja --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON,ja --> indent,org.mozilla.javascript.NativeJSON$StringifyState,WRITE);
Call(METHOD,org.mozilla.javascript.NativeJSON,init --> activatePrototypeMap,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,init --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,init --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,init --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,init --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,init --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,execIdCall --> toString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJSON,parse --> <init>,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.NativeJSON,parse --> parseValue,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.NativeJSON,parse --> constructError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJSON,parse$2 --> newObject,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJSON,parse$2 --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJSON,walk --> get$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJSON,walk --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJSON,walk --> getLength,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeJSON,walk --> delete,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJSON,walk --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJSON,walk --> delete$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJSON,walk --> put$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJSON,walk --> getIds,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJSON,walk --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> getIndexIds,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> get,org.mozilla.javascript.NativeArray,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> toInteger,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> <init>,org.mozilla.javascript.NativeJSON$StringifyState,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,stringify --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,str --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,str --> getProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,str --> callMethod$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJSON,str --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.NativeJSON,str --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJSON,str --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJSON,str --> getDefaultValue,org.mozilla.javascript.NativeBoolean,);
Call(METHOD,org.mozilla.javascript.NativeJSON,jo --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJSON,jo --> getIds,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJSON,ja --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJSON,ja --> getLength,org.mozilla.javascript.NativeArray,);
EndClass 115
StartClass 116
Class(org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,N,N,NA);
Attribute(methodName,java.lang.String,Public,N,N,);
Attribute(noSuchMethodMethod,org.mozilla.javascript.Callable,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Callable,);
Parameter(<init>,java.lang.String,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Realization(org.mozilla.javascript.Callable);
Composition(org.mozilla.javascript.Callable);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,<init> --> noSuchMethodMethod,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,<init> --> methodName,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,call --> methodName,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,call --> noSuchMethodMethod,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,READ);
Call(METHOD,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,call --> newArrayLiteral,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,call --> call,org.mozilla.javascript.Callable,);
EndClass 116
StartClass 117
Class(org.mozilla.javascript.v8dtoa.FastDtoa,N,N,Public);
Attribute(kFastDtoaMaximalLength,int,Public,Y,Y,);
Attribute(minimal_target_exponent,int,Public,Y,Y,);
Attribute(maximal_target_exponent,int,Public,Y,Y,);
Attribute(kTen4,int,Public,Y,Y,);
Attribute(kTen5,int,Public,Y,Y,);
Attribute(kTen6,int,Public,Y,Y,);
Attribute(kTen7,int,Public,Y,Y,);
Attribute(kTen8,int,Public,Y,Y,);
Attribute(kTen9,int,Public,Y,Y,);
Attribute($assertionsDisabled,boolean,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(roundWeed,boolean,Public,Y,N);
Method(biggestPowerTen,long,Public,Y,N);
Method(uint64_lte,boolean,Private,Y,N);
Method(digitGen,boolean,Public,Y,N);
Method(grisu3,boolean,Public,Y,N);
Method(dtoa,boolean,Public,Y,N);
Method(numberToString,java.lang.String,Public,Y,N);
Method(numberToString$2,boolean,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(roundWeed,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Parameter(roundWeed,long,);
Parameter(roundWeed,long,);
Parameter(roundWeed,long,);
Parameter(roundWeed,long,);
Parameter(roundWeed,long,);
Parameter(biggestPowerTen,int,);
Parameter(biggestPowerTen,int,);
Parameter(uint64_lte,long,);
Parameter(uint64_lte,long,);
Parameter(digitGen,org.mozilla.javascript.v8dtoa.DiyFp,);
Parameter(digitGen,org.mozilla.javascript.v8dtoa.DiyFp,);
Parameter(digitGen,org.mozilla.javascript.v8dtoa.DiyFp,);
Parameter(digitGen,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Parameter(digitGen,int,);
Parameter(grisu3,double,);
Parameter(grisu3,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Parameter(dtoa,double,);
Parameter(dtoa,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Parameter(numberToString,double,);
Parameter(numberToString$2,double,);
Parameter(numberToString$2,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> uint64_lte,org.mozilla.javascript.v8dtoa.FastDtoa,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> biggestPowerTen,org.mozilla.javascript.v8dtoa.FastDtoa,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> roundWeed,org.mozilla.javascript.v8dtoa.FastDtoa,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,grisu3 --> digitGen,org.mozilla.javascript.v8dtoa.FastDtoa,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,dtoa --> grisu3,org.mozilla.javascript.v8dtoa.FastDtoa,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,numberToString --> numberToString$2,org.mozilla.javascript.v8dtoa.FastDtoa,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,numberToString$2 --> dtoa,org.mozilla.javascript.v8dtoa.FastDtoa,);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.FastDtoa,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoa,grisu3 --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.FastDtoa,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoa,dtoa --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.FastDtoa,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoa,<clinit> --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.FastDtoa,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> point,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,WRITE);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,roundWeed --> decreaseLast,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> e,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> f,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> <init>$2,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> minus,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> append,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> setF,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,digitGen --> setE,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,grisu3 --> asNormalizedDiyFp,org.mozilla.javascript.v8dtoa.DoubleHelper,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,grisu3 --> <init>,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,grisu3 --> normalizedBoundaries,org.mozilla.javascript.v8dtoa.DoubleHelper,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,grisu3 --> e,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,grisu3 --> getCachedPower,org.mozilla.javascript.v8dtoa.CachedPowers,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,grisu3 --> times,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,numberToString --> <init>,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,numberToString --> format,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,numberToString$2 --> reset,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoa,numberToString$2 --> append,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
EndClass 117
StartClass 118
Class(org.mozilla.javascript.NativeIterator$StopIteration,N,N,NA);
Attribute(serialVersionUID,long,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(hasInstance,boolean,Public,N,N);
Parameter(hasInstance,org.mozilla.javascript.Scriptable,);
SuperClass(org.mozilla.javascript.NativeObject);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.NativeObject);
Call(METHOD,org.mozilla.javascript.NativeIterator$StopIteration,<init> --> <init>,org.mozilla.javascript.NativeObject,);
EndClass 118
StartClass 119
Class(org.mozilla.javascript.xml.XMLObject,N,Y,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(has,boolean,Public,N,Y);
Method(get,java.lang.Object,Public,N,Y);
Method(put,void,Public,N,Y);
Method(delete,boolean,Public,N,Y);
Method(getFunctionProperty,java.lang.Object,Public,N,Y);
Method(getFunctionProperty$2,java.lang.Object,Public,N,Y);
Method(getExtraMethodSource,org.mozilla.javascript.Scriptable,Public,N,Y);
Method(memberRef,org.mozilla.javascript.Ref,Public,N,Y);
Method(memberRef$2,org.mozilla.javascript.Ref,Public,N,Y);
Method(enterWith,org.mozilla.javascript.NativeWith,Public,N,Y);
Method(enterDotQuery,org.mozilla.javascript.NativeWith,Public,N,Y);
Method(addValues,java.lang.Object,Public,N,N);
Method(getTypeOf,java.lang.String,Public,N,N);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(has,org.mozilla.javascript.Context,);
Parameter(has,java.lang.Object,);
Parameter(get,org.mozilla.javascript.Context,);
Parameter(get,java.lang.Object,);
Parameter(put,org.mozilla.javascript.Context,);
Parameter(put,java.lang.Object,);
Parameter(put,java.lang.Object,);
Parameter(delete,org.mozilla.javascript.Context,);
Parameter(delete,java.lang.Object,);
Parameter(getFunctionProperty,org.mozilla.javascript.Context,);
Parameter(getFunctionProperty,java.lang.String,);
Parameter(getFunctionProperty$2,org.mozilla.javascript.Context,);
Parameter(getFunctionProperty$2,int,);
Parameter(getExtraMethodSource,org.mozilla.javascript.Context,);
Parameter(memberRef,org.mozilla.javascript.Context,);
Parameter(memberRef,java.lang.Object,);
Parameter(memberRef,int,);
Parameter(memberRef$2,org.mozilla.javascript.Context,);
Parameter(memberRef$2,java.lang.Object,);
Parameter(memberRef$2,java.lang.Object,);
Parameter(memberRef$2,int,);
Parameter(enterWith,org.mozilla.javascript.Scriptable,);
Parameter(enterDotQuery,org.mozilla.javascript.Scriptable,);
Parameter(addValues,org.mozilla.javascript.Context,);
Parameter(addValues,boolean,);
Parameter(addValues,java.lang.Object,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Call(ATTRIBUTE,org.mozilla.javascript.xml.XMLObject,addValues --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(METHOD,org.mozilla.javascript.xml.XMLObject,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.xml.XMLObject,<init>$2 --> <init>$2,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.xml.XMLObject,getTypeOf --> avoidObjectDetection,org.mozilla.javascript.ScriptableObject,);
EndClass 119
StartClass 120
Class(org.mozilla.javascript.SpecialRef,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(SPECIAL_NONE,int,Private,Y,Y,);
Attribute(SPECIAL_PROTO,int,Private,Y,Y,);
Attribute(SPECIAL_PARENT,int,Private,Y,Y,);
Attribute(target,org.mozilla.javascript.Scriptable,Private,N,N,);
Attribute(type,int,Private,N,N,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Private,N,N);
Method(createSpecial,org.mozilla.javascript.Ref,Public,Y,N);
Method(get,java.lang.Object,Public,N,N);
Method(set,java.lang.Object,Public,N,N);
Method(has,boolean,Public,N,N);
Method(delete,boolean,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,int,);
Parameter(<init>,java.lang.String,);
Parameter(createSpecial,org.mozilla.javascript.Context,);
Parameter(createSpecial,java.lang.Object,);
Parameter(createSpecial,java.lang.String,);
Parameter(get,org.mozilla.javascript.Context,);
Parameter(set,org.mozilla.javascript.Context,);
Parameter(set,java.lang.Object,);
Parameter(has,org.mozilla.javascript.Context,);
Parameter(delete,org.mozilla.javascript.Context,);
SuperClass(org.mozilla.javascript.Ref);
Generalization(org.mozilla.javascript.Ref);
Composition(org.mozilla.javascript.Scriptable);
Call(METHOD,org.mozilla.javascript.SpecialRef,createSpecial --> <init>,org.mozilla.javascript.SpecialRef,);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,<init> --> target,org.mozilla.javascript.SpecialRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,<init> --> type,org.mozilla.javascript.SpecialRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,<init> --> name,org.mozilla.javascript.SpecialRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,get --> type,org.mozilla.javascript.SpecialRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,get --> target,org.mozilla.javascript.SpecialRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,get --> name,org.mozilla.javascript.SpecialRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,set --> type,org.mozilla.javascript.SpecialRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,set --> target,org.mozilla.javascript.SpecialRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,set --> name,org.mozilla.javascript.SpecialRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,has --> type,org.mozilla.javascript.SpecialRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,has --> target,org.mozilla.javascript.SpecialRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,has --> name,org.mozilla.javascript.SpecialRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,delete --> type,org.mozilla.javascript.SpecialRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,delete --> target,org.mozilla.javascript.SpecialRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.SpecialRef,delete --> name,org.mozilla.javascript.SpecialRef,READ);
Call(METHOD,org.mozilla.javascript.SpecialRef,<init> --> <init>,org.mozilla.javascript.Ref,);
Call(METHOD,org.mozilla.javascript.SpecialRef,createSpecial --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.SpecialRef,createSpecial --> undefReadError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.SpecialRef,createSpecial --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.SpecialRef,get --> getObjectProp$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.SpecialRef,get --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.SpecialRef,get --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.SpecialRef,get --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.SpecialRef,set --> setObjectProp$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.SpecialRef,set --> toObjectOrNull,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.SpecialRef,set --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.SpecialRef,set --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.SpecialRef,set --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.SpecialRef,set --> setPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.SpecialRef,set --> setParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.SpecialRef,set --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.SpecialRef,has --> hasObjectElem,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.SpecialRef,delete --> deleteObjectElem,org.mozilla.javascript.ScriptRuntime,);
EndClass 120
StartClass 121
Class(org.mozilla.javascript.NativeScript,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(SCRIPT_TAG,java.lang.Object,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(Id_toString,int,Private,Y,Y,);
Attribute(Id_compile,int,Private,Y,Y,);
Attribute(Id_exec,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Attribute(script,org.mozilla.javascript.Script,Private,N,N,);
Method(init,void,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(construct,org.mozilla.javascript.Scriptable,Public,N,N);
Method(getLength,int,Public,N,N);
Method(getArity,int,Public,N,N);
Method(decompile,java.lang.String,Public,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(realThis,org.mozilla.javascript.NativeScript,Private,Y,N);
Method(compile,org.mozilla.javascript.Script,Private,Y,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(<init>,org.mozilla.javascript.Script,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(construct,org.mozilla.javascript.Context,);
Parameter(construct,org.mozilla.javascript.Scriptable,);
Parameter(construct,java.lang.Object[],);
Parameter(decompile,int,);
Parameter(decompile,int,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(realThis,org.mozilla.javascript.Scriptable,);
Parameter(realThis,org.mozilla.javascript.IdFunctionObject,);
Parameter(compile,org.mozilla.javascript.Context,);
Parameter(compile,java.lang.String,);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.BaseFunction);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.BaseFunction);
Composition(org.mozilla.javascript.Script);
Call(METHOD,org.mozilla.javascript.NativeScript,init --> <init>,org.mozilla.javascript.NativeScript,);
Call(METHOD,org.mozilla.javascript.NativeScript,execIdCall --> compile,org.mozilla.javascript.NativeScript,);
Call(METHOD,org.mozilla.javascript.NativeScript,execIdCall --> <init>,org.mozilla.javascript.NativeScript,);
Call(METHOD,org.mozilla.javascript.NativeScript,execIdCall --> realThis,org.mozilla.javascript.NativeScript,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeScript,<init> --> script,org.mozilla.javascript.NativeScript,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeScript,call --> script,org.mozilla.javascript.NativeScript,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeScript,decompile --> script,org.mozilla.javascript.NativeScript,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeScript,initPrototypeId --> SCRIPT_TAG,org.mozilla.javascript.NativeScript,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeScript,execIdCall --> SCRIPT_TAG,org.mozilla.javascript.NativeScript,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeScript,execIdCall --> script,org.mozilla.javascript.NativeScript,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeScript,execIdCall --> script,org.mozilla.javascript.NativeScript,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeScript,<clinit> --> SCRIPT_TAG,org.mozilla.javascript.NativeScript,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeScript,call --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.NativeScript,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeScript,<init> --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeScript,call --> exec,org.mozilla.javascript.Script,);
Call(METHOD,org.mozilla.javascript.NativeScript,construct --> reportRuntimeError0,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeScript,decompile --> decompile,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.NativeScript,decompile --> decompile,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeScript,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeScript,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeScript,execIdCall --> execIdCall,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeScript,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeScript,execIdCall --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeScript,execIdCall --> setObjectProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeScript,execIdCall --> decompileScript,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeScript,execIdCall --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeScript,execIdCall --> toString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeScript,realThis --> incompatibleCallError,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeScript,compile --> getSourcePositionFromStack,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeScript,compile --> getErrorReporter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeScript,compile --> forEval,org.mozilla.javascript.DefaultErrorReporter,);
Call(METHOD,org.mozilla.javascript.NativeScript,compile --> compileString$2,org.mozilla.javascript.Context,);
EndClass 121
StartClass 122
Class(org.mozilla.javascript.NativeMath,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(MATH_TAG,java.lang.Object,Private,Y,Y,);
Attribute(Id_toSource,int,Private,Y,Y,);
Attribute(Id_abs,int,Private,Y,Y,);
Attribute(Id_acos,int,Private,Y,Y,);
Attribute(Id_asin,int,Private,Y,Y,);
Attribute(Id_atan,int,Private,Y,Y,);
Attribute(Id_atan2,int,Private,Y,Y,);
Attribute(Id_ceil,int,Private,Y,Y,);
Attribute(Id_cos,int,Private,Y,Y,);
Attribute(Id_exp,int,Private,Y,Y,);
Attribute(Id_floor,int,Private,Y,Y,);
Attribute(Id_log,int,Private,Y,Y,);
Attribute(Id_max,int,Private,Y,Y,);
Attribute(Id_min,int,Private,Y,Y,);
Attribute(Id_pow,int,Private,Y,Y,);
Attribute(Id_random,int,Private,Y,Y,);
Attribute(Id_round,int,Private,Y,Y,);
Attribute(Id_sin,int,Private,Y,Y,);
Attribute(Id_sqrt,int,Private,Y,Y,);
Attribute(Id_tan,int,Private,Y,Y,);
Attribute(LAST_METHOD_ID,int,Private,Y,Y,);
Attribute(Id_E,int,Private,Y,Y,);
Attribute(Id_PI,int,Private,Y,Y,);
Attribute(Id_LN10,int,Private,Y,Y,);
Attribute(Id_LN2,int,Private,Y,Y,);
Attribute(Id_LOG2E,int,Private,Y,Y,);
Attribute(Id_LOG10E,int,Private,Y,Y,);
Attribute(Id_SQRT1_2,int,Private,Y,Y,);
Attribute(Id_SQRT2,int,Private,Y,Y,);
Attribute(MAX_ID,int,Private,Y,Y,);
Method(init,void,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(js_pow,double,Private,N,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(js_pow,double,);
Parameter(js_pow,double,);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Call(METHOD,org.mozilla.javascript.NativeMath,init --> <init>,org.mozilla.javascript.NativeMath,);
Call(METHOD,org.mozilla.javascript.NativeMath,execIdCall --> js_pow,org.mozilla.javascript.NativeMath,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeMath,initPrototypeId --> MATH_TAG,org.mozilla.javascript.NativeMath,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeMath,execIdCall --> MATH_TAG,org.mozilla.javascript.NativeMath,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeMath,<clinit> --> MATH_TAG,org.mozilla.javascript.NativeMath,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeMath,execIdCall --> negativeZero,org.mozilla.javascript.ScriptRuntime,READ);
Call(METHOD,org.mozilla.javascript.NativeMath,init --> activatePrototypeMap,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,init --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,init --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,init --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,init --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,init --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,initPrototypeId --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeMath,initPrototypeId --> initPrototypeValue,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeMath,execIdCall --> toNumber$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeMath,execIdCall --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeMath,execIdCall --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
EndClass 122
StartClass 123
Class(org.mozilla.javascript.TokenStream,N,N,NA);
Attribute(EOF_CHAR,int,Private,Y,Y,);
Attribute(BYTE_ORDER_MARK,char,Private,Y,Y,);
Attribute(dirtyLine,boolean,Private,N,N,);
Attribute(regExpFlags,java.lang.String,Public,N,N,);
Attribute(string,java.lang.String,Private,N,N,);
Attribute(number,double,Private,N,N,);
Attribute(isOctal,boolean,Private,N,N,);
Attribute(quoteChar,int,Private,N,N,);
Attribute(stringBuffer,char[],Private,N,N,);
Attribute(stringBufferTop,int,Private,N,N,);
Attribute(allStrings,org.mozilla.javascript.ObjToIntMap,Private,N,N,);
Attribute(ungetBuffer,int[],Private,N,Y,);
Attribute(ungetCursor,int,Private,N,N,);
Attribute(hitEOF,boolean,Private,N,N,);
Attribute(lineStart,int,Private,N,N,);
Attribute(lineEndChar,int,Private,N,N,);
Attribute(lineno,int,Public,N,N,);
Attribute(sourceString,java.lang.String,Private,N,N,);
Attribute(sourceReader,java.io.Reader,Private,N,N,);
Attribute(sourceBuffer,char[],Private,N,N,);
Attribute(sourceEnd,int,Private,N,N,);
Attribute(sourceCursor,int,Public,N,N,);
Attribute(cursor,int,Public,N,N,);
Attribute(tokenBeg,int,Public,N,N,);
Attribute(tokenEnd,int,Public,N,N,);
Attribute(commentType,org.mozilla.javascript.Token$CommentType,Public,N,N,);
Attribute(xmlIsAttribute,boolean,Private,N,N,);
Attribute(xmlIsTagContent,boolean,Private,N,N,);
Attribute(xmlOpenTagsCount,int,Private,N,N,);
Attribute(parser,org.mozilla.javascript.Parser,Private,N,N,);
Attribute(commentPrefix,java.lang.String,Private,N,N,);
Attribute(commentCursor,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(tokenToString,java.lang.String,Public,N,N);
Method(isKeyword,boolean,Public,Y,N);
Method(stringToKeyword,int,Private,Y,N);
Method(getSourceString,java.lang.String,Public,N,N);
Method(getLineno,int,Public,N,N);
Method(getString,java.lang.String,Public,N,N);
Method(getQuoteChar,char,Public,N,N);
Method(getNumber,double,Public,N,N);
Method(isNumberOctal,boolean,Public,N,N);
Method(eof,boolean,Public,N,N);
Method(getToken,int,Public,N,N);
Method(isAlpha,boolean,Private,Y,N);
Method(isDigit,boolean,Public,Y,N);
Method(isJSSpace,boolean,Public,Y,N);
Method(isJSFormatChar,boolean,Private,Y,N);
Method(readRegExp,void,Public,N,N);
Method(readAndClearRegExpFlags,java.lang.String,Public,N,N);
Method(isXMLAttribute,boolean,Public,N,N);
Method(getFirstXMLToken,int,Public,N,N);
Method(getNextXMLToken,int,Public,N,N);
Method(readQuotedString,boolean,Private,N,N);
Method(readXmlComment,boolean,Private,N,N);
Method(readCDATA,boolean,Private,N,N);
Method(readEntity,boolean,Private,N,N);
Method(readPI,boolean,Private,N,N);
Method(getStringFromBuffer,java.lang.String,Private,N,N);
Method(addToString,void,Private,N,N);
Method(canUngetChar,boolean,Private,N,N);
Method(ungetChar,void,Private,N,N);
Method(matchChar,boolean,Private,N,N);
Method(peekChar,int,Private,N,N);
Method(getChar,int,Private,N,N);
Method(getChar$2,int,Private,N,N);
Method(getCharIgnoreLineEnd,int,Private,N,N);
Method(ungetCharIgnoreLineEnd,void,Private,N,N);
Method(skipLine,void,Private,N,N);
Method(getOffset,int,Public,N,N);
Method(getLine,java.lang.String,Public,N,N);
Method(fillSourceBuffer,boolean,Private,N,N);
Method(getCursor,int,Public,N,N);
Method(getTokenBeg,int,Public,N,N);
Method(getTokenEnd,int,Public,N,N);
Method(getTokenLength,int,Public,N,N);
Method(getCommentType,org.mozilla.javascript.Token$CommentType,Public,N,N);
Method(markCommentStart,void,Private,N,N);
Method(markCommentStart$2,void,Private,N,N);
Method(isMarkingComment,boolean,Private,N,N);
Method(getAndResetCurrentComment,java.lang.String,Public,N,N);
Method(convertLastCharToHex,java.lang.String,Private,N,N);
Parameter(<init>,org.mozilla.javascript.Parser,);
Parameter(<init>,java.io.Reader,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Parameter(tokenToString,int,);
Parameter(isKeyword,java.lang.String,);
Parameter(stringToKeyword,java.lang.String,);
Parameter(isAlpha,int,);
Parameter(isDigit,int,);
Parameter(isJSSpace,int,);
Parameter(isJSFormatChar,int,);
Parameter(readRegExp,int,);
Parameter(readQuotedString,int,);
Parameter(addToString,int,);
Parameter(ungetChar,int,);
Parameter(matchChar,int,);
Parameter(getChar$2,boolean,);
Parameter(ungetCharIgnoreLineEnd,int,);
Parameter(markCommentStart$2,java.lang.String,);
Parameter(convertLastCharToHex,java.lang.String,);
Composition(org.mozilla.javascript.ObjToIntMap);
Composition(org.mozilla.javascript.Token$CommentType);
Composition(org.mozilla.javascript.Parser);
Call(METHOD,org.mozilla.javascript.TokenStream,isKeyword --> stringToKeyword,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> getChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> isJSSpace,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> ungetChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> addToString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> getStringFromBuffer,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> stringToKeyword,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> isKeyword,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> convertLastCharToHex,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> isDigit,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> peekChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> getChar$2,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> matchChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> skipLine,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> ungetCharIgnoreLineEnd,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> markCommentStart,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> markCommentStart$2,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readRegExp --> addToString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readRegExp --> getChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readRegExp --> ungetChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readRegExp --> matchChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readRegExp --> peekChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readRegExp --> isAlpha,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getFirstXMLToken --> canUngetChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getFirstXMLToken --> ungetChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getFirstXMLToken --> getNextXMLToken,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getNextXMLToken --> getChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getNextXMLToken --> addToString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getNextXMLToken --> peekChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getNextXMLToken --> ungetChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getNextXMLToken --> getStringFromBuffer,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getNextXMLToken --> readQuotedString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getNextXMLToken --> readXmlComment,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getNextXMLToken --> readCDATA,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getNextXMLToken --> readEntity,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getNextXMLToken --> readPI,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readQuotedString --> getChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readQuotedString --> addToString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readXmlComment --> getChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readXmlComment --> addToString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readXmlComment --> peekChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readCDATA --> getChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readCDATA --> addToString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readCDATA --> peekChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readEntity --> getChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readEntity --> addToString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readPI --> getChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readPI --> addToString,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,readPI --> peekChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,matchChar --> getCharIgnoreLineEnd,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,matchChar --> ungetCharIgnoreLineEnd,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,peekChar --> getChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,peekChar --> ungetChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getChar --> getChar$2,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getChar$2 --> fillSourceBuffer,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getChar$2 --> isJSFormatChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> fillSourceBuffer,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> isJSFormatChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,skipLine --> getChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,skipLine --> ungetChar,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getLine --> fillSourceBuffer,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,fillSourceBuffer --> isMarkingComment,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,markCommentStart --> markCommentStart$2,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getAndResetCurrentComment --> isMarkingComment,org.mozilla.javascript.TokenStream,);
Call(METHOD,org.mozilla.javascript.TokenStream,getAndResetCurrentComment --> getTokenLength,org.mozilla.javascript.TokenStream,);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> string,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> stringBuffer,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> allStrings,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> ungetBuffer,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> hitEOF,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> lineStart,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> lineEndChar,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> commentPrefix,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> commentCursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> parser,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> lineno,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> sourceReader,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> sourceBuffer,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> sourceEnd,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> sourceString,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> cursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,<init> --> sourceCursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getSourceString --> sourceString,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getLineno --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getString --> string,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getQuoteChar --> quoteChar,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNumber --> number,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,isNumberOctal --> isOctal,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,eof --> hitEOF,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> parser,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> allStrings,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> quoteChar,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> stringBufferTop,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> dirtyLine,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> tokenBeg,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> tokenEnd,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> dirtyLine,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> stringBufferTop,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> string,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> isOctal,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> number,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> quoteChar,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> commentType,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readRegExp --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readRegExp --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readRegExp --> stringBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readRegExp --> stringBufferTop,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readRegExp --> parser,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readRegExp --> stringBufferTop,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readRegExp --> tokenEnd,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readRegExp --> string,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readRegExp --> regExpFlags,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readAndClearRegExpFlags --> regExpFlags,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readAndClearRegExpFlags --> regExpFlags,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,isXMLAttribute --> xmlIsAttribute,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getFirstXMLToken --> xmlOpenTagsCount,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getFirstXMLToken --> xmlIsAttribute,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getFirstXMLToken --> xmlIsTagContent,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNextXMLToken --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNextXMLToken --> xmlIsTagContent,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNextXMLToken --> xmlOpenTagsCount,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNextXMLToken --> parser,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNextXMLToken --> tokenBeg,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNextXMLToken --> stringBufferTop,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNextXMLToken --> xmlIsTagContent,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNextXMLToken --> xmlIsAttribute,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNextXMLToken --> xmlOpenTagsCount,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNextXMLToken --> string,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getNextXMLToken --> tokenEnd,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readQuotedString --> parser,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readQuotedString --> stringBufferTop,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readQuotedString --> string,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readXmlComment --> parser,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readXmlComment --> stringBufferTop,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readXmlComment --> string,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readCDATA --> parser,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readCDATA --> stringBufferTop,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readCDATA --> string,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readEntity --> parser,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readEntity --> stringBufferTop,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readEntity --> string,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readPI --> parser,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readPI --> stringBufferTop,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,readPI --> string,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getStringFromBuffer --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getStringFromBuffer --> stringBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getStringFromBuffer --> stringBufferTop,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getStringFromBuffer --> tokenEnd,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,addToString --> stringBufferTop,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,addToString --> stringBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,addToString --> stringBuffer,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,addToString --> stringBufferTop,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,canUngetChar --> ungetCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,canUngetChar --> ungetBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,ungetChar --> ungetCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,ungetChar --> ungetBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,ungetChar --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,ungetChar --> ungetCursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,ungetChar --> cursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,matchChar --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,matchChar --> tokenEnd,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> ungetCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> ungetBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> sourceString,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> sourceCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> sourceEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> sourceBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> lineEndChar,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> lineno,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> cursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> ungetCursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> hitEOF,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> sourceCursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> lineEndChar,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> lineStart,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getChar$2 --> lineno,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> ungetCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> ungetBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> sourceString,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> sourceCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> sourceEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> sourceBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> cursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> ungetCursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> hitEOF,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> sourceCursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> lineEndChar,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,ungetCharIgnoreLineEnd --> ungetBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,ungetCharIgnoreLineEnd --> ungetCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,ungetCharIgnoreLineEnd --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,ungetCharIgnoreLineEnd --> ungetCursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,ungetCharIgnoreLineEnd --> cursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,skipLine --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,skipLine --> tokenEnd,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getOffset --> sourceCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getOffset --> lineStart,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getOffset --> lineEndChar,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getLine --> sourceString,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getLine --> sourceCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getLine --> lineEndChar,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getLine --> sourceEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getLine --> lineStart,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getLine --> sourceBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,fillSourceBuffer --> sourceString,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,fillSourceBuffer --> sourceEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,fillSourceBuffer --> sourceBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,fillSourceBuffer --> lineStart,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,fillSourceBuffer --> sourceCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,fillSourceBuffer --> sourceReader,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,fillSourceBuffer --> sourceEnd,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,fillSourceBuffer --> sourceCursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,fillSourceBuffer --> lineStart,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,fillSourceBuffer --> sourceBuffer,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCursor --> cursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getTokenBeg --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getTokenEnd --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getTokenLength --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getTokenLength --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getCommentType --> commentType,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,markCommentStart$2 --> parser,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,markCommentStart$2 --> sourceReader,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,markCommentStart$2 --> sourceCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,markCommentStart$2 --> commentPrefix,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,markCommentStart$2 --> commentCursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,isMarkingComment --> commentCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getAndResetCurrentComment --> sourceString,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getAndResetCurrentComment --> tokenBeg,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getAndResetCurrentComment --> tokenEnd,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getAndResetCurrentComment --> commentPrefix,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getAndResetCurrentComment --> sourceBuffer,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getAndResetCurrentComment --> commentCursor,org.mozilla.javascript.TokenStream,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getAndResetCurrentComment --> commentCursor,org.mozilla.javascript.TokenStream,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> HTML,org.mozilla.javascript.Token$CommentType,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> LINE,org.mozilla.javascript.Token$CommentType,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> JSDOC,org.mozilla.javascript.Token$CommentType,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,getToken --> BLOCK_COMMENT,org.mozilla.javascript.Token$CommentType,READ);
Call(ATTRIBUTE,org.mozilla.javascript.TokenStream,markCommentStart$2 --> compilerEnv,org.mozilla.javascript.Parser,READ);
Call(METHOD,org.mozilla.javascript.TokenStream,<init> --> <init>$2,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.TokenStream,<init> --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> xDigitToInt,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> addError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> getLanguageVersion,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> intern,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> isReservedKeywordAsIdentifier,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> addWarning,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.TokenStream,getToken --> stringToNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.TokenStream,readRegExp --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.TokenStream,readRegExp --> reportError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.TokenStream,getNextXMLToken --> addError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.TokenStream,readQuotedString --> addError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.TokenStream,readXmlComment --> addError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.TokenStream,readCDATA --> addError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.TokenStream,readEntity --> addError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.TokenStream,readPI --> addError,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.TokenStream,ungetChar --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.TokenStream,getChar$2 --> isJSLineTerminator,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.TokenStream,getCharIgnoreLineEnd --> isJSLineTerminator,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.TokenStream,getLine --> isJSLineTerminator,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.TokenStream,fillSourceBuffer --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.TokenStream,markCommentStart$2 --> isRecordingComments,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.TokenStream,getAndResetCurrentComment --> codeBug,org.mozilla.javascript.Kit,);
EndClass 123
StartClass 124
Class(org.mozilla.javascript.NativeIterator,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(ITERATOR_TAG,java.lang.Object,Private,Y,Y,);
Attribute(STOP_ITERATION,java.lang.String,Private,Y,Y,);
Attribute(ITERATOR_PROPERTY_NAME,java.lang.String,Public,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(Id_next,int,Private,Y,Y,);
Attribute(Id___iterator__,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Attribute(objectIterator,java.lang.Object,Private,N,N,);
Method(init,void,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Private,N,N);
Method(getStopIterationObject,java.lang.Object,Public,Y,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(jsConstructor,java.lang.Object,Private,Y,N);
Method(next,java.lang.Object,Private,N,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.ScriptableObject,);
Parameter(init,boolean,);
Parameter(<init>$2,java.lang.Object,);
Parameter(getStopIterationObject,org.mozilla.javascript.Scriptable,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(jsConstructor,org.mozilla.javascript.Context,);
Parameter(jsConstructor,org.mozilla.javascript.Scriptable,);
Parameter(jsConstructor,org.mozilla.javascript.Scriptable,);
Parameter(jsConstructor,java.lang.Object[],);
Parameter(next,org.mozilla.javascript.Context,);
Parameter(next,org.mozilla.javascript.Scriptable,);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Call(METHOD,org.mozilla.javascript.NativeIterator,init --> <init>,org.mozilla.javascript.NativeIterator,);
Call(METHOD,org.mozilla.javascript.NativeIterator,execIdCall --> jsConstructor,org.mozilla.javascript.NativeIterator,);
Call(METHOD,org.mozilla.javascript.NativeIterator,execIdCall --> next,org.mozilla.javascript.NativeIterator,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> <init>$2,org.mozilla.javascript.NativeIterator,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> getClassName,org.mozilla.javascript.NativeIterator,);
Call(METHOD,org.mozilla.javascript.NativeIterator,next --> getStopIterationObject,org.mozilla.javascript.NativeIterator,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator,init --> ITERATOR_TAG,org.mozilla.javascript.NativeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator,<init>$2 --> objectIterator,org.mozilla.javascript.NativeIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator,getStopIterationObject --> ITERATOR_TAG,org.mozilla.javascript.NativeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator,initPrototypeId --> ITERATOR_TAG,org.mozilla.javascript.NativeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator,execIdCall --> ITERATOR_TAG,org.mozilla.javascript.NativeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator,next --> objectIterator,org.mozilla.javascript.NativeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator,<clinit> --> ITERATOR_TAG,org.mozilla.javascript.NativeIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator,jsConstructor --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator,jsConstructor --> instance,org.mozilla.javascript.VMBridge,READ);
Call(METHOD,org.mozilla.javascript.NativeIterator,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,init --> init,org.mozilla.javascript.NativeGenerator,);
Call(METHOD,org.mozilla.javascript.NativeIterator,init --> <init>,org.mozilla.javascript.NativeIterator$StopIteration,);
Call(METHOD,org.mozilla.javascript.NativeIterator,init --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,init --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,init --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,init --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,init --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,init --> associateValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,<init>$2 --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,getStopIterationObject --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,getStopIterationObject --> getTopScopeValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,execIdCall --> incompatibleCallError,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> toObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> toBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> getJavaIterator,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> <init>,org.mozilla.javascript.NativeIterator$WrappedJavaIterator,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> toIterator,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> enumInit$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> setEnumNumbers,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> getClassPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,jsConstructor --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeIterator,next --> enumNext,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeIterator,next --> <init>$2,org.mozilla.javascript.JavaScriptException,);
Call(METHOD,org.mozilla.javascript.NativeIterator,next --> enumId,org.mozilla.javascript.ScriptRuntime,);
EndClass 124
StartClass 125
Class(org.mozilla.javascript.NativeNumber,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(NUMBER_TAG,java.lang.Object,Private,Y,Y,);
Attribute(MAX_PRECISION,int,Private,Y,Y,);
Attribute(Id_constructor,int,Private,Y,Y,);
Attribute(Id_toString,int,Private,Y,Y,);
Attribute(Id_toLocaleString,int,Private,Y,Y,);
Attribute(Id_toSource,int,Private,Y,Y,);
Attribute(Id_valueOf,int,Private,Y,Y,);
Attribute(Id_toFixed,int,Private,Y,Y,);
Attribute(Id_toExponential,int,Private,Y,Y,);
Attribute(Id_toPrecision,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Attribute(doubleValue,double,Private,N,N,);
Method(init,void,Public,Y,N);
Method(<init>,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(fillConstructorProperties,void,Protected,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(num_to,java.lang.String,Private,Y,N);
Method(findPrototypeId,int,Protected,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(<init>,double,);
Parameter(fillConstructorProperties,org.mozilla.javascript.IdFunctionObject,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(num_to,double,);
Parameter(num_to,java.lang.Object[],);
Parameter(num_to,int,);
Parameter(num_to,int,);
Parameter(num_to,int,);
Parameter(num_to,int,);
Parameter(findPrototypeId,java.lang.String,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Call(METHOD,org.mozilla.javascript.NativeNumber,init --> <init>,org.mozilla.javascript.NativeNumber,);
Call(METHOD,org.mozilla.javascript.NativeNumber,execIdCall --> <init>,org.mozilla.javascript.NativeNumber,);
Call(METHOD,org.mozilla.javascript.NativeNumber,execIdCall --> num_to,org.mozilla.javascript.NativeNumber,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeNumber,<init> --> doubleValue,org.mozilla.javascript.NativeNumber,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeNumber,initPrototypeId --> NUMBER_TAG,org.mozilla.javascript.NativeNumber,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeNumber,execIdCall --> NUMBER_TAG,org.mozilla.javascript.NativeNumber,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeNumber,execIdCall --> doubleValue,org.mozilla.javascript.NativeNumber,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeNumber,toString --> doubleValue,org.mozilla.javascript.NativeNumber,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeNumber,<clinit> --> NUMBER_TAG,org.mozilla.javascript.NativeNumber,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeNumber,fillConstructorProperties --> NaNobj,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeNumber,execIdCall --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.NativeNumber,init --> exportAsJSClass,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeNumber,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeNumber,fillConstructorProperties --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeNumber,fillConstructorProperties --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeNumber,fillConstructorProperties --> fillConstructorProperties,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeNumber,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeNumber,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeNumber,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeNumber,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeNumber,execIdCall --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeNumber,execIdCall --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeNumber,execIdCall --> incompatibleCallError,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeNumber,execIdCall --> toInt32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeNumber,execIdCall --> numberToString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeNumber,execIdCall --> toString$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeNumber,toString --> numberToString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeNumber,num_to --> toInt32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeNumber,num_to --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeNumber,num_to --> getMessage1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeNumber,num_to --> constructError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeNumber,num_to --> JS_dtostr,org.mozilla.javascript.DToA,);
EndClass 125
StartClass 126
Class(org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider,N,N,NA);
Method(<init>,void,Private,N,N);
Method(getMessage,java.lang.String,Public,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(getMessage,java.lang.String,);
Parameter(getMessage,java.lang.Object[],);
Parameter(<init>$2,org.mozilla.javascript.ScriptRuntime$1,);
Realization(org.mozilla.javascript.ScriptRuntime$MessageProvider);
Call(METHOD,org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider,<init>$2 --> <init>,org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider,getMessage --> getCurrentContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider,getMessage --> getLocale,org.mozilla.javascript.Context,);
EndClass 126
StartClass 127
Class(org.mozilla.javascript.RefCallable,Y,Y,Public);
Method(refCall,org.mozilla.javascript.Ref,Public,N,Y);
Parameter(refCall,org.mozilla.javascript.Context,);
Parameter(refCall,org.mozilla.javascript.Scriptable,);
Parameter(refCall,java.lang.Object[],);
Realization(org.mozilla.javascript.Callable);
EndClass 127
StartClass 128
Class(org.mozilla.javascript.DToA,N,N,NA);
Attribute(DTOSTR_STANDARD,int,Public,Y,Y,);
Attribute(DTOSTR_STANDARD_EXPONENTIAL,int,Public,Y,Y,);
Attribute(DTOSTR_FIXED,int,Public,Y,Y,);
Attribute(DTOSTR_EXPONENTIAL,int,Public,Y,Y,);
Attribute(DTOSTR_PRECISION,int,Public,Y,Y,);
Attribute(Frac_mask,int,Private,Y,Y,);
Attribute(Exp_shift,int,Private,Y,Y,);
Attribute(Exp_msk1,int,Private,Y,Y,);
Attribute(Frac_maskL,long,Private,Y,Y,);
Attribute(Exp_shiftL,int,Private,Y,Y,);
Attribute(Exp_msk1L,long,Private,Y,Y,);
Attribute(Bias,int,Private,Y,Y,);
Attribute(P,int,Private,Y,Y,);
Attribute(Exp_shift1,int,Private,Y,Y,);
Attribute(Exp_mask,int,Private,Y,Y,);
Attribute(Exp_mask_shifted,int,Private,Y,Y,);
Attribute(Bndry_mask,int,Private,Y,Y,);
Attribute(Log2P,int,Private,Y,Y,);
Attribute(Sign_bit,int,Private,Y,Y,);
Attribute(Exp_11,int,Private,Y,Y,);
Attribute(Ten_pmax,int,Private,Y,Y,);
Attribute(Quick_max,int,Private,Y,Y,);
Attribute(Bletch,int,Private,Y,Y,);
Attribute(Frac_mask1,int,Private,Y,Y,);
Attribute(Int_max,int,Private,Y,Y,);
Attribute(n_bigtens,int,Private,Y,Y,);
Attribute(tens,double[],Private,Y,Y,);
Attribute(bigtens,double[],Private,Y,Y,);
Attribute(dtoaModes,int[],Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(BASEDIGIT,char,Private,Y,N);
Method(lo0bits,int,Private,Y,N);
Method(hi0bits,int,Private,Y,N);
Method(stuffBits,void,Private,Y,N);
Method(d2b,java.math.BigInteger,Private,Y,N);
Method(JS_dtobasestr,java.lang.String,Public,Y,N);
Method(word0,int,Public,Y,N);
Method(setWord0,double,Public,Y,N);
Method(word1,int,Public,Y,N);
Method(pow5mult,java.math.BigInteger,Public,Y,N);
Method(roundOff,boolean,Public,Y,N);
Method(JS_dtoa,int,Public,Y,N);
Method(stripTrailingZeroes,void,Private,Y,N);
Method(JS_dtostr,void,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(BASEDIGIT,int,);
Parameter(lo0bits,int,);
Parameter(hi0bits,int,);
Parameter(stuffBits,byte[],);
Parameter(stuffBits,int,);
Parameter(stuffBits,int,);
Parameter(d2b,double,);
Parameter(d2b,int[],);
Parameter(d2b,int[],);
Parameter(JS_dtobasestr,int,);
Parameter(JS_dtobasestr,double,);
Parameter(word0,double,);
Parameter(setWord0,double,);
Parameter(setWord0,int,);
Parameter(word1,double,);
Parameter(pow5mult,java.math.BigInteger,);
Parameter(pow5mult,int,);
Parameter(roundOff,java.lang.StringBuilder,);
Parameter(JS_dtoa,double,);
Parameter(JS_dtoa,int,);
Parameter(JS_dtoa,boolean,);
Parameter(JS_dtoa,int,);
Parameter(JS_dtoa,boolean[],);
Parameter(JS_dtoa,java.lang.StringBuilder,);
Parameter(stripTrailingZeroes,java.lang.StringBuilder,);
Parameter(JS_dtostr,java.lang.StringBuilder,);
Parameter(JS_dtostr,int,);
Parameter(JS_dtostr,int,);
Parameter(JS_dtostr,double,);
Call(METHOD,org.mozilla.javascript.DToA,d2b --> lo0bits,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,d2b --> stuffBits,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,d2b --> hi0bits,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtobasestr --> d2b,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtobasestr --> BASEDIGIT,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtoa --> word0,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtoa --> setWord0,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtoa --> word1,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtoa --> d2b,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtoa --> stripTrailingZeroes,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtoa --> pow5mult,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtoa --> hi0bits,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtoa --> roundOff,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtostr --> JS_dtoa,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtostr --> word0,org.mozilla.javascript.DToA,);
Call(METHOD,org.mozilla.javascript.DToA,JS_dtostr --> word1,org.mozilla.javascript.DToA,);
Call(ATTRIBUTE,org.mozilla.javascript.DToA,JS_dtoa --> tens,org.mozilla.javascript.DToA,READ);
Call(ATTRIBUTE,org.mozilla.javascript.DToA,JS_dtoa --> bigtens,org.mozilla.javascript.DToA,READ);
Call(ATTRIBUTE,org.mozilla.javascript.DToA,JS_dtostr --> dtoaModes,org.mozilla.javascript.DToA,READ);
Call(ATTRIBUTE,org.mozilla.javascript.DToA,<clinit> --> tens,org.mozilla.javascript.DToA,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.DToA,<clinit> --> bigtens,org.mozilla.javascript.DToA,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.DToA,<clinit> --> dtoaModes,org.mozilla.javascript.DToA,WRITE);
EndClass 128
StartClass 129
Class(org.mozilla.javascript.NativeGlobal,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(URI_DECODE_RESERVED,java.lang.String,Private,Y,Y,);
Attribute(INVALID_UTF8,int,Private,Y,Y,);
Attribute(FTAG,java.lang.Object,Private,Y,Y,);
Attribute(Id_decodeURI,int,Private,Y,Y,);
Attribute(Id_decodeURIComponent,int,Private,Y,Y,);
Attribute(Id_encodeURI,int,Private,Y,Y,);
Attribute(Id_encodeURIComponent,int,Private,Y,Y,);
Attribute(Id_escape,int,Private,Y,Y,);
Attribute(Id_eval,int,Private,Y,Y,);
Attribute(Id_isFinite,int,Private,Y,Y,);
Attribute(Id_isNaN,int,Private,Y,Y,);
Attribute(Id_isXMLName,int,Private,Y,Y,);
Attribute(Id_parseFloat,int,Private,Y,Y,);
Attribute(Id_parseInt,int,Private,Y,Y,);
Attribute(Id_unescape,int,Private,Y,Y,);
Attribute(Id_uneval,int,Private,Y,Y,);
Attribute(LAST_SCOPE_FUNCTION_ID,int,Private,Y,Y,);
Attribute(Id_new_CommonError,int,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(init,void,Public,Y,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(js_parseInt,java.lang.Object,Private,N,N);
Method(js_parseFloat,java.lang.Object,Private,N,N);
Method(js_escape,java.lang.Object,Private,N,N);
Method(js_unescape,java.lang.Object,Private,N,N);
Method(js_eval,java.lang.Object,Private,N,N);
Method(isEvalFunction,boolean,Public,Y,N);
Method(constructError,org.mozilla.javascript.EcmaError,Public,Y,N);
Method(constructError$2,org.mozilla.javascript.EcmaError,Public,Y,N);
Method(encode,java.lang.String,Private,Y,N);
Method(toHexChar,char,Private,Y,N);
Method(unHex,int,Private,Y,N);
Method(unHex$2,int,Private,Y,N);
Method(decode,java.lang.String,Private,Y,N);
Method(encodeUnescaped,boolean,Private,Y,N);
Method(uriError,org.mozilla.javascript.EcmaError,Private,Y,N);
Method(oneUcs4ToUtf8Char,int,Private,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.Context,);
Parameter(init,org.mozilla.javascript.Scriptable,);
Parameter(init,boolean,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(js_parseInt,java.lang.Object[],);
Parameter(js_parseFloat,java.lang.Object[],);
Parameter(js_escape,java.lang.Object[],);
Parameter(js_unescape,java.lang.Object[],);
Parameter(js_eval,org.mozilla.javascript.Context,);
Parameter(js_eval,org.mozilla.javascript.Scriptable,);
Parameter(js_eval,java.lang.Object[],);
Parameter(isEvalFunction,java.lang.Object,);
Parameter(constructError,org.mozilla.javascript.Context,);
Parameter(constructError,java.lang.String,);
Parameter(constructError,java.lang.String,);
Parameter(constructError,org.mozilla.javascript.Scriptable,);
Parameter(constructError$2,org.mozilla.javascript.Context,);
Parameter(constructError$2,java.lang.String,);
Parameter(constructError$2,java.lang.String,);
Parameter(constructError$2,org.mozilla.javascript.Scriptable,);
Parameter(constructError$2,java.lang.String,);
Parameter(constructError$2,int,);
Parameter(constructError$2,int,);
Parameter(constructError$2,java.lang.String,);
Parameter(encode,java.lang.String,);
Parameter(encode,boolean,);
Parameter(toHexChar,int,);
Parameter(unHex,char,);
Parameter(unHex$2,char,);
Parameter(unHex$2,char,);
Parameter(decode,java.lang.String,);
Parameter(decode,boolean,);
Parameter(encodeUnescaped,char,);
Parameter(encodeUnescaped,boolean,);
Parameter(oneUcs4ToUtf8Char,byte[],);
Parameter(oneUcs4ToUtf8Char,int,);
Realization(org.mozilla.javascript.IdFunctionCall);
Call(METHOD,org.mozilla.javascript.NativeGlobal,init --> <init>,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> decode,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> encode,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> js_escape,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> js_eval,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> js_parseFloat,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> js_parseInt,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> js_unescape,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,encode --> encodeUnescaped,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,encode --> uriError,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,encode --> oneUcs4ToUtf8Char,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,encode --> toHexChar,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,unHex$2 --> unHex,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,decode --> uriError,org.mozilla.javascript.NativeGlobal,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,decode --> unHex$2,org.mozilla.javascript.NativeGlobal,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGlobal,init --> FTAG,org.mozilla.javascript.NativeGlobal,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGlobal,execIdCall --> FTAG,org.mozilla.javascript.NativeGlobal,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGlobal,isEvalFunction --> FTAG,org.mozilla.javascript.NativeGlobal,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGlobal,<clinit> --> FTAG,org.mozilla.javascript.NativeGlobal,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGlobal,init --> NaNobj,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGlobal,init --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGlobal,init --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGlobal,execIdCall --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGlobal,js_parseInt --> NaNobj,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGlobal,js_parseFloat --> NaNobj,org.mozilla.javascript.ScriptRuntime,READ);
Call(METHOD,org.mozilla.javascript.NativeGlobal,init --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,init --> <init>$2,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,init --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,init --> exportAsScopeProperty,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,init --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,init --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,init --> newObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,init --> put,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,init --> markAsConstructor,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,init --> setAttributes$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> toString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> wrapBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> extractFromScope,org.mozilla.javascript.xml.XMLLib,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> isXMLName,org.mozilla.javascript.xml.XMLLib,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> uneval,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> make,org.mozilla.javascript.NativeError,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,execIdCall --> unknown,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_parseInt --> toString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_parseInt --> toInt32$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_parseInt --> isStrWhiteSpaceChar,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_parseInt --> stringToNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_parseInt --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_parseFloat --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_parseFloat --> isStrWhiteSpaceChar,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_parseFloat --> wrapNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_escape --> toString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_escape --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_escape --> reportRuntimeError0,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_unescape --> toString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_unescape --> xDigitToInt,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_eval --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,js_eval --> evalSpecial,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,isEvalFunction --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,isEvalFunction --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,constructError --> constructError,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,constructError$2 --> constructError$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,toHexChar --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,uriError --> getMessage0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGlobal,uriError --> constructError,org.mozilla.javascript.ScriptRuntime,);
EndClass 129
StartClass 130
Class(org.mozilla.javascript.Icode,N,Y,NA);
Attribute(Icode_DELNAME,int,Public,Y,Y,);
Attribute(Icode_DUP,int,Public,Y,Y,);
Attribute(Icode_DUP2,int,Public,Y,Y,);
Attribute(Icode_SWAP,int,Public,Y,Y,);
Attribute(Icode_POP,int,Public,Y,Y,);
Attribute(Icode_POP_RESULT,int,Public,Y,Y,);
Attribute(Icode_IFEQ_POP,int,Public,Y,Y,);
Attribute(Icode_VAR_INC_DEC,int,Public,Y,Y,);
Attribute(Icode_NAME_INC_DEC,int,Public,Y,Y,);
Attribute(Icode_PROP_INC_DEC,int,Public,Y,Y,);
Attribute(Icode_ELEM_INC_DEC,int,Public,Y,Y,);
Attribute(Icode_REF_INC_DEC,int,Public,Y,Y,);
Attribute(Icode_SCOPE_LOAD,int,Public,Y,Y,);
Attribute(Icode_SCOPE_SAVE,int,Public,Y,Y,);
Attribute(Icode_TYPEOFNAME,int,Public,Y,Y,);
Attribute(Icode_NAME_AND_THIS,int,Public,Y,Y,);
Attribute(Icode_PROP_AND_THIS,int,Public,Y,Y,);
Attribute(Icode_ELEM_AND_THIS,int,Public,Y,Y,);
Attribute(Icode_VALUE_AND_THIS,int,Public,Y,Y,);
Attribute(Icode_CLOSURE_EXPR,int,Public,Y,Y,);
Attribute(Icode_CLOSURE_STMT,int,Public,Y,Y,);
Attribute(Icode_CALLSPECIAL,int,Public,Y,Y,);
Attribute(Icode_RETUNDEF,int,Public,Y,Y,);
Attribute(Icode_GOSUB,int,Public,Y,Y,);
Attribute(Icode_STARTSUB,int,Public,Y,Y,);
Attribute(Icode_RETSUB,int,Public,Y,Y,);
Attribute(Icode_LINE,int,Public,Y,Y,);
Attribute(Icode_SHORTNUMBER,int,Public,Y,Y,);
Attribute(Icode_INTNUMBER,int,Public,Y,Y,);
Attribute(Icode_LITERAL_NEW,int,Public,Y,Y,);
Attribute(Icode_LITERAL_SET,int,Public,Y,Y,);
Attribute(Icode_SPARE_ARRAYLIT,int,Public,Y,Y,);
Attribute(Icode_REG_IND_C0,int,Public,Y,Y,);
Attribute(Icode_REG_IND_C1,int,Public,Y,Y,);
Attribute(Icode_REG_IND_C2,int,Public,Y,Y,);
Attribute(Icode_REG_IND_C3,int,Public,Y,Y,);
Attribute(Icode_REG_IND_C4,int,Public,Y,Y,);
Attribute(Icode_REG_IND_C5,int,Public,Y,Y,);
Attribute(Icode_REG_IND1,int,Public,Y,Y,);
Attribute(Icode_REG_IND2,int,Public,Y,Y,);
Attribute(Icode_REG_IND4,int,Public,Y,Y,);
Attribute(Icode_REG_STR_C0,int,Public,Y,Y,);
Attribute(Icode_REG_STR_C1,int,Public,Y,Y,);
Attribute(Icode_REG_STR_C2,int,Public,Y,Y,);
Attribute(Icode_REG_STR_C3,int,Public,Y,Y,);
Attribute(Icode_REG_STR1,int,Public,Y,Y,);
Attribute(Icode_REG_STR2,int,Public,Y,Y,);
Attribute(Icode_REG_STR4,int,Public,Y,Y,);
Attribute(Icode_GETVAR1,int,Public,Y,Y,);
Attribute(Icode_SETVAR1,int,Public,Y,Y,);
Attribute(Icode_UNDEF,int,Public,Y,Y,);
Attribute(Icode_ZERO,int,Public,Y,Y,);
Attribute(Icode_ONE,int,Public,Y,Y,);
Attribute(Icode_ENTERDQ,int,Public,Y,Y,);
Attribute(Icode_LEAVEDQ,int,Public,Y,Y,);
Attribute(Icode_TAIL_CALL,int,Public,Y,Y,);
Attribute(Icode_LOCAL_CLEAR,int,Public,Y,Y,);
Attribute(Icode_LITERAL_GETTER,int,Public,Y,Y,);
Attribute(Icode_LITERAL_SETTER,int,Public,Y,Y,);
Attribute(Icode_SETCONST,int,Public,Y,Y,);
Attribute(Icode_SETCONSTVAR,int,Public,Y,Y,);
Attribute(Icode_SETCONSTVAR1,int,Public,Y,Y,);
Attribute(Icode_GENERATOR,int,Public,Y,Y,);
Attribute(Icode_GENERATOR_END,int,Public,Y,Y,);
Attribute(Icode_DEBUGGER,int,Public,Y,Y,);
Attribute(MIN_ICODE,int,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(bytecodeName,java.lang.String,Public,Y,N);
Method(validIcode,boolean,Public,Y,N);
Method(validTokenCode,boolean,Public,Y,N);
Method(validBytecode,boolean,Public,Y,N);
Parameter(bytecodeName,int,);
Parameter(validIcode,int,);
Parameter(validTokenCode,int,);
Parameter(validBytecode,int,);
SubClass(org.mozilla.javascript.Interpreter);
SubClass(org.mozilla.javascript.CodeGenerator);
Call(METHOD,org.mozilla.javascript.Icode,bytecodeName --> validBytecode,org.mozilla.javascript.Icode,);
Call(METHOD,org.mozilla.javascript.Icode,validBytecode --> validIcode,org.mozilla.javascript.Icode,);
Call(METHOD,org.mozilla.javascript.Icode,validBytecode --> validTokenCode,org.mozilla.javascript.Icode,);
EndClass 130
StartClass 131
Class(org.mozilla.javascript.InterpreterData,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(INITIAL_MAX_ICODE_LENGTH,int,Public,Y,Y,);
Attribute(INITIAL_STRINGTABLE_SIZE,int,Public,Y,Y,);
Attribute(INITIAL_NUMBERTABLE_SIZE,int,Public,Y,Y,);
Attribute(itsName,java.lang.String,Public,N,N,);
Attribute(itsSourceFile,java.lang.String,Public,N,N,);
Attribute(itsNeedsActivation,boolean,Public,N,N,);
Attribute(itsFunctionType,int,Public,N,N,);
Attribute(itsStringTable,java.lang.String[],Public,N,N,);
Attribute(itsDoubleTable,double[],Public,N,N,);
Attribute(itsNestedFunctions,org.mozilla.javascript.InterpreterData[],Public,N,N,);
Attribute(itsRegExpLiterals,java.lang.Object[],Public,N,N,);
Attribute(itsICode,byte[],Public,N,N,);
Attribute(itsExceptionTable,int[],Public,N,N,);
Attribute(itsMaxVars,int,Public,N,N,);
Attribute(itsMaxLocals,int,Public,N,N,);
Attribute(itsMaxStack,int,Public,N,N,);
Attribute(itsMaxFrameArray,int,Public,N,N,);
Attribute(argNames,java.lang.String[],Public,N,N,);
Attribute(argIsConst,boolean[],Public,N,N,);
Attribute(argCount,int,Public,N,N,);
Attribute(itsMaxCalleeArgs,int,Public,N,N,);
Attribute(encodedSource,java.lang.String,Public,N,N,);
Attribute(encodedSourceStart,int,Public,N,N,);
Attribute(encodedSourceEnd,int,Public,N,N,);
Attribute(languageVersion,int,Public,N,N,);
Attribute(isStrict,boolean,Public,N,N,);
Attribute(topLevel,boolean,Public,N,N,);
Attribute(literalIds,java.lang.Object[],Public,N,N,);
Attribute(longJumps,org.mozilla.javascript.UintMap,Public,N,N,);
Attribute(firstLinePC,int,Public,N,N,);
Attribute(parentData,org.mozilla.javascript.InterpreterData,Public,N,N,);
Attribute(evalScriptFlag,boolean,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(init,void,Private,N,N);
Method(isTopLevel,boolean,Public,N,N);
Method(isFunction,boolean,Public,N,N);
Method(getFunctionName,java.lang.String,Public,N,N);
Method(getParamCount,int,Public,N,N);
Method(getParamAndVarCount,int,Public,N,N);
Method(getParamOrVarName,java.lang.String,Public,N,N);
Method(getParamOrVarConst,boolean,Public,N,N);
Method(getSourceName,java.lang.String,Public,N,N);
Method(isGeneratedScript,boolean,Public,N,N);
Method(getLineNumbers,int[],Public,N,N);
Method(getFunctionCount,int,Public,N,N);
Method(getFunction,org.mozilla.javascript.debug.DebuggableScript,Public,N,N);
Method(getParent,org.mozilla.javascript.debug.DebuggableScript,Public,N,N);
Parameter(<init>,int,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,boolean,);
Parameter(<init>$2,org.mozilla.javascript.InterpreterData,);
Parameter(getParamOrVarName,int,);
Parameter(getParamOrVarConst,int,);
Parameter(getFunction,int,);
Realization(org.mozilla.javascript.debug.DebuggableScript);
Composition(org.mozilla.javascript.UintMap);
Composition(org.mozilla.javascript.InterpreterData);
Call(METHOD,org.mozilla.javascript.InterpreterData,<init> --> init,org.mozilla.javascript.InterpreterData,);
Call(METHOD,org.mozilla.javascript.InterpreterData,<init>$2 --> init,org.mozilla.javascript.InterpreterData,);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init> --> firstLinePC,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init> --> languageVersion,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init> --> itsSourceFile,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init> --> encodedSource,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init> --> isStrict,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init>$2 --> languageVersion,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init>$2 --> itsSourceFile,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init>$2 --> encodedSource,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init>$2 --> firstLinePC,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init>$2 --> parentData,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init>$2 --> languageVersion,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init>$2 --> itsSourceFile,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,<init>$2 --> encodedSource,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,init --> itsICode,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,init --> itsStringTable,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,isTopLevel --> topLevel,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,isFunction --> itsFunctionType,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,getFunctionName --> itsName,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,getParamCount --> argCount,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,getParamAndVarCount --> argNames,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,getParamOrVarName --> argNames,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,getParamOrVarConst --> argIsConst,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,getSourceName --> itsSourceFile,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,isGeneratedScript --> itsSourceFile,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,getFunctionCount --> itsNestedFunctions,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,getFunction --> itsNestedFunctions,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterpreterData,getParent --> parentData,org.mozilla.javascript.InterpreterData,READ);
Call(METHOD,org.mozilla.javascript.InterpreterData,isGeneratedScript --> isGeneratedScript,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.InterpreterData,getLineNumbers --> getLineNumbers,org.mozilla.javascript.Interpreter,);
EndClass 131
StartClass 132
Class(org.mozilla.javascript.Interpreter$CallFrame,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(parentFrame,org.mozilla.javascript.Interpreter$CallFrame,Public,N,N,);
Attribute(frameIndex,int,Public,N,N,);
Attribute(frozen,boolean,Public,N,N,);
Attribute(fnOrScript,org.mozilla.javascript.InterpretedFunction,Public,N,N,);
Attribute(idata,org.mozilla.javascript.InterpreterData,Public,N,N,);
Attribute(stack,java.lang.Object[],Public,N,N,);
Attribute(stackAttributes,int[],Public,N,N,);
Attribute(sDbl,double[],Public,N,N,);
Attribute(varSource,org.mozilla.javascript.Interpreter$CallFrame,Public,N,N,);
Attribute(localShift,int,Public,N,N,);
Attribute(emptyStackTop,int,Public,N,N,);
Attribute(debuggerFrame,org.mozilla.javascript.debug.DebugFrame,Public,N,N,);
Attribute(useActivation,boolean,Public,N,N,);
Attribute(isContinuationsTopFrame,boolean,Public,N,N,);
Attribute(thisObj,org.mozilla.javascript.Scriptable,Public,N,N,);
Attribute(result,java.lang.Object,Public,N,N,);
Attribute(resultDbl,double,Public,N,N,);
Attribute(pc,int,Public,N,N,);
Attribute(pcPrevBranch,int,Public,N,N,);
Attribute(pcSourceLineStart,int,Public,N,N,);
Attribute(scope,org.mozilla.javascript.Scriptable,Public,N,N,);
Attribute(savedStackTop,int,Public,N,N,);
Attribute(savedCallOp,int,Public,N,N,);
Attribute(throwable,java.lang.Object,Public,N,N,);
Method(<init>,void,Private,N,N);
Method(cloneFrozen,org.mozilla.javascript.Interpreter$CallFrame,Public,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>$2,org.mozilla.javascript.Interpreter$1,);
Composition(org.mozilla.javascript.Interpreter$CallFrame);
Composition(org.mozilla.javascript.InterpretedFunction);
Composition(org.mozilla.javascript.InterpreterData);
Composition(org.mozilla.javascript.debug.DebugFrame);
Composition(org.mozilla.javascript.Scriptable);
Call(METHOD,org.mozilla.javascript.Interpreter$CallFrame,<init>$2 --> <init>,org.mozilla.javascript.Interpreter$CallFrame,);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$CallFrame,cloneFrozen --> frozen,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$CallFrame,cloneFrozen --> stack,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$CallFrame,cloneFrozen --> stackAttributes,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$CallFrame,cloneFrozen --> sDbl,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$CallFrame,cloneFrozen --> stack,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$CallFrame,cloneFrozen --> stackAttributes,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$CallFrame,cloneFrozen --> sDbl,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$CallFrame,cloneFrozen --> frozen,org.mozilla.javascript.Interpreter$CallFrame,WRITE);
Call(METHOD,org.mozilla.javascript.Interpreter$CallFrame,cloneFrozen --> codeBug,org.mozilla.javascript.Kit,);
EndClass 132
StartClass 133
Class(org.mozilla.javascript.Interpreter$GeneratorState,N,N,NA);
Attribute(operation,int,Public,N,N,);
Attribute(value,java.lang.Object,Public,N,N,);
Attribute(returnedException,java.lang.RuntimeException,Public,N,N,);
Method(<init>,void,Public,N,N);
Parameter(<init>,int,);
Parameter(<init>,java.lang.Object,);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$GeneratorState,<init> --> operation,org.mozilla.javascript.Interpreter$GeneratorState,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$GeneratorState,<init> --> value,org.mozilla.javascript.Interpreter$GeneratorState,WRITE);
EndClass 133
StartClass 134
Class(org.mozilla.javascript.Interpreter$1,N,N,NA);
EndClass 134
StartClass 135
Class(org.mozilla.javascript.NativeGenerator,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(GENERATOR_TAG,java.lang.Object,Private,Y,Y,);
Attribute(GENERATOR_SEND,int,Public,Y,Y,);
Attribute(GENERATOR_THROW,int,Public,Y,Y,);
Attribute(GENERATOR_CLOSE,int,Public,Y,Y,);
Attribute(Id_close,int,Private,Y,Y,);
Attribute(Id_next,int,Private,Y,Y,);
Attribute(Id_send,int,Private,Y,Y,);
Attribute(Id_throw,int,Private,Y,Y,);
Attribute(Id___iterator__,int,Private,Y,Y,);
Attribute(MAX_PROTOTYPE_ID,int,Private,Y,Y,);
Attribute(function,org.mozilla.javascript.NativeFunction,Private,N,N,);
Attribute(savedState,java.lang.Object,Private,N,N,);
Attribute(lineSource,java.lang.String,Private,N,N,);
Attribute(lineNumber,int,Private,N,N,);
Attribute(firstTime,boolean,Private,N,N,);
Attribute(locked,boolean,Private,N,N,);
Method(init,org.mozilla.javascript.NativeGenerator,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(initPrototypeId,void,Protected,N,N);
Method(execIdCall,java.lang.Object,Public,N,N);
Method(resume,java.lang.Object,Private,N,N);
Method(findPrototypeId,int,Protected,N,N);
Method(access$000,java.lang.Object,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(init,org.mozilla.javascript.ScriptableObject,);
Parameter(init,boolean,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,org.mozilla.javascript.NativeFunction,);
Parameter(<init>$2,java.lang.Object,);
Parameter(initPrototypeId,int,);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
Parameter(resume,org.mozilla.javascript.Context,);
Parameter(resume,org.mozilla.javascript.Scriptable,);
Parameter(resume,int,);
Parameter(resume,java.lang.Object,);
Parameter(findPrototypeId,java.lang.String,);
Parameter(access$000,org.mozilla.javascript.NativeGenerator,);
Parameter(access$000,org.mozilla.javascript.Context,);
Parameter(access$000,org.mozilla.javascript.Scriptable,);
Parameter(access$000,int,);
Parameter(access$000,java.lang.Object,);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.IdScriptableObject);
Composition(org.mozilla.javascript.NativeFunction);
Call(METHOD,org.mozilla.javascript.NativeGenerator,init --> <init>,org.mozilla.javascript.NativeGenerator,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,execIdCall --> resume,org.mozilla.javascript.NativeGenerator,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,access$000 --> resume,org.mozilla.javascript.NativeGenerator,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,init --> GENERATOR_TAG,org.mozilla.javascript.NativeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,<init> --> firstTime,org.mozilla.javascript.NativeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,<init>$2 --> GENERATOR_TAG,org.mozilla.javascript.NativeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,<init>$2 --> firstTime,org.mozilla.javascript.NativeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,<init>$2 --> function,org.mozilla.javascript.NativeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,<init>$2 --> savedState,org.mozilla.javascript.NativeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,initPrototypeId --> GENERATOR_TAG,org.mozilla.javascript.NativeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,execIdCall --> GENERATOR_TAG,org.mozilla.javascript.NativeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,execIdCall --> firstTime,org.mozilla.javascript.NativeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,execIdCall --> firstTime,org.mozilla.javascript.NativeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,resume --> savedState,org.mozilla.javascript.NativeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,resume --> lineSource,org.mozilla.javascript.NativeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,resume --> lineNumber,org.mozilla.javascript.NativeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,resume --> locked,org.mozilla.javascript.NativeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,resume --> function,org.mozilla.javascript.NativeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,resume --> locked,org.mozilla.javascript.NativeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,resume --> savedState,org.mozilla.javascript.NativeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,resume --> lineNumber,org.mozilla.javascript.NativeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,resume --> lineSource,org.mozilla.javascript.NativeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,<clinit> --> GENERATOR_TAG,org.mozilla.javascript.NativeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,execIdCall --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator,resume --> instance,org.mozilla.javascript.Undefined,READ);
Call(METHOD,org.mozilla.javascript.NativeGenerator,init --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,init --> getObjectPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,init --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,init --> activatePrototypeMap,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,init --> sealObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,init --> associateValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,<init> --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,<init>$2 --> <init>,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,<init>$2 --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,<init>$2 --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,<init>$2 --> getTopScopeValue,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,<init>$2 --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,initPrototypeId --> initPrototypeMethod,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,execIdCall --> hasTag,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,execIdCall --> execIdCall,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,execIdCall --> methodId,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,execIdCall --> incompatibleCallError,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,execIdCall --> <init>,org.mozilla.javascript.NativeGenerator$GeneratorClosedException,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,execIdCall --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,resume --> getStopIterationObject,org.mozilla.javascript.NativeIterator,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,resume --> <init>$2,org.mozilla.javascript.JavaScriptException,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,resume --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,resume --> resumeGenerator,org.mozilla.javascript.NativeFunction,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,resume --> lineNumber,org.mozilla.javascript.RhinoException,);
Call(METHOD,org.mozilla.javascript.NativeGenerator,resume --> lineSource,org.mozilla.javascript.RhinoException,);
EndClass 135
StartClass 136
Class(org.mozilla.javascript.Interpreter$ContinuationJump,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(capturedFrame,org.mozilla.javascript.Interpreter$CallFrame,Public,N,N,);
Attribute(branchFrame,org.mozilla.javascript.Interpreter$CallFrame,Public,N,N,);
Attribute(result,java.lang.Object,Public,N,N,);
Attribute(resultDbl,double,Public,N,N,);
Method(<init>,void,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeContinuation,);
Parameter(<init>,org.mozilla.javascript.Interpreter$CallFrame,);
Composition(org.mozilla.javascript.Interpreter$CallFrame);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$ContinuationJump,<init> --> capturedFrame,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$ContinuationJump,<init> --> branchFrame,org.mozilla.javascript.Interpreter$ContinuationJump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$ContinuationJump,<init> --> capturedFrame,org.mozilla.javascript.Interpreter$ContinuationJump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$ContinuationJump,<init> --> branchFrame,org.mozilla.javascript.Interpreter$ContinuationJump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$ContinuationJump,<init> --> frameIndex,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$ContinuationJump,<init> --> parentFrame,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Interpreter$ContinuationJump,<init> --> frozen,org.mozilla.javascript.Interpreter$CallFrame,READ);
Call(METHOD,org.mozilla.javascript.Interpreter$ContinuationJump,<init> --> getImplementation,org.mozilla.javascript.NativeContinuation,);
Call(METHOD,org.mozilla.javascript.Interpreter$ContinuationJump,<init> --> codeBug,org.mozilla.javascript.Kit,);
EndClass 136
StartClass 137
Class(org.mozilla.javascript.ConstProperties,Y,Y,Public);
Method(putConst,void,Public,N,Y);
Method(defineConst,void,Public,N,Y);
Method(isConst,boolean,Public,N,Y);
Parameter(putConst,java.lang.String,);
Parameter(putConst,org.mozilla.javascript.Scriptable,);
Parameter(putConst,java.lang.Object,);
Parameter(defineConst,java.lang.String,);
Parameter(defineConst,org.mozilla.javascript.Scriptable,);
Parameter(isConst,java.lang.String,);
EndClass 137
StartClass 138
Class(org.mozilla.javascript.UintMap,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(A,int,Private,Y,Y,);
Attribute(EMPTY,int,Private,Y,Y,);
Attribute(DELETED,int,Private,Y,Y,);
Attribute(keys,int[],Private,N,N,);
Attribute(values,java.lang.Object[],Private,N,N,);
Attribute(power,int,Private,N,N,);
Attribute(keyCount,int,Private,N,N,);
Attribute(occupiedCount,int,Private,N,N,);
Attribute(ivaluesShift,int,Private,N,N,);
Attribute(check,boolean,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(isEmpty,boolean,Public,N,N);
Method(size,int,Public,N,N);
Method(has,boolean,Public,N,N);
Method(getObject,java.lang.Object,Public,N,N);
Method(getInt,int,Public,N,N);
Method(getExistingInt,int,Public,N,N);
Method(put,void,Public,N,N);
Method(put$2,void,Public,N,N);
Method(remove,void,Public,N,N);
Method(clear,void,Public,N,N);
Method(getKeys,int[],Public,N,N);
Method(tableLookupStep,int,Private,Y,N);
Method(findIndex,int,Private,N,N);
Method(insertNewKey,int,Private,N,N);
Method(rehashTable,void,Private,N,N);
Method(ensureIndex,int,Private,N,N);
Method(writeObject,void,Private,N,N);
Method(readObject,void,Private,N,N);
Parameter(<init>$2,int,);
Parameter(has,int,);
Parameter(getObject,int,);
Parameter(getInt,int,);
Parameter(getInt,int,);
Parameter(getExistingInt,int,);
Parameter(put,int,);
Parameter(put,java.lang.Object,);
Parameter(put$2,int,);
Parameter(put$2,int,);
Parameter(remove,int,);
Parameter(tableLookupStep,int,);
Parameter(tableLookupStep,int,);
Parameter(tableLookupStep,int,);
Parameter(findIndex,int,);
Parameter(insertNewKey,int,);
Parameter(rehashTable,boolean,);
Parameter(ensureIndex,int,);
Parameter(ensureIndex,boolean,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(readObject,java.io.ObjectInputStream,);
Call(METHOD,org.mozilla.javascript.UintMap,<init> --> <init>$2,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,has --> findIndex,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,getObject --> findIndex,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,getInt --> findIndex,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,getExistingInt --> findIndex,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,put --> ensureIndex,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,put$2 --> ensureIndex,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,remove --> findIndex,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,findIndex --> tableLookupStep,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,insertNewKey --> tableLookupStep,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,rehashTable --> insertNewKey,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,ensureIndex --> tableLookupStep,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,ensureIndex --> rehashTable,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,ensureIndex --> insertNewKey,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.UintMap,readObject --> insertNewKey,org.mozilla.javascript.UintMap,);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,<init>$2 --> power,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,isEmpty --> keyCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,size --> keyCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,getObject --> values,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,getInt --> ivaluesShift,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,getInt --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,getExistingInt --> ivaluesShift,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,getExistingInt --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,put --> values,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,put --> power,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,put --> values,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,put$2 --> ivaluesShift,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,put$2 --> power,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,put$2 --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,put$2 --> keys,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,put$2 --> ivaluesShift,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,remove --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,remove --> keyCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,remove --> values,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,remove --> ivaluesShift,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,remove --> keyCount,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,clear --> power,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,clear --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,clear --> values,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,clear --> ivaluesShift,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,clear --> keyCount,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,clear --> occupiedCount,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,getKeys --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,getKeys --> keyCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,findIndex --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,findIndex --> power,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,insertNewKey --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,insertNewKey --> power,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,insertNewKey --> occupiedCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,insertNewKey --> keyCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,insertNewKey --> occupiedCount,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,insertNewKey --> keyCount,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> keyCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> occupiedCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> power,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> ivaluesShift,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> values,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> power,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> keys,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> ivaluesShift,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> values,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> occupiedCount,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,rehashTable --> keyCount,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,ensureIndex --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,ensureIndex --> power,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,ensureIndex --> occupiedCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,ensureIndex --> keyCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,ensureIndex --> occupiedCount,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,ensureIndex --> keyCount,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,writeObject --> keyCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,writeObject --> ivaluesShift,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,writeObject --> values,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,writeObject --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,readObject --> keyCount,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,readObject --> power,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,readObject --> keys,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,readObject --> ivaluesShift,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,readObject --> values,org.mozilla.javascript.UintMap,READ);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,readObject --> keyCount,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,readObject --> keys,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,readObject --> ivaluesShift,org.mozilla.javascript.UintMap,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.UintMap,readObject --> values,org.mozilla.javascript.UintMap,WRITE);
Call(METHOD,org.mozilla.javascript.UintMap,<init>$2 --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.UintMap,has --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.UintMap,getObject --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.UintMap,getInt --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.UintMap,getExistingInt --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.UintMap,put --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.UintMap,put$2 --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.UintMap,remove --> codeBug,org.mozilla.javascript.Kit,);
EndClass 138
StartClass 139
Class(org.mozilla.javascript.debug.DebugFrame,Y,Y,Public);
Method(onEnter,void,Public,N,Y);
Method(onLineChange,void,Public,N,Y);
Method(onExceptionThrown,void,Public,N,Y);
Method(onExit,void,Public,N,Y);
Method(onDebuggerStatement,void,Public,N,Y);
Parameter(onEnter,org.mozilla.javascript.Context,);
Parameter(onEnter,org.mozilla.javascript.Scriptable,);
Parameter(onEnter,org.mozilla.javascript.Scriptable,);
Parameter(onEnter,java.lang.Object[],);
Parameter(onLineChange,org.mozilla.javascript.Context,);
Parameter(onLineChange,int,);
Parameter(onExceptionThrown,org.mozilla.javascript.Context,);
Parameter(onExceptionThrown,java.lang.Throwable,);
Parameter(onExit,org.mozilla.javascript.Context,);
Parameter(onExit,boolean,);
Parameter(onExit,java.lang.Object,);
Parameter(onDebuggerStatement,org.mozilla.javascript.Context,);
EndClass 139
StartClass 140
Class(org.mozilla.javascript.CodeGenerator,N,N,NA);
Attribute(MIN_LABEL_TABLE_SIZE,int,Private,Y,Y,);
Attribute(MIN_FIXUP_TABLE_SIZE,int,Private,Y,Y,);
Attribute(compilerEnv,org.mozilla.javascript.CompilerEnvirons,Private,N,N,);
Attribute(itsInFunctionFlag,boolean,Private,N,N,);
Attribute(itsInTryFlag,boolean,Private,N,N,);
Attribute(itsData,org.mozilla.javascript.InterpreterData,Private,N,N,);
Attribute(scriptOrFn,org.mozilla.javascript.ast.ScriptNode,Private,N,N,);
Attribute(iCodeTop,int,Private,N,N,);
Attribute(stackDepth,int,Private,N,N,);
Attribute(lineNumber,int,Private,N,N,);
Attribute(doubleTableTop,int,Private,N,N,);
Attribute(strings,org.mozilla.javascript.ObjToIntMap,Private,N,N,);
Attribute(localTop,int,Private,N,N,);
Attribute(labelTable,int[],Private,N,N,);
Attribute(labelTableTop,int,Private,N,N,);
Attribute(fixupTable,long[],Private,N,N,);
Attribute(fixupTableTop,int,Private,N,N,);
Attribute(literalIds,org.mozilla.javascript.ObjArray,Private,N,N,);
Attribute(exceptionTableTop,int,Private,N,N,);
Attribute(ECF_TAIL,int,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(compile,org.mozilla.javascript.InterpreterData,Public,N,N);
Method(generateFunctionICode,void,Private,N,N);
Method(generateICodeFromTree,void,Private,N,N);
Method(generateNestedFunctions,void,Private,N,N);
Method(generateRegExpLiterals,void,Private,N,N);
Method(updateLineNumber,void,Private,N,N);
Method(badTree,java.lang.RuntimeException,Private,N,N);
Method(visitStatement,void,Private,N,N);
Method(visitExpression,void,Private,N,N);
Method(generateCallFunAndThis,void,Private,N,N);
Method(visitIncDec,void,Private,N,N);
Method(visitLiteral,void,Private,N,N);
Method(visitArrayComprehension,void,Private,N,N);
Method(getLocalBlockRef,int,Private,N,N);
Method(getTargetLabel,int,Private,N,N);
Method(markTargetLabel,void,Private,N,N);
Method(addGoto,void,Private,N,N);
Method(fixLabelGotos,void,Private,N,N);
Method(addBackwardGoto,void,Private,N,N);
Method(resolveForwardGoto,void,Private,N,N);
Method(resolveGoto,void,Private,N,N);
Method(addToken,void,Private,N,N);
Method(addIcode,void,Private,N,N);
Method(addUint8,void,Private,N,N);
Method(addUint16,void,Private,N,N);
Method(addInt,void,Private,N,N);
Method(getDoubleIndex,int,Private,N,N);
Method(addGotoOp,void,Private,N,N);
Method(addVarOp,void,Private,N,N);
Method(addStringOp,void,Private,N,N);
Method(addIndexOp,void,Private,N,N);
Method(addStringPrefix,void,Private,N,N);
Method(addIndexPrefix,void,Private,N,N);
Method(addExceptionHandler,void,Private,N,N);
Method(increaseICodeCapacity,byte[],Private,N,N);
Method(stackChange,void,Private,N,N);
Method(allocLocal,int,Private,N,N);
Method(releaseLocal,void,Private,N,N);
Parameter(compile,org.mozilla.javascript.CompilerEnvirons,);
Parameter(compile,org.mozilla.javascript.ast.ScriptNode,);
Parameter(compile,java.lang.String,);
Parameter(compile,boolean,);
Parameter(generateICodeFromTree,org.mozilla.javascript.Node,);
Parameter(updateLineNumber,org.mozilla.javascript.Node,);
Parameter(badTree,org.mozilla.javascript.Node,);
Parameter(visitStatement,org.mozilla.javascript.Node,);
Parameter(visitStatement,int,);
Parameter(visitExpression,org.mozilla.javascript.Node,);
Parameter(visitExpression,int,);
Parameter(generateCallFunAndThis,org.mozilla.javascript.Node,);
Parameter(visitIncDec,org.mozilla.javascript.Node,);
Parameter(visitIncDec,org.mozilla.javascript.Node,);
Parameter(visitLiteral,org.mozilla.javascript.Node,);
Parameter(visitLiteral,org.mozilla.javascript.Node,);
Parameter(visitArrayComprehension,org.mozilla.javascript.Node,);
Parameter(visitArrayComprehension,org.mozilla.javascript.Node,);
Parameter(visitArrayComprehension,org.mozilla.javascript.Node,);
Parameter(getLocalBlockRef,org.mozilla.javascript.Node,);
Parameter(getTargetLabel,org.mozilla.javascript.Node,);
Parameter(markTargetLabel,org.mozilla.javascript.Node,);
Parameter(addGoto,org.mozilla.javascript.Node,);
Parameter(addGoto,int,);
Parameter(addBackwardGoto,int,);
Parameter(addBackwardGoto,int,);
Parameter(resolveForwardGoto,int,);
Parameter(resolveGoto,int,);
Parameter(resolveGoto,int,);
Parameter(addToken,int,);
Parameter(addIcode,int,);
Parameter(addUint8,int,);
Parameter(addUint16,int,);
Parameter(addInt,int,);
Parameter(getDoubleIndex,double,);
Parameter(addGotoOp,int,);
Parameter(addVarOp,int,);
Parameter(addVarOp,int,);
Parameter(addStringOp,int,);
Parameter(addStringOp,java.lang.String,);
Parameter(addIndexOp,int,);
Parameter(addIndexOp,int,);
Parameter(addStringPrefix,java.lang.String,);
Parameter(addIndexPrefix,int,);
Parameter(addExceptionHandler,int,);
Parameter(addExceptionHandler,int,);
Parameter(addExceptionHandler,int,);
Parameter(addExceptionHandler,boolean,);
Parameter(addExceptionHandler,int,);
Parameter(addExceptionHandler,int,);
Parameter(increaseICodeCapacity,int,);
Parameter(stackChange,int,);
Parameter(releaseLocal,int,);
SuperClass(org.mozilla.javascript.Icode);
Generalization(org.mozilla.javascript.Icode);
Composition(org.mozilla.javascript.CompilerEnvirons);
Composition(org.mozilla.javascript.InterpreterData);
Composition(org.mozilla.javascript.ast.ScriptNode);
Composition(org.mozilla.javascript.ObjToIntMap);
Composition(org.mozilla.javascript.ObjArray);
Call(METHOD,org.mozilla.javascript.CodeGenerator,compile --> generateFunctionICode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,compile --> generateICodeFromTree,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> addUint16,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> generateICodeFromTree,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> generateNestedFunctions,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> generateRegExpLiterals,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> visitStatement,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> fixLabelGotos,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> addToken,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> <init>,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> generateFunctionICode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,updateLineNumber --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,updateLineNumber --> addUint16,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> addIndexOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> stackChange,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> updateLineNumber,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> visitStatement,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> visitExpression,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> addToken,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> allocLocal,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> releaseLocal,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> badTree,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> addGoto,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> markTargetLabel,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> getLocalBlockRef,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> getTargetLabel,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> addExceptionHandler,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> addStringPrefix,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> addIndexPrefix,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> addUint8,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> addUint16,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> addIndexOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> stackChange,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getLocalBlockRef,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> visitExpression,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> generateCallFunAndThis,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> addUint8,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> addUint16,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> addGotoOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> resolveForwardGoto,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> addStringOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> addToken,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> addVarOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> visitIncDec,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> addInt,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getDoubleIndex,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> visitLiteral,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> visitArrayComprehension,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> updateLineNumber,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> addBackwardGoto,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> badTree,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateCallFunAndThis --> addStringOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateCallFunAndThis --> stackChange,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateCallFunAndThis --> visitExpression,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateCallFunAndThis --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> addVarOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> addUint8,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> stackChange,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> addStringOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> visitExpression,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> badTree,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> badTree,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> addIndexOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> stackChange,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> visitExpression,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> addToken,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitArrayComprehension --> visitStatement,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitArrayComprehension --> visitExpression,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,markTargetLabel --> getTargetLabel,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addGoto --> getTargetLabel,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addGoto --> addBackwardGoto,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addGoto --> addGotoOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,fixLabelGotos --> resolveGoto,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addBackwardGoto --> addGotoOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addBackwardGoto --> resolveGoto,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,resolveForwardGoto --> resolveGoto,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addToken --> addUint8,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIcode --> addUint8,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addUint8 --> increaseICodeCapacity,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addUint16 --> increaseICodeCapacity,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addInt --> increaseICodeCapacity,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addGotoOp --> increaseICodeCapacity,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addVarOp --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addVarOp --> addUint8,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addVarOp --> addIndexOp,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addStringOp --> addStringPrefix,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addStringOp --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addStringOp --> addToken,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIndexOp --> addIndexPrefix,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIndexOp --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIndexOp --> addToken,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addStringPrefix --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addStringPrefix --> addUint8,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addStringPrefix --> addUint16,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addStringPrefix --> addInt,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIndexPrefix --> addIcode,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIndexPrefix --> addUint8,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIndexPrefix --> addUint16,org.mozilla.javascript.CodeGenerator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIndexPrefix --> addInt,org.mozilla.javascript.CodeGenerator,);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,<init> --> strings,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,<init> --> literalIds,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,compile --> scriptOrFn,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,compile --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,compile --> compilerEnv,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,compile --> scriptOrFn,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,compile --> itsData,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> scriptOrFn,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> itsInFunctionFlag,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> strings,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> doubleTableTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> exceptionTableTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> scriptOrFn,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> literalIds,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> scriptOrFn,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> compilerEnv,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> compilerEnv,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> scriptOrFn,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> itsData,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateRegExpLiterals --> scriptOrFn,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateRegExpLiterals --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,updateLineNumber --> lineNumber,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,updateLineNumber --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,updateLineNumber --> lineNumber,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitStatement --> scriptOrFn,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitStatement --> itsInFunctionFlag,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitStatement --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitStatement --> itsInTryFlag,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitStatement --> labelTable,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitStatement --> lineNumber,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitStatement --> stackDepth,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitStatement --> itsInTryFlag,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> stackDepth,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> scriptOrFn,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> lineNumber,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> compilerEnv,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> itsInTryFlag,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> itsInFunctionFlag,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> stackDepth,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitIncDec --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitIncDec --> scriptOrFn,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitLiteral --> literalIds,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitArrayComprehension --> stackDepth,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,getTargetLabel --> labelTableTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,getTargetLabel --> labelTable,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,getTargetLabel --> labelTable,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,getTargetLabel --> labelTableTop,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,markTargetLabel --> labelTable,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,markTargetLabel --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addGoto --> labelTableTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addGoto --> labelTable,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addGoto --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addGoto --> fixupTableTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addGoto --> fixupTable,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addGoto --> fixupTable,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addGoto --> fixupTableTop,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,fixLabelGotos --> fixupTableTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,fixLabelGotos --> fixupTable,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,fixLabelGotos --> labelTable,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,fixLabelGotos --> fixupTableTop,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addBackwardGoto --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,resolveForwardGoto --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,resolveGoto --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addUint8 --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addUint8 --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addUint8 --> iCodeTop,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addUint16 --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addUint16 --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addUint16 --> iCodeTop,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addInt --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addInt --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addInt --> iCodeTop,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,getDoubleIndex --> doubleTableTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,getDoubleIndex --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,getDoubleIndex --> doubleTableTop,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addGotoOp --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addGotoOp --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addGotoOp --> iCodeTop,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addStringPrefix --> strings,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addExceptionHandler --> exceptionTableTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addExceptionHandler --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addExceptionHandler --> exceptionTableTop,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,increaseICodeCapacity --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,increaseICodeCapacity --> iCodeTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,stackChange --> stackDepth,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,stackChange --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,stackChange --> stackDepth,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,allocLocal --> localTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,allocLocal --> itsData,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,allocLocal --> localTop,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,releaseLocal --> localTop,org.mozilla.javascript.CodeGenerator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,releaseLocal --> localTop,org.mozilla.javascript.CodeGenerator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,compile --> topLevel,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> itsFunctionType,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> itsNeedsActivation,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> itsName,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsFunctionType,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsStringTable,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsDoubleTable,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsExceptionTable,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsMaxVars,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsMaxLocals,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsMaxStack,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsICode,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsStringTable,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsDoubleTable,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsExceptionTable,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsMaxVars,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> itsMaxFrameArray,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> argNames,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> argIsConst,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> argCount,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> encodedSourceStart,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> encodedSourceEnd,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> literalIds,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> itsNestedFunctions,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,generateRegExpLiterals --> itsRegExpLiterals,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,updateLineNumber --> firstLinePC,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,updateLineNumber --> firstLinePC,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitStatement --> target,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> itsMaxCalleeArgs,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> itsNeedsActivation,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitExpression --> itsMaxCalleeArgs,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,visitIncDec --> itsNeedsActivation,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,resolveGoto --> longJumps,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,resolveGoto --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,resolveGoto --> longJumps,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addUint8 --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addUint16 --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addInt --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,getDoubleIndex --> itsDoubleTable,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,getDoubleIndex --> itsDoubleTable,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addGotoOp --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addExceptionHandler --> itsExceptionTable,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,addExceptionHandler --> itsExceptionTable,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,increaseICodeCapacity --> itsICode,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,increaseICodeCapacity --> itsICode,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,stackChange --> itsMaxStack,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,stackChange --> itsMaxStack,org.mozilla.javascript.InterpreterData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,allocLocal --> itsMaxLocals,org.mozilla.javascript.InterpreterData,READ);
Call(ATTRIBUTE,org.mozilla.javascript.CodeGenerator,allocLocal --> itsMaxLocals,org.mozilla.javascript.InterpreterData,WRITE);
Call(METHOD,org.mozilla.javascript.CodeGenerator,<init> --> <init>,org.mozilla.javascript.Icode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,<init> --> <init>$2,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,<init> --> <init>,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,compile --> <init>,org.mozilla.javascript.NodeTransformer,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,compile --> transform,org.mozilla.javascript.NodeTransformer,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,compile --> getFunctionNode,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,compile --> getLanguageVersion,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,compile --> getSourceName,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,compile --> isInStrictMode,org.mozilla.javascript.ast.AstRoot,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,compile --> <init>,org.mozilla.javascript.InterpreterData,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> getFunctionType,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> requiresActivation,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> getFunctionName,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> getName,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> isGenerator,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> getBaseLineno,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateFunctionICode --> getLastChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> size,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> newIterator,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> start,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> done,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> getKey,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> getValue,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> next,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> getParamAndVarCount,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> getParamAndVarNames,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> getParamAndVarConst,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> getParamCount,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> getEncodedSourceStart,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> getEncodedSourceEnd,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> size,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateICodeFromTree --> toArray,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> getFunctionCount,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> getFunctionNode,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateNestedFunctions --> <init>$2,org.mozilla.javascript.InterpreterData,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateRegExpLiterals --> getRegexpCount,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateRegExpLiterals --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateRegExpLiterals --> checkRegExpProxy,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateRegExpLiterals --> getRegexpString,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateRegExpLiterals --> getRegexpFlags,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateRegExpLiterals --> compileRegExp,org.mozilla.javascript.RegExpProxy,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,updateLineNumber --> getLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,badTree --> toString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> getExistingIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> getFunctionNode,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> getFunctionType,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> getNext,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> putIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> getFinally,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitStatement --> getIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getExistingIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getFunctionNode,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getFunctionType,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getLastChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getNext,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> isGenerateDebugInfo,org.mozilla.javascript.CompilerEnvirons,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getIndexForNameNode,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getDouble,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitExpression --> getLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateCallFunAndThis --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateCallFunAndThis --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateCallFunAndThis --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,generateCallFunAndThis --> getNext,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> getExistingIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> getIndexForNameNode,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitIncDec --> getNext,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> getNext,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> getProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> size,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,visitLiteral --> add,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,getLocalBlockRef --> getProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,getLocalBlockRef --> getExistingIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,getTargetLabel --> labelId,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,getTargetLabel --> labelId$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,markTargetLabel --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addGoto --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,fixLabelGotos --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addBackwardGoto --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,resolveForwardGoto --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,resolveGoto --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,resolveGoto --> <init>,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,resolveGoto --> put$2,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addToken --> validTokenCode,org.mozilla.javascript.Icode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addToken --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIcode --> validIcode,org.mozilla.javascript.Icode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIcode --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addUint8 --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addUint16 --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addVarOp --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addStringOp --> validIcode,org.mozilla.javascript.Icode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIndexOp --> validIcode,org.mozilla.javascript.Icode,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addStringPrefix --> get,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addStringPrefix --> size,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addStringPrefix --> put,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addIndexPrefix --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,addExceptionHandler --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,increaseICodeCapacity --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.CodeGenerator,releaseLocal --> codeBug,org.mozilla.javascript.Kit,);
EndClass 140
StartClass 141
Class(org.mozilla.javascript.SecurityUtilities$3,N,N,NA);
Attribute(val$securityManager,java.lang.SecurityManager,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,java.security.ProtectionDomain,Public,N,N);
Method(run$2,java.lang.Object,Public,N,N);
Parameter(<init>,java.lang.SecurityManager,);
Call(METHOD,org.mozilla.javascript.SecurityUtilities$3,run$2 --> run,org.mozilla.javascript.SecurityUtilities$3,);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityUtilities$3,<init> --> val$securityManager,org.mozilla.javascript.SecurityUtilities$3,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityUtilities$3,run --> val$securityManager,org.mozilla.javascript.SecurityUtilities$3,READ);
Call(METHOD,org.mozilla.javascript.SecurityUtilities$3,run --> getCurrentScriptClass,org.mozilla.javascript.RhinoSecurityManager,);
EndClass 141
StartClass 142
Class(org.mozilla.javascript.SecurityUtilities$1,N,N,NA);
Attribute(val$name,java.lang.String,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,java.lang.String,Public,N,N);
Method(run$2,java.lang.Object,Public,N,N);
Parameter(<init>,java.lang.String,);
Call(METHOD,org.mozilla.javascript.SecurityUtilities$1,run$2 --> run,org.mozilla.javascript.SecurityUtilities$1,);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityUtilities$1,<init> --> val$name,org.mozilla.javascript.SecurityUtilities$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityUtilities$1,run --> val$name,org.mozilla.javascript.SecurityUtilities$1,READ);
EndClass 142
StartClass 143
Class(org.mozilla.javascript.SecurityUtilities$2,N,N,NA);
Attribute(val$clazz,java.lang.Class,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,java.security.ProtectionDomain,Public,N,N);
Method(run$2,java.lang.Object,Public,N,N);
Parameter(<init>,java.lang.Class,);
Call(METHOD,org.mozilla.javascript.SecurityUtilities$2,run$2 --> run,org.mozilla.javascript.SecurityUtilities$2,);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityUtilities$2,<init> --> val$clazz,org.mozilla.javascript.SecurityUtilities$2,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.SecurityUtilities$2,run --> val$clazz,org.mozilla.javascript.SecurityUtilities$2,READ);
EndClass 143
StartClass 144
Class(org.mozilla.javascript.RhinoSecurityManager,N,N,Public);
Method(<init>,void,Public,N,N);
Method(getCurrentScriptClass,java.lang.Class,Protected,N,N);
EndClass 144
StartClass 145
Class(org.mozilla.javascript.Delegator,N,N,Public);
Attribute(obj,org.mozilla.javascript.Scriptable,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(newInstance,org.mozilla.javascript.Delegator,Protected,N,N);
Method(getDelegee,org.mozilla.javascript.Scriptable,Public,N,N);
Method(setDelegee,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(get$2,java.lang.Object,Public,N,N);
Method(has,boolean,Public,N,N);
Method(has$2,boolean,Public,N,N);
Method(put,void,Public,N,N);
Method(put$2,void,Public,N,N);
Method(delete,void,Public,N,N);
Method(delete$2,void,Public,N,N);
Method(getPrototype,org.mozilla.javascript.Scriptable,Public,N,N);
Method(setPrototype,void,Public,N,N);
Method(getParentScope,org.mozilla.javascript.Scriptable,Public,N,N);
Method(setParentScope,void,Public,N,N);
Method(getIds,java.lang.Object[],Public,N,N);
Method(getDefaultValue,java.lang.Object,Public,N,N);
Method(hasInstance,boolean,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(construct,org.mozilla.javascript.Scriptable,Public,N,N);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(setDelegee,org.mozilla.javascript.Scriptable,);
Parameter(get,java.lang.String,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(get$2,int,);
Parameter(get$2,org.mozilla.javascript.Scriptable,);
Parameter(has,java.lang.String,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(has$2,int,);
Parameter(has$2,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.String,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(put$2,int,);
Parameter(put$2,org.mozilla.javascript.Scriptable,);
Parameter(put$2,java.lang.Object,);
Parameter(delete,java.lang.String,);
Parameter(delete$2,int,);
Parameter(setPrototype,org.mozilla.javascript.Scriptable,);
Parameter(setParentScope,org.mozilla.javascript.Scriptable,);
Parameter(getDefaultValue,java.lang.Class,);
Parameter(hasInstance,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(construct,org.mozilla.javascript.Context,);
Parameter(construct,org.mozilla.javascript.Scriptable,);
Parameter(construct,java.lang.Object[],);
SubClass(org.mozilla.javascript.Synchronizer);
Realization(org.mozilla.javascript.Function);
Composition(org.mozilla.javascript.Scriptable);
Call(METHOD,org.mozilla.javascript.Delegator,construct --> newInstance,org.mozilla.javascript.Delegator,);
Call(METHOD,org.mozilla.javascript.Delegator,construct --> setDelegee,org.mozilla.javascript.Delegator,);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,<init> --> obj,org.mozilla.javascript.Delegator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,<init>$2 --> obj,org.mozilla.javascript.Delegator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,getDelegee --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,setDelegee --> obj,org.mozilla.javascript.Delegator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,getClassName --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,get --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,get$2 --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,has --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,has$2 --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,put --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,put$2 --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,delete --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,delete$2 --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,getPrototype --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,setPrototype --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,getParentScope --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,setParentScope --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,getIds --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,getDefaultValue --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,hasInstance --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,call --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,construct --> obj,org.mozilla.javascript.Delegator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,getDefaultValue --> ScriptableClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Delegator,getDefaultValue --> FunctionClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(METHOD,org.mozilla.javascript.Delegator,newInstance --> throwAsScriptRuntimeEx,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.Delegator,getClassName --> getClassName,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,get --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,get$2 --> get$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,has --> has,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,has$2 --> has$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,put --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,put$2 --> put$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,delete --> delete,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,delete$2 --> delete$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,getPrototype --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,setPrototype --> setPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,getParentScope --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,setParentScope --> setParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,getIds --> getIds,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,getDefaultValue --> getDefaultValue,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,hasInstance --> hasInstance,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.Delegator,call --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.Delegator,construct --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.Delegator,construct --> toObject$3,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Delegator,construct --> construct,org.mozilla.javascript.Function,);
EndClass 145
StartClass 146
Class(org.mozilla.javascript.BoundFunction,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(targetFunction,org.mozilla.javascript.Callable,Private,N,Y,);
Attribute(boundThis,org.mozilla.javascript.Scriptable,Private,N,Y,);
Attribute(boundArgs,java.lang.Object[],Private,N,Y,);
Attribute(length,int,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(construct,org.mozilla.javascript.Scriptable,Public,N,N);
Method(hasInstance,boolean,Public,N,N);
Method(getLength,int,Public,N,N);
Method(concat,java.lang.Object[],Private,N,N);
Parameter(<init>,org.mozilla.javascript.Context,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,org.mozilla.javascript.Callable,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,java.lang.Object[],);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(construct,org.mozilla.javascript.Context,);
Parameter(construct,org.mozilla.javascript.Scriptable,);
Parameter(construct,java.lang.Object[],);
Parameter(hasInstance,org.mozilla.javascript.Scriptable,);
Parameter(concat,java.lang.Object[],);
Parameter(concat,java.lang.Object[],);
SuperClass(org.mozilla.javascript.BaseFunction);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.BaseFunction);
Composition(org.mozilla.javascript.Callable);
Composition(org.mozilla.javascript.Scriptable);
Call(METHOD,org.mozilla.javascript.BoundFunction,call --> concat,org.mozilla.javascript.BoundFunction,);
Call(METHOD,org.mozilla.javascript.BoundFunction,construct --> concat,org.mozilla.javascript.BoundFunction,);
Call(ATTRIBUTE,org.mozilla.javascript.BoundFunction,<init> --> targetFunction,org.mozilla.javascript.BoundFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BoundFunction,<init> --> boundThis,org.mozilla.javascript.BoundFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BoundFunction,<init> --> boundArgs,org.mozilla.javascript.BoundFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BoundFunction,<init> --> length,org.mozilla.javascript.BoundFunction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BoundFunction,call --> boundThis,org.mozilla.javascript.BoundFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BoundFunction,call --> targetFunction,org.mozilla.javascript.BoundFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BoundFunction,call --> boundArgs,org.mozilla.javascript.BoundFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BoundFunction,construct --> targetFunction,org.mozilla.javascript.BoundFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BoundFunction,construct --> boundArgs,org.mozilla.javascript.BoundFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BoundFunction,hasInstance --> targetFunction,org.mozilla.javascript.BoundFunction,READ);
Call(ATTRIBUTE,org.mozilla.javascript.BoundFunction,getLength --> length,org.mozilla.javascript.BoundFunction,READ);
Call(METHOD,org.mozilla.javascript.BoundFunction,<init> --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BoundFunction,<init> --> getLength,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.BoundFunction,<init> --> setFunctionProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BoundFunction,<init> --> typeErrorThrower,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BoundFunction,<init> --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.BoundFunction,<init> --> put,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.BoundFunction,<init> --> preventExtensions,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BoundFunction,<init> --> defineOwnProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.BoundFunction,call --> getTopCallScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BoundFunction,call --> call,org.mozilla.javascript.Callable,);
Call(METHOD,org.mozilla.javascript.BoundFunction,construct --> construct,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.BoundFunction,construct --> typeError0,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.BoundFunction,hasInstance --> hasInstance,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.BoundFunction,hasInstance --> typeError0,org.mozilla.javascript.ScriptRuntime,);
EndClass 146
StartClass 147
Class(org.mozilla.javascript.debug.DebuggableObject,Y,Y,Public);
Method(getAllIds,java.lang.Object[],Public,N,Y);
EndClass 147
StartClass 148
Class(org.mozilla.javascript.ScriptableObject$Slot,N,N,NA);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(name,java.lang.String,Public,N,N,);
Attribute(indexOrHash,int,Public,N,N,);
Attribute(attributes,short,Private,N,N,);
Attribute(wasDeleted,boolean,Public,N,N,);
Attribute(value,java.lang.Object,Public,N,N,);
Attribute(next,org.mozilla.javascript.ScriptableObject$Slot,Public,N,N,);
Attribute(orderedNext,org.mozilla.javascript.ScriptableObject$Slot,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(readObject,void,Private,N,N);
Method(setValue,boolean,Public,N,N);
Method(getValue,java.lang.Object,Public,N,N);
Method(getAttributes,int,Public,N,N);
Method(setAttributes,void,Public,N,N);
Method(markDeleted,void,Public,N,N);
Method(getPropertyDescriptor,org.mozilla.javascript.ScriptableObject,Public,N,N);
Method(access$000,short,Public,Y,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(readObject,java.io.ObjectInputStream,);
Parameter(setValue,java.lang.Object,);
Parameter(setValue,org.mozilla.javascript.Scriptable,);
Parameter(setValue,org.mozilla.javascript.Scriptable,);
Parameter(getValue,org.mozilla.javascript.Scriptable,);
Parameter(setAttributes,int,);
Parameter(getPropertyDescriptor,org.mozilla.javascript.Context,);
Parameter(getPropertyDescriptor,org.mozilla.javascript.Scriptable,);
Parameter(access$000,org.mozilla.javascript.ScriptableObject$Slot,);
SubClass(org.mozilla.javascript.ScriptableObject$RelinkedSlot);
SubClass(org.mozilla.javascript.ScriptableObject$GetterSlot);
Composition(org.mozilla.javascript.ScriptableObject$Slot);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,<init> --> name,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,<init> --> indexOrHash,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,<init> --> attributes,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,readObject --> name,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,readObject --> indexOrHash,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,setValue --> attributes,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,setValue --> value,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,getValue --> value,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,getAttributes --> attributes,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,setAttributes --> attributes,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,markDeleted --> wasDeleted,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,markDeleted --> value,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,markDeleted --> name,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,getPropertyDescriptor --> value,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,getPropertyDescriptor --> attributes,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$Slot,access$000 --> attributes,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(METHOD,org.mozilla.javascript.ScriptableObject$Slot,setAttributes --> checkValidAttributes,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$Slot,getPropertyDescriptor --> buildDataDescriptor,org.mozilla.javascript.ScriptableObject,);
EndClass 148
StartClass 149
Class(org.mozilla.javascript.ScriptableObject$RelinkedSlot,N,N,NA);
Attribute(slot,org.mozilla.javascript.ScriptableObject$Slot,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(setValue,boolean,Public,N,N);
Method(getValue,java.lang.Object,Public,N,N);
Method(getPropertyDescriptor,org.mozilla.javascript.ScriptableObject,Public,N,N);
Method(getAttributes,int,Public,N,N);
Method(setAttributes,void,Public,N,N);
Method(markDeleted,void,Public,N,N);
Method(writeObject,void,Private,N,N);
Parameter(<init>,org.mozilla.javascript.ScriptableObject$Slot,);
Parameter(setValue,java.lang.Object,);
Parameter(setValue,org.mozilla.javascript.Scriptable,);
Parameter(setValue,org.mozilla.javascript.Scriptable,);
Parameter(getValue,org.mozilla.javascript.Scriptable,);
Parameter(getPropertyDescriptor,org.mozilla.javascript.Context,);
Parameter(getPropertyDescriptor,org.mozilla.javascript.Scriptable,);
Parameter(setAttributes,int,);
Parameter(writeObject,java.io.ObjectOutputStream,);
SuperClass(org.mozilla.javascript.ScriptableObject$Slot);
Generalization(org.mozilla.javascript.ScriptableObject$Slot);
Composition(org.mozilla.javascript.ScriptableObject$Slot);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$RelinkedSlot,<init> --> slot,org.mozilla.javascript.ScriptableObject$RelinkedSlot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$RelinkedSlot,setValue --> slot,org.mozilla.javascript.ScriptableObject$RelinkedSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$RelinkedSlot,getValue --> slot,org.mozilla.javascript.ScriptableObject$RelinkedSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$RelinkedSlot,getPropertyDescriptor --> slot,org.mozilla.javascript.ScriptableObject$RelinkedSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$RelinkedSlot,getAttributes --> slot,org.mozilla.javascript.ScriptableObject$RelinkedSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$RelinkedSlot,setAttributes --> slot,org.mozilla.javascript.ScriptableObject$RelinkedSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$RelinkedSlot,markDeleted --> slot,org.mozilla.javascript.ScriptableObject$RelinkedSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$RelinkedSlot,writeObject --> slot,org.mozilla.javascript.ScriptableObject$RelinkedSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$RelinkedSlot,<init> --> name,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$RelinkedSlot,<init> --> indexOrHash,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(METHOD,org.mozilla.javascript.ScriptableObject$RelinkedSlot,<init> --> access$000,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$RelinkedSlot,<init> --> <init>,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$RelinkedSlot,<init> --> access$100,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$RelinkedSlot,setValue --> setValue,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$RelinkedSlot,getValue --> getValue,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$RelinkedSlot,getPropertyDescriptor --> getPropertyDescriptor,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$RelinkedSlot,getAttributes --> getAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$RelinkedSlot,setAttributes --> setAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$RelinkedSlot,markDeleted --> markDeleted,org.mozilla.javascript.ScriptableObject$Slot,);
EndClass 149
StartClass 150
Class(org.mozilla.javascript.annotations.JSStaticFunction,Y,Y,Public);
Method(value,java.lang.String,Public,N,Y);
EndClass 150
StartClass 151
Class(org.mozilla.javascript.MemberBox,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(memberObject,java.lang.reflect.Member,Private,N,N,);
Attribute(argTypes,java.lang.Class[],Public,N,N,);
Attribute(delegateTo,java.lang.Object,Public,N,N,);
Attribute(vararg,boolean,Public,N,N,);
Attribute(primitives,java.lang.Class[],Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(init,void,Private,N,N);
Method(init$2,void,Private,N,N);
Method(method,java.lang.reflect.Method,Public,N,N);
Method(ctor,java.lang.reflect.Constructor,Public,N,N);
Method(member,java.lang.reflect.Member,Public,N,N);
Method(isMethod,boolean,Public,N,N);
Method(isCtor,boolean,Public,N,N);
Method(isStatic,boolean,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(getDeclaringClass,java.lang.Class,Public,N,N);
Method(toJavaDeclaration,java.lang.String,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(invoke,java.lang.Object,Public,N,N);
Method(newInstance,java.lang.Object,Public,N,N);
Method(searchAccessibleMethod,java.lang.reflect.Method,Private,Y,N);
Method(readObject,void,Private,N,N);
Method(writeObject,void,Private,N,N);
Method(writeMember,void,Private,Y,N);
Method(readMember,java.lang.reflect.Member,Private,Y,N);
Method(writeParameters,void,Private,Y,N);
Method(readParameters,java.lang.Class[],Private,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,java.lang.reflect.Method,);
Parameter(<init>$2,java.lang.reflect.Constructor,);
Parameter(init,java.lang.reflect.Method,);
Parameter(init$2,java.lang.reflect.Constructor,);
Parameter(invoke,java.lang.Object,);
Parameter(invoke,java.lang.Object[],);
Parameter(newInstance,java.lang.Object[],);
Parameter(searchAccessibleMethod,java.lang.reflect.Method,);
Parameter(searchAccessibleMethod,java.lang.Class[],);
Parameter(readObject,java.io.ObjectInputStream,);
Parameter(writeObject,java.io.ObjectOutputStream,);
Parameter(writeMember,java.io.ObjectOutputStream,);
Parameter(writeMember,java.lang.reflect.Member,);
Parameter(readMember,java.io.ObjectInputStream,);
Parameter(writeParameters,java.io.ObjectOutputStream,);
Parameter(writeParameters,java.lang.Class[],);
Parameter(readParameters,java.io.ObjectInputStream,);
Call(METHOD,org.mozilla.javascript.MemberBox,<init> --> init,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,<init>$2 --> init$2,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,toJavaDeclaration --> isMethod,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,toJavaDeclaration --> method,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,toJavaDeclaration --> ctor,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,invoke --> method,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,invoke --> searchAccessibleMethod,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,newInstance --> ctor,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,readObject --> readMember,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,readObject --> init,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,readObject --> init$2,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,writeObject --> writeMember,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,writeMember --> writeParameters,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.MemberBox,readMember --> readParameters,org.mozilla.javascript.MemberBox,);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,init --> memberObject,org.mozilla.javascript.MemberBox,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,init --> argTypes,org.mozilla.javascript.MemberBox,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,init --> vararg,org.mozilla.javascript.MemberBox,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,init$2 --> memberObject,org.mozilla.javascript.MemberBox,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,init$2 --> argTypes,org.mozilla.javascript.MemberBox,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,init$2 --> vararg,org.mozilla.javascript.MemberBox,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,method --> memberObject,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,ctor --> memberObject,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,member --> memberObject,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,isMethod --> memberObject,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,isCtor --> memberObject,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,isStatic --> memberObject,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,getName --> memberObject,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,getDeclaringClass --> memberObject,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,toJavaDeclaration --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,toString --> memberObject,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,invoke --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,invoke --> memberObject,org.mozilla.javascript.MemberBox,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,writeObject --> memberObject,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,writeParameters --> primitives,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,readParameters --> primitives,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,<clinit> --> primitives,org.mozilla.javascript.MemberBox,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,init --> instance,org.mozilla.javascript.VMBridge,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,init$2 --> instance,org.mozilla.javascript.VMBridge,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,invoke --> instance,org.mozilla.javascript.VMBridge,READ);
Call(ATTRIBUTE,org.mozilla.javascript.MemberBox,newInstance --> instance,org.mozilla.javascript.VMBridge,READ);
Call(METHOD,org.mozilla.javascript.MemberBox,init --> isVarArgs,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.MemberBox,init$2 --> isVarArgs,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.MemberBox,toJavaDeclaration --> liveConnectSignature,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.MemberBox,invoke --> tryToMakeAccessible,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.MemberBox,invoke --> throwAsScriptRuntimeEx,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.MemberBox,newInstance --> tryToMakeAccessible,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.MemberBox,newInstance --> throwAsScriptRuntimeEx,org.mozilla.javascript.Context,);
EndClass 151
StartClass 152
Class(org.mozilla.javascript.annotations.JSFunction,Y,Y,Public);
Method(value,java.lang.String,Public,N,Y);
EndClass 152
StartClass 153
Class(org.mozilla.javascript.ScriptableObject$GetterSlot,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(getter,java.lang.Object,Public,N,N,);
Attribute(setter,java.lang.Object,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(getPropertyDescriptor,org.mozilla.javascript.ScriptableObject,Public,N,N);
Method(setValue,boolean,Public,N,N);
Method(getValue,java.lang.Object,Public,N,N);
Method(markDeleted,void,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(getPropertyDescriptor,org.mozilla.javascript.Context,);
Parameter(getPropertyDescriptor,org.mozilla.javascript.Scriptable,);
Parameter(setValue,java.lang.Object,);
Parameter(setValue,org.mozilla.javascript.Scriptable,);
Parameter(setValue,org.mozilla.javascript.Scriptable,);
Parameter(getValue,org.mozilla.javascript.Scriptable,);
SuperClass(org.mozilla.javascript.ScriptableObject$Slot);
Generalization(org.mozilla.javascript.ScriptableObject$Slot);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,getPropertyDescriptor --> getter,org.mozilla.javascript.ScriptableObject$GetterSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,getPropertyDescriptor --> setter,org.mozilla.javascript.ScriptableObject$GetterSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> setter,org.mozilla.javascript.ScriptableObject$GetterSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> getter,org.mozilla.javascript.ScriptableObject$GetterSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,getValue --> getter,org.mozilla.javascript.ScriptableObject$GetterSlot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,markDeleted --> getter,org.mozilla.javascript.ScriptableObject$GetterSlot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,markDeleted --> setter,org.mozilla.javascript.ScriptableObject$GetterSlot,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,getPropertyDescriptor --> Object,org.mozilla.javascript.TopLevel$Builtins,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> name,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> delegateTo,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,getValue --> delegateTo,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,getValue --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,getValue --> value,org.mozilla.javascript.ScriptableObject$Slot,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ScriptableObject$GetterSlot,getValue --> value,org.mozilla.javascript.ScriptableObject$Slot,WRITE);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,<init> --> <init>,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,getPropertyDescriptor --> getAttributes,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,getPropertyDescriptor --> <init>,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,getPropertyDescriptor --> setBuiltinProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,getPropertyDescriptor --> defineProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> getTypeTag,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> convertArg,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> invoke,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,setValue --> setValue,org.mozilla.javascript.ScriptableObject$Slot,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,getValue --> invoke,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,getValue --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,getValue --> getParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,getValue --> call,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,getValue --> init,org.mozilla.javascript.LazilyLoadedCtor,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,getValue --> getValue,org.mozilla.javascript.LazilyLoadedCtor,);
Call(METHOD,org.mozilla.javascript.ScriptableObject$GetterSlot,markDeleted --> markDeleted,org.mozilla.javascript.ScriptableObject$Slot,);
EndClass 153
StartClass 154
Class(org.mozilla.javascript.FunctionObject,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(VARARGS_METHOD,short,Private,Y,Y,);
Attribute(VARARGS_CTOR,short,Private,Y,Y,);
Attribute(sawSecurityException,boolean,Private,Y,N,);
Attribute(JAVA_UNSUPPORTED_TYPE,int,Public,Y,Y,);
Attribute(JAVA_STRING_TYPE,int,Public,Y,Y,);
Attribute(JAVA_INT_TYPE,int,Public,Y,Y,);
Attribute(JAVA_BOOLEAN_TYPE,int,Public,Y,Y,);
Attribute(JAVA_DOUBLE_TYPE,int,Public,Y,Y,);
Attribute(JAVA_SCRIPTABLE_TYPE,int,Public,Y,Y,);
Attribute(JAVA_OBJECT_TYPE,int,Public,Y,Y,);
Attribute(member,org.mozilla.javascript.MemberBox,Public,N,N,);
Attribute(functionName,java.lang.String,Private,N,N,);
Attribute(typeTags,byte[],Private,N,N,);
Attribute(parmsLength,int,Private,N,N,);
Attribute(hasVoidReturn,boolean,Private,N,N,);
Attribute(returnTypeTag,int,Private,N,N,);
Attribute(isStatic,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getTypeTag,int,Public,Y,N);
Method(convertArg,java.lang.Object,Public,Y,N);
Method(getArity,int,Public,N,N);
Method(getLength,int,Public,N,N);
Method(getFunctionName,java.lang.String,Public,N,N);
Method(getMethodOrConstructor,java.lang.reflect.Member,Public,N,N);
Method(findSingleMethod,java.lang.reflect.Method,Public,Y,N);
Method(getMethodList,java.lang.reflect.Method[],Public,Y,N);
Method(addAsConstructor,void,Public,N,N);
Method(initAsConstructor,void,Public,N,N);
Method(convertArg$2,java.lang.Object,Public,Y,N);
Method(call,java.lang.Object,Public,N,N);
Method(createObject,org.mozilla.javascript.Scriptable,Public,N,N);
Method(isVarArgsMethod,boolean,Public,N,N);
Method(isVarArgsConstructor,boolean,Public,N,N);
Method(readObject,void,Private,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.reflect.Member,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(getTypeTag,java.lang.Class,);
Parameter(convertArg,org.mozilla.javascript.Context,);
Parameter(convertArg,org.mozilla.javascript.Scriptable,);
Parameter(convertArg,java.lang.Object,);
Parameter(convertArg,int,);
Parameter(findSingleMethod,java.lang.reflect.Method[],);
Parameter(findSingleMethod,java.lang.String,);
Parameter(getMethodList,java.lang.Class,);
Parameter(addAsConstructor,org.mozilla.javascript.Scriptable,);
Parameter(addAsConstructor,org.mozilla.javascript.Scriptable,);
Parameter(initAsConstructor,org.mozilla.javascript.Scriptable,);
Parameter(initAsConstructor,org.mozilla.javascript.Scriptable,);
Parameter(convertArg$2,org.mozilla.javascript.Context,);
Parameter(convertArg$2,org.mozilla.javascript.Scriptable,);
Parameter(convertArg$2,java.lang.Object,);
Parameter(convertArg$2,java.lang.Class,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(createObject,org.mozilla.javascript.Context,);
Parameter(createObject,org.mozilla.javascript.Scriptable,);
Parameter(readObject,java.io.ObjectInputStream,);
SuperClass(org.mozilla.javascript.BaseFunction);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.BaseFunction);
Composition(org.mozilla.javascript.MemberBox);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> getTypeTag,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.FunctionObject,getLength --> getArity,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.FunctionObject,addAsConstructor --> initAsConstructor,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.FunctionObject,convertArg$2 --> getTypeTag,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.FunctionObject,convertArg$2 --> convertArg,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.FunctionObject,call --> convertArg,org.mozilla.javascript.FunctionObject,);
Call(METHOD,org.mozilla.javascript.FunctionObject,readObject --> getTypeTag,org.mozilla.javascript.FunctionObject,);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> member,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> isStatic,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> typeTags,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> member,org.mozilla.javascript.FunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> isStatic,org.mozilla.javascript.FunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> functionName,org.mozilla.javascript.FunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> parmsLength,org.mozilla.javascript.FunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> typeTags,org.mozilla.javascript.FunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> hasVoidReturn,org.mozilla.javascript.FunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> returnTypeTag,org.mozilla.javascript.FunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,getArity --> parmsLength,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,getFunctionName --> functionName,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,getMethodOrConstructor --> member,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,getMethodList --> sawSecurityException,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,getMethodList --> sawSecurityException,org.mozilla.javascript.FunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,call --> parmsLength,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,call --> member,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,call --> isStatic,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,call --> functionName,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,call --> typeTags,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,call --> hasVoidReturn,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,call --> returnTypeTag,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,createObject --> member,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,createObject --> parmsLength,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,isVarArgsMethod --> parmsLength,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,isVarArgsConstructor --> parmsLength,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,readObject --> parmsLength,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,readObject --> member,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,readObject --> typeTags,org.mozilla.javascript.FunctionObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,readObject --> typeTags,org.mozilla.javascript.FunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,readObject --> hasVoidReturn,org.mozilla.javascript.FunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,readObject --> returnTypeTag,org.mozilla.javascript.FunctionObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> ContextClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> ObjectClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> FunctionClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,<init> --> ScriptableClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,getTypeTag --> StringClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,getTypeTag --> IntegerClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,getTypeTag --> BooleanClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,getTypeTag --> DoubleClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,getTypeTag --> ScriptableClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,getTypeTag --> ObjectClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,call --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,call --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FunctionObject,readObject --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> <init>$2,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> <init>,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> isStatic,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> getName,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> reportRuntimeError2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> isMethod,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> method,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> getDeclaringClass,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,<init> --> setFunctionProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.FunctionObject,convertArg --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.FunctionObject,convertArg --> toInt32,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.FunctionObject,convertArg --> toBoolean,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.FunctionObject,convertArg --> toNumber,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.FunctionObject,convertArg --> toObjectOrNull$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.FunctionObject,getMethodOrConstructor --> isMethod,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,getMethodOrConstructor --> method,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,getMethodOrConstructor --> ctor,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,findSingleMethod --> reportRuntimeError2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.FunctionObject,addAsConstructor --> getClassName,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.FunctionObject,addAsConstructor --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.FunctionObject,initAsConstructor --> setFunctionProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.FunctionObject,initAsConstructor --> setImmunePrototypeProperty,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.FunctionObject,initAsConstructor --> setParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.FunctionObject,initAsConstructor --> defineProperty$2,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.FunctionObject,initAsConstructor --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.FunctionObject,convertArg$2 --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.FunctionObject,call --> invoke,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,call --> isCtor,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,call --> newInstance,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,call --> getDeclaringClass,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,call --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.FunctionObject,call --> typeError1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.FunctionObject,call --> isMethod,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,call --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.FunctionObject,call --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.FunctionObject,createObject --> isCtor,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,createObject --> getDeclaringClass,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,createObject --> throwAsScriptRuntimeEx,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.FunctionObject,createObject --> getClassPrototype,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.FunctionObject,createObject --> setPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.FunctionObject,createObject --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.FunctionObject,createObject --> setParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.FunctionObject,readObject --> isMethod,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.FunctionObject,readObject --> method,org.mozilla.javascript.MemberBox,);
EndClass 154
StartClass 155
Class(org.mozilla.javascript.annotations.JSGetter,Y,Y,Public);
Method(value,java.lang.String,Public,N,Y);
EndClass 155
StartClass 156
Class(org.mozilla.javascript.annotations.JSSetter,Y,Y,Public);
Method(value,java.lang.String,Public,N,Y);
EndClass 156
StartClass 157
Class(org.mozilla.javascript.DefiningClassLoader,N,N,Public);
Attribute(parentLoader,java.lang.ClassLoader,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(defineClass,java.lang.Class,Public,N,N);
Method(linkClass,void,Public,N,N);
Method(loadClass,java.lang.Class,Public,N,N);
Parameter(<init>$2,java.lang.ClassLoader,);
Parameter(defineClass,java.lang.String,);
Parameter(defineClass,byte[],);
Parameter(linkClass,java.lang.Class,);
Parameter(loadClass,java.lang.String,);
Parameter(loadClass,boolean,);
Realization(org.mozilla.javascript.GeneratedClassLoader);
Call(ATTRIBUTE,org.mozilla.javascript.DefiningClassLoader,<init> --> parentLoader,org.mozilla.javascript.DefiningClassLoader,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.DefiningClassLoader,<init>$2 --> parentLoader,org.mozilla.javascript.DefiningClassLoader,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.DefiningClassLoader,loadClass --> parentLoader,org.mozilla.javascript.DefiningClassLoader,READ);
Call(METHOD,org.mozilla.javascript.DefiningClassLoader,defineClass --> getProtectionDomain,org.mozilla.javascript.SecurityUtilities,);
EndClass 157
StartClass 158
Class(org.mozilla.javascript.xml.XMLLib$Factory$1,N,N,NA);
Attribute(val$className,java.lang.String,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getImplementationClassName,java.lang.String,Public,N,N);
Parameter(<init>,java.lang.String,);
SuperClass(org.mozilla.javascript.xml.XMLLib$Factory);
Generalization(org.mozilla.javascript.xml.XMLLib$Factory);
Call(ATTRIBUTE,org.mozilla.javascript.xml.XMLLib$Factory$1,<init> --> val$className,org.mozilla.javascript.xml.XMLLib$Factory$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.xml.XMLLib$Factory$1,getImplementationClassName --> val$className,org.mozilla.javascript.xml.XMLLib$Factory$1,READ);
Call(METHOD,org.mozilla.javascript.xml.XMLLib$Factory$1,<init> --> <init>,org.mozilla.javascript.xml.XMLLib$Factory,);
EndClass 158
StartClass 159
Class(org.mozilla.javascript.IdFunctionCall,Y,Y,Public);
Method(execIdCall,java.lang.Object,Public,N,Y);
Parameter(execIdCall,org.mozilla.javascript.IdFunctionObject,);
Parameter(execIdCall,org.mozilla.javascript.Context,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,org.mozilla.javascript.Scriptable,);
Parameter(execIdCall,java.lang.Object[],);
EndClass 159
StartClass 160
Class(org.mozilla.javascript.IdScriptableObject$PrototypeValues,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(NAME_SLOT,int,Private,Y,Y,);
Attribute(SLOT_SPAN,int,Private,Y,Y,);
Attribute(obj,org.mozilla.javascript.IdScriptableObject,Private,N,N,);
Attribute(maxId,int,Private,N,N,);
Attribute(valueArray,java.lang.Object[],Private,N,N,);
Attribute(attributeArray,short[],Private,N,N,);
Attribute(constructorId,int,Public,N,N,);
Attribute(constructor,org.mozilla.javascript.IdFunctionObject,Private,N,N,);
Attribute(constructorAttrs,short,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getMaxId,int,Public,N,N);
Method(initValue,void,Public,N,N);
Method(initSlot,void,Private,N,N);
Method(createPrecachedConstructor,org.mozilla.javascript.IdFunctionObject,Public,N,N);
Method(findId,int,Public,N,N);
Method(has,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(set,void,Public,N,N);
Method(delete,void,Public,N,N);
Method(getAttributes,int,Public,N,N);
Method(setAttributes,void,Public,N,N);
Method(getNames,java.lang.Object[],Public,N,N);
Method(ensureId,java.lang.Object,Private,N,N);
Parameter(<init>,org.mozilla.javascript.IdScriptableObject,);
Parameter(<init>,int,);
Parameter(initValue,int,);
Parameter(initValue,java.lang.String,);
Parameter(initValue,java.lang.Object,);
Parameter(initValue,int,);
Parameter(initSlot,int,);
Parameter(initSlot,java.lang.String,);
Parameter(initSlot,java.lang.Object,);
Parameter(initSlot,int,);
Parameter(findId,java.lang.String,);
Parameter(has,int,);
Parameter(get,int,);
Parameter(set,int,);
Parameter(set,org.mozilla.javascript.Scriptable,);
Parameter(set,java.lang.Object,);
Parameter(delete,int,);
Parameter(getAttributes,int,);
Parameter(setAttributes,int,);
Parameter(setAttributes,int,);
Parameter(getNames,boolean,);
Parameter(getNames,java.lang.Object[],);
Parameter(ensureId,int,);
Composition(org.mozilla.javascript.IdScriptableObject);
Composition(org.mozilla.javascript.IdFunctionObject);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initValue --> initSlot,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,get --> ensureId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,set --> ensureId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,delete --> ensureId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,getAttributes --> ensureId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,setAttributes --> ensureId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,getNames --> ensureId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,ensureId --> initSlot,org.mozilla.javascript.IdScriptableObject$PrototypeValues,);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,<init> --> obj,org.mozilla.javascript.IdScriptableObject$PrototypeValues,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,<init> --> maxId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,getMaxId --> maxId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initValue --> maxId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initValue --> obj,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initValue --> constructorId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initValue --> constructor,org.mozilla.javascript.IdScriptableObject$PrototypeValues,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initValue --> constructorAttrs,org.mozilla.javascript.IdScriptableObject$PrototypeValues,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initSlot --> valueArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initSlot --> attributeArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,createPrecachedConstructor --> constructorId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,createPrecachedConstructor --> obj,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,createPrecachedConstructor --> constructor,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,createPrecachedConstructor --> constructorId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,findId --> obj,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,has --> valueArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,set --> attributeArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,set --> obj,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,set --> valueArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,delete --> attributeArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,delete --> valueArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,getAttributes --> attributeArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,setAttributes --> attributeArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,getNames --> maxId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,getNames --> attributeArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,getNames --> valueArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,ensureId --> valueArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,ensureId --> maxId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,ensureId --> constructorId,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,ensureId --> constructor,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,ensureId --> constructorAttrs,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,ensureId --> obj,org.mozilla.javascript.IdScriptableObject$PrototypeValues,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,ensureId --> valueArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,ensureId --> attributeArray,org.mozilla.javascript.IdScriptableObject$PrototypeValues,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,ensureId --> constructor,org.mozilla.javascript.IdScriptableObject$PrototypeValues,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initValue --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initSlot --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,has --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,get --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,set --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,set --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,delete --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.IdScriptableObject$PrototypeValues,getNames --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initValue --> checkValidAttributes,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,initValue --> findPrototypeId,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,createPrecachedConstructor --> findPrototypeId,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,createPrecachedConstructor --> initPrototypeId,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,createPrecachedConstructor --> getClassName,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,createPrecachedConstructor --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,createPrecachedConstructor --> initFunction,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,createPrecachedConstructor --> markAsConstructor,org.mozilla.javascript.IdFunctionObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,findId --> findPrototypeId,org.mozilla.javascript.IdScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,set --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,setAttributes --> checkValidAttributes,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.IdScriptableObject$PrototypeValues,ensureId --> initPrototypeId,org.mozilla.javascript.IdScriptableObject,);
EndClass 160
StartClass 161
Class(org.mozilla.javascript.NativeObject$ValueCollection,N,N,NA);
Attribute(this$0,org.mozilla.javascript.NativeObject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(iterator,java.util.Iterator,Public,N,N);
Method(size,int,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeObject,);
Composition(org.mozilla.javascript.NativeObject);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection,<init> --> this$0,org.mozilla.javascript.NativeObject$ValueCollection,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection,size --> this$0,org.mozilla.javascript.NativeObject$ValueCollection,READ);
Call(METHOD,org.mozilla.javascript.NativeObject$ValueCollection,iterator --> <init>,org.mozilla.javascript.NativeObject$ValueCollection$1,);
Call(METHOD,org.mozilla.javascript.NativeObject$ValueCollection,size --> size,org.mozilla.javascript.ScriptableObject,);
EndClass 161
StartClass 162
Class(org.mozilla.javascript.NativeObject$KeySet,N,N,NA);
Attribute(this$0,org.mozilla.javascript.NativeObject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(contains,boolean,Public,N,N);
Method(iterator,java.util.Iterator,Public,N,N);
Method(size,int,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeObject,);
Parameter(contains,java.lang.Object,);
Composition(org.mozilla.javascript.NativeObject);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet,<init> --> this$0,org.mozilla.javascript.NativeObject$KeySet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet,contains --> this$0,org.mozilla.javascript.NativeObject$KeySet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet,size --> this$0,org.mozilla.javascript.NativeObject$KeySet,READ);
Call(METHOD,org.mozilla.javascript.NativeObject$KeySet,contains --> containsKey,org.mozilla.javascript.NativeObject,);
Call(METHOD,org.mozilla.javascript.NativeObject$KeySet,iterator --> <init>,org.mozilla.javascript.NativeObject$KeySet$1,);
Call(METHOD,org.mozilla.javascript.NativeObject$KeySet,size --> size,org.mozilla.javascript.ScriptableObject,);
EndClass 162
StartClass 163
Class(org.mozilla.javascript.NativeObject$EntrySet,N,N,NA);
Attribute(this$0,org.mozilla.javascript.NativeObject,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(iterator,java.util.Iterator,Public,N,N);
Method(size,int,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeObject,);
Composition(org.mozilla.javascript.NativeObject);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet,<init> --> this$0,org.mozilla.javascript.NativeObject$EntrySet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet,size --> this$0,org.mozilla.javascript.NativeObject$EntrySet,READ);
Call(METHOD,org.mozilla.javascript.NativeObject$EntrySet,iterator --> <init>,org.mozilla.javascript.NativeObject$EntrySet$1,);
Call(METHOD,org.mozilla.javascript.NativeObject$EntrySet,size --> size,org.mozilla.javascript.ScriptableObject,);
EndClass 163
StartClass 164
Class(org.mozilla.javascript.ObjToIntMap$Iterator,N,N,Public);
Attribute(master,org.mozilla.javascript.ObjToIntMap,Public,N,N,);
Attribute(cursor,int,Private,N,N,);
Attribute(remaining,int,Private,N,N,);
Attribute(keys,java.lang.Object[],Private,N,N,);
Attribute(values,int[],Private,N,N,);
Method(<init>,void,Public,N,N);
Method(init,void,Public,N,N);
Method(start,void,Public,N,N);
Method(done,boolean,Public,N,N);
Method(next,void,Public,N,N);
Method(getKey,java.lang.Object,Public,N,N);
Method(getValue,int,Public,N,N);
Method(setValue,void,Public,N,N);
Parameter(<init>,org.mozilla.javascript.ObjToIntMap,);
Parameter(init,java.lang.Object[],);
Parameter(init,int[],);
Parameter(init,int,);
Parameter(setValue,int,);
Composition(org.mozilla.javascript.ObjToIntMap);
Call(METHOD,org.mozilla.javascript.ObjToIntMap$Iterator,start --> next,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,<init> --> master,org.mozilla.javascript.ObjToIntMap$Iterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,init --> keys,org.mozilla.javascript.ObjToIntMap$Iterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,init --> values,org.mozilla.javascript.ObjToIntMap$Iterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,init --> cursor,org.mozilla.javascript.ObjToIntMap$Iterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,init --> remaining,org.mozilla.javascript.ObjToIntMap$Iterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,start --> master,org.mozilla.javascript.ObjToIntMap$Iterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,done --> remaining,org.mozilla.javascript.ObjToIntMap$Iterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,next --> remaining,org.mozilla.javascript.ObjToIntMap$Iterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,next --> cursor,org.mozilla.javascript.ObjToIntMap$Iterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,next --> keys,org.mozilla.javascript.ObjToIntMap$Iterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,next --> remaining,org.mozilla.javascript.ObjToIntMap$Iterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,next --> cursor,org.mozilla.javascript.ObjToIntMap$Iterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,getKey --> keys,org.mozilla.javascript.ObjToIntMap$Iterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,getKey --> cursor,org.mozilla.javascript.ObjToIntMap$Iterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,getValue --> values,org.mozilla.javascript.ObjToIntMap$Iterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,getValue --> cursor,org.mozilla.javascript.ObjToIntMap$Iterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,setValue --> values,org.mozilla.javascript.ObjToIntMap$Iterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,setValue --> cursor,org.mozilla.javascript.ObjToIntMap$Iterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ObjToIntMap$Iterator,getKey --> NULL_VALUE,org.mozilla.javascript.UniqueTag,READ);
Call(METHOD,org.mozilla.javascript.ObjToIntMap$Iterator,start --> initIterator,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap$Iterator,next --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ObjToIntMap$Iterator,next --> access$000,org.mozilla.javascript.ObjToIntMap,);
EndClass 164
StartClass 165
Class(org.mozilla.javascript.NativeJavaPackage,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(packageName,java.lang.String,Private,N,N,);
Attribute(classLoader,java.lang.ClassLoader,Private,N,N,);
Attribute(negativeCache,java.util.Set,Private,N,N,java.lang.String);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(has,boolean,Public,N,N);
Method(has$2,boolean,Public,N,N);
Method(put,void,Public,N,N);
Method(put$2,void,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(get$2,java.lang.Object,Public,N,N);
Method(forcePackage,org.mozilla.javascript.NativeJavaPackage,Public,N,N);
Method(getPkgProperty,java.lang.Object,Public,N,N);
Method(getDefaultValue,java.lang.Object,Public,N,N);
Method(readObject,void,Private,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>,boolean,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.ClassLoader,);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$2,java.lang.ClassLoader,);
Parameter(<init>$3,java.lang.String,);
Parameter(has,java.lang.String,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(has$2,int,);
Parameter(has$2,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.String,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(put$2,int,);
Parameter(put$2,org.mozilla.javascript.Scriptable,);
Parameter(put$2,java.lang.Object,);
Parameter(get,java.lang.String,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(get$2,int,);
Parameter(get$2,org.mozilla.javascript.Scriptable,);
Parameter(forcePackage,java.lang.String,);
Parameter(forcePackage,org.mozilla.javascript.Scriptable,);
Parameter(getPkgProperty,java.lang.String,);
Parameter(getPkgProperty,org.mozilla.javascript.Scriptable,);
Parameter(getPkgProperty,boolean,);
Parameter(getDefaultValue,java.lang.Class,);
Parameter(readObject,java.io.ObjectInputStream,);
Parameter(equals,java.lang.Object,);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.ScriptableObject);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,<init>$2 --> <init>,org.mozilla.javascript.NativeJavaPackage,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,<init>$3 --> <init>,org.mozilla.javascript.NativeJavaPackage,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,get --> getPkgProperty,org.mozilla.javascript.NativeJavaPackage,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,forcePackage --> <init>,org.mozilla.javascript.NativeJavaPackage,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> <init>,org.mozilla.javascript.NativeJavaPackage,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getDefaultValue --> toString,org.mozilla.javascript.NativeJavaPackage,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,<init> --> negativeCache,org.mozilla.javascript.NativeJavaPackage,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,<init> --> packageName,org.mozilla.javascript.NativeJavaPackage,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,<init> --> classLoader,org.mozilla.javascript.NativeJavaPackage,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,forcePackage --> packageName,org.mozilla.javascript.NativeJavaPackage,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,forcePackage --> classLoader,org.mozilla.javascript.NativeJavaPackage,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> negativeCache,org.mozilla.javascript.NativeJavaPackage,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> packageName,org.mozilla.javascript.NativeJavaPackage,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> classLoader,org.mozilla.javascript.NativeJavaPackage,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> negativeCache,org.mozilla.javascript.NativeJavaPackage,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,readObject --> classLoader,org.mozilla.javascript.NativeJavaPackage,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,toString --> packageName,org.mozilla.javascript.NativeJavaPackage,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,equals --> packageName,org.mozilla.javascript.NativeJavaPackage,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,equals --> classLoader,org.mozilla.javascript.NativeJavaPackage,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,hashCode --> packageName,org.mozilla.javascript.NativeJavaPackage,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,hashCode --> classLoader,org.mozilla.javascript.NativeJavaPackage,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,get$2 --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,<init> --> <init>,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,<init>$3 --> getCurrentContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,<init>$3 --> getApplicationClassLoader,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,put$2 --> reportRuntimeError0,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,forcePackage --> get,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,forcePackage --> setObjectProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,forcePackage --> put,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> get,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> getClassShutter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> visibleToScripts,org.mozilla.javascript.ClassShutter,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> classOrNull$2,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> classOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> wrapJavaClass,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> getPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> setPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> getParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> setObjectProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,getPkgProperty --> put,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,readObject --> getCurrentContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaPackage,readObject --> getApplicationClassLoader,org.mozilla.javascript.Context,);
EndClass 165
StartClass 166
Class(org.mozilla.javascript.NativeJavaClass,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(javaClassPropertyName,java.lang.String,Public,Y,Y,);
Attribute(staticFieldAndMethods,java.util.Map,Private,N,N,java.lang.String;org.mozilla.javascript.FieldAndMethods);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(initMembers,void,Protected,N,N);
Method(getClassName,java.lang.String,Public,N,N);
Method(has,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(put,void,Public,N,N);
Method(getIds,java.lang.Object[],Public,N,N);
Method(getClassObject,java.lang.Class,Public,N,N);
Method(getDefaultValue,java.lang.Object,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(construct,org.mozilla.javascript.Scriptable,Public,N,N);
Method(constructSpecific,org.mozilla.javascript.Scriptable,Public,Y,N);
Method(constructInternal,java.lang.Object,Public,Y,N);
Method(toString,java.lang.String,Public,N,N);
Method(hasInstance,boolean,Public,N,N);
Method(findNestedClass,java.lang.Class,Private,Y,N);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,java.lang.Class,);
Parameter(<init>$3,org.mozilla.javascript.Scriptable,);
Parameter(<init>$3,java.lang.Class,);
Parameter(<init>$3,boolean,);
Parameter(has,java.lang.String,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(get,java.lang.String,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.String,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(getDefaultValue,java.lang.Class,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(construct,org.mozilla.javascript.Context,);
Parameter(construct,org.mozilla.javascript.Scriptable,);
Parameter(construct,java.lang.Object[],);
Parameter(constructSpecific,org.mozilla.javascript.Context,);
Parameter(constructSpecific,org.mozilla.javascript.Scriptable,);
Parameter(constructSpecific,java.lang.Object[],);
Parameter(constructSpecific,org.mozilla.javascript.MemberBox,);
Parameter(constructInternal,java.lang.Object[],);
Parameter(constructInternal,org.mozilla.javascript.MemberBox,);
Parameter(hasInstance,org.mozilla.javascript.Scriptable,);
Parameter(findNestedClass,java.lang.Class,);
Parameter(findNestedClass,java.lang.String,);
SuperClass(org.mozilla.javascript.NativeJavaObject);
Generalization(org.mozilla.javascript.NativeJavaObject);
Realization(org.mozilla.javascript.Function);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,<init>$2 --> <init>$3,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,get --> getClassObject,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,get --> findNestedClass,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,getDefaultValue --> toString,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,call --> getClassObject,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,call --> construct,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> getClassObject,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> constructSpecific,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,constructSpecific --> constructInternal,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,toString --> getClassObject,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,hasInstance --> getClassObject,org.mozilla.javascript.NativeJavaClass,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,initMembers --> staticFieldAndMethods,org.mozilla.javascript.NativeJavaClass,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,get --> staticFieldAndMethods,org.mozilla.javascript.NativeJavaClass,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,initMembers --> javaObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,initMembers --> parent,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,initMembers --> isAdapter,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,initMembers --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,initMembers --> members,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,has --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,get --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,get --> javaObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,get --> ClassClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,put --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,put --> javaObject,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,getIds --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,getDefaultValue --> StringClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,getDefaultValue --> BooleanClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,getDefaultValue --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,getDefaultValue --> NaNobj,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,construct --> members,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,construct --> ctors,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,construct --> methods,org.mozilla.javascript.NativeJavaMethod,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,construct --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,constructInternal --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaClass,constructInternal --> vararg,org.mozilla.javascript.MemberBox,READ);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,<init> --> <init>,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,<init>$3 --> <init>$3,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,initMembers --> lookupClass,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,initMembers --> getFieldAndMethodsObjects,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,has --> has,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,get --> has,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,get --> get,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,get --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,get --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,get --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,get --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,get --> wrapJavaClass,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,get --> setParentScope,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,get --> reportMemberNotFound,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,put --> put,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,getIds --> getIds,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,getClassObject --> unwrap,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,call --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,call --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> findCachedFunction,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> scriptSignature,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> reportRuntimeError2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> reportRuntimeError0,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> ensureScriptableObject,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> createInterfaceAdapter,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> wrapAsJavaObject,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> get,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,construct --> construct,org.mozilla.javascript.Function,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,constructSpecific --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,constructSpecific --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,constructSpecific --> wrapNewObject,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,constructInternal --> jsToJava,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,constructInternal --> newInstance,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,hasInstance --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,findNestedClass --> classOrNull,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeJavaClass,findNestedClass --> classOrNull$2,org.mozilla.javascript.Kit,);
EndClass 166
StartClass 167
Class(org.mozilla.javascript.serialize.ScriptableOutputStream$PendingLookup,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Parameter(<init>,java.lang.String,);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream$PendingLookup,<init> --> name,org.mozilla.javascript.serialize.ScriptableOutputStream$PendingLookup,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.serialize.ScriptableOutputStream$PendingLookup,getName --> name,org.mozilla.javascript.serialize.ScriptableOutputStream$PendingLookup,READ);
EndClass 167
StartClass 168
Class(org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(loadSource,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Public,N,N);
Method(loadSource$2,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Public,N,N);
Method(loadFromPathArray,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Private,N,N);
Method(ensureTrailingSlash,java.lang.String,Private,Y,N);
Method(entityNeedsRevalidation,boolean,Protected,N,N);
Method(loadFromUri,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Protected,N,Y);
Method(loadFromPrivilegedLocations,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Protected,N,N);
Method(loadFromFallbackLocations,org.mozilla.javascript.commonjs.module.provider.ModuleSource,Protected,N,N);
Parameter(loadSource,java.lang.String,);
Parameter(loadSource,org.mozilla.javascript.Scriptable,);
Parameter(loadSource,java.lang.Object,);
Parameter(loadSource$2,java.net.URI,);
Parameter(loadSource$2,java.net.URI,);
Parameter(loadSource$2,java.lang.Object,);
Parameter(loadFromPathArray,java.lang.String,);
Parameter(loadFromPathArray,org.mozilla.javascript.Scriptable,);
Parameter(loadFromPathArray,java.lang.Object,);
Parameter(ensureTrailingSlash,java.lang.String,);
Parameter(entityNeedsRevalidation,java.lang.Object,);
Parameter(loadFromUri,java.net.URI,);
Parameter(loadFromUri,java.net.URI,);
Parameter(loadFromUri,java.lang.Object,);
Parameter(loadFromPrivilegedLocations,java.lang.String,);
Parameter(loadFromPrivilegedLocations,java.lang.Object,);
Parameter(loadFromFallbackLocations,java.lang.String,);
Parameter(loadFromFallbackLocations,java.lang.Object,);
SubClass(org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider);
Realization(org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,loadSource --> entityNeedsRevalidation,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,loadSource --> loadFromPrivilegedLocations,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,loadSource --> loadFromPathArray,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,loadSource --> loadFromFallbackLocations,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,loadSource$2 --> loadFromUri,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,loadFromPathArray --> ensureTrailingSlash,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,loadFromPathArray --> loadFromUri,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,loadSource --> NOT_MODIFIED,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,READ);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,loadFromPathArray --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,loadFromPathArray --> toUint32$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase,loadFromPathArray --> getTypedProperty,org.mozilla.javascript.ScriptableObject,);
EndClass 168
StartClass 169
Class(org.mozilla.javascript.commonjs.module.provider.UrlConnectionSecurityDomainProvider,Y,Y,Public);
Method(getSecurityDomain,java.lang.Object,Public,N,Y);
Parameter(getSecurityDomain,java.net.URLConnection,);
EndClass 169
StartClass 170
Class(org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator,Y,Y,Public);
Method(calculateExpiry,long,Public,N,Y);
Parameter(calculateExpiry,java.net.URLConnection,);
EndClass 170
StartClass 171
Class(org.mozilla.javascript.commonjs.module.provider.ModuleSource,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(reader,java.io.Reader,Private,N,Y,);
Attribute(securityDomain,java.lang.Object,Private,N,Y,);
Attribute(uri,java.net.URI,Private,N,Y,);
Attribute(base,java.net.URI,Private,N,Y,);
Attribute(validator,java.lang.Object,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getReader,java.io.Reader,Public,N,N);
Method(getSecurityDomain,java.lang.Object,Public,N,N);
Method(getUri,java.net.URI,Public,N,N);
Method(getBase,java.net.URI,Public,N,N);
Method(getValidator,java.lang.Object,Public,N,N);
Parameter(<init>,java.io.Reader,);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,java.net.URI,);
Parameter(<init>,java.net.URI,);
Parameter(<init>,java.lang.Object,);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSource,<init> --> reader,org.mozilla.javascript.commonjs.module.provider.ModuleSource,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSource,<init> --> securityDomain,org.mozilla.javascript.commonjs.module.provider.ModuleSource,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSource,<init> --> uri,org.mozilla.javascript.commonjs.module.provider.ModuleSource,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSource,<init> --> base,org.mozilla.javascript.commonjs.module.provider.ModuleSource,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSource,<init> --> validator,org.mozilla.javascript.commonjs.module.provider.ModuleSource,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSource,getReader --> reader,org.mozilla.javascript.commonjs.module.provider.ModuleSource,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSource,getSecurityDomain --> securityDomain,org.mozilla.javascript.commonjs.module.provider.ModuleSource,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSource,getUri --> uri,org.mozilla.javascript.commonjs.module.provider.ModuleSource,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSource,getBase --> base,org.mozilla.javascript.commonjs.module.provider.ModuleSource,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.ModuleSource,getValidator --> validator,org.mozilla.javascript.commonjs.module.provider.ModuleSource,READ);
EndClass 171
StartClass 172
Class(org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,N,N,NA);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(uri,java.net.URI,Private,N,Y,);
Attribute(lastModified,long,Private,N,Y,);
Attribute(entityTags,java.lang.String,Private,N,Y,);
Attribute(expiry,long,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(updateValidator,boolean,Public,N,N);
Method(isResourceChanged,boolean,Private,N,N);
Method(calculateExpiry,long,Private,N,N);
Method(getMaxAge,int,Private,N,N);
Method(getEntityTags,java.lang.String,Private,N,N);
Method(appliesTo,boolean,Public,N,N);
Method(applyConditionals,void,Public,N,N);
Method(entityNeedsRevalidation,boolean,Public,N,N);
Parameter(<init>,java.net.URI,);
Parameter(<init>,java.net.URLConnection,);
Parameter(<init>,long,);
Parameter(<init>,org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator,);
Parameter(updateValidator,java.net.URLConnection,);
Parameter(updateValidator,long,);
Parameter(updateValidator,org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator,);
Parameter(isResourceChanged,java.net.URLConnection,);
Parameter(calculateExpiry,java.net.URLConnection,);
Parameter(calculateExpiry,long,);
Parameter(calculateExpiry,org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator,);
Parameter(getMaxAge,java.lang.String,);
Parameter(getEntityTags,java.net.URLConnection,);
Parameter(appliesTo,java.net.URI,);
Parameter(applyConditionals,java.net.URLConnection,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,<init> --> getEntityTags,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,<init> --> calculateExpiry,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,updateValidator --> isResourceChanged,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,updateValidator --> calculateExpiry,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,calculateExpiry --> getMaxAge,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,<init> --> uri,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,<init> --> lastModified,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,<init> --> entityTags,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,<init> --> expiry,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,updateValidator --> expiry,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,isResourceChanged --> lastModified,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,appliesTo --> uri,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,applyConditionals --> lastModified,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,applyConditionals --> entityTags,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,entityNeedsRevalidation --> expiry,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,READ);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator,calculateExpiry --> calculateExpiry,org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator,);
EndClass 172
StartClass 173
Class(org.mozilla.javascript.commonjs.module.provider.DefaultUrlConnectionExpiryCalculator,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(relativeExpiry,long,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(calculateExpiry,long,Public,N,N);
Parameter(<init>$2,long,);
Parameter(calculateExpiry,java.net.URLConnection,);
Realization(org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.DefaultUrlConnectionExpiryCalculator,<init> --> <init>$2,org.mozilla.javascript.commonjs.module.provider.DefaultUrlConnectionExpiryCalculator,);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.DefaultUrlConnectionExpiryCalculator,<init>$2 --> relativeExpiry,org.mozilla.javascript.commonjs.module.provider.DefaultUrlConnectionExpiryCalculator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.DefaultUrlConnectionExpiryCalculator,calculateExpiry --> relativeExpiry,org.mozilla.javascript.commonjs.module.provider.DefaultUrlConnectionExpiryCalculator,READ);
EndClass 173
StartClass 174
Class(org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,N,Y,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Attribute(loadConcurrencyLevel,int,Private,Y,Y,);
Attribute(loadLockShift,int,Private,Y,Y,);
Attribute(loadLockMask,int,Private,Y,Y,);
Attribute(loadLockCount,int,Private,Y,Y,);
Attribute(loadLocks,java.lang.Object[],Private,N,Y,);
Attribute(moduleSourceProvider,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,Private,N,Y,);
Method(<init>,void,Protected,N,N);
Method(getModuleScript,org.mozilla.javascript.commonjs.module.ModuleScript,Public,N,N);
Method(putLoadedModule,void,Protected,N,Y);
Method(getLoadedModule,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,Protected,N,Y);
Method(getValidator,java.lang.Object,Private,Y,N);
Method(equal,boolean,Private,Y,N);
Method(getConcurrencyLevel,int,Protected,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,);
Parameter(getModuleScript,org.mozilla.javascript.Context,);
Parameter(getModuleScript,java.lang.String,);
Parameter(getModuleScript,java.net.URI,);
Parameter(getModuleScript,java.net.URI,);
Parameter(getModuleScript,org.mozilla.javascript.Scriptable,);
Parameter(putLoadedModule,java.lang.String,);
Parameter(putLoadedModule,org.mozilla.javascript.commonjs.module.ModuleScript,);
Parameter(putLoadedModule,java.lang.Object,);
Parameter(getLoadedModule,java.lang.String,);
Parameter(getValidator,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,);
Parameter(equal,java.lang.Object,);
Parameter(equal,java.lang.Object,);
SubClass(org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider);
Realization(org.mozilla.javascript.commonjs.module.ModuleScriptProvider);
Composition(org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> getLoadedModule,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> getValidator,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> equal,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> putLoadedModule,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,<init> --> loadLockCount,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,<init> --> loadLocks,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,<init> --> loadLocks,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,<init> --> moduleSourceProvider,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> moduleSourceProvider,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> loadLocks,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> loadLockShift,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> loadLockMask,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getConcurrencyLevel --> loadLockCount,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,<clinit> --> loadConcurrencyLevel,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,<clinit> --> loadConcurrencyLevel,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,<clinit> --> loadLockShift,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,<clinit> --> loadLockMask,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,<clinit> --> loadLockCount,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> NOT_MODIFIED,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,READ);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> loadSource,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> loadSource$2,org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> getModule,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> getReader,org.mozilla.javascript.commonjs.module.provider.ModuleSource,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> getUri,org.mozilla.javascript.commonjs.module.provider.ModuleSource,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> getSecurityDomain,org.mozilla.javascript.commonjs.module.provider.ModuleSource,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> compileReader$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> getBase,org.mozilla.javascript.commonjs.module.provider.ModuleSource,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> <init>,org.mozilla.javascript.commonjs.module.ModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getModuleScript --> getValidator,org.mozilla.javascript.commonjs.module.provider.ModuleSource,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase,getValidator --> getValidator,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,);
EndClass 174
StartClass 175
Class(org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,N,N,Public);
Attribute(moduleScript,org.mozilla.javascript.commonjs.module.ModuleScript,Private,N,Y,);
Attribute(validator,java.lang.Object,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getModule,org.mozilla.javascript.commonjs.module.ModuleScript,Public,N,N);
Method(getValidator,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.commonjs.module.ModuleScript,);
Parameter(<init>,java.lang.Object,);
Composition(org.mozilla.javascript.commonjs.module.ModuleScript);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,<init> --> moduleScript,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,<init> --> validator,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,getModule --> moduleScript,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,getValidator --> validator,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,READ);
EndClass 175
StartClass 176
Class(org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,N,N,NA);
Attribute(moduleId,java.lang.String,Private,N,Y,);
Attribute(uri,java.net.URI,Private,N,Y,);
Attribute(base,java.net.URI,Private,N,Y,);
Attribute(validator,java.lang.Object,Private,N,Y,);
Method(<init>,void,Public,N,N);
Method(getCachedModuleScript,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,Public,N,N);
Method(getModuleId,java.lang.String,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Script,org.mozilla.javascript.Script);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.net.URI,);
Parameter(<init>,java.net.URI,);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,java.lang.ref.ReferenceQueue,);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,<init> --> moduleId,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,<init> --> uri,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,<init> --> base,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,<init> --> validator,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,getCachedModuleScript --> uri,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,getCachedModuleScript --> base,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,getCachedModuleScript --> validator,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,READ);
Call(ATTRIBUTE,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,getModuleId --> moduleId,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,READ);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,getCachedModuleScript --> <init>,org.mozilla.javascript.commonjs.module.ModuleScript,);
Call(METHOD,org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference,getCachedModuleScript --> <init>,org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript,);
EndClass 176
StartClass 177
Class(org.mozilla.javascript.ast.Scope,N,N,Public);
Attribute(symbolTable,java.util.Map,Protected,N,N,java.lang.String;org.mozilla.javascript.ast.Symbol);
Attribute(parentScope,org.mozilla.javascript.ast.Scope,Protected,N,N,);
Attribute(top,org.mozilla.javascript.ast.ScriptNode,Protected,N,N,);
Attribute(childScopes,java.util.List,Private,N,N,org.mozilla.javascript.ast.Scope);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getParentScope,org.mozilla.javascript.ast.Scope,Public,N,N);
Method(setParentScope,void,Public,N,N);
Method(clearParentScope,void,Public,N,N);
Method(getChildScopes,java.util.List,Public,N,N);
Method(addChildScope,void,Public,N,N);
Method(replaceWith,void,Public,N,N);
Method(getTop,org.mozilla.javascript.ast.ScriptNode,Public,N,N);
Method(setTop,void,Public,N,N);
Method(splitScope,org.mozilla.javascript.ast.Scope,Public,Y,N);
Method(joinScopes,void,Public,Y,N);
Method(getDefiningScope,org.mozilla.javascript.ast.Scope,Public,N,N);
Method(getSymbol,org.mozilla.javascript.ast.Symbol,Public,N,N);
Method(putSymbol,void,Public,N,N);
Method(getSymbolTable,java.util.Map,Public,N,N);
Method(setSymbolTable,void,Public,N,N);
Method(ensureSymbolTable,java.util.Map,Private,N,N);
Method(getStatements,java.util.List,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setParentScope,org.mozilla.javascript.ast.Scope,);
Parameter(addChildScope,org.mozilla.javascript.ast.Scope,);
Parameter(replaceWith,org.mozilla.javascript.ast.Scope,);
Parameter(setTop,org.mozilla.javascript.ast.ScriptNode,);
Parameter(splitScope,org.mozilla.javascript.ast.Scope,);
Parameter(joinScopes,org.mozilla.javascript.ast.Scope,);
Parameter(joinScopes,org.mozilla.javascript.ast.Scope,);
Parameter(getDefiningScope,java.lang.String,);
Parameter(getSymbol,java.lang.String,);
Parameter(putSymbol,org.mozilla.javascript.ast.Symbol,);
Parameter(setSymbolTable,java.util.Map,java.lang.String;org.mozilla.javascript.ast.Symbol);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
SubClass(org.mozilla.javascript.ast.AstRoot);
SubClass(org.mozilla.javascript.ast.FunctionNode);
SubClass(org.mozilla.javascript.ast.ScriptNode);
SubClass(org.mozilla.javascript.ast.WhileLoop);
SubClass(org.mozilla.javascript.ast.DoLoop);
SubClass(org.mozilla.javascript.ast.ForLoop);
SubClass(org.mozilla.javascript.ast.ArrayComprehensionLoop);
SubClass(org.mozilla.javascript.ast.GeneratorExpressionLoop);
SubClass(org.mozilla.javascript.ast.ForInLoop);
SubClass(org.mozilla.javascript.ast.Loop);
SubClass(org.mozilla.javascript.ast.GeneratorExpression);
SubClass(org.mozilla.javascript.ast.LetNode);
SubClass(org.mozilla.javascript.ast.ArrayComprehension);
Generalization(org.mozilla.javascript.ast.Jump);
Composition(org.mozilla.javascript.ast.Scope);
Composition(org.mozilla.javascript.ast.ScriptNode);
Call(METHOD,org.mozilla.javascript.ast.Scope,<init>$3 --> <init>$2,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Scope,addChildScope --> setParentScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Scope,replaceWith --> addChildScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Scope,replaceWith --> joinScopes,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Scope,splitScope --> <init>$2,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Scope,splitScope --> getParentScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Scope,splitScope --> setParentScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Scope,joinScopes --> ensureSymbolTable,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Scope,getDefiningScope --> getSymbolTable,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Scope,putSymbol --> ensureSymbolTable,org.mozilla.javascript.ast.Scope,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,getParentScope --> parentScope,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,setParentScope --> top,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,setParentScope --> parentScope,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,setParentScope --> top,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,clearParentScope --> parentScope,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,getChildScopes --> childScopes,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,addChildScope --> childScopes,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,addChildScope --> childScopes,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,replaceWith --> childScopes,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,replaceWith --> symbolTable,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,replaceWith --> childScopes,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,getTop --> top,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,setTop --> top,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,splitScope --> symbolTable,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,splitScope --> top,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,splitScope --> symbolTable,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,splitScope --> top,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,getDefiningScope --> parentScope,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,getSymbol --> symbolTable,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,putSymbol --> symbolTable,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,putSymbol --> top,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,getSymbolTable --> symbolTable,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,setSymbolTable --> symbolTable,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,ensureSymbolTable --> symbolTable,org.mozilla.javascript.ast.Scope,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,ensureSymbolTable --> symbolTable,org.mozilla.javascript.ast.Scope,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,<init>$2 --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,<init>$3 --> length,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,splitScope --> parent,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Scope,splitScope --> parent,org.mozilla.javascript.ast.AstNode,WRITE);
Call(METHOD,org.mozilla.javascript.ast.Scope,<init> --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.Scope,<init>$2 --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.Scope,splitScope --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Scope,joinScopes --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Scope,joinScopes --> setContainingTable,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.ast.Scope,putSymbol --> getName,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.ast.Scope,putSymbol --> setContainingTable,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.ast.Scope,putSymbol --> addSymbol,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.ast.Scope,getStatements --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Scope,getStatements --> getNext,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Scope,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Scope,toSource --> iterator,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Scope,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Scope,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.Scope,visit --> iterator,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Scope,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 177
StartClass 178
Class(org.mozilla.javascript.ast.FunctionNode,N,N,Public);
Attribute(FUNCTION_STATEMENT,int,Public,Y,Y,);
Attribute(FUNCTION_EXPRESSION,int,Public,Y,Y,);
Attribute(FUNCTION_EXPRESSION_STATEMENT,int,Public,Y,Y,);
Attribute(NO_PARAMS,java.util.List,Private,Y,Y,org.mozilla.javascript.ast.AstNode);
Attribute(functionName,org.mozilla.javascript.ast.Name,Private,N,N,);
Attribute(params,java.util.List,Private,N,N,org.mozilla.javascript.ast.AstNode);
Attribute(body,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(isExpressionClosure,boolean,Private,N,N,);
Attribute(functionForm,org.mozilla.javascript.ast.FunctionNode$Form,Private,N,N,);
Attribute(lp,int,Private,N,N,);
Attribute(rp,int,Private,N,N,);
Attribute(functionType,int,Private,N,N,);
Attribute(needsActivation,boolean,Private,N,N,);
Attribute(isGenerator,boolean,Private,N,N,);
Attribute(generatorResumePoints,java.util.List,Private,N,N,org.mozilla.javascript.Node);
Attribute(liveLocals,java.util.Map,Private,N,N,);
Attribute(memberExprNode,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getFunctionName,org.mozilla.javascript.ast.Name,Public,N,N);
Method(setFunctionName,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(getParams,java.util.List,Public,N,N);
Method(setParams,void,Public,N,N);
Method(addParam,void,Public,N,N);
Method(isParam,boolean,Public,N,N);
Method(getBody,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setBody,void,Public,N,N);
Method(getLp,int,Public,N,N);
Method(setLp,void,Public,N,N);
Method(getRp,int,Public,N,N);
Method(setRp,void,Public,N,N);
Method(setParens,void,Public,N,N);
Method(isExpressionClosure,boolean,Public,N,N);
Method(setIsExpressionClosure,void,Public,N,N);
Method(requiresActivation,boolean,Public,N,N);
Method(setRequiresActivation,void,Public,N,N);
Method(isGenerator,boolean,Public,N,N);
Method(setIsGenerator,void,Public,N,N);
Method(addResumptionPoint,void,Public,N,N);
Method(getResumptionPoints,java.util.List,Public,N,N);
Method(getLiveLocals,java.util.Map,Public,N,N);
Method(addLiveLocals,void,Public,N,N);
Method(addFunction,int,Public,N,N);
Method(getFunctionType,int,Public,N,N);
Method(setFunctionType,void,Public,N,N);
Method(isGetterOrSetter,boolean,Public,N,N);
Method(isGetter,boolean,Public,N,N);
Method(isSetter,boolean,Public,N,N);
Method(setFunctionIsGetter,void,Public,N,N);
Method(setFunctionIsSetter,void,Public,N,N);
Method(setMemberExprNode,void,Public,N,N);
Method(getMemberExprNode,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,org.mozilla.javascript.ast.Name,);
Parameter(setFunctionName,org.mozilla.javascript.ast.Name,);
Parameter(setParams,java.util.List,org.mozilla.javascript.ast.AstNode);
Parameter(addParam,org.mozilla.javascript.ast.AstNode,);
Parameter(isParam,org.mozilla.javascript.ast.AstNode,);
Parameter(setBody,org.mozilla.javascript.ast.AstNode,);
Parameter(setLp,int,);
Parameter(setRp,int,);
Parameter(setParens,int,);
Parameter(setParens,int,);
Parameter(setIsExpressionClosure,boolean,);
Parameter(addResumptionPoint,org.mozilla.javascript.Node,);
Parameter(addLiveLocals,org.mozilla.javascript.Node,);
Parameter(addLiveLocals,int[],);
Parameter(addFunction,org.mozilla.javascript.ast.FunctionNode,);
Parameter(setFunctionType,int,);
Parameter(setMemberExprNode,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.ScriptNode);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.ScriptNode);
Composition(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.Name);
Composition(org.mozilla.javascript.ast.FunctionNode$Form);
Composition(org.mozilla.javascript.Node);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,<init>$3 --> setFunctionName,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,setParams --> addParam,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,setBody --> setIsExpressionClosure,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,toSource --> getBody,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,visit --> getParams,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,visit --> getBody,org.mozilla.javascript.ast.FunctionNode,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init> --> functionForm,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init> --> lp,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init> --> rp,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init>$2 --> functionForm,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init>$2 --> lp,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init>$2 --> rp,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init>$3 --> functionForm,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init>$3 --> lp,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init>$3 --> rp,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,getFunctionName --> functionName,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setFunctionName --> functionName,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,getName --> functionName,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,getParams --> params,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,getParams --> NO_PARAMS,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setParams --> params,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setParams --> params,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,addParam --> params,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,addParam --> params,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,isParam --> params,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,getBody --> body,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setBody --> body,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,getLp --> lp,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setLp --> lp,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,getRp --> rp,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setRp --> rp,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setParens --> lp,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setParens --> rp,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,isExpressionClosure --> isExpressionClosure,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setIsExpressionClosure --> isExpressionClosure,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,requiresActivation --> needsActivation,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setRequiresActivation --> needsActivation,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,isGenerator --> isGenerator,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setIsGenerator --> isGenerator,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,addResumptionPoint --> generatorResumePoints,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,addResumptionPoint --> generatorResumePoints,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,getResumptionPoints --> generatorResumePoints,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,getLiveLocals --> liveLocals,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,addLiveLocals --> liveLocals,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,addLiveLocals --> liveLocals,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,addFunction --> needsActivation,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,getFunctionType --> functionType,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setFunctionType --> functionType,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,isGetterOrSetter --> functionForm,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,isGetter --> functionForm,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,isSetter --> functionForm,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setFunctionIsGetter --> functionForm,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setFunctionIsSetter --> functionForm,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setMemberExprNode --> memberExprNode,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,getMemberExprNode --> memberExprNode,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,toSource --> functionName,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,toSource --> params,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,toSource --> isExpressionClosure,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,toSource --> functionType,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,visit --> functionName,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,visit --> isExpressionClosure,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,visit --> memberExprNode,org.mozilla.javascript.ast.FunctionNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<clinit> --> NO_PARAMS,org.mozilla.javascript.ast.FunctionNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init> --> FUNCTION,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init>$2 --> FUNCTION,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init>$3 --> FUNCTION,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setBody --> position,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,isGetterOrSetter --> GETTER,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,isGetterOrSetter --> SETTER,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,isGetter --> GETTER,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,isSetter --> SETTER,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setFunctionIsGetter --> GETTER,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode,setFunctionIsSetter --> SETTER,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,<init> --> <init>,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,<init>$2 --> <init>$2,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,<init>$3 --> <init>$2,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,setFunctionName --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,getName --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,addParam --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,addParam --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,setBody --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,setBody --> getProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,setBody --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,setBody --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,setBody --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,setBody --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,setBody --> setEncodedSourceBounds,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,addFunction --> addFunction,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,addFunction --> getFunctionCount,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,setMemberExprNode --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,toSource --> toSource,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,toSource --> printList,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,toSource --> getLastChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,toSource --> getReturnValue,org.mozilla.javascript.ast.ReturnStatement,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,visit --> visit,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 178
StartClass 179
Class(org.mozilla.javascript.ast.RegExpLiteral,N,N,Public);
Attribute(value,java.lang.String,Private,N,N,);
Attribute(flags,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getValue,java.lang.String,Public,N,N);
Method(setValue,void,Public,N,N);
Method(getFlags,java.lang.String,Public,N,N);
Method(setFlags,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setValue,java.lang.String,);
Parameter(setFlags,java.lang.String,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.RegExpLiteral,getValue --> value,org.mozilla.javascript.ast.RegExpLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.RegExpLiteral,setValue --> value,org.mozilla.javascript.ast.RegExpLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.RegExpLiteral,getFlags --> flags,org.mozilla.javascript.ast.RegExpLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.RegExpLiteral,setFlags --> flags,org.mozilla.javascript.ast.RegExpLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.RegExpLiteral,toSource --> value,org.mozilla.javascript.ast.RegExpLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.RegExpLiteral,toSource --> flags,org.mozilla.javascript.ast.RegExpLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.RegExpLiteral,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.RegExpLiteral,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.RegExpLiteral,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.RegExpLiteral,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.RegExpLiteral,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.RegExpLiteral,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.RegExpLiteral,setValue --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.RegExpLiteral,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.RegExpLiteral,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
EndClass 179
StartClass 180
Class(org.mozilla.javascript.ast.Symbol,N,N,Public);
Attribute(declType,int,Private,N,N,);
Attribute(index,int,Private,N,N,);
Attribute(name,java.lang.String,Private,N,N,);
Attribute(node,org.mozilla.javascript.Node,Private,N,N,);
Attribute(containingTable,org.mozilla.javascript.ast.Scope,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(getDeclType,int,Public,N,N);
Method(setDeclType,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(setName,void,Public,N,N);
Method(getNode,org.mozilla.javascript.Node,Public,N,N);
Method(getIndex,int,Public,N,N);
Method(setIndex,void,Public,N,N);
Method(setNode,void,Public,N,N);
Method(getContainingTable,org.mozilla.javascript.ast.Scope,Public,N,N);
Method(setContainingTable,void,Public,N,N);
Method(getDeclTypeName,java.lang.String,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$2,java.lang.String,);
Parameter(setDeclType,int,);
Parameter(setName,java.lang.String,);
Parameter(setIndex,int,);
Parameter(setNode,org.mozilla.javascript.Node,);
Parameter(setContainingTable,org.mozilla.javascript.ast.Scope,);
Composition(org.mozilla.javascript.Node);
Composition(org.mozilla.javascript.ast.Scope);
Call(METHOD,org.mozilla.javascript.ast.Symbol,<init>$2 --> setName,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.ast.Symbol,<init>$2 --> setDeclType,org.mozilla.javascript.ast.Symbol,);
Call(METHOD,org.mozilla.javascript.ast.Symbol,toString --> getDeclTypeName,org.mozilla.javascript.ast.Symbol,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,<init> --> index,org.mozilla.javascript.ast.Symbol,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,<init>$2 --> index,org.mozilla.javascript.ast.Symbol,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,getDeclType --> declType,org.mozilla.javascript.ast.Symbol,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,setDeclType --> declType,org.mozilla.javascript.ast.Symbol,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,getName --> name,org.mozilla.javascript.ast.Symbol,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,setName --> name,org.mozilla.javascript.ast.Symbol,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,getNode --> node,org.mozilla.javascript.ast.Symbol,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,getIndex --> index,org.mozilla.javascript.ast.Symbol,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,setIndex --> index,org.mozilla.javascript.ast.Symbol,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,setNode --> node,org.mozilla.javascript.ast.Symbol,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,getContainingTable --> containingTable,org.mozilla.javascript.ast.Symbol,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,setContainingTable --> containingTable,org.mozilla.javascript.ast.Symbol,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,getDeclTypeName --> declType,org.mozilla.javascript.ast.Symbol,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,toString --> name,org.mozilla.javascript.ast.Symbol,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Symbol,toString --> node,org.mozilla.javascript.ast.Symbol,READ);
Call(METHOD,org.mozilla.javascript.ast.Symbol,getDeclTypeName --> typeToName,org.mozilla.javascript.Token,);
Call(METHOD,org.mozilla.javascript.ast.Symbol,toString --> getLineno,org.mozilla.javascript.Node,);
EndClass 180
StartClass 181
Class(org.mozilla.javascript.ast.NodeVisitor,Y,Y,Public);
Method(visit,boolean,Public,N,Y);
Parameter(visit,org.mozilla.javascript.ast.AstNode,);
EndClass 181
StartClass 182
Class(org.mozilla.javascript.ast.Name,N,N,Public);
Attribute(identifier,java.lang.String,Private,N,N,);
Attribute(scope,org.mozilla.javascript.ast.Scope,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(getIdentifier,java.lang.String,Public,N,N);
Method(setIdentifier,void,Public,N,N);
Method(setScope,void,Public,N,N);
Method(getScope,org.mozilla.javascript.ast.Scope,Public,N,N);
Method(getDefiningScope,org.mozilla.javascript.ast.Scope,Public,N,N);
Method(isLocalName,boolean,Public,N,N);
Method(length,int,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,java.lang.String,);
Parameter(<init>$5,int,);
Parameter(<init>$5,java.lang.String,);
Parameter(setIdentifier,java.lang.String,);
Parameter(setScope,org.mozilla.javascript.ast.Scope,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.Scope);
Call(METHOD,org.mozilla.javascript.ast.Name,<init>$4 --> setIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.Name,<init>$5 --> setIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.Name,getDefiningScope --> getIdentifier,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.Name,isLocalName --> getDefiningScope,org.mozilla.javascript.ast.Name,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Name,getIdentifier --> identifier,org.mozilla.javascript.ast.Name,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Name,setIdentifier --> identifier,org.mozilla.javascript.ast.Name,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Name,setScope --> scope,org.mozilla.javascript.ast.Name,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Name,getScope --> scope,org.mozilla.javascript.ast.Name,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Name,length --> identifier,org.mozilla.javascript.ast.Name,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Name,toSource --> identifier,org.mozilla.javascript.ast.Name,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Name,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Name,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Name,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Name,<init>$4 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Name,<init>$5 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.Name,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Name,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Name,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Name,<init>$4 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Name,<init>$5 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Name,<init>$5 --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Name,setIdentifier --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Name,setIdentifier --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Name,getDefiningScope --> getEnclosingScope,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Name,getDefiningScope --> getDefiningScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Name,isLocalName --> getParentScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Name,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Name,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
EndClass 182
StartClass 183
Class(org.mozilla.javascript.ast.AstNode,N,Y,Public);
Attribute(position,int,Protected,N,N,);
Attribute(length,int,Protected,N,N,);
Attribute(parent,org.mozilla.javascript.ast.AstNode,Protected,N,N,);
Attribute(operatorNames,java.util.Map,Private,Y,N,java.lang.Integer;java.lang.String);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getPosition,int,Public,N,N);
Method(setPosition,void,Public,N,N);
Method(getAbsolutePosition,int,Public,N,N);
Method(getLength,int,Public,N,N);
Method(setLength,void,Public,N,N);
Method(setBounds,void,Public,N,N);
Method(setRelative,void,Public,N,N);
Method(getParent,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setParent,void,Public,N,N);
Method(addChild,void,Public,N,N);
Method(getAstRoot,org.mozilla.javascript.ast.AstRoot,Public,N,N);
Method(toSource,java.lang.String,Public,N,Y);
Method(toSource$2,java.lang.String,Public,N,N);
Method(makeIndent,java.lang.String,Public,N,N);
Method(shortName,java.lang.String,Public,N,N);
Method(operatorToString,java.lang.String,Public,Y,N);
Method(visit,void,Public,N,Y);
Method(hasSideEffects,boolean,Public,N,N);
Method(assertNotNull,void,Protected,N,N);
Method(printList,void,Protected,N,N);
Method(codeBug,java.lang.RuntimeException,Public,Y,N);
Method(getEnclosingFunction,org.mozilla.javascript.ast.FunctionNode,Public,N,N);
Method(getEnclosingScope,org.mozilla.javascript.ast.Scope,Public,N,N);
Method(compareTo,int,Public,N,N);
Method(depth,int,Public,N,N);
Method(getLineno,int,Public,N,N);
Method(debugPrint,java.lang.String,Public,N,N);
Method(compareTo$2,int,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setPosition,int,);
Parameter(setLength,int,);
Parameter(setBounds,int,);
Parameter(setBounds,int,);
Parameter(setRelative,int,);
Parameter(setParent,org.mozilla.javascript.ast.AstNode,);
Parameter(addChild,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(makeIndent,int,);
Parameter(operatorToString,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
Parameter(assertNotNull,java.lang.Object,);
Parameter(printList,java.util.List,);
Parameter(printList,java.lang.StringBuilder,);
Parameter(compareTo,org.mozilla.javascript.ast.AstNode,);
Parameter(compareTo$2,java.lang.Object,);
SuperClass(org.mozilla.javascript.Node);
SubClass(org.mozilla.javascript.ast.RegExpLiteral);
SubClass(org.mozilla.javascript.ast.Name);
SubClass(org.mozilla.javascript.ast.Comment);
SubClass(org.mozilla.javascript.ast.AstRoot);
SubClass(org.mozilla.javascript.ast.FunctionNode);
SubClass(org.mozilla.javascript.ast.ScriptNode);
SubClass(org.mozilla.javascript.ast.WhileLoop);
SubClass(org.mozilla.javascript.ast.DoLoop);
SubClass(org.mozilla.javascript.ast.ForLoop);
SubClass(org.mozilla.javascript.ast.ArrayComprehensionLoop);
SubClass(org.mozilla.javascript.ast.GeneratorExpressionLoop);
SubClass(org.mozilla.javascript.ast.ForInLoop);
SubClass(org.mozilla.javascript.ast.Loop);
SubClass(org.mozilla.javascript.ast.GeneratorExpression);
SubClass(org.mozilla.javascript.ast.LetNode);
SubClass(org.mozilla.javascript.ast.ArrayComprehension);
SubClass(org.mozilla.javascript.ast.Scope);
SubClass(org.mozilla.javascript.ast.SwitchStatement);
SubClass(org.mozilla.javascript.ast.BreakStatement);
SubClass(org.mozilla.javascript.ast.ContinueStatement);
SubClass(org.mozilla.javascript.ast.Label);
SubClass(org.mozilla.javascript.ast.Jump);
SubClass(org.mozilla.javascript.ast.NumberLiteral);
SubClass(org.mozilla.javascript.ast.LabeledStatement);
SubClass(org.mozilla.javascript.ast.IfStatement);
SubClass(org.mozilla.javascript.ast.TryStatement);
SubClass(org.mozilla.javascript.ast.ThrowStatement);
SubClass(org.mozilla.javascript.ast.WithStatement);
SubClass(org.mozilla.javascript.ast.VariableDeclaration);
SubClass(org.mozilla.javascript.ast.ObjectLiteral);
SubClass(org.mozilla.javascript.ast.StringLiteral);
SubClass(org.mozilla.javascript.ast.UnaryExpression);
SubClass(org.mozilla.javascript.ast.ErrorNode);
SubClass(org.mozilla.javascript.ast.ArrayLiteral);
SubClass(org.mozilla.javascript.ast.EmptyStatement);
SubClass(org.mozilla.javascript.ast.ParenthesizedExpression);
SubClass(org.mozilla.javascript.ast.ObjectProperty);
SubClass(org.mozilla.javascript.ast.Assignment);
SubClass(org.mozilla.javascript.ast.PropertyGet);
SubClass(org.mozilla.javascript.ast.XmlMemberGet);
SubClass(org.mozilla.javascript.ast.XmlDotQuery);
SubClass(org.mozilla.javascript.ast.InfixExpression);
SubClass(org.mozilla.javascript.ast.XmlElemRef);
SubClass(org.mozilla.javascript.ast.XmlPropRef);
SubClass(org.mozilla.javascript.ast.XmlRef);
SubClass(org.mozilla.javascript.ast.ConditionalExpression);
SubClass(org.mozilla.javascript.ast.Yield);
SubClass(org.mozilla.javascript.ast.XmlString);
SubClass(org.mozilla.javascript.ast.XmlExpression);
SubClass(org.mozilla.javascript.ast.XmlFragment);
SubClass(org.mozilla.javascript.ast.CatchClause);
SubClass(org.mozilla.javascript.ast.ExpressionStatement);
SubClass(org.mozilla.javascript.ast.NewExpression);
SubClass(org.mozilla.javascript.ast.FunctionCall);
SubClass(org.mozilla.javascript.ast.ReturnStatement);
SubClass(org.mozilla.javascript.ast.SwitchCase);
SubClass(org.mozilla.javascript.ast.XmlLiteral);
SubClass(org.mozilla.javascript.ast.Block);
SubClass(org.mozilla.javascript.ast.VariableInitializer);
SubClass(org.mozilla.javascript.ast.EmptyExpression);
SubClass(org.mozilla.javascript.ast.KeywordLiteral);
SubClass(org.mozilla.javascript.ast.ElementGet);
Generalization(org.mozilla.javascript.Node);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.AstNode,<init>$2 --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,<init>$3 --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,getAbsolutePosition --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,getAbsolutePosition --> getParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,setBounds --> setPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,setBounds --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,setParent --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,setParent --> setRelative,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,addChild --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,addChild --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,addChild --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,addChild --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,addChild --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,getAstRoot --> getParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,toSource$2 --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,printList --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,getEnclosingFunction --> getParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,getEnclosingScope --> getParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,compareTo --> getAbsolutePosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,compareTo --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,depth --> depth,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,getLineno --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,debugPrint --> visit,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,compareTo$2 --> compareTo,org.mozilla.javascript.ast.AstNode,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,<init> --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,<init> --> length,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,<init>$2 --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,<init>$3 --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,<init>$3 --> length,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,getPosition --> position,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,setPosition --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,getAbsolutePosition --> position,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,getAbsolutePosition --> parent,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,getLength --> length,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,setLength --> length,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,setRelative --> position,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,setRelative --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,getParent --> parent,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,setParent --> parent,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,setParent --> parent,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,operatorToString --> operatorNames,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,depth --> parent,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,getLineno --> parent,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,<clinit> --> operatorNames,org.mozilla.javascript.ast.AstNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,<clinit> --> operatorNames,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode,getLineno --> lineno,org.mozilla.javascript.Node,READ);
Call(METHOD,org.mozilla.javascript.ast.AstNode,<init> --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,addChild --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,hasSideEffects --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,codeBug --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,debugPrint --> <init>,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,);
Call(METHOD,org.mozilla.javascript.ast.AstNode,debugPrint --> toString,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,);
EndClass 183
StartClass 184
Class(org.mozilla.javascript.Node$PropListItem,N,N,NA);
Attribute(next,org.mozilla.javascript.Node$PropListItem,Public,N,N,);
Attribute(type,int,Public,N,N,);
Attribute(intValue,int,Public,N,N,);
Attribute(objectValue,java.lang.Object,Public,N,N,);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>$2,org.mozilla.javascript.Node$1,);
Composition(org.mozilla.javascript.Node$PropListItem);
Call(METHOD,org.mozilla.javascript.Node$PropListItem,<init>$2 --> <init>,org.mozilla.javascript.Node$PropListItem,);
EndClass 184
StartClass 185
Class(org.mozilla.javascript.ast.Comment,N,N,Public);
Attribute(value,java.lang.String,Private,N,N,);
Attribute(commentType,org.mozilla.javascript.Token$CommentType,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getCommentType,org.mozilla.javascript.Token$CommentType,Public,N,N);
Method(setCommentType,void,Public,N,N);
Method(getValue,java.lang.String,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(<init>,org.mozilla.javascript.Token$CommentType,);
Parameter(<init>,java.lang.String,);
Parameter(setCommentType,org.mozilla.javascript.Token$CommentType,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.Token$CommentType);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Comment,<init> --> commentType,org.mozilla.javascript.ast.Comment,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Comment,<init> --> value,org.mozilla.javascript.ast.Comment,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Comment,getCommentType --> commentType,org.mozilla.javascript.ast.Comment,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Comment,setCommentType --> commentType,org.mozilla.javascript.ast.Comment,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Comment,getValue --> value,org.mozilla.javascript.ast.Comment,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Comment,toSource --> value,org.mozilla.javascript.ast.Comment,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Comment,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.Comment,<init> --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Comment,toSource --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Comment,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Comment,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
EndClass 185
StartClass 186
Class(org.mozilla.javascript.ast.Jump,N,N,Public);
Attribute(target,org.mozilla.javascript.Node,Public,N,N,);
Attribute(target2,org.mozilla.javascript.Node,Private,N,N,);
Attribute(jumpNode,org.mozilla.javascript.ast.Jump,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(getJumpStatement,org.mozilla.javascript.ast.Jump,Public,N,N);
Method(setJumpStatement,void,Public,N,N);
Method(getDefault,org.mozilla.javascript.Node,Public,N,N);
Method(setDefault,void,Public,N,N);
Method(getFinally,org.mozilla.javascript.Node,Public,N,N);
Method(setFinally,void,Public,N,N);
Method(getLoop,org.mozilla.javascript.ast.Jump,Public,N,N);
Method(setLoop,void,Public,N,N);
Method(getContinue,org.mozilla.javascript.Node,Public,N,N);
Method(setContinue,void,Public,N,N);
Method(visit,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,org.mozilla.javascript.Node,);
Parameter(<init>$5,int,);
Parameter(<init>$5,org.mozilla.javascript.Node,);
Parameter(<init>$5,int,);
Parameter(setJumpStatement,org.mozilla.javascript.ast.Jump,);
Parameter(setDefault,org.mozilla.javascript.Node,);
Parameter(setFinally,org.mozilla.javascript.Node,);
Parameter(setLoop,org.mozilla.javascript.ast.Jump,);
Parameter(setContinue,org.mozilla.javascript.Node,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
Parameter(toSource,int,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
SubClass(org.mozilla.javascript.ast.AstRoot);
SubClass(org.mozilla.javascript.ast.FunctionNode);
SubClass(org.mozilla.javascript.ast.ScriptNode);
SubClass(org.mozilla.javascript.ast.WhileLoop);
SubClass(org.mozilla.javascript.ast.DoLoop);
SubClass(org.mozilla.javascript.ast.ForLoop);
SubClass(org.mozilla.javascript.ast.ArrayComprehensionLoop);
SubClass(org.mozilla.javascript.ast.GeneratorExpressionLoop);
SubClass(org.mozilla.javascript.ast.ForInLoop);
SubClass(org.mozilla.javascript.ast.Loop);
SubClass(org.mozilla.javascript.ast.GeneratorExpression);
SubClass(org.mozilla.javascript.ast.LetNode);
SubClass(org.mozilla.javascript.ast.ArrayComprehension);
SubClass(org.mozilla.javascript.ast.Scope);
SubClass(org.mozilla.javascript.ast.SwitchStatement);
SubClass(org.mozilla.javascript.ast.BreakStatement);
SubClass(org.mozilla.javascript.ast.ContinueStatement);
SubClass(org.mozilla.javascript.ast.Label);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.Node);
Composition(org.mozilla.javascript.ast.Jump);
Call(METHOD,org.mozilla.javascript.ast.Jump,<init>$3 --> <init>$2,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.Jump,<init>$4 --> <init>$2,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.Jump,<init>$5 --> <init>$4,org.mozilla.javascript.ast.Jump,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,getJumpStatement --> jumpNode,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setJumpStatement --> jumpNode,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setJumpStatement --> jumpNode,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,getDefault --> target2,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setDefault --> target2,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setDefault --> target2,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,getFinally --> target2,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setFinally --> target2,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setFinally --> target2,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,getLoop --> jumpNode,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setLoop --> jumpNode,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setLoop --> jumpNode,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,getContinue --> target2,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setContinue --> target2,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setContinue --> target2,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,getJumpStatement --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setJumpStatement --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,getDefault --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setDefault --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,getFinally --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setFinally --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,getLoop --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setLoop --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,getContinue --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Jump,setContinue --> type,org.mozilla.javascript.Node,READ);
Call(METHOD,org.mozilla.javascript.ast.Jump,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,<init>$2 --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,<init>$3 --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Jump,<init>$4 --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Jump,<init>$5 --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Jump,getJumpStatement --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,setJumpStatement --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,getDefault --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,setDefault --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,setDefault --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Jump,getFinally --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,setFinally --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,setFinally --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Jump,getLoop --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,setLoop --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,getContinue --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,setContinue --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Jump,setContinue --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Jump,visit --> toString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Jump,toSource --> toString,org.mozilla.javascript.Node,);
EndClass 186
StartClass 187
Class(org.mozilla.javascript.ast.NumberLiteral,N,N,Public);
Attribute(value,java.lang.String,Private,N,N,);
Attribute(number,double,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(<init>$6,void,Public,N,N);
Method(getValue,java.lang.String,Public,N,N);
Method(setValue,void,Public,N,N);
Method(getNumber,double,Public,N,N);
Method(setNumber,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,java.lang.String,);
Parameter(<init>$5,int,);
Parameter(<init>$5,java.lang.String,);
Parameter(<init>$5,double,);
Parameter(<init>$6,double,);
Parameter(setValue,java.lang.String,);
Parameter(setNumber,double,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,<init>$4 --> setValue,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,<init>$5 --> <init>$4,org.mozilla.javascript.ast.NumberLiteral,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,<init>$6 --> setValue,org.mozilla.javascript.ast.NumberLiteral,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NumberLiteral,getValue --> value,org.mozilla.javascript.ast.NumberLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NumberLiteral,setValue --> value,org.mozilla.javascript.ast.NumberLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NumberLiteral,getNumber --> number,org.mozilla.javascript.ast.NumberLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NumberLiteral,setNumber --> number,org.mozilla.javascript.ast.NumberLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NumberLiteral,toSource --> value,org.mozilla.javascript.ast.NumberLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NumberLiteral,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NumberLiteral,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NumberLiteral,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NumberLiteral,<init>$4 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NumberLiteral,<init>$6 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,<init>$4 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,<init>$4 --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,<init>$5 --> setDouble,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,<init>$6 --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,<init>$6 --> setDouble,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,setValue --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NumberLiteral,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
EndClass 187
StartClass 188
Class(org.mozilla.javascript.Node$1,N,N,NA);
EndClass 188
StartClass 189
Class(org.mozilla.javascript.Node$NodeIterator,N,N,Public);
Attribute(cursor,org.mozilla.javascript.Node,Private,N,N,);
Attribute(prev,org.mozilla.javascript.Node,Private,N,N,);
Attribute(prev2,org.mozilla.javascript.Node,Private,N,N,);
Attribute(removed,boolean,Private,N,N,);
Attribute(this$0,org.mozilla.javascript.Node,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(hasNext,boolean,Public,N,N);
Method(next,org.mozilla.javascript.Node,Public,N,N);
Method(remove,void,Public,N,N);
Method(next$2,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Node,);
Composition(org.mozilla.javascript.Node);
Call(METHOD,org.mozilla.javascript.Node$NodeIterator,next$2 --> next,org.mozilla.javascript.Node$NodeIterator,);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,<init> --> this$0,org.mozilla.javascript.Node$NodeIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,<init> --> prev,org.mozilla.javascript.Node$NodeIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,<init> --> removed,org.mozilla.javascript.Node$NodeIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,<init> --> cursor,org.mozilla.javascript.Node$NodeIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,hasNext --> cursor,org.mozilla.javascript.Node$NodeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,next --> cursor,org.mozilla.javascript.Node$NodeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,next --> prev,org.mozilla.javascript.Node$NodeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,next --> removed,org.mozilla.javascript.Node$NodeIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,next --> prev2,org.mozilla.javascript.Node$NodeIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,next --> prev,org.mozilla.javascript.Node$NodeIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,next --> cursor,org.mozilla.javascript.Node$NodeIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,remove --> prev,org.mozilla.javascript.Node$NodeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,remove --> removed,org.mozilla.javascript.Node$NodeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,remove --> this$0,org.mozilla.javascript.Node$NodeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,remove --> prev2,org.mozilla.javascript.Node$NodeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,remove --> cursor,org.mozilla.javascript.Node$NodeIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,<init> --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,next --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,remove --> first,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,remove --> next,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,remove --> last,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,remove --> first,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,remove --> next,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Node$NodeIterator,remove --> last,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.Node$NodeIterator,<init> --> access$000,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.Node$NodeIterator,remove --> access$000,org.mozilla.javascript.Node,);
EndClass 189
StartClass 190
Class(org.mozilla.javascript.InterfaceAdapter,N,N,Public);
Attribute(proxyHelper,java.lang.Object,Private,N,Y,);
Method(create,java.lang.Object,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(invoke,java.lang.Object,Public,N,N);
Method(invokeImpl,java.lang.Object,Public,N,N);
Parameter(create,org.mozilla.javascript.Context,);
Parameter(create,java.lang.Class,);
Parameter(create,org.mozilla.javascript.ScriptableObject,);
Parameter(<init>,org.mozilla.javascript.ContextFactory,);
Parameter(<init>,java.lang.Class,);
Parameter(invoke,org.mozilla.javascript.ContextFactory,);
Parameter(invoke,java.lang.Object,);
Parameter(invoke,org.mozilla.javascript.Scriptable,);
Parameter(invoke,java.lang.Object,);
Parameter(invoke,java.lang.reflect.Method,);
Parameter(invoke,java.lang.Object[],);
Parameter(invokeImpl,org.mozilla.javascript.Context,);
Parameter(invokeImpl,java.lang.Object,);
Parameter(invokeImpl,org.mozilla.javascript.Scriptable,);
Parameter(invokeImpl,java.lang.Object,);
Parameter(invokeImpl,java.lang.reflect.Method,);
Parameter(invokeImpl,java.lang.Object[],);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,create --> <init>,org.mozilla.javascript.InterfaceAdapter,);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter,create --> proxyHelper,org.mozilla.javascript.InterfaceAdapter,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter,<init> --> proxyHelper,org.mozilla.javascript.InterfaceAdapter,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter,create --> instance,org.mozilla.javascript.VMBridge,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter,<init> --> instance,org.mozilla.javascript.VMBridge,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter,invokeImpl --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter,invokeImpl --> emptyArgs,org.mozilla.javascript.ScriptRuntime,READ);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,create --> getTopCallScope,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,create --> get,org.mozilla.javascript.ClassCache,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,create --> getInterfaceAdapter,org.mozilla.javascript.ClassCache,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,create --> getFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,create --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,create --> cacheInterfaceAdapter,org.mozilla.javascript.ClassCache,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,create --> newInterfaceProxy,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,<init> --> getInterfaceProxyHelper,org.mozilla.javascript.VMBridge,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,invoke --> <init>,org.mozilla.javascript.InterfaceAdapter$1,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,invoke --> call,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,invokeImpl --> getProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,invokeImpl --> getMessage1,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,invokeImpl --> reportWarning$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,invokeImpl --> jsToJava,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,invokeImpl --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,invokeImpl --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,invokeImpl --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,invokeImpl --> wrapAsJavaObject,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter,invokeImpl --> call,org.mozilla.javascript.Callable,);
EndClass 190
StartClass 191
Class(org.mozilla.javascript.Parser$ParserException,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>$2,org.mozilla.javascript.Parser$1,);
Call(METHOD,org.mozilla.javascript.Parser$ParserException,<init>$2 --> <init>,org.mozilla.javascript.Parser$ParserException,);
EndClass 191
StartClass 192
Class(org.mozilla.javascript.ast.IdeErrorReporter,Y,Y,Public);
Method(warning,void,Public,N,Y);
Method(error,void,Public,N,Y);
Parameter(warning,java.lang.String,);
Parameter(warning,java.lang.String,);
Parameter(warning,int,);
Parameter(warning,int,);
Parameter(error,java.lang.String,);
Parameter(error,java.lang.String,);
Parameter(error,int,);
Parameter(error,int,);
Realization(org.mozilla.javascript.ErrorReporter);
EndClass 192
StartClass 193
Class(org.mozilla.javascript.ast.LabeledStatement,N,N,Public);
Attribute(labels,java.util.List,Private,N,N,org.mozilla.javascript.ast.Label);
Attribute(statement,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getLabels,java.util.List,Public,N,N);
Method(setLabels,void,Public,N,N);
Method(addLabel,void,Public,N,N);
Method(getStatement,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(getLabelByName,org.mozilla.javascript.ast.Label,Public,N,N);
Method(setStatement,void,Public,N,N);
Method(getFirstLabel,org.mozilla.javascript.ast.Label,Public,N,N);
Method(hasSideEffects,boolean,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setLabels,java.util.List,org.mozilla.javascript.ast.Label);
Parameter(addLabel,org.mozilla.javascript.ast.Label,);
Parameter(getLabelByName,java.lang.String,);
Parameter(setStatement,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,setLabels --> addLabel,org.mozilla.javascript.ast.LabeledStatement,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,<init> --> labels,org.mozilla.javascript.ast.LabeledStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,<init>$2 --> labels,org.mozilla.javascript.ast.LabeledStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,<init>$3 --> labels,org.mozilla.javascript.ast.LabeledStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,getLabels --> labels,org.mozilla.javascript.ast.LabeledStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,setLabels --> labels,org.mozilla.javascript.ast.LabeledStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,addLabel --> labels,org.mozilla.javascript.ast.LabeledStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,getStatement --> statement,org.mozilla.javascript.ast.LabeledStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,getLabelByName --> labels,org.mozilla.javascript.ast.LabeledStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,setStatement --> statement,org.mozilla.javascript.ast.LabeledStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,getFirstLabel --> labels,org.mozilla.javascript.ast.LabeledStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,toSource --> labels,org.mozilla.javascript.ast.LabeledStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,toSource --> statement,org.mozilla.javascript.ast.LabeledStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,visit --> labels,org.mozilla.javascript.ast.LabeledStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,visit --> statement,org.mozilla.javascript.ast.LabeledStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LabeledStatement,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,setLabels --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,addLabel --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,addLabel --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,getLabelByName --> getName,org.mozilla.javascript.ast.Label,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,setStatement --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,setStatement --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,toSource --> toSource,org.mozilla.javascript.ast.Label,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.LabeledStatement,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 193
StartClass 194
Class(org.mozilla.javascript.ast.Loop,N,Y,Public);
Attribute(body,org.mozilla.javascript.ast.AstNode,Protected,N,N,);
Attribute(lp,int,Protected,N,N,);
Attribute(rp,int,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getBody,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setBody,void,Public,N,N);
Method(getLp,int,Public,N,N);
Method(setLp,void,Public,N,N);
Method(getRp,int,Public,N,N);
Method(setRp,void,Public,N,N);
Method(setParens,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setBody,org.mozilla.javascript.ast.AstNode,);
Parameter(setLp,int,);
Parameter(setRp,int,);
Parameter(setParens,int,);
Parameter(setParens,int,);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
SubClass(org.mozilla.javascript.ast.WhileLoop);
SubClass(org.mozilla.javascript.ast.DoLoop);
SubClass(org.mozilla.javascript.ast.ForLoop);
SubClass(org.mozilla.javascript.ast.ArrayComprehensionLoop);
SubClass(org.mozilla.javascript.ast.GeneratorExpressionLoop);
SubClass(org.mozilla.javascript.ast.ForInLoop);
Generalization(org.mozilla.javascript.ast.Scope);
Composition(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,<init> --> lp,org.mozilla.javascript.ast.Loop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,<init> --> rp,org.mozilla.javascript.ast.Loop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,<init>$2 --> lp,org.mozilla.javascript.ast.Loop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,<init>$2 --> rp,org.mozilla.javascript.ast.Loop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,<init>$3 --> lp,org.mozilla.javascript.ast.Loop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,<init>$3 --> rp,org.mozilla.javascript.ast.Loop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,getBody --> body,org.mozilla.javascript.ast.Loop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,setBody --> body,org.mozilla.javascript.ast.Loop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,getLp --> lp,org.mozilla.javascript.ast.Loop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,setLp --> lp,org.mozilla.javascript.ast.Loop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,getRp --> rp,org.mozilla.javascript.ast.Loop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,setRp --> rp,org.mozilla.javascript.ast.Loop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,setParens --> lp,org.mozilla.javascript.ast.Loop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Loop,setParens --> rp,org.mozilla.javascript.ast.Loop,WRITE);
Call(METHOD,org.mozilla.javascript.ast.Loop,<init> --> <init>,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Loop,<init>$2 --> <init>$2,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Loop,<init>$3 --> <init>$3,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.Loop,setBody --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Loop,setBody --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Loop,setBody --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Loop,setBody --> setParent,org.mozilla.javascript.ast.AstNode,);
EndClass 194
StartClass 195
Class(org.mozilla.javascript.ast.SwitchStatement,N,N,Public);
Attribute(NO_CASES,java.util.List,Private,Y,Y,org.mozilla.javascript.ast.SwitchCase);
Attribute(expression,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(cases,java.util.List,Private,N,N,org.mozilla.javascript.ast.SwitchCase);
Attribute(lp,int,Private,N,N,);
Attribute(rp,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getExpression,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setExpression,void,Public,N,N);
Method(getCases,java.util.List,Public,N,N);
Method(setCases,void,Public,N,N);
Method(addCase,void,Public,N,N);
Method(getLp,int,Public,N,N);
Method(setLp,void,Public,N,N);
Method(getRp,int,Public,N,N);
Method(setRp,void,Public,N,N);
Method(setParens,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(setCases,java.util.List,org.mozilla.javascript.ast.SwitchCase);
Parameter(addCase,org.mozilla.javascript.ast.SwitchCase,);
Parameter(setLp,int,);
Parameter(setRp,int,);
Parameter(setParens,int,);
Parameter(setParens,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.Jump);
Composition(org.mozilla.javascript.ast.SwitchCase);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,setCases --> addCase,org.mozilla.javascript.ast.SwitchStatement,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,visit --> getCases,org.mozilla.javascript.ast.SwitchStatement,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init> --> lp,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init> --> rp,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init>$2 --> lp,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init>$2 --> rp,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init>$3 --> lp,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init>$3 --> rp,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,getExpression --> expression,org.mozilla.javascript.ast.SwitchStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,setExpression --> expression,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,getCases --> cases,org.mozilla.javascript.ast.SwitchStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,getCases --> NO_CASES,org.mozilla.javascript.ast.SwitchStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,setCases --> cases,org.mozilla.javascript.ast.SwitchStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,setCases --> cases,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,addCase --> cases,org.mozilla.javascript.ast.SwitchStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,addCase --> cases,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,getLp --> lp,org.mozilla.javascript.ast.SwitchStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,setLp --> lp,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,getRp --> rp,org.mozilla.javascript.ast.SwitchStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,setRp --> rp,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,setParens --> lp,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,setParens --> rp,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,toSource --> expression,org.mozilla.javascript.ast.SwitchStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,toSource --> cases,org.mozilla.javascript.ast.SwitchStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,visit --> expression,org.mozilla.javascript.ast.SwitchStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<clinit> --> NO_CASES,org.mozilla.javascript.ast.SwitchStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init>$2 --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init>$3 --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchStatement,<init>$3 --> length,org.mozilla.javascript.ast.AstNode,WRITE);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,<init> --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,<init>$2 --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,<init>$3 --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,setExpression --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,setExpression --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,addCase --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,addCase --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,toSource --> toSource,org.mozilla.javascript.ast.SwitchCase,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,visit --> visit,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchStatement,visit --> visit,org.mozilla.javascript.ast.SwitchCase,);
EndClass 195
StartClass 196
Class(org.mozilla.javascript.Parser$ConditionData,N,N,NA);
Attribute(condition,org.mozilla.javascript.ast.AstNode,Public,N,N,);
Attribute(lp,int,Public,N,N,);
Attribute(rp,int,Public,N,N,);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>$2,org.mozilla.javascript.Parser$1,);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.Parser$ConditionData,<init>$2 --> <init>,org.mozilla.javascript.Parser$ConditionData,);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$ConditionData,<init> --> lp,org.mozilla.javascript.Parser$ConditionData,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$ConditionData,<init> --> rp,org.mozilla.javascript.Parser$ConditionData,WRITE);
EndClass 196
StartClass 197
Class(org.mozilla.javascript.ast.IfStatement,N,N,Public);
Attribute(condition,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(thenPart,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(elsePosition,int,Private,N,N,);
Attribute(elsePart,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(lp,int,Private,N,N,);
Attribute(rp,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getCondition,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setCondition,void,Public,N,N);
Method(getThenPart,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setThenPart,void,Public,N,N);
Method(getElsePart,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setElsePart,void,Public,N,N);
Method(getElsePosition,int,Public,N,N);
Method(setElsePosition,void,Public,N,N);
Method(getLp,int,Public,N,N);
Method(setLp,void,Public,N,N);
Method(getRp,int,Public,N,N);
Method(setRp,void,Public,N,N);
Method(setParens,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setCondition,org.mozilla.javascript.ast.AstNode,);
Parameter(setThenPart,org.mozilla.javascript.ast.AstNode,);
Parameter(setElsePart,org.mozilla.javascript.ast.AstNode,);
Parameter(setElsePosition,int,);
Parameter(setLp,int,);
Parameter(setRp,int,);
Parameter(setParens,int,);
Parameter(setParens,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init> --> elsePosition,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init> --> lp,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init> --> rp,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init>$2 --> elsePosition,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init>$2 --> lp,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init>$2 --> rp,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init>$3 --> elsePosition,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init>$3 --> lp,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init>$3 --> rp,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,getCondition --> condition,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,setCondition --> condition,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,getThenPart --> thenPart,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,setThenPart --> thenPart,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,getElsePart --> elsePart,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,setElsePart --> elsePart,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,getElsePosition --> elsePosition,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,setElsePosition --> elsePosition,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,getLp --> lp,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,setLp --> lp,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,getRp --> rp,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,setRp --> rp,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,setParens --> lp,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,setParens --> rp,org.mozilla.javascript.ast.IfStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,toSource --> condition,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,toSource --> thenPart,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,toSource --> elsePart,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,visit --> condition,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,visit --> thenPart,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,visit --> elsePart,org.mozilla.javascript.ast.IfStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.IfStatement,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,setCondition --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,setCondition --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,setThenPart --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,setThenPart --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,setElsePart --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,toSource --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.IfStatement,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 197
StartClass 198
Class(org.mozilla.javascript.ast.WhileLoop,N,N,Public);
Attribute(condition,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getCondition,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setCondition,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setCondition,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Loop);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.Loop);
Composition(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WhileLoop,getCondition --> condition,org.mozilla.javascript.ast.WhileLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WhileLoop,setCondition --> condition,org.mozilla.javascript.ast.WhileLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WhileLoop,toSource --> condition,org.mozilla.javascript.ast.WhileLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WhileLoop,visit --> condition,org.mozilla.javascript.ast.WhileLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WhileLoop,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WhileLoop,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WhileLoop,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WhileLoop,toSource --> body,org.mozilla.javascript.ast.Loop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WhileLoop,visit --> body,org.mozilla.javascript.ast.Loop,READ);
Call(METHOD,org.mozilla.javascript.ast.WhileLoop,<init> --> <init>,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.WhileLoop,<init>$2 --> <init>$2,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.WhileLoop,<init>$3 --> <init>$3,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.WhileLoop,setCondition --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WhileLoop,setCondition --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WhileLoop,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WhileLoop,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WhileLoop,toSource --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.WhileLoop,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.WhileLoop,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 198
StartClass 199
Class(org.mozilla.javascript.ast.DoLoop,N,N,Public);
Attribute(condition,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(whilePosition,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getCondition,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setCondition,void,Public,N,N);
Method(getWhilePosition,int,Public,N,N);
Method(setWhilePosition,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setCondition,org.mozilla.javascript.ast.AstNode,);
Parameter(setWhilePosition,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Loop);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.Loop);
Composition(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,<init> --> whilePosition,org.mozilla.javascript.ast.DoLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,<init>$2 --> whilePosition,org.mozilla.javascript.ast.DoLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,<init>$3 --> whilePosition,org.mozilla.javascript.ast.DoLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,getCondition --> condition,org.mozilla.javascript.ast.DoLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,setCondition --> condition,org.mozilla.javascript.ast.DoLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,getWhilePosition --> whilePosition,org.mozilla.javascript.ast.DoLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,setWhilePosition --> whilePosition,org.mozilla.javascript.ast.DoLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,toSource --> condition,org.mozilla.javascript.ast.DoLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,visit --> condition,org.mozilla.javascript.ast.DoLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,toSource --> body,org.mozilla.javascript.ast.Loop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.DoLoop,visit --> body,org.mozilla.javascript.ast.Loop,READ);
Call(METHOD,org.mozilla.javascript.ast.DoLoop,<init> --> <init>,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.DoLoop,<init>$2 --> <init>$2,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.DoLoop,<init>$3 --> <init>$3,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.DoLoop,setCondition --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.DoLoop,setCondition --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.DoLoop,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.DoLoop,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.DoLoop,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.DoLoop,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 199
StartClass 200
Class(org.mozilla.javascript.ast.TryStatement,N,N,Public);
Attribute(NO_CATCHES,java.util.List,Private,Y,Y,org.mozilla.javascript.ast.CatchClause);
Attribute(tryBlock,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(catchClauses,java.util.List,Private,N,N,org.mozilla.javascript.ast.CatchClause);
Attribute(finallyBlock,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(finallyPosition,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getTryBlock,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setTryBlock,void,Public,N,N);
Method(getCatchClauses,java.util.List,Public,N,N);
Method(setCatchClauses,void,Public,N,N);
Method(addCatchClause,void,Public,N,N);
Method(getFinallyBlock,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setFinallyBlock,void,Public,N,N);
Method(getFinallyPosition,int,Public,N,N);
Method(setFinallyPosition,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setTryBlock,org.mozilla.javascript.ast.AstNode,);
Parameter(setCatchClauses,java.util.List,org.mozilla.javascript.ast.CatchClause);
Parameter(addCatchClause,org.mozilla.javascript.ast.CatchClause,);
Parameter(setFinallyBlock,org.mozilla.javascript.ast.AstNode,);
Parameter(setFinallyPosition,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.CatchClause);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,setCatchClauses --> addCatchClause,org.mozilla.javascript.ast.TryStatement,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,toSource --> getCatchClauses,org.mozilla.javascript.ast.TryStatement,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,visit --> getCatchClauses,org.mozilla.javascript.ast.TryStatement,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,<init> --> finallyPosition,org.mozilla.javascript.ast.TryStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,<init>$2 --> finallyPosition,org.mozilla.javascript.ast.TryStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,<init>$3 --> finallyPosition,org.mozilla.javascript.ast.TryStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,getTryBlock --> tryBlock,org.mozilla.javascript.ast.TryStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,setTryBlock --> tryBlock,org.mozilla.javascript.ast.TryStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,getCatchClauses --> catchClauses,org.mozilla.javascript.ast.TryStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,getCatchClauses --> NO_CATCHES,org.mozilla.javascript.ast.TryStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,setCatchClauses --> catchClauses,org.mozilla.javascript.ast.TryStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,setCatchClauses --> catchClauses,org.mozilla.javascript.ast.TryStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,addCatchClause --> catchClauses,org.mozilla.javascript.ast.TryStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,addCatchClause --> catchClauses,org.mozilla.javascript.ast.TryStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,getFinallyBlock --> finallyBlock,org.mozilla.javascript.ast.TryStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,setFinallyBlock --> finallyBlock,org.mozilla.javascript.ast.TryStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,getFinallyPosition --> finallyPosition,org.mozilla.javascript.ast.TryStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,setFinallyPosition --> finallyPosition,org.mozilla.javascript.ast.TryStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,toSource --> tryBlock,org.mozilla.javascript.ast.TryStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,toSource --> finallyBlock,org.mozilla.javascript.ast.TryStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,visit --> tryBlock,org.mozilla.javascript.ast.TryStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,visit --> finallyBlock,org.mozilla.javascript.ast.TryStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,<clinit> --> NO_CATCHES,org.mozilla.javascript.ast.TryStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.TryStatement,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,setTryBlock --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,setTryBlock --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,addCatchClause --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,addCatchClause --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,setFinallyBlock --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,toSource --> toSource,org.mozilla.javascript.ast.CatchClause,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,visit --> visit,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.TryStatement,visit --> visit,org.mozilla.javascript.ast.CatchClause,);
EndClass 200
StartClass 201
Class(org.mozilla.javascript.ast.ThrowStatement,N,N,Public);
Attribute(expression,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(<init>$6,void,Public,N,N);
Method(getExpression,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setExpression,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$5,int,);
Parameter(<init>$5,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$6,int,);
Parameter(<init>$6,int,);
Parameter(<init>$6,org.mozilla.javascript.ast.AstNode,);
Parameter(setExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,<init>$4 --> setExpression,org.mozilla.javascript.ast.ThrowStatement,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,<init>$5 --> setExpression,org.mozilla.javascript.ast.ThrowStatement,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,<init>$6 --> setExpression,org.mozilla.javascript.ast.ThrowStatement,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ThrowStatement,getExpression --> expression,org.mozilla.javascript.ast.ThrowStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ThrowStatement,setExpression --> expression,org.mozilla.javascript.ast.ThrowStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ThrowStatement,toSource --> expression,org.mozilla.javascript.ast.ThrowStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ThrowStatement,visit --> expression,org.mozilla.javascript.ast.ThrowStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ThrowStatement,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ThrowStatement,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ThrowStatement,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ThrowStatement,<init>$4 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ThrowStatement,<init>$5 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ThrowStatement,<init>$6 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,<init>$4 --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,<init>$5 --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,<init>$5 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,<init>$6 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,setExpression --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,setExpression --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ThrowStatement,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 201
StartClass 202
Class(org.mozilla.javascript.ast.BreakStatement,N,N,Public);
Attribute(breakLabel,org.mozilla.javascript.ast.Name,Private,N,N,);
Attribute(target,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getBreakLabel,org.mozilla.javascript.ast.Name,Public,N,N);
Method(setBreakLabel,void,Public,N,N);
Method(getBreakTarget,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setBreakTarget,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setBreakLabel,org.mozilla.javascript.ast.Name,);
Parameter(setBreakTarget,org.mozilla.javascript.ast.Jump,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.Jump);
Composition(org.mozilla.javascript.ast.Name);
Composition(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,getBreakLabel --> breakLabel,org.mozilla.javascript.ast.BreakStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,setBreakLabel --> breakLabel,org.mozilla.javascript.ast.BreakStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,getBreakTarget --> target,org.mozilla.javascript.ast.BreakStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,setBreakTarget --> target,org.mozilla.javascript.ast.BreakStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,toSource --> breakLabel,org.mozilla.javascript.ast.BreakStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,visit --> breakLabel,org.mozilla.javascript.ast.BreakStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,<init>$2 --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,<init>$3 --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.BreakStatement,<init>$3 --> length,org.mozilla.javascript.ast.AstNode,WRITE);
Call(METHOD,org.mozilla.javascript.ast.BreakStatement,<init> --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.BreakStatement,<init>$2 --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.BreakStatement,<init>$3 --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.BreakStatement,setBreakLabel --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.BreakStatement,setBreakTarget --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.BreakStatement,setBreakTarget --> setJumpStatement,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.BreakStatement,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.BreakStatement,toSource --> toSource,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.BreakStatement,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.BreakStatement,visit --> visit,org.mozilla.javascript.ast.Name,);
EndClass 202
StartClass 203
Class(org.mozilla.javascript.ast.ContinueStatement,N,N,Public);
Attribute(label,org.mozilla.javascript.ast.Name,Private,N,N,);
Attribute(target,org.mozilla.javascript.ast.Loop,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(<init>$6,void,Public,N,N);
Method(getTarget,org.mozilla.javascript.ast.Loop,Public,N,N);
Method(setTarget,void,Public,N,N);
Method(getLabel,org.mozilla.javascript.ast.Name,Public,N,N);
Method(setLabel,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.Name,);
Parameter(<init>$5,int,);
Parameter(<init>$5,org.mozilla.javascript.ast.Name,);
Parameter(<init>$6,int,);
Parameter(<init>$6,int,);
Parameter(<init>$6,org.mozilla.javascript.ast.Name,);
Parameter(setTarget,org.mozilla.javascript.ast.Loop,);
Parameter(setLabel,org.mozilla.javascript.ast.Name,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.Jump);
Composition(org.mozilla.javascript.ast.Name);
Composition(org.mozilla.javascript.ast.Loop);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,<init>$2 --> <init>$3,org.mozilla.javascript.ast.ContinueStatement,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,<init>$4 --> setLabel,org.mozilla.javascript.ast.ContinueStatement,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,<init>$5 --> <init>$2,org.mozilla.javascript.ast.ContinueStatement,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,<init>$5 --> setLabel,org.mozilla.javascript.ast.ContinueStatement,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,<init>$6 --> <init>$3,org.mozilla.javascript.ast.ContinueStatement,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,<init>$6 --> setLabel,org.mozilla.javascript.ast.ContinueStatement,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ContinueStatement,getTarget --> target,org.mozilla.javascript.ast.ContinueStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ContinueStatement,setTarget --> target,org.mozilla.javascript.ast.ContinueStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ContinueStatement,getLabel --> label,org.mozilla.javascript.ast.ContinueStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ContinueStatement,setLabel --> label,org.mozilla.javascript.ast.ContinueStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ContinueStatement,toSource --> label,org.mozilla.javascript.ast.ContinueStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ContinueStatement,visit --> label,org.mozilla.javascript.ast.ContinueStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ContinueStatement,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ContinueStatement,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ContinueStatement,<init>$3 --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ContinueStatement,<init>$3 --> length,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ContinueStatement,<init>$4 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,<init> --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,<init>$3 --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,<init>$4 --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,setTarget --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,setTarget --> setJumpStatement,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,setLabel --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,toSource --> toSource,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ContinueStatement,visit --> visit,org.mozilla.javascript.ast.Name,);
EndClass 203
StartClass 204
Class(org.mozilla.javascript.ast.WithStatement,N,N,Public);
Attribute(expression,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(statement,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(lp,int,Private,N,N,);
Attribute(rp,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getExpression,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setExpression,void,Public,N,N);
Method(getStatement,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setStatement,void,Public,N,N);
Method(getLp,int,Public,N,N);
Method(setLp,void,Public,N,N);
Method(getRp,int,Public,N,N);
Method(setRp,void,Public,N,N);
Method(setParens,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(setStatement,org.mozilla.javascript.ast.AstNode,);
Parameter(setLp,int,);
Parameter(setRp,int,);
Parameter(setParens,int,);
Parameter(setParens,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,<init> --> lp,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,<init> --> rp,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,<init>$2 --> lp,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,<init>$2 --> rp,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,<init>$3 --> lp,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,<init>$3 --> rp,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,getExpression --> expression,org.mozilla.javascript.ast.WithStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,setExpression --> expression,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,getStatement --> statement,org.mozilla.javascript.ast.WithStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,setStatement --> statement,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,getLp --> lp,org.mozilla.javascript.ast.WithStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,setLp --> lp,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,getRp --> rp,org.mozilla.javascript.ast.WithStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,setRp --> rp,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,setParens --> lp,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,setParens --> rp,org.mozilla.javascript.ast.WithStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,toSource --> expression,org.mozilla.javascript.ast.WithStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,toSource --> statement,org.mozilla.javascript.ast.WithStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,visit --> expression,org.mozilla.javascript.ast.WithStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,visit --> statement,org.mozilla.javascript.ast.WithStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.WithStatement,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,setExpression --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,setExpression --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,setStatement --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,setStatement --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,toSource --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.WithStatement,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 204
StartClass 205
Class(org.mozilla.javascript.ast.Label,N,N,Public);
Attribute(name,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(getName,java.lang.String,Public,N,N);
Method(setName,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,java.lang.String,);
Parameter(setName,java.lang.String,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.Jump);
Call(METHOD,org.mozilla.javascript.ast.Label,<init>$2 --> <init>$3,org.mozilla.javascript.ast.Label,);
Call(METHOD,org.mozilla.javascript.ast.Label,<init>$4 --> <init>$3,org.mozilla.javascript.ast.Label,);
Call(METHOD,org.mozilla.javascript.ast.Label,<init>$4 --> setName,org.mozilla.javascript.ast.Label,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Label,getName --> name,org.mozilla.javascript.ast.Label,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Label,setName --> name,org.mozilla.javascript.ast.Label,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Label,toSource --> name,org.mozilla.javascript.ast.Label,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Label,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Label,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Label,<init>$3 --> position,org.mozilla.javascript.ast.AstNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Label,<init>$3 --> length,org.mozilla.javascript.ast.AstNode,WRITE);
Call(METHOD,org.mozilla.javascript.ast.Label,<init> --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.Label,<init>$3 --> <init>,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.ast.Label,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Label,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
EndClass 205
StartClass 206
Class(org.mozilla.javascript.ast.VariableDeclaration,N,N,Public);
Attribute(variables,java.util.List,Private,N,N,org.mozilla.javascript.ast.VariableInitializer);
Attribute(isStatement,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getVariables,java.util.List,Public,N,N);
Method(setVariables,void,Public,N,N);
Method(addVariable,void,Public,N,N);
Method(setType,org.mozilla.javascript.Node,Public,N,N);
Method(isVar,boolean,Public,N,N);
Method(isConst,boolean,Public,N,N);
Method(isLet,boolean,Public,N,N);
Method(isStatement,boolean,Public,N,N);
Method(setIsStatement,void,Public,N,N);
Method(declTypeName,java.lang.String,Private,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setVariables,java.util.List,org.mozilla.javascript.ast.VariableInitializer);
Parameter(addVariable,org.mozilla.javascript.ast.VariableInitializer,);
Parameter(setType,int,);
Parameter(setIsStatement,boolean,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.VariableInitializer);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,setVariables --> addVariable,org.mozilla.javascript.ast.VariableDeclaration,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,toSource --> declTypeName,org.mozilla.javascript.ast.VariableDeclaration,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,toSource --> isStatement,org.mozilla.javascript.ast.VariableDeclaration,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,<init> --> variables,org.mozilla.javascript.ast.VariableDeclaration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,<init>$2 --> variables,org.mozilla.javascript.ast.VariableDeclaration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,<init>$3 --> variables,org.mozilla.javascript.ast.VariableDeclaration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,getVariables --> variables,org.mozilla.javascript.ast.VariableDeclaration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,setVariables --> variables,org.mozilla.javascript.ast.VariableDeclaration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,addVariable --> variables,org.mozilla.javascript.ast.VariableDeclaration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,isStatement --> isStatement,org.mozilla.javascript.ast.VariableDeclaration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,setIsStatement --> isStatement,org.mozilla.javascript.ast.VariableDeclaration,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,toSource --> variables,org.mozilla.javascript.ast.VariableDeclaration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,visit --> variables,org.mozilla.javascript.ast.VariableDeclaration,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,isVar --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,isConst --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,isLet --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableDeclaration,declTypeName --> type,org.mozilla.javascript.Node,READ);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,setVariables --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,addVariable --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,addVariable --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,setType --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,declTypeName --> typeToName,org.mozilla.javascript.Token,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,toSource --> printList,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.VariableDeclaration,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 206
StartClass 207
Class(org.mozilla.javascript.ast.XmlElemRef,N,N,Public);
Attribute(indexExpr,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(lb,int,Private,N,N,);
Attribute(rb,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getExpression,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setExpression,void,Public,N,N);
Method(getLb,int,Public,N,N);
Method(setLb,void,Public,N,N);
Method(getRb,int,Public,N,N);
Method(setRb,void,Public,N,N);
Method(setBrackets,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(setLb,int,);
Parameter(setRb,int,);
Parameter(setBrackets,int,);
Parameter(setBrackets,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.XmlRef);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.XmlRef);
Composition(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,<init> --> lb,org.mozilla.javascript.ast.XmlElemRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,<init> --> rb,org.mozilla.javascript.ast.XmlElemRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,<init>$2 --> lb,org.mozilla.javascript.ast.XmlElemRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,<init>$2 --> rb,org.mozilla.javascript.ast.XmlElemRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,<init>$3 --> lb,org.mozilla.javascript.ast.XmlElemRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,<init>$3 --> rb,org.mozilla.javascript.ast.XmlElemRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,getExpression --> indexExpr,org.mozilla.javascript.ast.XmlElemRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,setExpression --> indexExpr,org.mozilla.javascript.ast.XmlElemRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,getLb --> lb,org.mozilla.javascript.ast.XmlElemRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,setLb --> lb,org.mozilla.javascript.ast.XmlElemRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,getRb --> rb,org.mozilla.javascript.ast.XmlElemRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,setRb --> rb,org.mozilla.javascript.ast.XmlElemRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,setBrackets --> lb,org.mozilla.javascript.ast.XmlElemRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,setBrackets --> rb,org.mozilla.javascript.ast.XmlElemRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,toSource --> indexExpr,org.mozilla.javascript.ast.XmlElemRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,visit --> indexExpr,org.mozilla.javascript.ast.XmlElemRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,toSource --> namespace,org.mozilla.javascript.ast.XmlRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlElemRef,visit --> namespace,org.mozilla.javascript.ast.XmlRef,READ);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,<init> --> <init>,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,<init>$2 --> <init>$2,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,<init>$3 --> <init>$3,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,setExpression --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,setExpression --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,toSource --> isAttributeAccess,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,toSource --> toSource,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,visit --> visit,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.XmlElemRef,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 207
StartClass 208
Class(org.mozilla.javascript.ast.ArrayComprehensionLoop,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getBody,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setBody,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setBody,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.ForInLoop);
SuperClass(org.mozilla.javascript.ast.Loop);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.ForInLoop);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehensionLoop,toSource --> iterator,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehensionLoop,toSource --> iteratedObject,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehensionLoop,visit --> iterator,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehensionLoop,visit --> iteratedObject,org.mozilla.javascript.ast.ForInLoop,READ);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehensionLoop,<init> --> <init>,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehensionLoop,<init>$2 --> <init>$2,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehensionLoop,<init>$3 --> <init>$3,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehensionLoop,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehensionLoop,toSource --> isForEach,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehensionLoop,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehensionLoop,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehensionLoop,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 208
StartClass 209
Class(org.mozilla.javascript.ast.GeneratorExpressionLoop,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(isForEach,boolean,Public,N,N);
Method(setIsForEach,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setIsForEach,boolean,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.ForInLoop);
SuperClass(org.mozilla.javascript.ast.Loop);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.ForInLoop);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpressionLoop,toSource --> isForEach,org.mozilla.javascript.ast.GeneratorExpressionLoop,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpressionLoop,toSource --> iterator,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpressionLoop,toSource --> iteratedObject,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpressionLoop,visit --> iterator,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpressionLoop,visit --> iteratedObject,org.mozilla.javascript.ast.ForInLoop,READ);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpressionLoop,<init> --> <init>,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpressionLoop,<init>$2 --> <init>$2,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpressionLoop,<init>$3 --> <init>$3,org.mozilla.javascript.ast.ForInLoop,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpressionLoop,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpressionLoop,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpressionLoop,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpressionLoop,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 209
StartClass 210
Class(org.mozilla.javascript.ast.ObjectLiteral,N,N,Public);
Attribute(NO_ELEMS,java.util.List,Private,Y,Y,org.mozilla.javascript.ast.ObjectProperty);
Attribute(elements,java.util.List,Private,N,N,org.mozilla.javascript.ast.ObjectProperty);
Attribute(isDestructuring,boolean,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getElements,java.util.List,Public,N,N);
Method(setElements,void,Public,N,N);
Method(addElement,void,Public,N,N);
Method(setIsDestructuring,void,Public,N,N);
Method(isDestructuring,boolean,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setElements,java.util.List,org.mozilla.javascript.ast.ObjectProperty);
Parameter(addElement,org.mozilla.javascript.ast.ObjectProperty,);
Parameter(setIsDestructuring,boolean,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Realization(org.mozilla.javascript.ast.DestructuringForm);
Composition(org.mozilla.javascript.ast.ObjectProperty);
Call(METHOD,org.mozilla.javascript.ast.ObjectLiteral,setElements --> addElement,org.mozilla.javascript.ast.ObjectLiteral,);
Call(METHOD,org.mozilla.javascript.ast.ObjectLiteral,visit --> getElements,org.mozilla.javascript.ast.ObjectLiteral,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,getElements --> elements,org.mozilla.javascript.ast.ObjectLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,getElements --> NO_ELEMS,org.mozilla.javascript.ast.ObjectLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,setElements --> elements,org.mozilla.javascript.ast.ObjectLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,setElements --> elements,org.mozilla.javascript.ast.ObjectLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,addElement --> elements,org.mozilla.javascript.ast.ObjectLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,addElement --> elements,org.mozilla.javascript.ast.ObjectLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,setIsDestructuring --> isDestructuring,org.mozilla.javascript.ast.ObjectLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,isDestructuring --> isDestructuring,org.mozilla.javascript.ast.ObjectLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,toSource --> elements,org.mozilla.javascript.ast.ObjectLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,<clinit> --> NO_ELEMS,org.mozilla.javascript.ast.ObjectLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectLiteral,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.ObjectLiteral,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ObjectLiteral,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ObjectLiteral,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ObjectLiteral,addElement --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ObjectLiteral,addElement --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ObjectLiteral,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ObjectLiteral,toSource --> printList,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ObjectLiteral,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ObjectLiteral,visit --> visit,org.mozilla.javascript.ast.InfixExpression,);
EndClass 210
StartClass 211
Class(org.mozilla.javascript.ast.ObjectProperty,N,N,Public);
Method(setNodeType,void,Public,N,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(setIsGetter,void,Public,N,N);
Method(isGetter,boolean,Public,N,N);
Method(setIsSetter,void,Public,N,N);
Method(isSetter,boolean,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Parameter(setNodeType,int,);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(toSource,int,);
SuperClass(org.mozilla.javascript.ast.InfixExpression);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.InfixExpression);
Call(METHOD,org.mozilla.javascript.ast.ObjectProperty,toSource --> isGetter,org.mozilla.javascript.ast.ObjectProperty,);
Call(METHOD,org.mozilla.javascript.ast.ObjectProperty,toSource --> isSetter,org.mozilla.javascript.ast.ObjectProperty,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectProperty,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectProperty,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectProperty,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectProperty,setIsGetter --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectProperty,isGetter --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectProperty,setIsSetter --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectProperty,isSetter --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectProperty,toSource --> left,org.mozilla.javascript.ast.InfixExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectProperty,toSource --> type,org.mozilla.javascript.Node,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ObjectProperty,toSource --> right,org.mozilla.javascript.ast.InfixExpression,READ);
Call(METHOD,org.mozilla.javascript.ast.ObjectProperty,setNodeType --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.ObjectProperty,<init> --> <init>,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.ObjectProperty,<init>$2 --> <init>$2,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.ObjectProperty,<init>$3 --> <init>$3,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.ObjectProperty,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ObjectProperty,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
EndClass 211
StartClass 212
Class(org.mozilla.javascript.ast.StringLiteral,N,N,Public);
Attribute(value,java.lang.String,Private,N,N,);
Attribute(quoteChar,char,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getValue,java.lang.String,Public,N,N);
Method(getValue$2,java.lang.String,Public,N,N);
Method(setValue,void,Public,N,N);
Method(getQuoteCharacter,char,Public,N,N);
Method(setQuoteCharacter,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(getValue$2,boolean,);
Parameter(setValue,java.lang.String,);
Parameter(setQuoteCharacter,char,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.StringLiteral,getValue --> value,org.mozilla.javascript.ast.StringLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.StringLiteral,getValue$2 --> value,org.mozilla.javascript.ast.StringLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.StringLiteral,getValue$2 --> quoteChar,org.mozilla.javascript.ast.StringLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.StringLiteral,setValue --> value,org.mozilla.javascript.ast.StringLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.StringLiteral,getQuoteCharacter --> quoteChar,org.mozilla.javascript.ast.StringLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.StringLiteral,setQuoteCharacter --> quoteChar,org.mozilla.javascript.ast.StringLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.StringLiteral,toSource --> quoteChar,org.mozilla.javascript.ast.StringLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.StringLiteral,toSource --> value,org.mozilla.javascript.ast.StringLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.StringLiteral,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.StringLiteral,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.StringLiteral,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.StringLiteral,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.StringLiteral,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.StringLiteral,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.StringLiteral,setValue --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.StringLiteral,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.StringLiteral,toSource --> escapeString$2,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.ast.StringLiteral,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
EndClass 212
StartClass 213
Class(org.mozilla.javascript.ast.UnaryExpression,N,N,Public);
Attribute(operand,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(isPostfix,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(getOperator,int,Public,N,N);
Method(setOperator,void,Public,N,N);
Method(getOperand,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setOperand,void,Public,N,N);
Method(isPostfix,boolean,Public,N,N);
Method(isPrefix,boolean,Public,N,N);
Method(setIsPostfix,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$5,int,);
Parameter(<init>$5,int,);
Parameter(<init>$5,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$5,boolean,);
Parameter(setOperator,int,);
Parameter(setOperand,org.mozilla.javascript.ast.AstNode,);
Parameter(setIsPostfix,boolean,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,<init>$4 --> <init>$5,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,<init>$5 --> setOperator,org.mozilla.javascript.ast.UnaryExpression,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,<init>$5 --> setOperand,org.mozilla.javascript.ast.UnaryExpression,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.UnaryExpression,<init>$5 --> isPostfix,org.mozilla.javascript.ast.UnaryExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.UnaryExpression,getOperand --> operand,org.mozilla.javascript.ast.UnaryExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.UnaryExpression,setOperand --> operand,org.mozilla.javascript.ast.UnaryExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.UnaryExpression,isPostfix --> isPostfix,org.mozilla.javascript.ast.UnaryExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.UnaryExpression,isPrefix --> isPostfix,org.mozilla.javascript.ast.UnaryExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.UnaryExpression,setIsPostfix --> isPostfix,org.mozilla.javascript.ast.UnaryExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.UnaryExpression,toSource --> isPostfix,org.mozilla.javascript.ast.UnaryExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.UnaryExpression,toSource --> operand,org.mozilla.javascript.ast.UnaryExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.UnaryExpression,visit --> operand,org.mozilla.javascript.ast.UnaryExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.UnaryExpression,getOperator --> type,org.mozilla.javascript.Node,READ);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,<init>$5 --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,<init>$5 --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,<init>$5 --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,<init>$5 --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,<init>$5 --> setBounds,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,setOperator --> isValidToken,org.mozilla.javascript.Token,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,setOperator --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,setOperand --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,setOperand --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,toSource --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,toSource --> operatorToString,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,toSource --> toSource$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.UnaryExpression,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 213
StartClass 214
Class(org.mozilla.javascript.ast.ErrorNode,N,N,Public);
Attribute(message,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getMessage,java.lang.String,Public,N,N);
Method(setMessage,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setMessage,java.lang.String,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorNode,getMessage --> message,org.mozilla.javascript.ast.ErrorNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorNode,setMessage --> message,org.mozilla.javascript.ast.ErrorNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorNode,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorNode,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorNode,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.ErrorNode,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ErrorNode,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ErrorNode,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ErrorNode,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
EndClass 214
StartClass 215
Class(org.mozilla.javascript.ast.ArrayLiteral,N,N,Public);
Attribute(NO_ELEMS,java.util.List,Private,Y,Y,org.mozilla.javascript.ast.AstNode);
Attribute(elements,java.util.List,Private,N,N,org.mozilla.javascript.ast.AstNode);
Attribute(destructuringLength,int,Private,N,N,);
Attribute(skipCount,int,Private,N,N,);
Attribute(isDestructuring,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getElements,java.util.List,Public,N,N);
Method(setElements,void,Public,N,N);
Method(addElement,void,Public,N,N);
Method(getSize,int,Public,N,N);
Method(getElement,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(getDestructuringLength,int,Public,N,N);
Method(setDestructuringLength,void,Public,N,N);
Method(getSkipCount,int,Public,N,N);
Method(setSkipCount,void,Public,N,N);
Method(setIsDestructuring,void,Public,N,N);
Method(isDestructuring,boolean,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setElements,java.util.List,org.mozilla.javascript.ast.AstNode);
Parameter(addElement,org.mozilla.javascript.ast.AstNode,);
Parameter(getElement,int,);
Parameter(setDestructuringLength,int,);
Parameter(setSkipCount,int,);
Parameter(setIsDestructuring,boolean,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Realization(org.mozilla.javascript.ast.DestructuringForm);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.ArrayLiteral,setElements --> addElement,org.mozilla.javascript.ast.ArrayLiteral,);
Call(METHOD,org.mozilla.javascript.ast.ArrayLiteral,visit --> getElements,org.mozilla.javascript.ast.ArrayLiteral,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,getElements --> elements,org.mozilla.javascript.ast.ArrayLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,getElements --> NO_ELEMS,org.mozilla.javascript.ast.ArrayLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,setElements --> elements,org.mozilla.javascript.ast.ArrayLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,setElements --> elements,org.mozilla.javascript.ast.ArrayLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,addElement --> elements,org.mozilla.javascript.ast.ArrayLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,addElement --> elements,org.mozilla.javascript.ast.ArrayLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,getSize --> elements,org.mozilla.javascript.ast.ArrayLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,getElement --> elements,org.mozilla.javascript.ast.ArrayLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,getDestructuringLength --> destructuringLength,org.mozilla.javascript.ast.ArrayLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,setDestructuringLength --> destructuringLength,org.mozilla.javascript.ast.ArrayLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,getSkipCount --> skipCount,org.mozilla.javascript.ast.ArrayLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,setSkipCount --> skipCount,org.mozilla.javascript.ast.ArrayLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,setIsDestructuring --> isDestructuring,org.mozilla.javascript.ast.ArrayLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,isDestructuring --> isDestructuring,org.mozilla.javascript.ast.ArrayLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,toSource --> elements,org.mozilla.javascript.ast.ArrayLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,<clinit> --> NO_ELEMS,org.mozilla.javascript.ast.ArrayLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayLiteral,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.ArrayLiteral,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayLiteral,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayLiteral,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayLiteral,addElement --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayLiteral,addElement --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayLiteral,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayLiteral,toSource --> printList,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayLiteral,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ArrayLiteral,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 215
StartClass 216
Class(org.mozilla.javascript.ast.Assignment,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(<init>$6,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$5,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$5,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$6,int,);
Parameter(<init>$6,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$6,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$6,int,);
SuperClass(org.mozilla.javascript.ast.InfixExpression);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.InfixExpression);
Call(METHOD,org.mozilla.javascript.ast.Assignment,<init> --> <init>,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.Assignment,<init>$2 --> <init>$2,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.Assignment,<init>$3 --> <init>$3,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.Assignment,<init>$4 --> <init>$4,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.Assignment,<init>$5 --> <init>$5,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.Assignment,<init>$6 --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
EndClass 216
StartClass 217
Class(org.mozilla.javascript.ast.ForLoop,N,N,Public);
Attribute(initializer,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(condition,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(increment,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getInitializer,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setInitializer,void,Public,N,N);
Method(getCondition,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setCondition,void,Public,N,N);
Method(getIncrement,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setIncrement,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setInitializer,org.mozilla.javascript.ast.AstNode,);
Parameter(setCondition,org.mozilla.javascript.ast.AstNode,);
Parameter(setIncrement,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Loop);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.Loop);
Composition(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,getInitializer --> initializer,org.mozilla.javascript.ast.ForLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,setInitializer --> initializer,org.mozilla.javascript.ast.ForLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,getCondition --> condition,org.mozilla.javascript.ast.ForLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,setCondition --> condition,org.mozilla.javascript.ast.ForLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,getIncrement --> increment,org.mozilla.javascript.ast.ForLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,setIncrement --> increment,org.mozilla.javascript.ast.ForLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,toSource --> initializer,org.mozilla.javascript.ast.ForLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,toSource --> condition,org.mozilla.javascript.ast.ForLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,toSource --> increment,org.mozilla.javascript.ast.ForLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,visit --> initializer,org.mozilla.javascript.ast.ForLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,visit --> condition,org.mozilla.javascript.ast.ForLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,visit --> increment,org.mozilla.javascript.ast.ForLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,toSource --> body,org.mozilla.javascript.ast.Loop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForLoop,visit --> body,org.mozilla.javascript.ast.Loop,READ);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,<init> --> <init>,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,<init>$2 --> <init>$2,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,<init>$3 --> <init>$3,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,setInitializer --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,setInitializer --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,setCondition --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,setCondition --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,setIncrement --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,setIncrement --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,toSource --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ForLoop,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 217
StartClass 218
Class(org.mozilla.javascript.ast.EmptyStatement,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.EmptyStatement,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.EmptyStatement,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.EmptyStatement,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.EmptyStatement,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.EmptyStatement,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.EmptyStatement,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.EmptyStatement,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.EmptyStatement,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
EndClass 218
StartClass 219
Class(org.mozilla.javascript.ast.XmlString,N,N,Public);
Attribute(xml,java.lang.String,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(setXml,void,Public,N,N);
Method(getXml,java.lang.String,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,java.lang.String,);
Parameter(setXml,java.lang.String,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.XmlFragment);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.XmlFragment);
Call(METHOD,org.mozilla.javascript.ast.XmlString,<init>$3 --> setXml,org.mozilla.javascript.ast.XmlString,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlString,setXml --> xml,org.mozilla.javascript.ast.XmlString,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlString,getXml --> xml,org.mozilla.javascript.ast.XmlString,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlString,toSource --> xml,org.mozilla.javascript.ast.XmlString,READ);
Call(METHOD,org.mozilla.javascript.ast.XmlString,<init> --> <init>,org.mozilla.javascript.ast.XmlFragment,);
Call(METHOD,org.mozilla.javascript.ast.XmlString,<init>$2 --> <init>$2,org.mozilla.javascript.ast.XmlFragment,);
Call(METHOD,org.mozilla.javascript.ast.XmlString,<init>$3 --> <init>$2,org.mozilla.javascript.ast.XmlFragment,);
Call(METHOD,org.mozilla.javascript.ast.XmlString,setXml --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlString,setXml --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlString,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlString,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
EndClass 219
StartClass 220
Class(org.mozilla.javascript.ast.GeneratorExpression,N,N,Public);
Attribute(result,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(loops,java.util.List,Private,N,N,org.mozilla.javascript.ast.GeneratorExpressionLoop);
Attribute(filter,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(ifPosition,int,Private,N,N,);
Attribute(lp,int,Private,N,N,);
Attribute(rp,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getResult,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setResult,void,Public,N,N);
Method(getLoops,java.util.List,Public,N,N);
Method(setLoops,void,Public,N,N);
Method(addLoop,void,Public,N,N);
Method(getFilter,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setFilter,void,Public,N,N);
Method(getIfPosition,int,Public,N,N);
Method(setIfPosition,void,Public,N,N);
Method(getFilterLp,int,Public,N,N);
Method(setFilterLp,void,Public,N,N);
Method(getFilterRp,int,Public,N,N);
Method(setFilterRp,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setResult,org.mozilla.javascript.ast.AstNode,);
Parameter(setLoops,java.util.List,org.mozilla.javascript.ast.GeneratorExpressionLoop);
Parameter(addLoop,org.mozilla.javascript.ast.GeneratorExpressionLoop,);
Parameter(setFilter,org.mozilla.javascript.ast.AstNode,);
Parameter(setIfPosition,int,);
Parameter(setFilterLp,int,);
Parameter(setFilterRp,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.Scope);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,setLoops --> addLoop,org.mozilla.javascript.ast.GeneratorExpression,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init> --> loops,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init> --> ifPosition,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init> --> lp,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init> --> rp,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init>$2 --> loops,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init>$2 --> ifPosition,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init>$2 --> lp,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init>$2 --> rp,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init>$3 --> loops,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init>$3 --> ifPosition,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init>$3 --> lp,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init>$3 --> rp,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,getResult --> result,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,setResult --> result,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,getLoops --> loops,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,setLoops --> loops,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,addLoop --> loops,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,getFilter --> filter,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,setFilter --> filter,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,getIfPosition --> ifPosition,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,setIfPosition --> ifPosition,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,getFilterLp --> lp,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,setFilterLp --> lp,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,getFilterRp --> rp,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,setFilterRp --> rp,org.mozilla.javascript.ast.GeneratorExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,toSource --> result,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,toSource --> loops,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,toSource --> filter,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,visit --> result,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,visit --> loops,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,visit --> filter,org.mozilla.javascript.ast.GeneratorExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.GeneratorExpression,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,<init> --> <init>,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,<init>$2 --> <init>$2,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,<init>$3 --> <init>$3,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,setResult --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,setResult --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,setLoops --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,addLoop --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,addLoop --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,setFilter --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,toSource --> toSource,org.mozilla.javascript.ast.GeneratorExpressionLoop,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,visit --> visit,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.GeneratorExpression,visit --> visit,org.mozilla.javascript.ast.GeneratorExpressionLoop,);
EndClass 220
StartClass 221
Class(org.mozilla.javascript.ast.PropertyGet,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(<init>$6,void,Public,N,N);
Method(getTarget,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setTarget,void,Public,N,N);
Method(getProperty,org.mozilla.javascript.ast.Name,Public,N,N);
Method(setProperty,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$4,org.mozilla.javascript.ast.Name,);
Parameter(<init>$5,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$5,org.mozilla.javascript.ast.Name,);
Parameter(<init>$6,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$6,org.mozilla.javascript.ast.Name,);
Parameter(<init>$6,int,);
Parameter(setTarget,org.mozilla.javascript.ast.AstNode,);
Parameter(setProperty,org.mozilla.javascript.ast.Name,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.InfixExpression);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.InfixExpression);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,visit --> getTarget,org.mozilla.javascript.ast.PropertyGet,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,visit --> getProperty,org.mozilla.javascript.ast.PropertyGet,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.PropertyGet,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.PropertyGet,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.PropertyGet,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.PropertyGet,<init>$4 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.PropertyGet,<init>$5 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.PropertyGet,<init>$6 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,<init> --> <init>,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,<init>$2 --> <init>$2,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,<init>$3 --> <init>$3,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,<init>$4 --> <init>$4,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,<init>$5 --> <init>$5,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,<init>$6 --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,getTarget --> getLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,setTarget --> setLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,getProperty --> getRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,setProperty --> setRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,toSource --> getLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,toSource --> getRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,visit --> visit,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.PropertyGet,visit --> visit,org.mozilla.javascript.ast.Name,);
EndClass 221
StartClass 222
Class(org.mozilla.javascript.ast.XmlPropRef,N,N,Public);
Attribute(propName,org.mozilla.javascript.ast.Name,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getPropName,org.mozilla.javascript.ast.Name,Public,N,N);
Method(setPropName,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setPropName,org.mozilla.javascript.ast.Name,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.XmlRef);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.XmlRef);
Composition(org.mozilla.javascript.ast.Name);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlPropRef,getPropName --> propName,org.mozilla.javascript.ast.XmlPropRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlPropRef,setPropName --> propName,org.mozilla.javascript.ast.XmlPropRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlPropRef,toSource --> propName,org.mozilla.javascript.ast.XmlPropRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlPropRef,visit --> propName,org.mozilla.javascript.ast.XmlPropRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlPropRef,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlPropRef,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlPropRef,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlPropRef,toSource --> namespace,org.mozilla.javascript.ast.XmlRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlPropRef,visit --> namespace,org.mozilla.javascript.ast.XmlRef,READ);
Call(METHOD,org.mozilla.javascript.ast.XmlPropRef,<init> --> <init>,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.ast.XmlPropRef,<init>$2 --> <init>$2,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.ast.XmlPropRef,<init>$3 --> <init>$3,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.ast.XmlPropRef,setPropName --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlPropRef,setPropName --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlPropRef,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlPropRef,toSource --> isAttributeAccess,org.mozilla.javascript.ast.XmlRef,);
Call(METHOD,org.mozilla.javascript.ast.XmlPropRef,toSource --> toSource,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.XmlPropRef,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.XmlPropRef,visit --> visit,org.mozilla.javascript.ast.Name,);
EndClass 222
StartClass 223
Class(org.mozilla.javascript.ast.ParenthesizedExpression,N,N,Public);
Attribute(expression,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(getExpression,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setExpression,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$5,int,);
Parameter(<init>$5,int,);
Parameter(<init>$5,org.mozilla.javascript.ast.AstNode,);
Parameter(setExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,<init>$4 --> <init>$5,org.mozilla.javascript.ast.ParenthesizedExpression,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,<init>$5 --> setExpression,org.mozilla.javascript.ast.ParenthesizedExpression,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParenthesizedExpression,getExpression --> expression,org.mozilla.javascript.ast.ParenthesizedExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParenthesizedExpression,setExpression --> expression,org.mozilla.javascript.ast.ParenthesizedExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParenthesizedExpression,toSource --> expression,org.mozilla.javascript.ast.ParenthesizedExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParenthesizedExpression,visit --> expression,org.mozilla.javascript.ast.ParenthesizedExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParenthesizedExpression,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParenthesizedExpression,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParenthesizedExpression,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParenthesizedExpression,<init>$5 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,<init>$4 --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,<init>$4 --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,<init>$5 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,setExpression --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,setExpression --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ParenthesizedExpression,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 223
StartClass 224
Class(org.mozilla.javascript.Token,N,N,Public);
Attribute(printTrees,boolean,Public,Y,Y,);
Attribute(printICode,boolean,Public,Y,Y,);
Attribute(printNames,boolean,Public,Y,Y,);
Attribute(ERROR,int,Public,Y,Y,);
Attribute(EOF,int,Public,Y,Y,);
Attribute(EOL,int,Public,Y,Y,);
Attribute(FIRST_BYTECODE_TOKEN,int,Public,Y,Y,);
Attribute(ENTERWITH,int,Public,Y,Y,);
Attribute(LEAVEWITH,int,Public,Y,Y,);
Attribute(RETURN,int,Public,Y,Y,);
Attribute(GOTO,int,Public,Y,Y,);
Attribute(IFEQ,int,Public,Y,Y,);
Attribute(IFNE,int,Public,Y,Y,);
Attribute(SETNAME,int,Public,Y,Y,);
Attribute(BITOR,int,Public,Y,Y,);
Attribute(BITXOR,int,Public,Y,Y,);
Attribute(BITAND,int,Public,Y,Y,);
Attribute(EQ,int,Public,Y,Y,);
Attribute(NE,int,Public,Y,Y,);
Attribute(LT,int,Public,Y,Y,);
Attribute(LE,int,Public,Y,Y,);
Attribute(GT,int,Public,Y,Y,);
Attribute(GE,int,Public,Y,Y,);
Attribute(LSH,int,Public,Y,Y,);
Attribute(RSH,int,Public,Y,Y,);
Attribute(URSH,int,Public,Y,Y,);
Attribute(ADD,int,Public,Y,Y,);
Attribute(SUB,int,Public,Y,Y,);
Attribute(MUL,int,Public,Y,Y,);
Attribute(DIV,int,Public,Y,Y,);
Attribute(MOD,int,Public,Y,Y,);
Attribute(NOT,int,Public,Y,Y,);
Attribute(BITNOT,int,Public,Y,Y,);
Attribute(POS,int,Public,Y,Y,);
Attribute(NEG,int,Public,Y,Y,);
Attribute(NEW,int,Public,Y,Y,);
Attribute(DELPROP,int,Public,Y,Y,);
Attribute(TYPEOF,int,Public,Y,Y,);
Attribute(GETPROP,int,Public,Y,Y,);
Attribute(GETPROPNOWARN,int,Public,Y,Y,);
Attribute(SETPROP,int,Public,Y,Y,);
Attribute(GETELEM,int,Public,Y,Y,);
Attribute(SETELEM,int,Public,Y,Y,);
Attribute(CALL,int,Public,Y,Y,);
Attribute(NAME,int,Public,Y,Y,);
Attribute(NUMBER,int,Public,Y,Y,);
Attribute(STRING,int,Public,Y,Y,);
Attribute(NULL,int,Public,Y,Y,);
Attribute(THIS,int,Public,Y,Y,);
Attribute(FALSE,int,Public,Y,Y,);
Attribute(TRUE,int,Public,Y,Y,);
Attribute(SHEQ,int,Public,Y,Y,);
Attribute(SHNE,int,Public,Y,Y,);
Attribute(REGEXP,int,Public,Y,Y,);
Attribute(BINDNAME,int,Public,Y,Y,);
Attribute(THROW,int,Public,Y,Y,);
Attribute(RETHROW,int,Public,Y,Y,);
Attribute(IN,int,Public,Y,Y,);
Attribute(INSTANCEOF,int,Public,Y,Y,);
Attribute(LOCAL_LOAD,int,Public,Y,Y,);
Attribute(GETVAR,int,Public,Y,Y,);
Attribute(SETVAR,int,Public,Y,Y,);
Attribute(CATCH_SCOPE,int,Public,Y,Y,);
Attribute(ENUM_INIT_KEYS,int,Public,Y,Y,);
Attribute(ENUM_INIT_VALUES,int,Public,Y,Y,);
Attribute(ENUM_INIT_ARRAY,int,Public,Y,Y,);
Attribute(ENUM_NEXT,int,Public,Y,Y,);
Attribute(ENUM_ID,int,Public,Y,Y,);
Attribute(THISFN,int,Public,Y,Y,);
Attribute(RETURN_RESULT,int,Public,Y,Y,);
Attribute(ARRAYLIT,int,Public,Y,Y,);
Attribute(OBJECTLIT,int,Public,Y,Y,);
Attribute(GET_REF,int,Public,Y,Y,);
Attribute(SET_REF,int,Public,Y,Y,);
Attribute(DEL_REF,int,Public,Y,Y,);
Attribute(REF_CALL,int,Public,Y,Y,);
Attribute(REF_SPECIAL,int,Public,Y,Y,);
Attribute(YIELD,int,Public,Y,Y,);
Attribute(STRICT_SETNAME,int,Public,Y,Y,);
Attribute(DEFAULTNAMESPACE,int,Public,Y,Y,);
Attribute(ESCXMLATTR,int,Public,Y,Y,);
Attribute(ESCXMLTEXT,int,Public,Y,Y,);
Attribute(REF_MEMBER,int,Public,Y,Y,);
Attribute(REF_NS_MEMBER,int,Public,Y,Y,);
Attribute(REF_NAME,int,Public,Y,Y,);
Attribute(REF_NS_NAME,int,Public,Y,Y,);
Attribute(LAST_BYTECODE_TOKEN,int,Public,Y,Y,);
Attribute(TRY,int,Public,Y,Y,);
Attribute(SEMI,int,Public,Y,Y,);
Attribute(LB,int,Public,Y,Y,);
Attribute(RB,int,Public,Y,Y,);
Attribute(LC,int,Public,Y,Y,);
Attribute(RC,int,Public,Y,Y,);
Attribute(LP,int,Public,Y,Y,);
Attribute(RP,int,Public,Y,Y,);
Attribute(COMMA,int,Public,Y,Y,);
Attribute(ASSIGN,int,Public,Y,Y,);
Attribute(ASSIGN_BITOR,int,Public,Y,Y,);
Attribute(ASSIGN_BITXOR,int,Public,Y,Y,);
Attribute(ASSIGN_BITAND,int,Public,Y,Y,);
Attribute(ASSIGN_LSH,int,Public,Y,Y,);
Attribute(ASSIGN_RSH,int,Public,Y,Y,);
Attribute(ASSIGN_URSH,int,Public,Y,Y,);
Attribute(ASSIGN_ADD,int,Public,Y,Y,);
Attribute(ASSIGN_SUB,int,Public,Y,Y,);
Attribute(ASSIGN_MUL,int,Public,Y,Y,);
Attribute(ASSIGN_DIV,int,Public,Y,Y,);
Attribute(ASSIGN_MOD,int,Public,Y,Y,);
Attribute(FIRST_ASSIGN,int,Public,Y,Y,);
Attribute(LAST_ASSIGN,int,Public,Y,Y,);
Attribute(HOOK,int,Public,Y,Y,);
Attribute(COLON,int,Public,Y,Y,);
Attribute(OR,int,Public,Y,Y,);
Attribute(AND,int,Public,Y,Y,);
Attribute(INC,int,Public,Y,Y,);
Attribute(DEC,int,Public,Y,Y,);
Attribute(DOT,int,Public,Y,Y,);
Attribute(FUNCTION,int,Public,Y,Y,);
Attribute(EXPORT,int,Public,Y,Y,);
Attribute(IMPORT,int,Public,Y,Y,);
Attribute(IF,int,Public,Y,Y,);
Attribute(ELSE,int,Public,Y,Y,);
Attribute(SWITCH,int,Public,Y,Y,);
Attribute(CASE,int,Public,Y,Y,);
Attribute(DEFAULT,int,Public,Y,Y,);
Attribute(WHILE,int,Public,Y,Y,);
Attribute(DO,int,Public,Y,Y,);
Attribute(FOR,int,Public,Y,Y,);
Attribute(BREAK,int,Public,Y,Y,);
Attribute(CONTINUE,int,Public,Y,Y,);
Attribute(VAR,int,Public,Y,Y,);
Attribute(WITH,int,Public,Y,Y,);
Attribute(CATCH,int,Public,Y,Y,);
Attribute(FINALLY,int,Public,Y,Y,);
Attribute(VOID,int,Public,Y,Y,);
Attribute(RESERVED,int,Public,Y,Y,);
Attribute(EMPTY,int,Public,Y,Y,);
Attribute(BLOCK,int,Public,Y,Y,);
Attribute(LABEL,int,Public,Y,Y,);
Attribute(TARGET,int,Public,Y,Y,);
Attribute(LOOP,int,Public,Y,Y,);
Attribute(EXPR_VOID,int,Public,Y,Y,);
Attribute(EXPR_RESULT,int,Public,Y,Y,);
Attribute(JSR,int,Public,Y,Y,);
Attribute(SCRIPT,int,Public,Y,Y,);
Attribute(TYPEOFNAME,int,Public,Y,Y,);
Attribute(USE_STACK,int,Public,Y,Y,);
Attribute(SETPROP_OP,int,Public,Y,Y,);
Attribute(SETELEM_OP,int,Public,Y,Y,);
Attribute(LOCAL_BLOCK,int,Public,Y,Y,);
Attribute(SET_REF_OP,int,Public,Y,Y,);
Attribute(DOTDOT,int,Public,Y,Y,);
Attribute(COLONCOLON,int,Public,Y,Y,);
Attribute(XML,int,Public,Y,Y,);
Attribute(DOTQUERY,int,Public,Y,Y,);
Attribute(XMLATTR,int,Public,Y,Y,);
Attribute(XMLEND,int,Public,Y,Y,);
Attribute(TO_OBJECT,int,Public,Y,Y,);
Attribute(TO_DOUBLE,int,Public,Y,Y,);
Attribute(GET,int,Public,Y,Y,);
Attribute(SET,int,Public,Y,Y,);
Attribute(LET,int,Public,Y,Y,);
Attribute(CONST,int,Public,Y,Y,);
Attribute(SETCONST,int,Public,Y,Y,);
Attribute(SETCONSTVAR,int,Public,Y,Y,);
Attribute(ARRAYCOMP,int,Public,Y,Y,);
Attribute(LETEXPR,int,Public,Y,Y,);
Attribute(WITHEXPR,int,Public,Y,Y,);
Attribute(DEBUGGER,int,Public,Y,Y,);
Attribute(COMMENT,int,Public,Y,Y,);
Attribute(GENEXPR,int,Public,Y,Y,);
Attribute(LAST_TOKEN,int,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(name,java.lang.String,Public,Y,N);
Method(typeToName,java.lang.String,Public,Y,N);
Method(keywordToName,java.lang.String,Public,Y,N);
Method(isValidToken,boolean,Public,Y,N);
Parameter(name,int,);
Parameter(typeToName,int,);
Parameter(keywordToName,int,);
Parameter(isValidToken,int,);
EndClass 224
StartClass 225
Class(org.mozilla.javascript.ast.InfixExpression,N,N,Public);
Attribute(left,org.mozilla.javascript.ast.AstNode,Protected,N,N,);
Attribute(right,org.mozilla.javascript.ast.AstNode,Protected,N,N,);
Attribute(operatorPosition,int,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(<init>$6,void,Public,N,N);
Method(setLeftAndRight,void,Public,N,N);
Method(getOperator,int,Public,N,N);
Method(setOperator,void,Public,N,N);
Method(getLeft,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setLeft,void,Public,N,N);
Method(getRight,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setRight,void,Public,N,N);
Method(getOperatorPosition,int,Public,N,N);
Method(setOperatorPosition,void,Public,N,N);
Method(hasSideEffects,boolean,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$5,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$5,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$6,int,);
Parameter(<init>$6,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$6,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$6,int,);
Parameter(setLeftAndRight,org.mozilla.javascript.ast.AstNode,);
Parameter(setLeftAndRight,org.mozilla.javascript.ast.AstNode,);
Parameter(setOperator,int,);
Parameter(setLeft,org.mozilla.javascript.ast.AstNode,);
Parameter(setRight,org.mozilla.javascript.ast.AstNode,);
Parameter(setOperatorPosition,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
SubClass(org.mozilla.javascript.ast.ObjectProperty);
SubClass(org.mozilla.javascript.ast.Assignment);
SubClass(org.mozilla.javascript.ast.PropertyGet);
SubClass(org.mozilla.javascript.ast.XmlMemberGet);
SubClass(org.mozilla.javascript.ast.XmlDotQuery);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$4 --> setLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$4 --> setRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$5 --> setLeftAndRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$6 --> setOperatorPosition,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$6 --> setLeftAndRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setLeftAndRight --> setLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setLeftAndRight --> setRight,org.mozilla.javascript.ast.InfixExpression,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,<init> --> operatorPosition,org.mozilla.javascript.ast.InfixExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,<init>$2 --> operatorPosition,org.mozilla.javascript.ast.InfixExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,<init>$3 --> operatorPosition,org.mozilla.javascript.ast.InfixExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,<init>$4 --> operatorPosition,org.mozilla.javascript.ast.InfixExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,<init>$5 --> operatorPosition,org.mozilla.javascript.ast.InfixExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,<init>$6 --> operatorPosition,org.mozilla.javascript.ast.InfixExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,getLeft --> left,org.mozilla.javascript.ast.InfixExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,setLeft --> left,org.mozilla.javascript.ast.InfixExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,getRight --> right,org.mozilla.javascript.ast.InfixExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,setRight --> right,org.mozilla.javascript.ast.InfixExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,getOperatorPosition --> operatorPosition,org.mozilla.javascript.ast.InfixExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,setOperatorPosition --> operatorPosition,org.mozilla.javascript.ast.InfixExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,hasSideEffects --> right,org.mozilla.javascript.ast.InfixExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,hasSideEffects --> left,org.mozilla.javascript.ast.InfixExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,toSource --> left,org.mozilla.javascript.ast.InfixExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,toSource --> right,org.mozilla.javascript.ast.InfixExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,visit --> left,org.mozilla.javascript.ast.InfixExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.InfixExpression,visit --> right,org.mozilla.javascript.ast.InfixExpression,READ);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$4 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$5 --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$6 --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$6 --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,<init>$6 --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setLeftAndRight --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setLeftAndRight --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setLeftAndRight --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setLeftAndRight --> setBounds,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,getOperator --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setOperator --> isValidToken,org.mozilla.javascript.Token,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setOperator --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setLeft --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setLeft --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setLeft --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setLeft --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setRight --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,setRight --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,hasSideEffects --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,hasSideEffects --> hasSideEffects,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,toSource --> toSource$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,toSource --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,toSource --> operatorToString,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.InfixExpression,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 225
StartClass 226
Class(org.mozilla.javascript.ast.LetNode,N,N,Public);
Attribute(variables,org.mozilla.javascript.ast.VariableDeclaration,Private,N,N,);
Attribute(body,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(lp,int,Private,N,N,);
Attribute(rp,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getVariables,org.mozilla.javascript.ast.VariableDeclaration,Public,N,N);
Method(setVariables,void,Public,N,N);
Method(getBody,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setBody,void,Public,N,N);
Method(getLp,int,Public,N,N);
Method(setLp,void,Public,N,N);
Method(getRp,int,Public,N,N);
Method(setRp,void,Public,N,N);
Method(setParens,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setVariables,org.mozilla.javascript.ast.VariableDeclaration,);
Parameter(setBody,org.mozilla.javascript.ast.AstNode,);
Parameter(setLp,int,);
Parameter(setRp,int,);
Parameter(setParens,int,);
Parameter(setParens,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.Scope);
Composition(org.mozilla.javascript.ast.VariableDeclaration);
Composition(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,<init> --> lp,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,<init> --> rp,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,<init>$2 --> lp,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,<init>$2 --> rp,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,<init>$3 --> lp,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,<init>$3 --> rp,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,getVariables --> variables,org.mozilla.javascript.ast.LetNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,setVariables --> variables,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,getBody --> body,org.mozilla.javascript.ast.LetNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,setBody --> body,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,getLp --> lp,org.mozilla.javascript.ast.LetNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,setLp --> lp,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,getRp --> rp,org.mozilla.javascript.ast.LetNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,setRp --> rp,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,setParens --> lp,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,setParens --> rp,org.mozilla.javascript.ast.LetNode,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,toSource --> variables,org.mozilla.javascript.ast.LetNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,toSource --> body,org.mozilla.javascript.ast.LetNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,visit --> variables,org.mozilla.javascript.ast.LetNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,visit --> body,org.mozilla.javascript.ast.LetNode,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.LetNode,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.LetNode,<init> --> <init>,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,<init>$2 --> <init>$2,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,<init>$3 --> <init>$3,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,setVariables --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,setVariables --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,setBody --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,toSource --> getVariables,org.mozilla.javascript.ast.VariableDeclaration,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,toSource --> printList,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,visit --> visit,org.mozilla.javascript.ast.VariableDeclaration,);
Call(METHOD,org.mozilla.javascript.ast.LetNode,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 226
StartClass 227
Class(org.mozilla.javascript.ast.XmlRef,N,Y,Public);
Attribute(namespace,org.mozilla.javascript.ast.Name,Protected,N,N,);
Attribute(atPos,int,Protected,N,N,);
Attribute(colonPos,int,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getNamespace,org.mozilla.javascript.ast.Name,Public,N,N);
Method(setNamespace,void,Public,N,N);
Method(isAttributeAccess,boolean,Public,N,N);
Method(getAtPos,int,Public,N,N);
Method(setAtPos,void,Public,N,N);
Method(getColonPos,int,Public,N,N);
Method(setColonPos,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setNamespace,org.mozilla.javascript.ast.Name,);
Parameter(setAtPos,int,);
Parameter(setColonPos,int,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
SubClass(org.mozilla.javascript.ast.XmlElemRef);
SubClass(org.mozilla.javascript.ast.XmlPropRef);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.Name);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,<init> --> atPos,org.mozilla.javascript.ast.XmlRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,<init> --> colonPos,org.mozilla.javascript.ast.XmlRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,<init>$2 --> atPos,org.mozilla.javascript.ast.XmlRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,<init>$2 --> colonPos,org.mozilla.javascript.ast.XmlRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,<init>$3 --> atPos,org.mozilla.javascript.ast.XmlRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,<init>$3 --> colonPos,org.mozilla.javascript.ast.XmlRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,getNamespace --> namespace,org.mozilla.javascript.ast.XmlRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,setNamespace --> namespace,org.mozilla.javascript.ast.XmlRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,isAttributeAccess --> atPos,org.mozilla.javascript.ast.XmlRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,getAtPos --> atPos,org.mozilla.javascript.ast.XmlRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,setAtPos --> atPos,org.mozilla.javascript.ast.XmlRef,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,getColonPos --> colonPos,org.mozilla.javascript.ast.XmlRef,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlRef,setColonPos --> colonPos,org.mozilla.javascript.ast.XmlRef,WRITE);
Call(METHOD,org.mozilla.javascript.ast.XmlRef,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlRef,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlRef,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlRef,setNamespace --> setParent,org.mozilla.javascript.ast.AstNode,);
EndClass 227
StartClass 228
Class(org.mozilla.javascript.ast.ConditionalExpression,N,N,Public);
Attribute(testExpression,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(trueExpression,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(falseExpression,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(questionMarkPosition,int,Private,N,N,);
Attribute(colonPosition,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getTestExpression,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setTestExpression,void,Public,N,N);
Method(getTrueExpression,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setTrueExpression,void,Public,N,N);
Method(getFalseExpression,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setFalseExpression,void,Public,N,N);
Method(getQuestionMarkPosition,int,Public,N,N);
Method(setQuestionMarkPosition,void,Public,N,N);
Method(getColonPosition,int,Public,N,N);
Method(setColonPosition,void,Public,N,N);
Method(hasSideEffects,boolean,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setTestExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(setTrueExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(setFalseExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(setQuestionMarkPosition,int,);
Parameter(setColonPosition,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,<init> --> questionMarkPosition,org.mozilla.javascript.ast.ConditionalExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,<init> --> colonPosition,org.mozilla.javascript.ast.ConditionalExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,<init>$2 --> questionMarkPosition,org.mozilla.javascript.ast.ConditionalExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,<init>$2 --> colonPosition,org.mozilla.javascript.ast.ConditionalExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,<init>$3 --> questionMarkPosition,org.mozilla.javascript.ast.ConditionalExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,<init>$3 --> colonPosition,org.mozilla.javascript.ast.ConditionalExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,getTestExpression --> testExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,setTestExpression --> testExpression,org.mozilla.javascript.ast.ConditionalExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,getTrueExpression --> trueExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,setTrueExpression --> trueExpression,org.mozilla.javascript.ast.ConditionalExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,getFalseExpression --> falseExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,setFalseExpression --> falseExpression,org.mozilla.javascript.ast.ConditionalExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,getQuestionMarkPosition --> questionMarkPosition,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,setQuestionMarkPosition --> questionMarkPosition,org.mozilla.javascript.ast.ConditionalExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,getColonPosition --> colonPosition,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,setColonPosition --> colonPosition,org.mozilla.javascript.ast.ConditionalExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,hasSideEffects --> testExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,hasSideEffects --> trueExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,hasSideEffects --> falseExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,toSource --> testExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,toSource --> trueExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,toSource --> falseExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,visit --> testExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,visit --> trueExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,visit --> falseExpression,org.mozilla.javascript.ast.ConditionalExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ConditionalExpression,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,setTestExpression --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,setTestExpression --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,setTrueExpression --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,setTrueExpression --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,setFalseExpression --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,setFalseExpression --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,hasSideEffects --> codeBug,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,hasSideEffects --> hasSideEffects,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ConditionalExpression,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 228
StartClass 229
Class(org.mozilla.javascript.ast.DestructuringForm,Y,Y,Public);
Method(setIsDestructuring,void,Public,N,Y);
Method(isDestructuring,boolean,Public,N,Y);
Parameter(setIsDestructuring,boolean,);
EndClass 229
StartClass 230
Class(org.mozilla.javascript.Parser$PerFunctionVariables,N,N,Public);
Attribute(savedCurrentScriptOrFn,org.mozilla.javascript.ast.ScriptNode,Private,N,N,);
Attribute(savedCurrentScope,org.mozilla.javascript.ast.Scope,Private,N,N,);
Attribute(savedEndFlags,int,Private,N,N,);
Attribute(savedInForInit,boolean,Private,N,N,);
Attribute(savedLabelSet,java.util.Map,Private,N,N,java.lang.String;org.mozilla.javascript.ast.LabeledStatement);
Attribute(savedLoopSet,java.util.List,Private,N,N,org.mozilla.javascript.ast.Loop);
Attribute(savedLoopAndSwitchSet,java.util.List,Private,N,N,org.mozilla.javascript.ast.Jump);
Attribute(this$0,org.mozilla.javascript.Parser,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(restore,void,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Parser,);
Parameter(<init>,org.mozilla.javascript.ast.FunctionNode,);
Composition(org.mozilla.javascript.ast.ScriptNode);
Composition(org.mozilla.javascript.ast.Scope);
Composition(org.mozilla.javascript.ast.Jump);
Composition(org.mozilla.javascript.Parser);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> this$0,org.mozilla.javascript.Parser$PerFunctionVariables,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> savedCurrentScriptOrFn,org.mozilla.javascript.Parser$PerFunctionVariables,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> savedCurrentScope,org.mozilla.javascript.Parser$PerFunctionVariables,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> savedLabelSet,org.mozilla.javascript.Parser$PerFunctionVariables,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> savedLoopSet,org.mozilla.javascript.Parser$PerFunctionVariables,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> savedLoopAndSwitchSet,org.mozilla.javascript.Parser$PerFunctionVariables,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> savedEndFlags,org.mozilla.javascript.Parser$PerFunctionVariables,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> savedInForInit,org.mozilla.javascript.Parser$PerFunctionVariables,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> this$0,org.mozilla.javascript.Parser$PerFunctionVariables,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> savedCurrentScriptOrFn,org.mozilla.javascript.Parser$PerFunctionVariables,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> savedCurrentScope,org.mozilla.javascript.Parser$PerFunctionVariables,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> savedLabelSet,org.mozilla.javascript.Parser$PerFunctionVariables,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> savedLoopSet,org.mozilla.javascript.Parser$PerFunctionVariables,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> savedLoopAndSwitchSet,org.mozilla.javascript.Parser$PerFunctionVariables,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> savedEndFlags,org.mozilla.javascript.Parser$PerFunctionVariables,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> savedInForInit,org.mozilla.javascript.Parser$PerFunctionVariables,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> currentScriptOrFn,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> currentScope,org.mozilla.javascript.Parser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> currentScriptOrFn,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> currentScope,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> currentScriptOrFn,org.mozilla.javascript.Parser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> currentScope,org.mozilla.javascript.Parser,WRITE);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> access$200,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> access$202,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> access$300,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> access$302,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> access$400,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> access$402,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> access$500,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> access$502,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> access$600,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,<init> --> access$602,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> access$202,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> access$302,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> access$402,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> access$502,org.mozilla.javascript.Parser,);
Call(METHOD,org.mozilla.javascript.Parser$PerFunctionVariables,restore --> access$602,org.mozilla.javascript.Parser,);
EndClass 230
StartClass 231
Class(org.mozilla.javascript.ast.NewExpression,N,N,Public);
Attribute(initializer,org.mozilla.javascript.ast.ObjectLiteral,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getInitializer,org.mozilla.javascript.ast.ObjectLiteral,Public,N,N);
Method(setInitializer,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setInitializer,org.mozilla.javascript.ast.ObjectLiteral,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.FunctionCall);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.FunctionCall);
Composition(org.mozilla.javascript.ast.ObjectLiteral);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NewExpression,getInitializer --> initializer,org.mozilla.javascript.ast.NewExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NewExpression,setInitializer --> initializer,org.mozilla.javascript.ast.NewExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NewExpression,toSource --> initializer,org.mozilla.javascript.ast.NewExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NewExpression,visit --> initializer,org.mozilla.javascript.ast.NewExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NewExpression,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NewExpression,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NewExpression,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NewExpression,toSource --> target,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NewExpression,toSource --> arguments,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.NewExpression,visit --> target,org.mozilla.javascript.ast.FunctionCall,READ);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,<init> --> <init>,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,<init>$2 --> <init>$2,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,<init>$3 --> <init>$3,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,setInitializer --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,toSource --> printList,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,toSource --> toSource,org.mozilla.javascript.ast.ObjectLiteral,);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,visit --> visit,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,visit --> getArguments,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.ast.NewExpression,visit --> visit,org.mozilla.javascript.ast.ObjectLiteral,);
EndClass 231
StartClass 232
Class(org.mozilla.javascript.Token$CommentType,N,N,Public);
Attribute(LINE,org.mozilla.javascript.Token$CommentType,Public,Y,Y,);
Attribute(BLOCK_COMMENT,org.mozilla.javascript.Token$CommentType,Public,Y,Y,);
Attribute(JSDOC,org.mozilla.javascript.Token$CommentType,Public,Y,Y,);
Attribute(HTML,org.mozilla.javascript.Token$CommentType,Public,Y,Y,);
Attribute($VALUES,org.mozilla.javascript.Token$CommentType[],Private,Y,Y,);
Method(values,org.mozilla.javascript.Token$CommentType[],Public,Y,N);
Method(valueOf,org.mozilla.javascript.Token$CommentType,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(valueOf,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Composition(org.mozilla.javascript.Token$CommentType);
Call(METHOD,org.mozilla.javascript.Token$CommentType,<clinit> --> <init>,org.mozilla.javascript.Token$CommentType,);
Call(ATTRIBUTE,org.mozilla.javascript.Token$CommentType,values --> $VALUES,org.mozilla.javascript.Token$CommentType,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Token$CommentType,<clinit> --> LINE,org.mozilla.javascript.Token$CommentType,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Token$CommentType,<clinit> --> BLOCK_COMMENT,org.mozilla.javascript.Token$CommentType,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Token$CommentType,<clinit> --> JSDOC,org.mozilla.javascript.Token$CommentType,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Token$CommentType,<clinit> --> HTML,org.mozilla.javascript.Token$CommentType,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Token$CommentType,<clinit> --> LINE,org.mozilla.javascript.Token$CommentType,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Token$CommentType,<clinit> --> BLOCK_COMMENT,org.mozilla.javascript.Token$CommentType,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Token$CommentType,<clinit> --> JSDOC,org.mozilla.javascript.Token$CommentType,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Token$CommentType,<clinit> --> HTML,org.mozilla.javascript.Token$CommentType,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Token$CommentType,<clinit> --> $VALUES,org.mozilla.javascript.Token$CommentType,WRITE);
EndClass 232
StartClass 233
Class(org.mozilla.javascript.ast.Yield,N,N,Public);
Attribute(value,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(getValue,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setValue,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(setValue,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.Yield,<init>$4 --> setValue,org.mozilla.javascript.ast.Yield,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Yield,getValue --> value,org.mozilla.javascript.ast.Yield,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Yield,setValue --> value,org.mozilla.javascript.ast.Yield,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Yield,toSource --> value,org.mozilla.javascript.ast.Yield,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Yield,visit --> value,org.mozilla.javascript.ast.Yield,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Yield,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Yield,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Yield,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Yield,<init>$4 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.Yield,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Yield,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Yield,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Yield,<init>$4 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Yield,setValue --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Yield,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Yield,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.Yield,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 233
StartClass 234
Class(org.mozilla.javascript.ast.XmlFragment,N,Y,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
SubClass(org.mozilla.javascript.ast.XmlString);
SubClass(org.mozilla.javascript.ast.XmlExpression);
Generalization(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlFragment,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlFragment,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlFragment,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.XmlFragment,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlFragment,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlFragment,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
EndClass 234
StartClass 235
Class(org.mozilla.javascript.ast.CatchClause,N,N,Public);
Attribute(varName,org.mozilla.javascript.ast.Name,Private,N,N,);
Attribute(catchCondition,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(body,org.mozilla.javascript.ast.Block,Private,N,N,);
Attribute(ifPosition,int,Private,N,N,);
Attribute(lp,int,Private,N,N,);
Attribute(rp,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getVarName,org.mozilla.javascript.ast.Name,Public,N,N);
Method(setVarName,void,Public,N,N);
Method(getCatchCondition,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setCatchCondition,void,Public,N,N);
Method(getBody,org.mozilla.javascript.ast.Block,Public,N,N);
Method(setBody,void,Public,N,N);
Method(getLp,int,Public,N,N);
Method(setLp,void,Public,N,N);
Method(getRp,int,Public,N,N);
Method(setRp,void,Public,N,N);
Method(setParens,void,Public,N,N);
Method(getIfPosition,int,Public,N,N);
Method(setIfPosition,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setVarName,org.mozilla.javascript.ast.Name,);
Parameter(setCatchCondition,org.mozilla.javascript.ast.AstNode,);
Parameter(setBody,org.mozilla.javascript.ast.Block,);
Parameter(setLp,int,);
Parameter(setRp,int,);
Parameter(setParens,int,);
Parameter(setParens,int,);
Parameter(setIfPosition,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.Name);
Composition(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.Block);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init> --> ifPosition,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init> --> lp,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init> --> rp,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init>$2 --> ifPosition,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init>$2 --> lp,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init>$2 --> rp,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init>$3 --> ifPosition,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init>$3 --> lp,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init>$3 --> rp,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,getVarName --> varName,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,setVarName --> varName,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,getCatchCondition --> catchCondition,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,setCatchCondition --> catchCondition,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,getBody --> body,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,setBody --> body,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,getLp --> lp,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,setLp --> lp,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,getRp --> rp,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,setRp --> rp,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,setParens --> lp,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,setParens --> rp,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,getIfPosition --> ifPosition,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,setIfPosition --> ifPosition,org.mozilla.javascript.ast.CatchClause,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,toSource --> varName,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,toSource --> catchCondition,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,toSource --> body,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,visit --> varName,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,visit --> catchCondition,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,visit --> body,org.mozilla.javascript.ast.CatchClause,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.CatchClause,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,setVarName --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,setVarName --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,setCatchCondition --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,setBody --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,setBody --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,toSource --> toSource,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,toSource --> toSource,org.mozilla.javascript.ast.Block,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,visit --> visit,org.mozilla.javascript.ast.Name,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,visit --> visit,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.CatchClause,visit --> visit,org.mozilla.javascript.ast.Block,);
EndClass 235
StartClass 236
Class(org.mozilla.javascript.ast.ExpressionStatement,N,N,Public);
Attribute(expr,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Method(setHasResult,void,Public,N,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(getExpression,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setExpression,void,Public,N,N);
Method(hasSideEffects,boolean,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$2,boolean,);
Parameter(<init>$3,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$5,int,);
Parameter(<init>$5,int,);
Parameter(<init>$5,org.mozilla.javascript.ast.AstNode,);
Parameter(setExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,<init>$2 --> <init>$3,org.mozilla.javascript.ast.ExpressionStatement,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,<init>$2 --> setHasResult,org.mozilla.javascript.ast.ExpressionStatement,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,<init>$3 --> <init>$5,org.mozilla.javascript.ast.ExpressionStatement,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,<init>$5 --> setExpression,org.mozilla.javascript.ast.ExpressionStatement,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ExpressionStatement,getExpression --> expr,org.mozilla.javascript.ast.ExpressionStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ExpressionStatement,setExpression --> expr,org.mozilla.javascript.ast.ExpressionStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ExpressionStatement,hasSideEffects --> expr,org.mozilla.javascript.ast.ExpressionStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ExpressionStatement,toSource --> expr,org.mozilla.javascript.ast.ExpressionStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ExpressionStatement,visit --> expr,org.mozilla.javascript.ast.ExpressionStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ExpressionStatement,setHasResult --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ExpressionStatement,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ExpressionStatement,<init>$4 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ExpressionStatement,<init>$5 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ExpressionStatement,hasSideEffects --> type,org.mozilla.javascript.Node,READ);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,<init>$3 --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,<init>$3 --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,<init>$4 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,<init>$5 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,setExpression --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,setExpression --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,setExpression --> getLineno,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,setExpression --> setLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,hasSideEffects --> hasSideEffects,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ExpressionStatement,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 236
StartClass 237
Class(org.mozilla.javascript.ast.XmlExpression,N,N,Public);
Attribute(expression,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(isXmlAttribute,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(getExpression,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setExpression,void,Public,N,N);
Method(isXmlAttribute,boolean,Public,N,N);
Method(setIsXmlAttribute,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(setExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(setIsXmlAttribute,boolean,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.XmlFragment);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.XmlFragment);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.XmlExpression,<init>$4 --> setExpression,org.mozilla.javascript.ast.XmlExpression,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlExpression,getExpression --> expression,org.mozilla.javascript.ast.XmlExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlExpression,setExpression --> expression,org.mozilla.javascript.ast.XmlExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlExpression,isXmlAttribute --> isXmlAttribute,org.mozilla.javascript.ast.XmlExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlExpression,setIsXmlAttribute --> isXmlAttribute,org.mozilla.javascript.ast.XmlExpression,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlExpression,toSource --> expression,org.mozilla.javascript.ast.XmlExpression,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlExpression,visit --> expression,org.mozilla.javascript.ast.XmlExpression,READ);
Call(METHOD,org.mozilla.javascript.ast.XmlExpression,<init> --> <init>,org.mozilla.javascript.ast.XmlFragment,);
Call(METHOD,org.mozilla.javascript.ast.XmlExpression,<init>$2 --> <init>$2,org.mozilla.javascript.ast.XmlFragment,);
Call(METHOD,org.mozilla.javascript.ast.XmlExpression,<init>$3 --> <init>$3,org.mozilla.javascript.ast.XmlFragment,);
Call(METHOD,org.mozilla.javascript.ast.XmlExpression,<init>$4 --> <init>$2,org.mozilla.javascript.ast.XmlFragment,);
Call(METHOD,org.mozilla.javascript.ast.XmlExpression,setExpression --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlExpression,setExpression --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlExpression,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlExpression,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlExpression,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.XmlExpression,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 237
StartClass 238
Class(org.mozilla.javascript.ast.XmlMemberGet,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(<init>$5,void,Public,N,N);
Method(<init>$6,void,Public,N,N);
Method(getTarget,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setTarget,void,Public,N,N);
Method(getMemberRef,org.mozilla.javascript.ast.XmlRef,Public,N,N);
Method(setProperty,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$4,org.mozilla.javascript.ast.XmlRef,);
Parameter(<init>$5,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$5,org.mozilla.javascript.ast.XmlRef,);
Parameter(<init>$6,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$6,org.mozilla.javascript.ast.XmlRef,);
Parameter(<init>$6,int,);
Parameter(setTarget,org.mozilla.javascript.ast.AstNode,);
Parameter(setProperty,org.mozilla.javascript.ast.XmlRef,);
Parameter(toSource,int,);
SuperClass(org.mozilla.javascript.ast.InfixExpression);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.InfixExpression);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlMemberGet,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlMemberGet,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlMemberGet,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlMemberGet,<init>$4 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlMemberGet,<init>$5 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlMemberGet,<init>$6 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,<init> --> <init>,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,<init>$2 --> <init>$2,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,<init>$3 --> <init>$3,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,<init>$4 --> <init>$4,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,<init>$5 --> <init>$5,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,<init>$6 --> <init>$6,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,getTarget --> getLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,setTarget --> setLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,getMemberRef --> getRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,setProperty --> setRight,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,toSource --> getLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,toSource --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,toSource --> operatorToString,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlMemberGet,toSource --> getRight,org.mozilla.javascript.ast.InfixExpression,);
EndClass 238
StartClass 239
Class(org.mozilla.javascript.ast.FunctionCall,N,N,Public);
Attribute(NO_ARGS,java.util.List,Protected,Y,Y,org.mozilla.javascript.ast.AstNode);
Attribute(target,org.mozilla.javascript.ast.AstNode,Protected,N,N,);
Attribute(arguments,java.util.List,Protected,N,N,org.mozilla.javascript.ast.AstNode);
Attribute(lp,int,Protected,N,N,);
Attribute(rp,int,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getTarget,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setTarget,void,Public,N,N);
Method(getArguments,java.util.List,Public,N,N);
Method(setArguments,void,Public,N,N);
Method(addArgument,void,Public,N,N);
Method(getLp,int,Public,N,N);
Method(setLp,void,Public,N,N);
Method(getRp,int,Public,N,N);
Method(setRp,void,Public,N,N);
Method(setParens,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setTarget,org.mozilla.javascript.ast.AstNode,);
Parameter(setArguments,java.util.List,org.mozilla.javascript.ast.AstNode);
Parameter(addArgument,org.mozilla.javascript.ast.AstNode,);
Parameter(setLp,int,);
Parameter(setRp,int,);
Parameter(setParens,int,);
Parameter(setParens,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
SubClass(org.mozilla.javascript.ast.NewExpression);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,setArguments --> addArgument,org.mozilla.javascript.ast.FunctionCall,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,visit --> getArguments,org.mozilla.javascript.ast.FunctionCall,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,<init> --> lp,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,<init> --> rp,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,<init>$2 --> lp,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,<init>$2 --> rp,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,<init>$3 --> lp,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,<init>$3 --> rp,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,getTarget --> target,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,setTarget --> target,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,getArguments --> arguments,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,getArguments --> NO_ARGS,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,setArguments --> arguments,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,setArguments --> arguments,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,addArgument --> arguments,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,addArgument --> arguments,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,getLp --> lp,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,setLp --> lp,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,getRp --> rp,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,setRp --> rp,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,setParens --> lp,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,setParens --> rp,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,toSource --> target,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,toSource --> arguments,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,visit --> target,org.mozilla.javascript.ast.FunctionCall,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,<clinit> --> NO_ARGS,org.mozilla.javascript.ast.FunctionCall,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionCall,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,setTarget --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,setTarget --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,addArgument --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,addArgument --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,toSource --> printList,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.FunctionCall,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 239
StartClass 240
Class(org.mozilla.javascript.ast.ReturnStatement,N,N,Public);
Attribute(returnValue,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(getReturnValue,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setReturnValue,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(setReturnValue,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.ReturnStatement,<init>$4 --> setReturnValue,org.mozilla.javascript.ast.ReturnStatement,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ReturnStatement,getReturnValue --> returnValue,org.mozilla.javascript.ast.ReturnStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ReturnStatement,setReturnValue --> returnValue,org.mozilla.javascript.ast.ReturnStatement,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ReturnStatement,toSource --> returnValue,org.mozilla.javascript.ast.ReturnStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ReturnStatement,visit --> returnValue,org.mozilla.javascript.ast.ReturnStatement,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ReturnStatement,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ReturnStatement,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ReturnStatement,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ReturnStatement,<init>$4 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.ReturnStatement,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ReturnStatement,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ReturnStatement,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ReturnStatement,<init>$4 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ReturnStatement,setReturnValue --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ReturnStatement,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ReturnStatement,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ReturnStatement,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ReturnStatement,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 240
StartClass 241
Class(org.mozilla.javascript.ast.SwitchCase,N,N,Public);
Attribute(expression,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(statements,java.util.List,Private,N,N,org.mozilla.javascript.ast.AstNode);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getExpression,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setExpression,void,Public,N,N);
Method(isDefault,boolean,Public,N,N);
Method(getStatements,java.util.List,Public,N,N);
Method(setStatements,void,Public,N,N);
Method(addStatement,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setExpression,org.mozilla.javascript.ast.AstNode,);
Parameter(setStatements,java.util.List,org.mozilla.javascript.ast.AstNode);
Parameter(addStatement,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,setStatements --> addStatement,org.mozilla.javascript.ast.SwitchCase,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,getExpression --> expression,org.mozilla.javascript.ast.SwitchCase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,setExpression --> expression,org.mozilla.javascript.ast.SwitchCase,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,isDefault --> expression,org.mozilla.javascript.ast.SwitchCase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,getStatements --> statements,org.mozilla.javascript.ast.SwitchCase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,setStatements --> statements,org.mozilla.javascript.ast.SwitchCase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,addStatement --> statements,org.mozilla.javascript.ast.SwitchCase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,addStatement --> statements,org.mozilla.javascript.ast.SwitchCase,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,toSource --> expression,org.mozilla.javascript.ast.SwitchCase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,toSource --> statements,org.mozilla.javascript.ast.SwitchCase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,visit --> expression,org.mozilla.javascript.ast.SwitchCase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,visit --> statements,org.mozilla.javascript.ast.SwitchCase,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.SwitchCase,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,setExpression --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,addStatement --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,addStatement --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,addStatement --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,addStatement --> setLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,addStatement --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.SwitchCase,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 241
StartClass 242
Class(org.mozilla.javascript.ast.ArrayComprehension,N,N,Public);
Attribute(result,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(loops,java.util.List,Private,N,N,org.mozilla.javascript.ast.ArrayComprehensionLoop);
Attribute(filter,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(ifPosition,int,Private,N,N,);
Attribute(lp,int,Private,N,N,);
Attribute(rp,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getResult,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setResult,void,Public,N,N);
Method(getLoops,java.util.List,Public,N,N);
Method(setLoops,void,Public,N,N);
Method(addLoop,void,Public,N,N);
Method(getFilter,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setFilter,void,Public,N,N);
Method(getIfPosition,int,Public,N,N);
Method(setIfPosition,void,Public,N,N);
Method(getFilterLp,int,Public,N,N);
Method(setFilterLp,void,Public,N,N);
Method(getFilterRp,int,Public,N,N);
Method(setFilterRp,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setResult,org.mozilla.javascript.ast.AstNode,);
Parameter(setLoops,java.util.List,org.mozilla.javascript.ast.ArrayComprehensionLoop);
Parameter(addLoop,org.mozilla.javascript.ast.ArrayComprehensionLoop,);
Parameter(setFilter,org.mozilla.javascript.ast.AstNode,);
Parameter(setIfPosition,int,);
Parameter(setFilterLp,int,);
Parameter(setFilterRp,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.Scope);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,setLoops --> addLoop,org.mozilla.javascript.ast.ArrayComprehension,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init> --> loops,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init> --> ifPosition,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init> --> lp,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init> --> rp,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init>$2 --> loops,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init>$2 --> ifPosition,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init>$2 --> lp,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init>$2 --> rp,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init>$3 --> loops,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init>$3 --> ifPosition,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init>$3 --> lp,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init>$3 --> rp,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,getResult --> result,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,setResult --> result,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,getLoops --> loops,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,setLoops --> loops,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,addLoop --> loops,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,getFilter --> filter,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,setFilter --> filter,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,getIfPosition --> ifPosition,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,setIfPosition --> ifPosition,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,getFilterLp --> lp,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,setFilterLp --> lp,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,getFilterRp --> rp,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,setFilterRp --> rp,org.mozilla.javascript.ast.ArrayComprehension,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,toSource --> result,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,toSource --> loops,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,toSource --> filter,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,visit --> result,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,visit --> loops,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,visit --> filter,org.mozilla.javascript.ast.ArrayComprehension,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ArrayComprehension,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,<init> --> <init>,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,<init>$2 --> <init>$2,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,<init>$3 --> <init>$3,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,setResult --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,setResult --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,setLoops --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,addLoop --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,addLoop --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,setFilter --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,toSource --> toSource,org.mozilla.javascript.ast.ArrayComprehensionLoop,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,visit --> visit,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ArrayComprehension,visit --> visit,org.mozilla.javascript.ast.ArrayComprehensionLoop,);
EndClass 242
StartClass 243
Class(org.mozilla.javascript.ast.XmlLiteral,N,N,Public);
Attribute(fragments,java.util.List,Private,N,N,org.mozilla.javascript.ast.XmlFragment);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getFragments,java.util.List,Public,N,N);
Method(setFragments,void,Public,N,N);
Method(addFragment,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setFragments,java.util.List,org.mozilla.javascript.ast.XmlFragment);
Parameter(addFragment,org.mozilla.javascript.ast.XmlFragment,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.XmlFragment);
Call(METHOD,org.mozilla.javascript.ast.XmlLiteral,setFragments --> addFragment,org.mozilla.javascript.ast.XmlLiteral,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlLiteral,<init> --> fragments,org.mozilla.javascript.ast.XmlLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlLiteral,<init>$2 --> fragments,org.mozilla.javascript.ast.XmlLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlLiteral,<init>$3 --> fragments,org.mozilla.javascript.ast.XmlLiteral,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlLiteral,getFragments --> fragments,org.mozilla.javascript.ast.XmlLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlLiteral,setFragments --> fragments,org.mozilla.javascript.ast.XmlLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlLiteral,addFragment --> fragments,org.mozilla.javascript.ast.XmlLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlLiteral,toSource --> fragments,org.mozilla.javascript.ast.XmlLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlLiteral,visit --> fragments,org.mozilla.javascript.ast.XmlLiteral,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlLiteral,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlLiteral,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlLiteral,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.XmlLiteral,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlLiteral,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlLiteral,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlLiteral,setFragments --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlLiteral,addFragment --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlLiteral,addFragment --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlLiteral,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlLiteral,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.XmlLiteral,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 243
StartClass 244
Class(org.mozilla.javascript.ast.Block,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(addStatement,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(addStatement,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Block,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Block,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.Block,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.Block,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Block,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Block,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Block,addStatement --> addChild,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Block,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Block,toSource --> iterator,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Block,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.Block,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.Block,visit --> iterator,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.Block,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 244
StartClass 245
Class(org.mozilla.javascript.ast.VariableInitializer,N,N,Public);
Attribute(target,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(initializer,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Method(setNodeType,void,Public,N,N);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(isDestructuring,boolean,Public,N,N);
Method(getTarget,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setTarget,void,Public,N,N);
Method(getInitializer,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setInitializer,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(setNodeType,int,);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setTarget,org.mozilla.javascript.ast.AstNode,);
Parameter(setInitializer,org.mozilla.javascript.ast.AstNode,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,isDestructuring --> target,org.mozilla.javascript.ast.VariableInitializer,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,getTarget --> target,org.mozilla.javascript.ast.VariableInitializer,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,setTarget --> target,org.mozilla.javascript.ast.VariableInitializer,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,getInitializer --> initializer,org.mozilla.javascript.ast.VariableInitializer,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,setInitializer --> initializer,org.mozilla.javascript.ast.VariableInitializer,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,toSource --> target,org.mozilla.javascript.ast.VariableInitializer,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,toSource --> initializer,org.mozilla.javascript.ast.VariableInitializer,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,visit --> target,org.mozilla.javascript.ast.VariableInitializer,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,visit --> initializer,org.mozilla.javascript.ast.VariableInitializer,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.VariableInitializer,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.VariableInitializer,setNodeType --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.VariableInitializer,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableInitializer,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableInitializer,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableInitializer,setTarget --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableInitializer,setInitializer --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableInitializer,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableInitializer,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.VariableInitializer,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.VariableInitializer,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 245
StartClass 246
Class(org.mozilla.javascript.ast.EmptyExpression,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Call(ATTRIBUTE,org.mozilla.javascript.ast.EmptyExpression,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.EmptyExpression,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.EmptyExpression,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.EmptyExpression,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.EmptyExpression,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.EmptyExpression,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.EmptyExpression,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.EmptyExpression,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
EndClass 246
StartClass 247
Class(org.mozilla.javascript.ast.ForInLoop,N,N,Public);
Attribute(iterator,org.mozilla.javascript.ast.AstNode,Protected,N,N,);
Attribute(iteratedObject,org.mozilla.javascript.ast.AstNode,Protected,N,N,);
Attribute(inPosition,int,Protected,N,N,);
Attribute(eachPosition,int,Protected,N,N,);
Attribute(isForEach,boolean,Protected,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getIterator,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setIterator,void,Public,N,N);
Method(getIteratedObject,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setIteratedObject,void,Public,N,N);
Method(isForEach,boolean,Public,N,N);
Method(setIsForEach,void,Public,N,N);
Method(getInPosition,int,Public,N,N);
Method(setInPosition,void,Public,N,N);
Method(getEachPosition,int,Public,N,N);
Method(setEachPosition,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setIterator,org.mozilla.javascript.ast.AstNode,);
Parameter(setIteratedObject,org.mozilla.javascript.ast.AstNode,);
Parameter(setIsForEach,boolean,);
Parameter(setInPosition,int,);
Parameter(setEachPosition,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.Loop);
SuperClass(org.mozilla.javascript.ast.Scope);
SuperClass(org.mozilla.javascript.ast.Jump);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
SubClass(org.mozilla.javascript.ast.ArrayComprehensionLoop);
SubClass(org.mozilla.javascript.ast.GeneratorExpressionLoop);
Generalization(org.mozilla.javascript.ast.Loop);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,toSource --> isForEach,org.mozilla.javascript.ast.ForInLoop,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,<init> --> inPosition,org.mozilla.javascript.ast.ForInLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,<init> --> eachPosition,org.mozilla.javascript.ast.ForInLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,<init>$2 --> inPosition,org.mozilla.javascript.ast.ForInLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,<init>$2 --> eachPosition,org.mozilla.javascript.ast.ForInLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,<init>$3 --> inPosition,org.mozilla.javascript.ast.ForInLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,<init>$3 --> eachPosition,org.mozilla.javascript.ast.ForInLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,getIterator --> iterator,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,setIterator --> iterator,org.mozilla.javascript.ast.ForInLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,getIteratedObject --> iteratedObject,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,setIteratedObject --> iteratedObject,org.mozilla.javascript.ast.ForInLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,isForEach --> isForEach,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,setIsForEach --> isForEach,org.mozilla.javascript.ast.ForInLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,getInPosition --> inPosition,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,setInPosition --> inPosition,org.mozilla.javascript.ast.ForInLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,getEachPosition --> eachPosition,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,setEachPosition --> eachPosition,org.mozilla.javascript.ast.ForInLoop,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,toSource --> iterator,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,toSource --> iteratedObject,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,visit --> iterator,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,visit --> iteratedObject,org.mozilla.javascript.ast.ForInLoop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,toSource --> body,org.mozilla.javascript.ast.Loop,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ForInLoop,visit --> body,org.mozilla.javascript.ast.Loop,READ);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,<init> --> <init>,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,<init>$2 --> <init>$2,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,<init>$3 --> <init>$3,org.mozilla.javascript.ast.Loop,);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,setIterator --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,setIterator --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,setIteratedObject --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,setIteratedObject --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,toSource --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ForInLoop,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 247
StartClass 248
Class(org.mozilla.javascript.ast.XmlDotQuery,N,N,Public);
Attribute(rp,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(getRp,int,Public,N,N);
Method(setRp,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(setRp,int,);
Parameter(toSource,int,);
SuperClass(org.mozilla.javascript.ast.InfixExpression);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.InfixExpression);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlDotQuery,<init> --> rp,org.mozilla.javascript.ast.XmlDotQuery,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlDotQuery,<init>$2 --> rp,org.mozilla.javascript.ast.XmlDotQuery,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlDotQuery,<init>$3 --> rp,org.mozilla.javascript.ast.XmlDotQuery,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlDotQuery,getRp --> rp,org.mozilla.javascript.ast.XmlDotQuery,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlDotQuery,setRp --> rp,org.mozilla.javascript.ast.XmlDotQuery,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlDotQuery,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlDotQuery,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.XmlDotQuery,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.XmlDotQuery,<init> --> <init>,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlDotQuery,<init>$2 --> <init>$2,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlDotQuery,<init>$3 --> <init>$3,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlDotQuery,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlDotQuery,toSource --> getLeft,org.mozilla.javascript.ast.InfixExpression,);
Call(METHOD,org.mozilla.javascript.ast.XmlDotQuery,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.XmlDotQuery,toSource --> getRight,org.mozilla.javascript.ast.InfixExpression,);
EndClass 248
StartClass 249
Class(org.mozilla.javascript.Parser$1,N,N,NA);
EndClass 249
StartClass 250
Class(org.mozilla.javascript.ast.KeywordLiteral,N,N,Public);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(setType,org.mozilla.javascript.ast.KeywordLiteral,Public,N,N);
Method(isBooleanLiteral,boolean,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Method(setType$2,org.mozilla.javascript.Node,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(<init>$4,int,);
Parameter(setType,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
Parameter(setType$2,int,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.KeywordLiteral,<init>$4 --> setType,org.mozilla.javascript.ast.KeywordLiteral,);
Call(METHOD,org.mozilla.javascript.ast.KeywordLiteral,setType$2 --> setType,org.mozilla.javascript.ast.KeywordLiteral,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.KeywordLiteral,setType --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.KeywordLiteral,isBooleanLiteral --> type,org.mozilla.javascript.Node,READ);
Call(METHOD,org.mozilla.javascript.ast.KeywordLiteral,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.KeywordLiteral,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.KeywordLiteral,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.KeywordLiteral,<init>$4 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.KeywordLiteral,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.KeywordLiteral,toSource --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.KeywordLiteral,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
EndClass 250
StartClass 251
Class(org.mozilla.javascript.ast.ElementGet,N,N,Public);
Attribute(target,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(element,org.mozilla.javascript.ast.AstNode,Private,N,N,);
Attribute(lb,int,Private,N,N,);
Attribute(rb,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(getTarget,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setTarget,void,Public,N,N);
Method(getElement,org.mozilla.javascript.ast.AstNode,Public,N,N);
Method(setElement,void,Public,N,N);
Method(getLb,int,Public,N,N);
Method(setLb,void,Public,N,N);
Method(getRb,int,Public,N,N);
Method(setRb,void,Public,N,N);
Method(setParens,void,Public,N,N);
Method(toSource,java.lang.String,Public,N,N);
Method(visit,void,Public,N,N);
Parameter(<init>$2,int,);
Parameter(<init>$3,int,);
Parameter(<init>$3,int,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(<init>$4,org.mozilla.javascript.ast.AstNode,);
Parameter(setTarget,org.mozilla.javascript.ast.AstNode,);
Parameter(setElement,org.mozilla.javascript.ast.AstNode,);
Parameter(setLb,int,);
Parameter(setRb,int,);
Parameter(setParens,int,);
Parameter(setParens,int,);
Parameter(toSource,int,);
Parameter(visit,org.mozilla.javascript.ast.NodeVisitor,);
SuperClass(org.mozilla.javascript.ast.AstNode);
SuperClass(org.mozilla.javascript.Node);
Generalization(org.mozilla.javascript.ast.AstNode);
Composition(org.mozilla.javascript.ast.AstNode);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,<init>$4 --> setTarget,org.mozilla.javascript.ast.ElementGet,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,<init>$4 --> setElement,org.mozilla.javascript.ast.ElementGet,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init> --> lb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init> --> rb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init>$2 --> lb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init>$2 --> rb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init>$3 --> lb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init>$3 --> rb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init>$4 --> lb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init>$4 --> rb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,getTarget --> target,org.mozilla.javascript.ast.ElementGet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,setTarget --> target,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,getElement --> element,org.mozilla.javascript.ast.ElementGet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,setElement --> element,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,getLb --> lb,org.mozilla.javascript.ast.ElementGet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,setLb --> lb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,getRb --> rb,org.mozilla.javascript.ast.ElementGet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,setRb --> rb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,setParens --> lb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,setParens --> rb,org.mozilla.javascript.ast.ElementGet,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,toSource --> target,org.mozilla.javascript.ast.ElementGet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,toSource --> element,org.mozilla.javascript.ast.ElementGet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,visit --> target,org.mozilla.javascript.ast.ElementGet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,visit --> element,org.mozilla.javascript.ast.ElementGet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init> --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init>$2 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init>$3 --> type,org.mozilla.javascript.Node,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ElementGet,<init>$4 --> type,org.mozilla.javascript.Node,WRITE);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,<init> --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,<init>$2 --> <init>$2,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,<init>$3 --> <init>$3,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,<init>$4 --> <init>,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,setTarget --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,setTarget --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,setElement --> assertNotNull,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,setElement --> setParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,toSource --> makeIndent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,toSource --> toSource,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,visit --> visit,org.mozilla.javascript.ast.NodeVisitor,);
Call(METHOD,org.mozilla.javascript.ast.ElementGet,visit --> visit,org.mozilla.javascript.ast.AstNode,);
EndClass 251
StartClass 252
Class(org.mozilla.javascript.Decompiler,N,N,Public);
Attribute(ONLY_BODY_FLAG,int,Public,Y,Y,);
Attribute(TO_SOURCE_FLAG,int,Public,Y,Y,);
Attribute(INITIAL_INDENT_PROP,int,Public,Y,Y,);
Attribute(INDENT_GAP_PROP,int,Public,Y,Y,);
Attribute(CASE_GAP_PROP,int,Public,Y,Y,);
Attribute(FUNCTION_END,int,Private,Y,Y,);
Attribute(sourceBuffer,char[],Private,N,N,);
Attribute(sourceTop,int,Private,N,N,);
Attribute(printSource,boolean,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(getEncodedSource,java.lang.String,Public,N,N);
Method(getCurrentOffset,int,Public,N,N);
Method(markFunctionStart,int,Public,N,N);
Method(markFunctionEnd,int,Public,N,N);
Method(addToken,void,Public,N,N);
Method(addEOL,void,Public,N,N);
Method(addName,void,Public,N,N);
Method(addString,void,Public,N,N);
Method(addRegexp,void,Public,N,N);
Method(addNumber,void,Public,N,N);
Method(appendString,void,Private,N,N);
Method(append,void,Private,N,N);
Method(increaseSourceCapacity,void,Private,N,N);
Method(sourceToString,java.lang.String,Private,N,N);
Method(decompile,java.lang.String,Public,Y,N);
Method(getNext,int,Private,Y,N);
Method(getSourceStringEnd,int,Private,Y,N);
Method(printSourceString,int,Private,Y,N);
Method(printSourceNumber,int,Private,Y,N);
Parameter(markFunctionStart,int,);
Parameter(markFunctionEnd,int,);
Parameter(addToken,int,);
Parameter(addEOL,int,);
Parameter(addName,java.lang.String,);
Parameter(addString,java.lang.String,);
Parameter(addRegexp,java.lang.String,);
Parameter(addRegexp,java.lang.String,);
Parameter(addNumber,double,);
Parameter(appendString,java.lang.String,);
Parameter(append,char,);
Parameter(increaseSourceCapacity,int,);
Parameter(sourceToString,int,);
Parameter(decompile,java.lang.String,);
Parameter(decompile,int,);
Parameter(decompile,org.mozilla.javascript.UintMap,);
Parameter(getNext,java.lang.String,);
Parameter(getNext,int,);
Parameter(getNext,int,);
Parameter(getSourceStringEnd,java.lang.String,);
Parameter(getSourceStringEnd,int,);
Parameter(printSourceString,java.lang.String,);
Parameter(printSourceString,int,);
Parameter(printSourceString,boolean,);
Parameter(printSourceString,java.lang.StringBuffer,);
Parameter(printSourceNumber,java.lang.String,);
Parameter(printSourceNumber,int,);
Parameter(printSourceNumber,java.lang.StringBuffer,);
Call(METHOD,org.mozilla.javascript.Decompiler,getEncodedSource --> sourceToString,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,markFunctionStart --> getCurrentOffset,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,markFunctionStart --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,markFunctionStart --> append,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,markFunctionEnd --> getCurrentOffset,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,markFunctionEnd --> append,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,addToken --> append,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,addEOL --> append,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,addName --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,addName --> appendString,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,addString --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,addString --> appendString,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,addRegexp --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,addRegexp --> appendString,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,addNumber --> addToken,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,addNumber --> append,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,appendString --> increaseSourceCapacity,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,append --> increaseSourceCapacity,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,decompile --> printSourceString,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,decompile --> printSourceNumber,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,decompile --> getNext,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,decompile --> getSourceStringEnd,org.mozilla.javascript.Decompiler,);
Call(METHOD,org.mozilla.javascript.Decompiler,getSourceStringEnd --> printSourceString,org.mozilla.javascript.Decompiler,);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,<init> --> sourceBuffer,org.mozilla.javascript.Decompiler,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,getCurrentOffset --> sourceTop,org.mozilla.javascript.Decompiler,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,appendString --> sourceTop,org.mozilla.javascript.Decompiler,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,appendString --> sourceBuffer,org.mozilla.javascript.Decompiler,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,appendString --> sourceTop,org.mozilla.javascript.Decompiler,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,append --> sourceTop,org.mozilla.javascript.Decompiler,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,append --> sourceBuffer,org.mozilla.javascript.Decompiler,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,append --> sourceTop,org.mozilla.javascript.Decompiler,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,increaseSourceCapacity --> sourceBuffer,org.mozilla.javascript.Decompiler,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,increaseSourceCapacity --> sourceTop,org.mozilla.javascript.Decompiler,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,increaseSourceCapacity --> sourceBuffer,org.mozilla.javascript.Decompiler,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,sourceToString --> sourceTop,org.mozilla.javascript.Decompiler,READ);
Call(ATTRIBUTE,org.mozilla.javascript.Decompiler,sourceToString --> sourceBuffer,org.mozilla.javascript.Decompiler,READ);
Call(METHOD,org.mozilla.javascript.Decompiler,addNumber --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Decompiler,increaseSourceCapacity --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Decompiler,sourceToString --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.Decompiler,decompile --> getInt,org.mozilla.javascript.UintMap,);
Call(METHOD,org.mozilla.javascript.Decompiler,decompile --> name,org.mozilla.javascript.Token,);
Call(METHOD,org.mozilla.javascript.Decompiler,printSourceString --> escapeString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.Decompiler,printSourceNumber --> numberToString,org.mozilla.javascript.ScriptRuntime,);
EndClass 252
StartClass 253
Class(org.mozilla.javascript.JavaMembers,N,N,NA);
Attribute(cl,java.lang.Class,Private,N,N,);
Attribute(members,java.util.Map,Private,N,N,java.lang.String;java.lang.Object);
Attribute(fieldAndMethods,java.util.Map,Private,N,N,java.lang.String;org.mozilla.javascript.FieldAndMethods);
Attribute(staticMembers,java.util.Map,Private,N,N,java.lang.String;java.lang.Object);
Attribute(staticFieldAndMethods,java.util.Map,Private,N,N,java.lang.String;org.mozilla.javascript.FieldAndMethods);
Attribute(ctors,org.mozilla.javascript.NativeJavaMethod,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(has,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(put,void,Public,N,N);
Method(getIds,java.lang.Object[],Public,N,N);
Method(javaSignature,java.lang.String,Public,Y,N);
Method(liveConnectSignature,java.lang.String,Public,Y,N);
Method(findExplicitFunction,org.mozilla.javascript.MemberBox,Private,N,N);
Method(getExplicitFunction,java.lang.Object,Private,N,N);
Method(discoverAccessibleMethods,java.lang.reflect.Method[],Private,Y,N);
Method(discoverAccessibleMethods$2,void,Private,Y,N);
Method(reflect,void,Private,N,N);
Method(getAccessibleConstructors,java.lang.reflect.Constructor[],Private,N,N);
Method(getAccessibleFields,java.lang.reflect.Field[],Private,N,N);
Method(findGetter,org.mozilla.javascript.MemberBox,Private,N,N);
Method(extractGetMethod,org.mozilla.javascript.MemberBox,Private,Y,N);
Method(extractSetMethod,org.mozilla.javascript.MemberBox,Private,Y,N);
Method(extractSetMethod$2,org.mozilla.javascript.MemberBox,Private,Y,N);
Method(getFieldAndMethodsObjects,java.util.Map,Public,N,N);
Method(lookupClass,org.mozilla.javascript.JavaMembers,Public,Y,N);
Method(reportMemberNotFound,java.lang.RuntimeException,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,java.lang.Class,);
Parameter(<init>$2,org.mozilla.javascript.Scriptable,);
Parameter(<init>$2,java.lang.Class,);
Parameter(<init>$2,boolean,);
Parameter(has,java.lang.String,);
Parameter(has,boolean,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(get,java.lang.String,);
Parameter(get,java.lang.Object,);
Parameter(get,boolean,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.String,);
Parameter(put,java.lang.Object,);
Parameter(put,java.lang.Object,);
Parameter(put,boolean,);
Parameter(getIds,boolean,);
Parameter(javaSignature,java.lang.Class,);
Parameter(liveConnectSignature,java.lang.Class[],);
Parameter(findExplicitFunction,java.lang.String,);
Parameter(findExplicitFunction,boolean,);
Parameter(getExplicitFunction,org.mozilla.javascript.Scriptable,);
Parameter(getExplicitFunction,java.lang.String,);
Parameter(getExplicitFunction,java.lang.Object,);
Parameter(getExplicitFunction,boolean,);
Parameter(discoverAccessibleMethods,java.lang.Class,);
Parameter(discoverAccessibleMethods,boolean,);
Parameter(discoverAccessibleMethods,boolean,);
Parameter(discoverAccessibleMethods$2,java.lang.Class,org.mozilla.javascript.JavaMembers$MethodSignature;java.lang.reflect.Method);
Parameter(discoverAccessibleMethods$2,java.util.Map,);
Parameter(discoverAccessibleMethods$2,boolean,);
Parameter(discoverAccessibleMethods$2,boolean,);
Parameter(reflect,org.mozilla.javascript.Scriptable,);
Parameter(reflect,boolean,);
Parameter(reflect,boolean,);
Parameter(getAccessibleConstructors,boolean,);
Parameter(getAccessibleFields,boolean,);
Parameter(getAccessibleFields,boolean,);
Parameter(findGetter,boolean,java.lang.String;java.lang.Object);
Parameter(findGetter,java.util.Map,);
Parameter(findGetter,java.lang.String,);
Parameter(findGetter,java.lang.String,);
Parameter(extractGetMethod,org.mozilla.javascript.MemberBox[],);
Parameter(extractGetMethod,boolean,);
Parameter(extractSetMethod,java.lang.Class,);
Parameter(extractSetMethod,org.mozilla.javascript.MemberBox[],);
Parameter(extractSetMethod,boolean,);
Parameter(extractSetMethod$2,org.mozilla.javascript.MemberBox[],);
Parameter(extractSetMethod$2,boolean,);
Parameter(getFieldAndMethodsObjects,org.mozilla.javascript.Scriptable,java.lang.String;org.mozilla.javascript.FieldAndMethods);
Parameter(getFieldAndMethodsObjects,java.lang.Object,);
Parameter(getFieldAndMethodsObjects,boolean,);
Parameter(lookupClass,org.mozilla.javascript.Scriptable,);
Parameter(lookupClass,java.lang.Class,);
Parameter(lookupClass,java.lang.Class,);
Parameter(lookupClass,boolean,);
Parameter(reportMemberNotFound,java.lang.String,);
Composition(org.mozilla.javascript.NativeJavaMethod);
Call(METHOD,org.mozilla.javascript.JavaMembers,<init> --> <init>$2,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,<init>$2 --> reflect,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,has --> findExplicitFunction,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,get --> getExplicitFunction,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,put --> reportMemberNotFound,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,liveConnectSignature --> javaSignature,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,findExplicitFunction --> liveConnectSignature,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,getExplicitFunction --> findExplicitFunction,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,discoverAccessibleMethods --> discoverAccessibleMethods$2,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,discoverAccessibleMethods$2 --> discoverAccessibleMethods$2,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> discoverAccessibleMethods,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> getAccessibleFields,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> findGetter,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> extractSetMethod,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> extractSetMethod$2,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> getAccessibleConstructors,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,findGetter --> extractGetMethod,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.JavaMembers,lookupClass --> <init>$2,org.mozilla.javascript.JavaMembers,);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,<init>$2 --> members,org.mozilla.javascript.JavaMembers,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,<init>$2 --> staticMembers,org.mozilla.javascript.JavaMembers,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,<init>$2 --> cl,org.mozilla.javascript.JavaMembers,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,has --> staticMembers,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,has --> members,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,get --> staticMembers,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,get --> members,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,put --> staticMembers,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,put --> members,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getIds --> staticMembers,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getIds --> members,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,findExplicitFunction --> staticMembers,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,findExplicitFunction --> members,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,findExplicitFunction --> ctors,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getExplicitFunction --> staticMembers,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getExplicitFunction --> members,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,reflect --> cl,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,reflect --> staticMembers,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,reflect --> members,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,reflect --> staticFieldAndMethods,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,reflect --> fieldAndMethods,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,reflect --> staticFieldAndMethods,org.mozilla.javascript.JavaMembers,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,reflect --> fieldAndMethods,org.mozilla.javascript.JavaMembers,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,reflect --> ctors,org.mozilla.javascript.JavaMembers,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getAccessibleConstructors --> cl,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getAccessibleFields --> cl,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getFieldAndMethodsObjects --> staticFieldAndMethods,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getFieldAndMethodsObjects --> fieldAndMethods,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,reportMemberNotFound --> cl,org.mozilla.javascript.JavaMembers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,get --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,get --> getter,org.mozilla.javascript.BeanProperty,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,get --> emptyArgs,org.mozilla.javascript.Context,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,put --> field,org.mozilla.javascript.FieldAndMethods,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,put --> setter,org.mozilla.javascript.BeanProperty,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,put --> setters,org.mozilla.javascript.BeanProperty,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,put --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,findExplicitFunction --> methods,org.mozilla.javascript.NativeJavaMethod,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,findExplicitFunction --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getExplicitFunction --> methods,org.mozilla.javascript.NativeJavaMethod,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,reflect --> methods,org.mozilla.javascript.NativeJavaMethod,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getAccessibleConstructors --> ClassClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,findGetter --> methods,org.mozilla.javascript.NativeJavaMethod,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,extractGetMethod --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,extractSetMethod --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,extractSetMethod$2 --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getFieldAndMethodsObjects --> methods,org.mozilla.javascript.NativeJavaMethod,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getFieldAndMethodsObjects --> field,org.mozilla.javascript.FieldAndMethods,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,getFieldAndMethodsObjects --> javaObject,org.mozilla.javascript.FieldAndMethods,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers,lookupClass --> ObjectClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(METHOD,org.mozilla.javascript.JavaMembers,<init>$2 --> getGlobal,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.JavaMembers,<init>$2 --> enterContext,org.mozilla.javascript.ContextFactory,);
Call(METHOD,org.mozilla.javascript.JavaMembers,<init>$2 --> getClassShutter,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,<init>$2 --> visibleToScripts,org.mozilla.javascript.ClassShutter,);
Call(METHOD,org.mozilla.javascript.JavaMembers,<init>$2 --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,<init>$2 --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,<init>$2 --> exit,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,get --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,get --> invoke,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,get --> method,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,get --> throwAsScriptRuntimeEx,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,get --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.JavaMembers,get --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,get --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.JavaMembers,put --> jsToJava,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,put --> invoke,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,put --> throwAsScriptRuntimeEx,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,put --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,put --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.JavaMembers,put --> call,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.JavaMembers,put --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,put --> reportRuntimeError3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,getExplicitFunction --> getFunctionPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.JavaMembers,getExplicitFunction --> isCtor,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,getExplicitFunction --> <init>,org.mozilla.javascript.NativeJavaConstructor,);
Call(METHOD,org.mozilla.javascript.JavaMembers,getExplicitFunction --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.JavaMembers,getExplicitFunction --> getName,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,getExplicitFunction --> <init>$3,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.JavaMembers,discoverAccessibleMethods$2 --> <init>$2,org.mozilla.javascript.JavaMembers$MethodSignature,);
Call(METHOD,org.mozilla.javascript.JavaMembers,discoverAccessibleMethods$2 --> reportWarning$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> <init>,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> add,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> <init>,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> size,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> get,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> <init>,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> setFunctionProtoAndParent,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> <init>,org.mozilla.javascript.FieldAndMethods,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> reportWarning$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> method,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> <init>,org.mozilla.javascript.BeanProperty,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> <init>$2,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reflect --> <init>$2,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.JavaMembers,getAccessibleConstructors --> reportWarning$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.JavaMembers,extractGetMethod --> isStatic,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,extractGetMethod --> method,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,extractSetMethod --> isStatic,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,extractSetMethod --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.JavaMembers,extractSetMethod$2 --> isStatic,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,extractSetMethod$2 --> method,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.JavaMembers,getFieldAndMethodsObjects --> <init>,org.mozilla.javascript.FieldAndMethods,);
Call(METHOD,org.mozilla.javascript.JavaMembers,lookupClass --> get,org.mozilla.javascript.ClassCache,);
Call(METHOD,org.mozilla.javascript.JavaMembers,lookupClass --> getClassCacheMap,org.mozilla.javascript.ClassCache,);
Call(METHOD,org.mozilla.javascript.JavaMembers,lookupClass --> getAssociatedScope,org.mozilla.javascript.ClassCache,);
Call(METHOD,org.mozilla.javascript.JavaMembers,lookupClass --> isCachingEnabled,org.mozilla.javascript.ClassCache,);
Call(METHOD,org.mozilla.javascript.JavaMembers,reportMemberNotFound --> reportRuntimeError2,org.mozilla.javascript.Context,);
EndClass 253
StartClass 254
Class(org.mozilla.javascript.NativeJavaArray,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(array,java.lang.Object,Public,N,N,);
Attribute(length,int,Public,N,N,);
Attribute(cls,java.lang.Class,Public,N,N,);
Method(getClassName,java.lang.String,Public,N,N);
Method(wrap,org.mozilla.javascript.NativeJavaArray,Public,Y,N);
Method(unwrap,java.lang.Object,Public,N,N);
Method(<init>,void,Public,N,N);
Method(has,boolean,Public,N,N);
Method(has$2,boolean,Public,N,N);
Method(get,java.lang.Object,Public,N,N);
Method(get$2,java.lang.Object,Public,N,N);
Method(put,void,Public,N,N);
Method(put$2,void,Public,N,N);
Method(getDefaultValue,java.lang.Object,Public,N,N);
Method(getIds,java.lang.Object[],Public,N,N);
Method(hasInstance,boolean,Public,N,N);
Method(getPrototype,org.mozilla.javascript.Scriptable,Public,N,N);
Parameter(wrap,org.mozilla.javascript.Scriptable,);
Parameter(wrap,java.lang.Object,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,java.lang.Object,);
Parameter(has,java.lang.String,);
Parameter(has,org.mozilla.javascript.Scriptable,);
Parameter(has$2,int,);
Parameter(has$2,org.mozilla.javascript.Scriptable,);
Parameter(get,java.lang.String,);
Parameter(get,org.mozilla.javascript.Scriptable,);
Parameter(get$2,int,);
Parameter(get$2,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.String,);
Parameter(put,org.mozilla.javascript.Scriptable,);
Parameter(put,java.lang.Object,);
Parameter(put$2,int,);
Parameter(put$2,org.mozilla.javascript.Scriptable,);
Parameter(put$2,java.lang.Object,);
Parameter(getDefaultValue,java.lang.Class,);
Parameter(hasInstance,org.mozilla.javascript.Scriptable,);
SuperClass(org.mozilla.javascript.NativeJavaObject);
Generalization(org.mozilla.javascript.NativeJavaObject);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,wrap --> <init>,org.mozilla.javascript.NativeJavaArray,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,get --> getPrototype,org.mozilla.javascript.NativeJavaArray,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,unwrap --> array,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,<init> --> array,org.mozilla.javascript.NativeJavaArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,<init> --> length,org.mozilla.javascript.NativeJavaArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,<init> --> cls,org.mozilla.javascript.NativeJavaArray,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,has$2 --> length,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,get --> length,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,get --> array,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,get$2 --> length,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,get$2 --> array,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,get$2 --> cls,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,put$2 --> length,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,put$2 --> array,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,put$2 --> cls,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,getDefaultValue --> array,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,getIds --> length,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,hasInstance --> cls,org.mozilla.javascript.NativeJavaArray,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,<init> --> ObjectClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,get --> NOT_FOUND,org.mozilla.javascript.Scriptable,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,get$2 --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,getDefaultValue --> StringClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,getDefaultValue --> BooleanClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,getDefaultValue --> NumberClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,getDefaultValue --> NaNobj,org.mozilla.javascript.ScriptRuntime,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,getPrototype --> prototype,org.mozilla.javascript.NativeJavaObject,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaArray,getPrototype --> prototype,org.mozilla.javascript.NativeJavaObject,WRITE);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,<init> --> <init>$2,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,has --> has,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,get --> get,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,get --> hasProperty,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,get --> reportRuntimeError2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,get$2 --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,get$2 --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,get$2 --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,put --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,put$2 --> jsToJava,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,put$2 --> reportRuntimeError2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,hasInstance --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,getPrototype --> getParentScope,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaArray,getPrototype --> getArrayPrototype,org.mozilla.javascript.ScriptableObject,);
EndClass 254
StartClass 255
Class(org.mozilla.javascript.ast.ErrorCollector,N,N,Public);
Attribute(errors,java.util.List,Private,N,N,org.mozilla.javascript.ast.ParseProblem);
Method(<init>,void,Public,N,N);
Method(warning,void,Public,N,N);
Method(warning$2,void,Public,N,N);
Method(error,void,Public,N,N);
Method(error$2,void,Public,N,N);
Method(runtimeError,org.mozilla.javascript.EvaluatorException,Public,N,N);
Method(getErrors,java.util.List,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(warning,java.lang.String,);
Parameter(warning,java.lang.String,);
Parameter(warning,int,);
Parameter(warning,java.lang.String,);
Parameter(warning,int,);
Parameter(warning$2,java.lang.String,);
Parameter(warning$2,java.lang.String,);
Parameter(warning$2,int,);
Parameter(warning$2,int,);
Parameter(error,java.lang.String,);
Parameter(error,java.lang.String,);
Parameter(error,int,);
Parameter(error,java.lang.String,);
Parameter(error,int,);
Parameter(error$2,java.lang.String,);
Parameter(error$2,java.lang.String,);
Parameter(error$2,int,);
Parameter(error$2,int,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,int,);
Parameter(runtimeError,java.lang.String,);
Parameter(runtimeError,int,);
Realization(org.mozilla.javascript.ast.IdeErrorReporter);
Composition(org.mozilla.javascript.ast.ParseProblem);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorCollector,<init> --> errors,org.mozilla.javascript.ast.ErrorCollector,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorCollector,warning$2 --> errors,org.mozilla.javascript.ast.ErrorCollector,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorCollector,error$2 --> errors,org.mozilla.javascript.ast.ErrorCollector,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorCollector,getErrors --> errors,org.mozilla.javascript.ast.ErrorCollector,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorCollector,toString --> errors,org.mozilla.javascript.ast.ErrorCollector,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorCollector,warning$2 --> Warning,org.mozilla.javascript.ast.ParseProblem$Type,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ErrorCollector,error$2 --> Error,org.mozilla.javascript.ast.ParseProblem$Type,READ);
Call(METHOD,org.mozilla.javascript.ast.ErrorCollector,warning$2 --> <init>,org.mozilla.javascript.ast.ParseProblem,);
Call(METHOD,org.mozilla.javascript.ast.ErrorCollector,error$2 --> <init>,org.mozilla.javascript.ast.ParseProblem,);
Call(METHOD,org.mozilla.javascript.ast.ErrorCollector,toString --> toString,org.mozilla.javascript.ast.ParseProblem,);
EndClass 255
StartClass 256
Class(org.mozilla.javascript.ast.AstRoot$1,N,N,NA);
Attribute(this$0,org.mozilla.javascript.ast.AstRoot,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(visit,boolean,Public,N,N);
Parameter(<init>,org.mozilla.javascript.ast.AstRoot,);
Parameter(visit,org.mozilla.javascript.ast.AstNode,);
Realization(org.mozilla.javascript.ast.NodeVisitor);
Composition(org.mozilla.javascript.ast.AstRoot);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstRoot$1,<init> --> this$0,org.mozilla.javascript.ast.AstRoot$1,WRITE);
Call(METHOD,org.mozilla.javascript.ast.AstRoot$1,visit --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot$1,visit --> getParent,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstRoot$1,visit --> toSource,org.mozilla.javascript.ast.AstNode,);
EndClass 256
StartClass 257
Class(org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,N,N,Public);
Attribute(buffer,java.lang.StringBuilder,Private,N,N,);
Attribute(DEBUG_INDENT,int,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(makeIndent,java.lang.String,Private,N,N);
Method(visit,boolean,Public,N,N);
Parameter(<init>,java.lang.StringBuilder,);
Parameter(makeIndent,int,);
Parameter(visit,org.mozilla.javascript.ast.AstNode,);
Realization(org.mozilla.javascript.ast.NodeVisitor);
Call(METHOD,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,visit --> makeIndent,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,<init> --> buffer,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,toString --> buffer,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,visit --> buffer,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,READ);
Call(METHOD,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,visit --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,visit --> typeToName,org.mozilla.javascript.Token,);
Call(METHOD,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,visit --> getAbsolutePosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,visit --> depth,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,visit --> getPosition,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,visit --> getLength,org.mozilla.javascript.ast.AstNode,);
Call(METHOD,org.mozilla.javascript.ast.AstNode$DebugPrintVisitor,visit --> getIdentifier,org.mozilla.javascript.ast.Name,);
EndClass 257
StartClass 258
Class(org.mozilla.javascript.ast.AstNode$PositionComparator,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Method(<init>,void,Public,N,N);
Method(compare,int,Public,N,N);
Method(compare$2,int,Public,N,N);
Parameter(compare,org.mozilla.javascript.ast.AstNode,);
Parameter(compare,org.mozilla.javascript.ast.AstNode,);
Parameter(compare$2,java.lang.Object,);
Parameter(compare$2,java.lang.Object,);
Call(METHOD,org.mozilla.javascript.ast.AstNode$PositionComparator,compare$2 --> compare,org.mozilla.javascript.ast.AstNode$PositionComparator,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.AstNode$PositionComparator,compare --> position,org.mozilla.javascript.ast.AstNode,READ);
EndClass 258
StartClass 259
Class(org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,N,N,NA);
Attribute(superClass,java.lang.Class,Public,N,N,);
Attribute(interfaces,java.lang.Class[],Public,N,N,);
Attribute(names,org.mozilla.javascript.ObjToIntMap,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>,java.lang.Class,);
Parameter(<init>,java.lang.Class[],);
Parameter(<init>,org.mozilla.javascript.ObjToIntMap,);
Parameter(equals,java.lang.Object,);
Composition(org.mozilla.javascript.ObjToIntMap);
Call(ATTRIBUTE,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,<init> --> superClass,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,<init> --> interfaces,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,<init> --> names,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,equals --> superClass,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,equals --> interfaces,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,equals --> names,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,hashCode --> superClass,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,hashCode --> interfaces,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,hashCode --> names,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,READ);
Call(METHOD,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,equals --> size,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,equals --> <init>,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,equals --> start,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,equals --> done,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,equals --> getKey,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,equals --> getValue,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,equals --> get,org.mozilla.javascript.ObjToIntMap,);
Call(METHOD,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,equals --> next,org.mozilla.javascript.ObjToIntMap$Iterator,);
Call(METHOD,org.mozilla.javascript.JavaAdapter$JavaAdapterSignature,hashCode --> size,org.mozilla.javascript.ObjToIntMap,);
EndClass 259
StartClass 260
Class(org.mozilla.javascript.LazilyLoadedCtor$1,N,N,NA);
Attribute(this$0,org.mozilla.javascript.LazilyLoadedCtor,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.LazilyLoadedCtor,);
Composition(org.mozilla.javascript.LazilyLoadedCtor);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor$1,<init> --> this$0,org.mozilla.javascript.LazilyLoadedCtor$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.LazilyLoadedCtor$1,run --> this$0,org.mozilla.javascript.LazilyLoadedCtor$1,READ);
Call(METHOD,org.mozilla.javascript.LazilyLoadedCtor$1,run --> access$000,org.mozilla.javascript.LazilyLoadedCtor,);
EndClass 260
StartClass 261
Class(org.mozilla.javascript.NativeJSON$StringifyState,N,N,NA);
Attribute(stack,java.util.Stack,Public,N,N,org.mozilla.javascript.Scriptable);
Attribute(indent,java.lang.String,Public,N,N,);
Attribute(gap,java.lang.String,Public,N,N,);
Attribute(replacer,org.mozilla.javascript.Callable,Public,N,N,);
Attribute(propertyList,java.util.List,Public,N,N,java.lang.Object);
Attribute(space,java.lang.Object,Public,N,N,);
Attribute(cx,org.mozilla.javascript.Context,Public,N,N,);
Attribute(scope,org.mozilla.javascript.Scriptable,Public,N,N,);
Method(<init>,void,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Context,java.lang.Object);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,org.mozilla.javascript.Callable,);
Parameter(<init>,java.util.List,);
Parameter(<init>,java.lang.Object,);
Composition(org.mozilla.javascript.Callable);
Composition(org.mozilla.javascript.Context);
Composition(org.mozilla.javascript.Scriptable);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON$StringifyState,<init> --> stack,org.mozilla.javascript.NativeJSON$StringifyState,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON$StringifyState,<init> --> cx,org.mozilla.javascript.NativeJSON$StringifyState,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON$StringifyState,<init> --> scope,org.mozilla.javascript.NativeJSON$StringifyState,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON$StringifyState,<init> --> indent,org.mozilla.javascript.NativeJSON$StringifyState,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON$StringifyState,<init> --> gap,org.mozilla.javascript.NativeJSON$StringifyState,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON$StringifyState,<init> --> replacer,org.mozilla.javascript.NativeJSON$StringifyState,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON$StringifyState,<init> --> propertyList,org.mozilla.javascript.NativeJSON$StringifyState,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJSON$StringifyState,<init> --> space,org.mozilla.javascript.NativeJSON$StringifyState,WRITE);
EndClass 261
StartClass 262
Class(org.mozilla.javascript.json.JsonParser,N,N,Public);
Attribute(cx,org.mozilla.javascript.Context,Private,N,N,);
Attribute(scope,org.mozilla.javascript.Scriptable,Private,N,N,);
Attribute(pos,int,Private,N,N,);
Attribute(length,int,Private,N,N,);
Attribute(src,java.lang.String,Private,N,N,);
Attribute($assertionsDisabled,boolean,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(parseValue,java.lang.Object,Public,N,N);
Method(readValue,java.lang.Object,Private,N,N);
Method(readObject,java.lang.Object,Private,N,N);
Method(readArray,java.lang.Object,Private,N,N);
Method(readString,java.lang.String,Private,N,N);
Method(fromHex,int,Private,N,N);
Method(readNumber,java.lang.Number,Private,N,N);
Method(numberError,org.mozilla.javascript.json.JsonParser$ParseException,Private,N,N);
Method(nextOrNumberError,char,Private,N,N);
Method(readDigits,void,Private,N,N);
Method(readTrue,java.lang.Boolean,Private,N,N);
Method(readFalse,java.lang.Boolean,Private,N,N);
Method(readNull,java.lang.Object,Private,N,N);
Method(consumeWhitespace,void,Private,N,N);
Method(consume,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>,org.mozilla.javascript.Context,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(parseValue,java.lang.String,);
Parameter(fromHex,char,);
Parameter(readNumber,char,);
Parameter(numberError,int,);
Parameter(numberError,int,);
Parameter(nextOrNumberError,int,);
Parameter(consume,char,);
Composition(org.mozilla.javascript.Context);
Composition(org.mozilla.javascript.Scriptable);
Call(METHOD,org.mozilla.javascript.json.JsonParser,parseValue --> readValue,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,parseValue --> consumeWhitespace,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readValue --> consumeWhitespace,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readValue --> readObject,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readValue --> readArray,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readValue --> readTrue,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readValue --> readFalse,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readValue --> readString,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readValue --> readNull,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readValue --> readNumber,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readObject --> consumeWhitespace,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readObject --> readString,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readObject --> consume,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readObject --> readValue,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readArray --> consumeWhitespace,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readArray --> readValue,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readString --> fromHex,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readNumber --> nextOrNumberError,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readNumber --> numberError,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readNumber --> readDigits,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,nextOrNumberError --> numberError,org.mozilla.javascript.json.JsonParser,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,consume --> consumeWhitespace,org.mozilla.javascript.json.JsonParser,);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,<init> --> cx,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,<init> --> scope,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,parseValue --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,parseValue --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,parseValue --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,parseValue --> length,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,parseValue --> src,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readValue --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readValue --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readValue --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readValue --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readObject --> cx,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readObject --> scope,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readObject --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readObject --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readObject --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readObject --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readArray --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readArray --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readArray --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readArray --> cx,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readArray --> scope,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readArray --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readString --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readString --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readString --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readString --> $assertionsDisabled,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readString --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readNumber --> $assertionsDisabled,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readNumber --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readNumber --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readNumber --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readNumber --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,numberError --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,nextOrNumberError --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,nextOrNumberError --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,nextOrNumberError --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,nextOrNumberError --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readDigits --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readDigits --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readDigits --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readDigits --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readTrue --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readTrue --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readTrue --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readTrue --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readFalse --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readFalse --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readFalse --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readFalse --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readNull --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readNull --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readNull --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,readNull --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,consumeWhitespace --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,consumeWhitespace --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,consumeWhitespace --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,consumeWhitespace --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,consume --> pos,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,consume --> length,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,consume --> src,org.mozilla.javascript.json.JsonParser,READ);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,consume --> pos,org.mozilla.javascript.json.JsonParser,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.json.JsonParser,<clinit> --> $assertionsDisabled,org.mozilla.javascript.json.JsonParser,WRITE);
Call(METHOD,org.mozilla.javascript.json.JsonParser,parseValue --> <init>,org.mozilla.javascript.json.JsonParser$ParseException,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readValue --> <init>,org.mozilla.javascript.json.JsonParser$ParseException,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readObject --> newObject,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readObject --> <init>,org.mozilla.javascript.json.JsonParser$ParseException,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readObject --> indexFromString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readObject --> put,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readObject --> put$2,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readArray --> newArray,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readArray --> <init>,org.mozilla.javascript.json.JsonParser$ParseException,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readArray --> newArray$2,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readString --> <init>,org.mozilla.javascript.json.JsonParser$ParseException,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,numberError --> <init>,org.mozilla.javascript.json.JsonParser$ParseException,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readTrue --> <init>,org.mozilla.javascript.json.JsonParser$ParseException,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readFalse --> <init>,org.mozilla.javascript.json.JsonParser$ParseException,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,readNull --> <init>,org.mozilla.javascript.json.JsonParser$ParseException,);
Call(METHOD,org.mozilla.javascript.json.JsonParser,consume --> <init>,org.mozilla.javascript.json.JsonParser$ParseException,);
EndClass 262
StartClass 263
Class(org.mozilla.javascript.json.JsonParser$ParseException,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>$2,java.lang.Exception,);
EndClass 263
StartClass 264
Class(org.mozilla.javascript.v8dtoa.FastDtoaBuilder,N,N,Public);
Attribute(chars,char[],Public,N,Y,);
Attribute(end,int,Public,N,N,);
Attribute(point,int,Public,N,N,);
Attribute(formatted,boolean,Public,N,N,);
Attribute(digits,char[],Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(append,void,Public,N,N);
Method(decreaseLast,void,Public,N,N);
Method(reset,void,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(format,java.lang.String,Public,N,N);
Method(toFixedFormat,void,Private,N,N);
Method(toExponentialFormat,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(append,char,);
Parameter(toFixedFormat,int,);
Parameter(toFixedFormat,int,);
Parameter(toExponentialFormat,int,);
Parameter(toExponentialFormat,int,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,format --> toExponentialFormat,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Call(METHOD,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,format --> toFixedFormat,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,<init> --> chars,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,<init> --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,<init> --> formatted,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,append --> chars,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,append --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,append --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,decreaseLast --> chars,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,decreaseLast --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,reset --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,reset --> formatted,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,toString --> chars,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,toString --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,toString --> point,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,format --> formatted,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,format --> chars,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,format --> point,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,format --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,format --> formatted,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,toFixedFormat --> point,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,toFixedFormat --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,toFixedFormat --> chars,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,toFixedFormat --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,toExponentialFormat --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,toExponentialFormat --> chars,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,toExponentialFormat --> digits,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,toExponentialFormat --> end,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,<clinit> --> digits,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,WRITE);
EndClass 264
StartClass 265
Class(org.mozilla.javascript.v8dtoa.DiyFp,N,N,NA);
Attribute(f,long,Private,N,N,);
Attribute(e,int,Private,N,N,);
Attribute(kSignificandSize,int,Public,Y,Y,);
Attribute(kUint64MSB,long,Public,Y,Y,);
Attribute($assertionsDisabled,boolean,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(uint64_gte,boolean,Private,Y,N);
Method(subtract,void,Public,N,N);
Method(minus,org.mozilla.javascript.v8dtoa.DiyFp,Public,Y,N);
Method(multiply,void,Public,N,N);
Method(times,org.mozilla.javascript.v8dtoa.DiyFp,Public,Y,N);
Method(normalize,void,Public,N,N);
Method(normalize$2,org.mozilla.javascript.v8dtoa.DiyFp,Public,Y,N);
Method(f,long,Public,N,N);
Method(e,int,Public,N,N);
Method(setF,void,Public,N,N);
Method(setE,void,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(<init>$2,long,);
Parameter(<init>$2,int,);
Parameter(uint64_gte,long,);
Parameter(uint64_gte,long,);
Parameter(subtract,org.mozilla.javascript.v8dtoa.DiyFp,);
Parameter(minus,org.mozilla.javascript.v8dtoa.DiyFp,);
Parameter(minus,org.mozilla.javascript.v8dtoa.DiyFp,);
Parameter(multiply,org.mozilla.javascript.v8dtoa.DiyFp,);
Parameter(times,org.mozilla.javascript.v8dtoa.DiyFp,);
Parameter(times,org.mozilla.javascript.v8dtoa.DiyFp,);
Parameter(normalize$2,org.mozilla.javascript.v8dtoa.DiyFp,);
Parameter(setF,long,);
Parameter(setE,int,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DiyFp,subtract --> uint64_gte,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DiyFp,minus --> <init>$2,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DiyFp,minus --> subtract,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DiyFp,times --> <init>$2,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DiyFp,times --> multiply,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DiyFp,normalize$2 --> <init>$2,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DiyFp,normalize$2 --> normalize,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,<init> --> f,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,<init> --> e,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,<init>$2 --> f,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,<init>$2 --> e,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,subtract --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,subtract --> e,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,subtract --> f,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,subtract --> f,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,minus --> f,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,minus --> e,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,multiply --> f,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,multiply --> e,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,multiply --> e,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,multiply --> f,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,times --> f,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,times --> e,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,normalize --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,normalize --> f,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,normalize --> e,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,normalize --> f,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,normalize --> e,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,normalize$2 --> f,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,normalize$2 --> e,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,f --> f,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,e --> e,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,setF --> f,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,setE --> e,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,toString --> f,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,toString --> e,org.mozilla.javascript.v8dtoa.DiyFp,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DiyFp,<clinit> --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.DiyFp,WRITE);
EndClass 265
StartClass 266
Class(org.mozilla.javascript.v8dtoa.CachedPowers,N,N,Public);
Attribute(kD_1_LOG2_10,double,Public,Y,Y,);
Attribute(CACHED_POWERS_SPACING,int,Public,Y,Y,);
Attribute(CACHED_POWERS,org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower[],Public,Y,Y,);
Attribute(GRISU_CACHE_MAX_DISTANCE,int,Public,Y,Y,);
Attribute(GRISU_CACHE_OFFSET,int,Public,Y,Y,);
Attribute($assertionsDisabled,boolean,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(getCachedPower,int,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(getCachedPower,int,);
Parameter(getCachedPower,int,);
Parameter(getCachedPower,int,);
Parameter(getCachedPower,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.CachedPowers,getCachedPower --> CACHED_POWERS,org.mozilla.javascript.v8dtoa.CachedPowers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.CachedPowers,getCachedPower --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.CachedPowers,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.CachedPowers,<clinit> --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.CachedPowers,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.CachedPowers,<clinit> --> CACHED_POWERS,org.mozilla.javascript.v8dtoa.CachedPowers,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.CachedPowers,getCachedPower --> significand,org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.CachedPowers,getCachedPower --> binaryExponent,org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.CachedPowers,getCachedPower --> decimalExponent,org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower,READ);
Call(METHOD,org.mozilla.javascript.v8dtoa.CachedPowers,getCachedPower --> setF,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.CachedPowers,getCachedPower --> setE,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.CachedPowers,getCachedPower --> e,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.CachedPowers,<clinit> --> <init>,org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower,);
EndClass 266
StartClass 267
Class(org.mozilla.javascript.v8dtoa.DoubleHelper,N,N,Public);
Attribute(kSignMask,long,Public,Y,Y,);
Attribute(kExponentMask,long,Public,Y,Y,);
Attribute(kSignificandMask,long,Public,Y,Y,);
Attribute(kHiddenBit,long,Public,Y,Y,);
Attribute(kSignificandSize,int,Private,Y,Y,);
Attribute(kExponentBias,int,Private,Y,Y,);
Attribute(kDenormalExponent,int,Private,Y,Y,);
Attribute($assertionsDisabled,boolean,Public,Y,Y,);
Method(<init>,void,Public,N,N);
Method(asDiyFp,org.mozilla.javascript.v8dtoa.DiyFp,Public,Y,N);
Method(asNormalizedDiyFp,org.mozilla.javascript.v8dtoa.DiyFp,Public,Y,N);
Method(exponent,int,Public,Y,N);
Method(significand,long,Public,Y,N);
Method(isDenormal,boolean,Public,Y,N);
Method(isSpecial,boolean,Public,Y,N);
Method(isNan,boolean,Public,Y,N);
Method(isInfinite,boolean,Public,Y,N);
Method(sign,int,Public,Y,N);
Method(normalizedBoundaries,void,Public,Y,N);
Method(<clinit>,void,Public,Y,N);
Parameter(asDiyFp,long,);
Parameter(asNormalizedDiyFp,long,);
Parameter(exponent,long,);
Parameter(significand,long,);
Parameter(isDenormal,long,);
Parameter(isSpecial,long,);
Parameter(isNan,long,);
Parameter(isInfinite,long,);
Parameter(sign,long,);
Parameter(normalizedBoundaries,long,);
Parameter(normalizedBoundaries,org.mozilla.javascript.v8dtoa.DiyFp,);
Parameter(normalizedBoundaries,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,asDiyFp --> isSpecial,org.mozilla.javascript.v8dtoa.DoubleHelper,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,asDiyFp --> significand,org.mozilla.javascript.v8dtoa.DoubleHelper,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,asDiyFp --> exponent,org.mozilla.javascript.v8dtoa.DoubleHelper,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,asNormalizedDiyFp --> significand,org.mozilla.javascript.v8dtoa.DoubleHelper,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,asNormalizedDiyFp --> exponent,org.mozilla.javascript.v8dtoa.DoubleHelper,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,exponent --> isDenormal,org.mozilla.javascript.v8dtoa.DoubleHelper,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,significand --> isDenormal,org.mozilla.javascript.v8dtoa.DoubleHelper,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,normalizedBoundaries --> asDiyFp,org.mozilla.javascript.v8dtoa.DoubleHelper,);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DoubleHelper,asDiyFp --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.DoubleHelper,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DoubleHelper,asNormalizedDiyFp --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.DoubleHelper,READ);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.DoubleHelper,<clinit> --> $assertionsDisabled,org.mozilla.javascript.v8dtoa.DoubleHelper,WRITE);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,asDiyFp --> <init>$2,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,asNormalizedDiyFp --> <init>$2,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,normalizedBoundaries --> f,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,normalizedBoundaries --> setF,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,normalizedBoundaries --> e,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,normalizedBoundaries --> setE,org.mozilla.javascript.v8dtoa.DiyFp,);
Call(METHOD,org.mozilla.javascript.v8dtoa.DoubleHelper,normalizedBoundaries --> normalize,org.mozilla.javascript.v8dtoa.DiyFp,);
EndClass 267
StartClass 268
Class(org.mozilla.javascript.NativeIterator$WrappedJavaIterator,N,N,Public);
Attribute(iterator,java.util.Iterator,Private,N,N,);
Attribute(scope,org.mozilla.javascript.Scriptable,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(next,java.lang.Object,Public,N,N);
Method(__iterator__,java.lang.Object,Public,N,N);
Parameter(<init>,java.util.Iterator,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(__iterator__,boolean,);
Composition(org.mozilla.javascript.Scriptable);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator$WrappedJavaIterator,<init> --> iterator,org.mozilla.javascript.NativeIterator$WrappedJavaIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator$WrappedJavaIterator,<init> --> scope,org.mozilla.javascript.NativeIterator$WrappedJavaIterator,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator$WrappedJavaIterator,next --> iterator,org.mozilla.javascript.NativeIterator$WrappedJavaIterator,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeIterator$WrappedJavaIterator,next --> scope,org.mozilla.javascript.NativeIterator$WrappedJavaIterator,READ);
Call(METHOD,org.mozilla.javascript.NativeIterator$WrappedJavaIterator,next --> getStopIterationObject,org.mozilla.javascript.NativeIterator,);
Call(METHOD,org.mozilla.javascript.NativeIterator$WrappedJavaIterator,next --> <init>$2,org.mozilla.javascript.JavaScriptException,);
EndClass 268
StartClass 269
Class(org.mozilla.javascript.NativeGenerator$GeneratorClosedException,N,N,Public);
Attribute(serialVersionUID,long,Private,Y,Y,);
Method(<init>,void,Public,N,N);
EndClass 269
StartClass 270
Class(org.mozilla.javascript.NativeGenerator$CloseGeneratorAction,N,N,NA);
Attribute(generator,org.mozilla.javascript.NativeGenerator,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(run,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeGenerator,);
Parameter(run,org.mozilla.javascript.Context,);
Realization(org.mozilla.javascript.ContextAction);
Composition(org.mozilla.javascript.NativeGenerator);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction,<init> --> generator,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction,run --> generator,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction,READ);
Call(METHOD,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction,run --> getTopLevelScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction,run --> <init>,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction$1,);
Call(METHOD,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction,run --> doTopCall,org.mozilla.javascript.ScriptRuntime,);
EndClass 270
StartClass 271
Class(org.mozilla.javascript.NodeTransformer,N,N,Public);
Attribute(loops,org.mozilla.javascript.ObjArray,Private,N,N,);
Attribute(loopEnds,org.mozilla.javascript.ObjArray,Private,N,N,);
Attribute(hasFinally,boolean,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(transform,void,Public,N,N);
Method(transformCompilationUnit,void,Private,N,N);
Method(transformCompilationUnit_r,void,Private,N,N);
Method(visitNew,void,Protected,N,N);
Method(visitCall,void,Protected,N,N);
Method(visitLet,org.mozilla.javascript.Node,Protected,N,N);
Method(addBeforeCurrent,org.mozilla.javascript.Node,Private,Y,N);
Method(replaceCurrent,org.mozilla.javascript.Node,Private,Y,N);
Parameter(transform,org.mozilla.javascript.ast.ScriptNode,);
Parameter(transformCompilationUnit,org.mozilla.javascript.ast.ScriptNode,);
Parameter(transformCompilationUnit_r,org.mozilla.javascript.ast.ScriptNode,);
Parameter(transformCompilationUnit_r,org.mozilla.javascript.Node,);
Parameter(transformCompilationUnit_r,org.mozilla.javascript.ast.Scope,);
Parameter(transformCompilationUnit_r,boolean,);
Parameter(transformCompilationUnit_r,boolean,);
Parameter(visitNew,org.mozilla.javascript.Node,);
Parameter(visitNew,org.mozilla.javascript.ast.ScriptNode,);
Parameter(visitCall,org.mozilla.javascript.Node,);
Parameter(visitCall,org.mozilla.javascript.ast.ScriptNode,);
Parameter(visitLet,boolean,);
Parameter(visitLet,org.mozilla.javascript.Node,);
Parameter(visitLet,org.mozilla.javascript.Node,);
Parameter(visitLet,org.mozilla.javascript.Node,);
Parameter(addBeforeCurrent,org.mozilla.javascript.Node,);
Parameter(addBeforeCurrent,org.mozilla.javascript.Node,);
Parameter(addBeforeCurrent,org.mozilla.javascript.Node,);
Parameter(addBeforeCurrent,org.mozilla.javascript.Node,);
Parameter(replaceCurrent,org.mozilla.javascript.Node,);
Parameter(replaceCurrent,org.mozilla.javascript.Node,);
Parameter(replaceCurrent,org.mozilla.javascript.Node,);
Parameter(replaceCurrent,org.mozilla.javascript.Node,);
Composition(org.mozilla.javascript.ObjArray);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transform --> transformCompilationUnit,org.mozilla.javascript.NodeTransformer,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transform --> transform,org.mozilla.javascript.NodeTransformer,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit --> transformCompilationUnit_r,org.mozilla.javascript.NodeTransformer,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> replaceCurrent,org.mozilla.javascript.NodeTransformer,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> transformCompilationUnit_r,org.mozilla.javascript.NodeTransformer,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> addBeforeCurrent,org.mozilla.javascript.NodeTransformer,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> visitCall,org.mozilla.javascript.NodeTransformer,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> visitNew,org.mozilla.javascript.NodeTransformer,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> visitLet,org.mozilla.javascript.NodeTransformer,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> replaceCurrent,org.mozilla.javascript.NodeTransformer,);
Call(ATTRIBUTE,org.mozilla.javascript.NodeTransformer,transformCompilationUnit --> loops,org.mozilla.javascript.NodeTransformer,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NodeTransformer,transformCompilationUnit --> loopEnds,org.mozilla.javascript.NodeTransformer,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NodeTransformer,transformCompilationUnit --> hasFinally,org.mozilla.javascript.NodeTransformer,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> loops,org.mozilla.javascript.NodeTransformer,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> loopEnds,org.mozilla.javascript.NodeTransformer,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> hasFinally,org.mozilla.javascript.NodeTransformer,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> hasFinally,org.mozilla.javascript.NodeTransformer,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> target,org.mozilla.javascript.ast.Jump,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> target,org.mozilla.javascript.ast.Jump,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NodeTransformer,replaceCurrent --> next,org.mozilla.javascript.Node,READ);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transform --> getFunctionCount,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transform --> getFunctionNode,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit --> <init>,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit --> requiresActivation,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit --> flattenSymbolTable,org.mozilla.javascript.ast.ScriptNode,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit --> isInStrictMode,org.mozilla.javascript.ast.AstRoot,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getNext,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getSymbolTable,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> newString$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> setSymbolTable,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> push,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getFinally,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> isEmpty,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> peek,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> pop,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> addResumptionPoint,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> isGenerator,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> putIntProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> size,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> get,org.mozilla.javascript.ObjArray,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> <init>$2,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getLineno,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> <init>$5,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> addChildToFront,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getJumpStatement,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getContinue,org.mozilla.javascript.ast.Jump,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> requiresActivation,org.mozilla.javascript.ast.FunctionNode,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> hasChildren,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> removeChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> <init>$6,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getDefiningScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> setScope,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getLastChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,transformCompilationUnit_r --> getScope,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> getNext,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> removeChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> getType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> <init>,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> getProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> <init>$3,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> <init>$2,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> newNumber,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> addChildToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> getString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> getIndexObject,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> putProp,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> joinScopes,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> newString,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> setScope,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> setType,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> getParentScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> setParentScope,org.mozilla.javascript.ast.Scope,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,visitLet --> addChildrenToBack,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,addBeforeCurrent --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,addBeforeCurrent --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,addBeforeCurrent --> addChildToFront,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,addBeforeCurrent --> getNext,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,addBeforeCurrent --> addChildAfter,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,replaceCurrent --> getFirstChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,replaceCurrent --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,replaceCurrent --> replaceChild,org.mozilla.javascript.Node,);
Call(METHOD,org.mozilla.javascript.NodeTransformer,replaceCurrent --> replaceChildAfter,org.mozilla.javascript.Node,);
EndClass 271
StartClass 272
Class(org.mozilla.javascript.PolicySecurityController$SecureCaller,N,Y,Public);
Method(<init>,void,Public,N,N);
Method(call,java.lang.Object,Public,N,Y);
Parameter(call,org.mozilla.javascript.Callable,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
EndClass 272
StartClass 273
Class(org.mozilla.javascript.NativeObject$ValueCollection$1,N,N,NA);
Attribute(ids,java.lang.Object[],Public,N,N,);
Attribute(key,java.lang.Object,Public,N,N,);
Attribute(index,int,Public,N,N,);
Attribute(this$1,org.mozilla.javascript.NativeObject$ValueCollection,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(hasNext,boolean,Public,N,N);
Method(next,java.lang.Object,Public,N,N);
Method(remove,void,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeObject$ValueCollection,);
Composition(org.mozilla.javascript.NativeObject$ValueCollection);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,<init> --> this$1,org.mozilla.javascript.NativeObject$ValueCollection$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,<init> --> this$1,org.mozilla.javascript.NativeObject$ValueCollection$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,<init> --> ids,org.mozilla.javascript.NativeObject$ValueCollection$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,<init> --> index,org.mozilla.javascript.NativeObject$ValueCollection$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,hasNext --> index,org.mozilla.javascript.NativeObject$ValueCollection$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,hasNext --> ids,org.mozilla.javascript.NativeObject$ValueCollection$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,next --> this$1,org.mozilla.javascript.NativeObject$ValueCollection$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,next --> ids,org.mozilla.javascript.NativeObject$ValueCollection$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,next --> index,org.mozilla.javascript.NativeObject$ValueCollection$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,next --> index,org.mozilla.javascript.NativeObject$ValueCollection$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,next --> key,org.mozilla.javascript.NativeObject$ValueCollection$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,remove --> key,org.mozilla.javascript.NativeObject$ValueCollection$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,remove --> this$1,org.mozilla.javascript.NativeObject$ValueCollection$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,remove --> key,org.mozilla.javascript.NativeObject$ValueCollection$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,<init> --> this$0,org.mozilla.javascript.NativeObject$ValueCollection,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,next --> this$0,org.mozilla.javascript.NativeObject$ValueCollection,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$ValueCollection$1,remove --> this$0,org.mozilla.javascript.NativeObject$ValueCollection,READ);
Call(METHOD,org.mozilla.javascript.NativeObject$ValueCollection$1,<init> --> getIds,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject$ValueCollection$1,next --> get$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject$ValueCollection$1,remove --> remove,org.mozilla.javascript.NativeObject,);
EndClass 273
StartClass 274
Class(org.mozilla.javascript.NativeObject$KeySet$1,N,N,NA);
Attribute(ids,java.lang.Object[],Public,N,N,);
Attribute(key,java.lang.Object,Public,N,N,);
Attribute(index,int,Public,N,N,);
Attribute(this$1,org.mozilla.javascript.NativeObject$KeySet,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(hasNext,boolean,Public,N,N);
Method(next,java.lang.Object,Public,N,N);
Method(remove,void,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeObject$KeySet,);
Composition(org.mozilla.javascript.NativeObject$KeySet);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,<init> --> this$1,org.mozilla.javascript.NativeObject$KeySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,<init> --> this$1,org.mozilla.javascript.NativeObject$KeySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,<init> --> ids,org.mozilla.javascript.NativeObject$KeySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,<init> --> index,org.mozilla.javascript.NativeObject$KeySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,hasNext --> index,org.mozilla.javascript.NativeObject$KeySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,hasNext --> ids,org.mozilla.javascript.NativeObject$KeySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,next --> ids,org.mozilla.javascript.NativeObject$KeySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,next --> index,org.mozilla.javascript.NativeObject$KeySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,next --> index,org.mozilla.javascript.NativeObject$KeySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,next --> key,org.mozilla.javascript.NativeObject$KeySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,remove --> key,org.mozilla.javascript.NativeObject$KeySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,remove --> this$1,org.mozilla.javascript.NativeObject$KeySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,remove --> key,org.mozilla.javascript.NativeObject$KeySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,<init> --> this$0,org.mozilla.javascript.NativeObject$KeySet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$KeySet$1,remove --> this$0,org.mozilla.javascript.NativeObject$KeySet,READ);
Call(METHOD,org.mozilla.javascript.NativeObject$KeySet$1,<init> --> getIds,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject$KeySet$1,remove --> remove,org.mozilla.javascript.NativeObject,);
EndClass 274
StartClass 275
Class(org.mozilla.javascript.NativeObject$EntrySet$1,N,N,NA);
Attribute(ids,java.lang.Object[],Public,N,N,);
Attribute(key,java.lang.Object,Public,N,N,);
Attribute(index,int,Public,N,N,);
Attribute(this$1,org.mozilla.javascript.NativeObject$EntrySet,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(hasNext,boolean,Public,N,N);
Method(next,java.util.Map$Entry,Public,N,N);
Method(remove,void,Public,N,N);
Method(next$2,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeObject$EntrySet,);
Composition(org.mozilla.javascript.NativeObject$EntrySet);
Call(METHOD,org.mozilla.javascript.NativeObject$EntrySet$1,next$2 --> next,org.mozilla.javascript.NativeObject$EntrySet$1,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,<init> --> this$1,org.mozilla.javascript.NativeObject$EntrySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,<init> --> this$1,org.mozilla.javascript.NativeObject$EntrySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,<init> --> ids,org.mozilla.javascript.NativeObject$EntrySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,<init> --> key,org.mozilla.javascript.NativeObject$EntrySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,<init> --> index,org.mozilla.javascript.NativeObject$EntrySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,hasNext --> index,org.mozilla.javascript.NativeObject$EntrySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,hasNext --> ids,org.mozilla.javascript.NativeObject$EntrySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,next --> ids,org.mozilla.javascript.NativeObject$EntrySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,next --> index,org.mozilla.javascript.NativeObject$EntrySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,next --> this$1,org.mozilla.javascript.NativeObject$EntrySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,next --> key,org.mozilla.javascript.NativeObject$EntrySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,next --> index,org.mozilla.javascript.NativeObject$EntrySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,next --> key,org.mozilla.javascript.NativeObject$EntrySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,remove --> key,org.mozilla.javascript.NativeObject$EntrySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,remove --> this$1,org.mozilla.javascript.NativeObject$EntrySet$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,remove --> key,org.mozilla.javascript.NativeObject$EntrySet$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,<init> --> this$0,org.mozilla.javascript.NativeObject$EntrySet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,next --> this$0,org.mozilla.javascript.NativeObject$EntrySet,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1,remove --> this$0,org.mozilla.javascript.NativeObject$EntrySet,READ);
Call(METHOD,org.mozilla.javascript.NativeObject$EntrySet$1,<init> --> getIds,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject$EntrySet$1,next --> get$3,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.NativeObject$EntrySet$1,next --> <init>,org.mozilla.javascript.NativeObject$EntrySet$1$1,);
Call(METHOD,org.mozilla.javascript.NativeObject$EntrySet$1,remove --> remove,org.mozilla.javascript.NativeObject,);
EndClass 275
StartClass 276
Class(org.mozilla.javascript.NativeJavaMethod,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(PREFERENCE_EQUAL,int,Private,Y,Y,);
Attribute(PREFERENCE_FIRST_ARG,int,Private,Y,Y,);
Attribute(PREFERENCE_SECOND_ARG,int,Private,Y,Y,);
Attribute(PREFERENCE_AMBIGUOUS,int,Private,Y,Y,);
Attribute(debug,boolean,Private,Y,Y,);
Attribute(methods,org.mozilla.javascript.MemberBox[],Public,N,N,);
Attribute(functionName,java.lang.String,Private,N,N,);
Attribute(overloadCache,java.util.concurrent.CopyOnWriteArrayList,Private,N,N,org.mozilla.javascript.ResolvedOverload);
Method(<init>,void,Public,N,N);
Method(<init>$2,void,Public,N,N);
Method(<init>$3,void,Public,N,N);
Method(<init>$4,void,Public,N,N);
Method(getFunctionName,java.lang.String,Public,N,N);
Method(scriptSignature,java.lang.String,Public,Y,N);
Method(decompile,java.lang.String,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(findCachedFunction,int,Public,N,N);
Method(findFunction,int,Public,Y,N);
Method(preferSignature,int,Private,Y,N);
Method(printDebug,void,Private,Y,N);
Parameter(<init>,org.mozilla.javascript.MemberBox[],);
Parameter(<init>$2,org.mozilla.javascript.MemberBox[],);
Parameter(<init>$2,java.lang.String,);
Parameter(<init>$3,org.mozilla.javascript.MemberBox,);
Parameter(<init>$3,java.lang.String,);
Parameter(<init>$4,java.lang.reflect.Method,);
Parameter(<init>$4,java.lang.String,);
Parameter(scriptSignature,java.lang.Object[],);
Parameter(decompile,int,);
Parameter(decompile,int,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Parameter(findCachedFunction,org.mozilla.javascript.Context,);
Parameter(findCachedFunction,java.lang.Object[],);
Parameter(findFunction,org.mozilla.javascript.Context,);
Parameter(findFunction,org.mozilla.javascript.MemberBox[],);
Parameter(findFunction,java.lang.Object[],);
Parameter(preferSignature,java.lang.Object[],);
Parameter(preferSignature,java.lang.Class[],);
Parameter(preferSignature,boolean,);
Parameter(preferSignature,java.lang.Class[],);
Parameter(preferSignature,boolean,);
Parameter(printDebug,java.lang.String,);
Parameter(printDebug,org.mozilla.javascript.MemberBox,);
Parameter(printDebug,java.lang.Object[],);
SuperClass(org.mozilla.javascript.BaseFunction);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
SubClass(org.mozilla.javascript.FieldAndMethods);
Generalization(org.mozilla.javascript.BaseFunction);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,<init>$4 --> <init>$3,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,decompile --> getFunctionName,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,decompile --> toString,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> findCachedFunction,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> getFunctionName,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> scriptSignature,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findCachedFunction --> findFunction,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> preferSignature,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> scriptSignature,org.mozilla.javascript.NativeJavaMethod,);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,<init> --> functionName,org.mozilla.javascript.NativeJavaMethod,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,<init> --> methods,org.mozilla.javascript.NativeJavaMethod,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,<init>$2 --> functionName,org.mozilla.javascript.NativeJavaMethod,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,<init>$2 --> methods,org.mozilla.javascript.NativeJavaMethod,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,<init>$3 --> functionName,org.mozilla.javascript.NativeJavaMethod,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,<init>$3 --> methods,org.mozilla.javascript.NativeJavaMethod,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,getFunctionName --> functionName,org.mozilla.javascript.NativeJavaMethod,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,toString --> methods,org.mozilla.javascript.NativeJavaMethod,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,call --> methods,org.mozilla.javascript.NativeJavaMethod,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,findCachedFunction --> methods,org.mozilla.javascript.NativeJavaMethod,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,findCachedFunction --> overloadCache,org.mozilla.javascript.NativeJavaMethod,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,findCachedFunction --> overloadCache,org.mozilla.javascript.NativeJavaMethod,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,toString --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,call --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,call --> vararg,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,call --> instance,org.mozilla.javascript.Undefined,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,findCachedFunction --> index,org.mozilla.javascript.ResolvedOverload,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,findFunction --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaMethod,findFunction --> vararg,org.mozilla.javascript.MemberBox,READ);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,<init> --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,<init> --> getName,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,<init>$2 --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,<init>$3 --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,<init>$4 --> <init>,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,scriptSignature --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,scriptSignature --> javaSignature,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,toString --> isMethod,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,toString --> method,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,toString --> javaSignature,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,toString --> getName,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,toString --> liveConnectSignature,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> method,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> jsToJava,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> isStatic,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> getDeclaringClass,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> toString,org.mozilla.javascript.ScriptRuntime,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> reportRuntimeError3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> getPrototype,org.mozilla.javascript.Scriptable,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> invoke,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,call --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findCachedFunction --> matches,org.mozilla.javascript.ResolvedOverload,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findCachedFunction --> <init>,org.mozilla.javascript.ResolvedOverload,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> canConvert,org.mozilla.javascript.NativeJavaObject,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> hasFeature,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> member,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> codeBug,org.mozilla.javascript.Kit,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> isStatic,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> getDeclaringClass,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> toJavaDeclaration,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> getName,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> isCtor,org.mozilla.javascript.MemberBox,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> reportRuntimeError3,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,findFunction --> reportRuntimeError4,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.NativeJavaMethod,preferSignature --> getConversionWeight,org.mozilla.javascript.NativeJavaObject,);
EndClass 276
StartClass 277
Class(org.mozilla.javascript.ast.FunctionNode$Form,N,N,Public);
Attribute(FUNCTION,org.mozilla.javascript.ast.FunctionNode$Form,Public,Y,Y,);
Attribute(GETTER,org.mozilla.javascript.ast.FunctionNode$Form,Public,Y,Y,);
Attribute(SETTER,org.mozilla.javascript.ast.FunctionNode$Form,Public,Y,Y,);
Attribute($VALUES,org.mozilla.javascript.ast.FunctionNode$Form[],Private,Y,Y,);
Method(values,org.mozilla.javascript.ast.FunctionNode$Form[],Public,Y,N);
Method(valueOf,org.mozilla.javascript.ast.FunctionNode$Form,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(valueOf,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Composition(org.mozilla.javascript.ast.FunctionNode$Form);
Call(METHOD,org.mozilla.javascript.ast.FunctionNode$Form,<clinit> --> <init>,org.mozilla.javascript.ast.FunctionNode$Form,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode$Form,values --> $VALUES,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode$Form,<clinit> --> FUNCTION,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode$Form,<clinit> --> GETTER,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode$Form,<clinit> --> SETTER,org.mozilla.javascript.ast.FunctionNode$Form,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode$Form,<clinit> --> FUNCTION,org.mozilla.javascript.ast.FunctionNode$Form,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode$Form,<clinit> --> GETTER,org.mozilla.javascript.ast.FunctionNode$Form,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode$Form,<clinit> --> SETTER,org.mozilla.javascript.ast.FunctionNode$Form,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.FunctionNode$Form,<clinit> --> $VALUES,org.mozilla.javascript.ast.FunctionNode$Form,WRITE);
EndClass 277
StartClass 278
Class(org.mozilla.javascript.InterfaceAdapter$1,N,N,NA);
Attribute(val$target,java.lang.Object,Public,N,Y,);
Attribute(val$topScope,org.mozilla.javascript.Scriptable,Public,N,Y,);
Attribute(val$thisObject,java.lang.Object,Public,N,Y,);
Attribute(val$method,java.lang.reflect.Method,Public,N,Y,);
Attribute(val$args,java.lang.Object[],Public,N,Y,);
Attribute(this$0,org.mozilla.javascript.InterfaceAdapter,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(run,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.InterfaceAdapter,);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,java.lang.reflect.Method,);
Parameter(<init>,java.lang.Object[],);
Parameter(run,org.mozilla.javascript.Context,);
Realization(org.mozilla.javascript.ContextAction);
Composition(org.mozilla.javascript.Scriptable);
Composition(org.mozilla.javascript.InterfaceAdapter);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,<init> --> this$0,org.mozilla.javascript.InterfaceAdapter$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,<init> --> val$target,org.mozilla.javascript.InterfaceAdapter$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,<init> --> val$topScope,org.mozilla.javascript.InterfaceAdapter$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,<init> --> val$thisObject,org.mozilla.javascript.InterfaceAdapter$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,<init> --> val$method,org.mozilla.javascript.InterfaceAdapter$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,<init> --> val$args,org.mozilla.javascript.InterfaceAdapter$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,run --> this$0,org.mozilla.javascript.InterfaceAdapter$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,run --> val$target,org.mozilla.javascript.InterfaceAdapter$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,run --> val$topScope,org.mozilla.javascript.InterfaceAdapter$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,run --> val$thisObject,org.mozilla.javascript.InterfaceAdapter$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,run --> val$method,org.mozilla.javascript.InterfaceAdapter$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.InterfaceAdapter$1,run --> val$args,org.mozilla.javascript.InterfaceAdapter$1,READ);
Call(METHOD,org.mozilla.javascript.InterfaceAdapter$1,run --> invokeImpl,org.mozilla.javascript.InterfaceAdapter,);
EndClass 278
StartClass 279
Class(org.mozilla.javascript.FieldAndMethods,N,N,NA);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(field,java.lang.reflect.Field,Public,N,N,);
Attribute(javaObject,java.lang.Object,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(getDefaultValue,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.Scriptable,);
Parameter(<init>,org.mozilla.javascript.MemberBox[],);
Parameter(<init>,java.lang.reflect.Field,);
Parameter(getDefaultValue,java.lang.Class,);
SuperClass(org.mozilla.javascript.NativeJavaMethod);
SuperClass(org.mozilla.javascript.BaseFunction);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.NativeJavaMethod);
Call(ATTRIBUTE,org.mozilla.javascript.FieldAndMethods,<init> --> field,org.mozilla.javascript.FieldAndMethods,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.FieldAndMethods,getDefaultValue --> field,org.mozilla.javascript.FieldAndMethods,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FieldAndMethods,getDefaultValue --> javaObject,org.mozilla.javascript.FieldAndMethods,READ);
Call(ATTRIBUTE,org.mozilla.javascript.FieldAndMethods,getDefaultValue --> FunctionClass,org.mozilla.javascript.ScriptRuntime,READ);
Call(METHOD,org.mozilla.javascript.FieldAndMethods,<init> --> <init>,org.mozilla.javascript.NativeJavaMethod,);
Call(METHOD,org.mozilla.javascript.FieldAndMethods,<init> --> setParentScope,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.FieldAndMethods,<init> --> getFunctionPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.FieldAndMethods,<init> --> setPrototype,org.mozilla.javascript.ScriptableObject,);
Call(METHOD,org.mozilla.javascript.FieldAndMethods,getDefaultValue --> reportRuntimeError1,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.FieldAndMethods,getDefaultValue --> getContext,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.FieldAndMethods,getDefaultValue --> getWrapFactory,org.mozilla.javascript.Context,);
Call(METHOD,org.mozilla.javascript.FieldAndMethods,getDefaultValue --> wrap,org.mozilla.javascript.WrapFactory,);
Call(METHOD,org.mozilla.javascript.FieldAndMethods,getDefaultValue --> getDefaultValue,org.mozilla.javascript.Scriptable,);
EndClass 279
StartClass 280
Class(org.mozilla.javascript.NativeJavaConstructor,N,N,Public);
Attribute(serialVersionUID,long,Public,Y,Y,);
Attribute(ctor,org.mozilla.javascript.MemberBox,Public,N,N,);
Method(<init>,void,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Method(getFunctionName,java.lang.String,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,org.mozilla.javascript.MemberBox,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
SuperClass(org.mozilla.javascript.BaseFunction);
SuperClass(org.mozilla.javascript.IdScriptableObject);
SuperClass(org.mozilla.javascript.ScriptableObject);
Generalization(org.mozilla.javascript.BaseFunction);
Composition(org.mozilla.javascript.MemberBox);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaConstructor,<init> --> ctor,org.mozilla.javascript.NativeJavaConstructor,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaConstructor,call --> ctor,org.mozilla.javascript.NativeJavaConstructor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaConstructor,getFunctionName --> ctor,org.mozilla.javascript.NativeJavaConstructor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaConstructor,toString --> ctor,org.mozilla.javascript.NativeJavaConstructor,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeJavaConstructor,getFunctionName --> argTypes,org.mozilla.javascript.MemberBox,READ);
Call(METHOD,org.mozilla.javascript.NativeJavaConstructor,<init> --> <init>,org.mozilla.javascript.BaseFunction,);
Call(METHOD,org.mozilla.javascript.NativeJavaConstructor,call --> constructSpecific,org.mozilla.javascript.NativeJavaClass,);
Call(METHOD,org.mozilla.javascript.NativeJavaConstructor,getFunctionName --> liveConnectSignature,org.mozilla.javascript.JavaMembers,);
Call(METHOD,org.mozilla.javascript.NativeJavaConstructor,toString --> getName,org.mozilla.javascript.MemberBox,);
EndClass 280
StartClass 281
Class(org.mozilla.javascript.BeanProperty,N,N,NA);
Attribute(getter,org.mozilla.javascript.MemberBox,Public,N,N,);
Attribute(setter,org.mozilla.javascript.MemberBox,Public,N,N,);
Attribute(setters,org.mozilla.javascript.NativeJavaMethod,Public,N,N,);
Method(<init>,void,Public,N,N);
Parameter(<init>,org.mozilla.javascript.MemberBox,);
Parameter(<init>,org.mozilla.javascript.MemberBox,);
Parameter(<init>,org.mozilla.javascript.NativeJavaMethod,);
Composition(org.mozilla.javascript.MemberBox);
Composition(org.mozilla.javascript.NativeJavaMethod);
Call(ATTRIBUTE,org.mozilla.javascript.BeanProperty,<init> --> getter,org.mozilla.javascript.BeanProperty,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BeanProperty,<init> --> setter,org.mozilla.javascript.BeanProperty,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.BeanProperty,<init> --> setters,org.mozilla.javascript.BeanProperty,WRITE);
EndClass 281
StartClass 282
Class(org.mozilla.javascript.JavaMembers$MethodSignature,N,N,NA);
Attribute(name,java.lang.String,Private,N,Y,);
Attribute(args,java.lang.Class[],Private,N,Y,);
Method(<init>,void,Private,N,N);
Method(<init>$2,void,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.Class[],);
Parameter(<init>$2,java.lang.reflect.Method,);
Parameter(equals,java.lang.Object,);
Call(METHOD,org.mozilla.javascript.JavaMembers$MethodSignature,<init>$2 --> <init>,org.mozilla.javascript.JavaMembers$MethodSignature,);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers$MethodSignature,<init> --> name,org.mozilla.javascript.JavaMembers$MethodSignature,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers$MethodSignature,<init> --> args,org.mozilla.javascript.JavaMembers$MethodSignature,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers$MethodSignature,equals --> name,org.mozilla.javascript.JavaMembers$MethodSignature,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers$MethodSignature,equals --> args,org.mozilla.javascript.JavaMembers$MethodSignature,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers$MethodSignature,hashCode --> name,org.mozilla.javascript.JavaMembers$MethodSignature,READ);
Call(ATTRIBUTE,org.mozilla.javascript.JavaMembers$MethodSignature,hashCode --> args,org.mozilla.javascript.JavaMembers$MethodSignature,READ);
EndClass 282
StartClass 283
Class(org.mozilla.javascript.ast.ParseProblem,N,N,Public);
Attribute(type,org.mozilla.javascript.ast.ParseProblem$Type,Private,N,N,);
Attribute(message,java.lang.String,Private,N,N,);
Attribute(sourceName,java.lang.String,Private,N,N,);
Attribute(offset,int,Private,N,N,);
Attribute(length,int,Private,N,N,);
Method(<init>,void,Public,N,N);
Method(getType,org.mozilla.javascript.ast.ParseProblem$Type,Public,N,N);
Method(setType,void,Public,N,N);
Method(getMessage,java.lang.String,Public,N,N);
Method(setMessage,void,Public,N,N);
Method(getSourceName,java.lang.String,Public,N,N);
Method(setSourceName,void,Public,N,N);
Method(getFileOffset,int,Public,N,N);
Method(setFileOffset,void,Public,N,N);
Method(getLength,int,Public,N,N);
Method(setLength,void,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,org.mozilla.javascript.ast.ParseProblem$Type,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Parameter(<init>,int,);
Parameter(setType,org.mozilla.javascript.ast.ParseProblem$Type,);
Parameter(setMessage,java.lang.String,);
Parameter(setSourceName,java.lang.String,);
Parameter(setFileOffset,int,);
Parameter(setLength,int,);
Composition(org.mozilla.javascript.ast.ParseProblem$Type);
Call(METHOD,org.mozilla.javascript.ast.ParseProblem,<init> --> setType,org.mozilla.javascript.ast.ParseProblem,);
Call(METHOD,org.mozilla.javascript.ast.ParseProblem,<init> --> setMessage,org.mozilla.javascript.ast.ParseProblem,);
Call(METHOD,org.mozilla.javascript.ast.ParseProblem,<init> --> setSourceName,org.mozilla.javascript.ast.ParseProblem,);
Call(METHOD,org.mozilla.javascript.ast.ParseProblem,<init> --> setFileOffset,org.mozilla.javascript.ast.ParseProblem,);
Call(METHOD,org.mozilla.javascript.ast.ParseProblem,<init> --> setLength,org.mozilla.javascript.ast.ParseProblem,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,getType --> type,org.mozilla.javascript.ast.ParseProblem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,setType --> type,org.mozilla.javascript.ast.ParseProblem,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,getMessage --> message,org.mozilla.javascript.ast.ParseProblem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,setMessage --> message,org.mozilla.javascript.ast.ParseProblem,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,getSourceName --> sourceName,org.mozilla.javascript.ast.ParseProblem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,setSourceName --> sourceName,org.mozilla.javascript.ast.ParseProblem,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,getFileOffset --> offset,org.mozilla.javascript.ast.ParseProblem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,setFileOffset --> offset,org.mozilla.javascript.ast.ParseProblem,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,getLength --> length,org.mozilla.javascript.ast.ParseProblem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,setLength --> length,org.mozilla.javascript.ast.ParseProblem,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,toString --> sourceName,org.mozilla.javascript.ast.ParseProblem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,toString --> offset,org.mozilla.javascript.ast.ParseProblem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,toString --> length,org.mozilla.javascript.ast.ParseProblem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,toString --> type,org.mozilla.javascript.ast.ParseProblem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,toString --> message,org.mozilla.javascript.ast.ParseProblem,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem,toString --> Error,org.mozilla.javascript.ast.ParseProblem$Type,READ);
EndClass 283
StartClass 284
Class(org.mozilla.javascript.ast.ParseProblem$Type,N,N,Public);
Attribute(Error,org.mozilla.javascript.ast.ParseProblem$Type,Public,Y,Y,);
Attribute(Warning,org.mozilla.javascript.ast.ParseProblem$Type,Public,Y,Y,);
Attribute($VALUES,org.mozilla.javascript.ast.ParseProblem$Type[],Private,Y,Y,);
Method(values,org.mozilla.javascript.ast.ParseProblem$Type[],Public,Y,N);
Method(valueOf,org.mozilla.javascript.ast.ParseProblem$Type,Public,Y,N);
Method(<init>,void,Private,N,N);
Method(<clinit>,void,Public,Y,N);
Parameter(valueOf,java.lang.String,);
Parameter(<init>,java.lang.String,);
Parameter(<init>,int,);
Composition(org.mozilla.javascript.ast.ParseProblem$Type);
Call(METHOD,org.mozilla.javascript.ast.ParseProblem$Type,<clinit> --> <init>,org.mozilla.javascript.ast.ParseProblem$Type,);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem$Type,values --> $VALUES,org.mozilla.javascript.ast.ParseProblem$Type,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem$Type,<clinit> --> Error,org.mozilla.javascript.ast.ParseProblem$Type,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem$Type,<clinit> --> Warning,org.mozilla.javascript.ast.ParseProblem$Type,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem$Type,<clinit> --> Error,org.mozilla.javascript.ast.ParseProblem$Type,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem$Type,<clinit> --> Warning,org.mozilla.javascript.ast.ParseProblem$Type,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ast.ParseProblem$Type,<clinit> --> $VALUES,org.mozilla.javascript.ast.ParseProblem$Type,WRITE);
EndClass 284
StartClass 285
Class(org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower,N,N,NA);
Attribute(significand,long,Public,N,N,);
Attribute(binaryExponent,short,Public,N,N,);
Attribute(decimalExponent,short,Public,N,N,);
Method(<init>,void,Public,N,N);
Parameter(<init>,long,);
Parameter(<init>,short,);
Parameter(<init>,short,);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower,<init> --> significand,org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower,<init> --> binaryExponent,org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower,<init> --> decimalExponent,org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower,WRITE);
EndClass 285
StartClass 286
Class(org.mozilla.javascript.NativeGenerator$CloseGeneratorAction$1,N,N,NA);
Attribute(this$0,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(call,java.lang.Object,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction,);
Parameter(call,org.mozilla.javascript.Context,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,org.mozilla.javascript.Scriptable,);
Parameter(call,java.lang.Object[],);
Realization(org.mozilla.javascript.Callable);
Composition(org.mozilla.javascript.NativeGenerator$CloseGeneratorAction);
Call(ATTRIBUTE,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction$1,<init> --> this$0,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction$1,WRITE);
Call(METHOD,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction$1,call --> <init>,org.mozilla.javascript.NativeGenerator$GeneratorClosedException,);
Call(METHOD,org.mozilla.javascript.NativeGenerator$CloseGeneratorAction$1,call --> access$000,org.mozilla.javascript.NativeGenerator,);
EndClass 286
StartClass 287
Class(org.mozilla.javascript.NativeObject$EntrySet$1$1,N,N,NA);
Attribute(val$ekey,java.lang.Object,Public,N,Y,);
Attribute(val$value,java.lang.Object,Public,N,Y,);
Attribute(this$2,org.mozilla.javascript.NativeObject$EntrySet$1,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(getKey,java.lang.Object,Public,N,N);
Method(getValue,java.lang.Object,Public,N,N);
Method(setValue,java.lang.Object,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Method(toString,java.lang.String,Public,N,N);
Parameter(<init>,org.mozilla.javascript.NativeObject$EntrySet$1,);
Parameter(<init>,java.lang.Object,);
Parameter(<init>,java.lang.Object,);
Parameter(setValue,java.lang.Object,);
Parameter(equals,java.lang.Object,);
Composition(org.mozilla.javascript.NativeObject$EntrySet$1);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1$1,<init> --> this$2,org.mozilla.javascript.NativeObject$EntrySet$1$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1$1,<init> --> val$ekey,org.mozilla.javascript.NativeObject$EntrySet$1$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1$1,<init> --> val$value,org.mozilla.javascript.NativeObject$EntrySet$1$1,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1$1,getKey --> val$ekey,org.mozilla.javascript.NativeObject$EntrySet$1$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1$1,getValue --> val$value,org.mozilla.javascript.NativeObject$EntrySet$1$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1$1,equals --> val$ekey,org.mozilla.javascript.NativeObject$EntrySet$1$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1$1,equals --> val$value,org.mozilla.javascript.NativeObject$EntrySet$1$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1$1,hashCode --> val$ekey,org.mozilla.javascript.NativeObject$EntrySet$1$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1$1,hashCode --> val$value,org.mozilla.javascript.NativeObject$EntrySet$1$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1$1,toString --> val$ekey,org.mozilla.javascript.NativeObject$EntrySet$1$1,READ);
Call(ATTRIBUTE,org.mozilla.javascript.NativeObject$EntrySet$1$1,toString --> val$value,org.mozilla.javascript.NativeObject$EntrySet$1$1,READ);
EndClass 287
StartClass 288
Class(org.mozilla.javascript.ResolvedOverload,N,N,NA);
Attribute(types,java.lang.Class[],Public,N,Y,);
Attribute(index,int,Public,N,Y,);
Method(<init>,void,Public,N,N);
Method(matches,boolean,Public,N,N);
Method(equals,boolean,Public,N,N);
Method(hashCode,int,Public,N,N);
Parameter(<init>,java.lang.Object[],);
Parameter(<init>,int,);
Parameter(matches,java.lang.Object[],);
Parameter(equals,java.lang.Object,);
Call(ATTRIBUTE,org.mozilla.javascript.ResolvedOverload,<init> --> types,org.mozilla.javascript.ResolvedOverload,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ResolvedOverload,<init> --> index,org.mozilla.javascript.ResolvedOverload,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ResolvedOverload,<init> --> types,org.mozilla.javascript.ResolvedOverload,WRITE);
Call(ATTRIBUTE,org.mozilla.javascript.ResolvedOverload,matches --> types,org.mozilla.javascript.ResolvedOverload,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ResolvedOverload,equals --> types,org.mozilla.javascript.ResolvedOverload,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ResolvedOverload,equals --> index,org.mozilla.javascript.ResolvedOverload,READ);
Call(ATTRIBUTE,org.mozilla.javascript.ResolvedOverload,hashCode --> types,org.mozilla.javascript.ResolvedOverload,READ);
Call(METHOD,org.mozilla.javascript.ResolvedOverload,<init> --> unwrap,org.mozilla.javascript.Wrapper,);
Call(METHOD,org.mozilla.javascript.ResolvedOverload,matches --> unwrap,org.mozilla.javascript.Wrapper,);
EndClass 288